__DEV__ = 
true;


__BUNDLE_START_TIME__ = Date.now();
(
function(global){


if(global.require){
return;}


var __DEV__=global.__DEV__;

var toString=Object.prototype.toString;













var modulesMap={},






dependencyMap={},



predefinedRefCounts={},

_counter=0,

REQUIRE_WHEN_READY=1,
USED_AS_TRANSPORT=2,

hop=Object.prototype.hasOwnProperty;

function _debugUnresolvedDependencies(names){
var unresolved=Array.prototype.slice.call(names);
var visited={};
var ii,name,module,dependency;

while(unresolved.length) {
name = unresolved.shift();
if(visited[name]){
continue;}

visited[name] = true;

module = modulesMap[name];
if(!module || !module.waiting){
continue;}


for(ii = 0;ii < module.dependencies.length;ii++) {
dependency = module.dependencies[ii];
if(!modulesMap[dependency] || modulesMap[dependency].waiting){
unresolved.push(dependency);}}}




for(name in visited) if(hop.call(visited,name)){
unresolved.push(name);}


var messages=[];
for(ii = 0;ii < unresolved.length;ii++) {
name = unresolved[ii];
var message=name;
module = modulesMap[name];
if(!module){
message += ' is not defined';}else 
if(!module.waiting){
message += ' is ready';}else 
{
var unresolvedDependencies=[];
for(var jj=0;jj < module.dependencies.length;jj++) {
dependency = module.dependencies[jj];
if(!modulesMap[dependency] || modulesMap[dependency].waiting){
unresolvedDependencies.push(dependency);}}


message += ' is waiting for ' + unresolvedDependencies.join(', ');}

messages.push(message);}

return messages.join('\n');}





function ModuleError(msg){
this.name = 'ModuleError';
this.message = msg;
this.stack = Error(msg).stack;
this.framesToPop = 2;}

ModuleError.prototype = Object.create(Error.prototype);
ModuleError.prototype.constructor = ModuleError;

var _performance=
global.performance || 
global.msPerformance || 
global.webkitPerformance || {};

if(!_performance.now){
_performance = global.Date;}


var _now=_performance?
_performance.now.bind(_performance):function(){return 0;};

var _factoryStackCount=0;
var _factoryTime=0;
var _totalFactories=0;
var _inGuard=false;
























































function require(id){
var module=modulesMap[id],dep,i,msg;
if(module && module.exports){


if(module.refcount-- === 1){
delete modulesMap[id];}

return module.exports;}

if(global.ErrorUtils && !_inGuard){
_inGuard = true;
try{
var ret=require.apply(this,arguments);}
catch(e) {
global.ErrorUtils.reportFatalError(e);}

_inGuard = false;
return ret;}


if(!module){
msg = 'Requiring unknown module "' + id + '"';
if(__DEV__){
msg += '. If you are sure the module is there, try restarting the packager.';}

throw new ModuleError(msg);}


if(module.hasError){
throw new ModuleError(
'Requiring module "' + id + '" which threw an exception');}



if(module.waiting){
throw new ModuleError(
'Requiring module "' + id + '" with unresolved dependencies: ' + 
_debugUnresolvedDependencies([id]));}



var exports=module.exports = {};
var factory=module.factory;
if(toString.call(factory) === '[object Function]'){
var args=[],
dependencies=module.dependencies,
length=dependencies.length,
ret;
if(module.special & USED_AS_TRANSPORT){
length = Math.min(length,factory.length);}

try{
for(i = 0;args.length < length;i++) {
dep = dependencies[i];
if(!module.inlineRequires[dep]){
args.push(dep === 'module'?module:
dep === 'exports'?exports:
require.call(null,dep));}}



++_totalFactories;
if(_factoryStackCount++ === 0){
_factoryTime -= _now();}

try{
ret = factory.apply(module.context || global,args);}
catch(e) {
if(modulesMap.ex && modulesMap.erx){


var ex=require.call(null,'ex');
var erx=require.call(null,'erx');
var messageWithParams=erx(e.message);
if(messageWithParams[0].indexOf(' from module "%s"') < 0){
messageWithParams[0] += ' from module "%s"';
messageWithParams[messageWithParams.length] = id;}

e.message = ex.apply(null,messageWithParams);}

throw e;}finally 
{
if(--_factoryStackCount === 0){
_factoryTime += _now();}}}


catch(e) {
module.hasError = true;
module.exports = null;
throw e;}

if(ret){
if(__DEV__){
if(typeof ret != 'object' && typeof ret != 'function'){
throw new ModuleError(
'Factory for module "' + id + '" returned ' + 
'an invalid value "' + ret + '". ' + 
'Returned value should be either a function or an object.');}}



module.exports = ret;}}else 

{
module.exports = factory;}




if(module.refcount-- === 1){
delete modulesMap[id];}

return module.exports;}


require.__getFactoryTime = function(){
return (_factoryStackCount?_now():0) + _factoryTime;};


require.__getTotalFactories = function(){
return _totalFactories;};










require.ensure = function(dependencies,callback){
throw '`require.ensure` is still not supported';};

























































function define(id,dependencies,factory,
_special,_context,_refCount,_inlineRequires){
if(dependencies === undefined){
dependencies = [];
factory = id;
id = _uid();}else 
if(factory === undefined){
factory = dependencies;
if(toString.call(id) === '[object Array]'){
dependencies = id;
id = _uid();}else 
{
dependencies = [];}}





var canceler={cancel:_undefine.bind(this,id)};

var record=modulesMap[id];






if(record){
if(_refCount){
record.refcount += _refCount;}


return canceler;}else 
if(!dependencies && !factory && _refCount){


predefinedRefCounts[id] = (predefinedRefCounts[id] || 0) + _refCount;
return canceler;}else 
{

record = {id:id};
record.refcount = (predefinedRefCounts[id] || 0) + (_refCount || 0);
delete predefinedRefCounts[id];}


if(__DEV__){
if(
!factory || 
typeof factory != 'object' && typeof factory != 'function' && 
typeof factory != 'string'){
throw new ModuleError(
'Invalid factory "' + factory + '" for module "' + id + '". ' + 
'Factory should be either a function or an object.');}



if(toString.call(dependencies) !== '[object Array]'){
throw new ModuleError(
'Invalid dependencies for module "' + id + '". ' + 
'Dependencies must be passed as an array.');}}




record.factory = factory;
record.dependencies = dependencies;
record.context = _context;
record.special = _special;
record.inlineRequires = _inlineRequires || {};
record.waitingMap = {};
record.waiting = 0;
record.hasError = false;
modulesMap[id] = record;
_initDependencies(id);

return canceler;}


function _undefine(id){
if(!modulesMap[id]){
return;}


var module=modulesMap[id];
delete modulesMap[id];

for(var dep in module.waitingMap) {
if(module.waitingMap[dep]){
delete dependencyMap[dep][id];}}



for(var ii=0;ii < module.dependencies.length;ii++) {
dep = module.dependencies[ii];
if(modulesMap[dep]){
if(modulesMap[dep].refcount-- === 1){
_undefine(dep);}}else 

if(predefinedRefCounts[dep]){
predefinedRefCounts[dep]--;}}}






function _uid(){
return '__mod__' + _counter++;}


function _addDependency(module,dep){

if(!module.waitingMap[dep] && module.id !== dep){
module.waiting++;
module.waitingMap[dep] = 1;
dependencyMap[dep] || (dependencyMap[dep] = {});
dependencyMap[dep][module.id] = 1;}}



function _initDependencies(id){
var modulesToRequire=[];
var module=modulesMap[id];
var dep,i,subdep;


for(i = 0;i < module.dependencies.length;i++) {
dep = module.dependencies[i];
if(!modulesMap[dep]){
_addDependency(module,dep);}else 
if(modulesMap[dep].waiting){
for(subdep in modulesMap[dep].waitingMap) {
if(modulesMap[dep].waitingMap[subdep]){
_addDependency(module,subdep);}}}}




if(module.waiting === 0 && module.special & REQUIRE_WHEN_READY){
modulesToRequire.push(id);}



if(dependencyMap[id]){
var deps=dependencyMap[id];
var submodule;
dependencyMap[id] = undefined;
for(dep in deps) {
submodule = modulesMap[dep];


for(subdep in module.waitingMap) {
if(module.waitingMap[subdep]){
_addDependency(submodule,subdep);}}



if(submodule.waitingMap[id]){
submodule.waitingMap[id] = undefined;
submodule.waiting--;}

if(submodule.waiting === 0 && 
submodule.special & REQUIRE_WHEN_READY){
modulesToRequire.push(dep);}}}





for(i = 0;i < modulesToRequire.length;i++) {
require.call(null,modulesToRequire[i]);}}



function _register(id,exports){
var module=modulesMap[id] = {id:id};
module.exports = exports;
module.refcount = 0;}




_register('module',0);
_register('exports',0);

_register('global',global);
_register('require',require);

global.require = require;

require.__debug = {
modules:modulesMap,
deps:dependencyMap,
printDependencyInfo:function(){
if(!global.console){
return;}

var names=Object.keys(require.__debug.deps);
global.console.log(_debugUnresolvedDependencies(names));}};









global.__d = function(id,deps,factory,_special,_inlineRequires){
var defaultDeps=['global','require','module','exports'];
define(id,defaultDeps.concat(deps),factory,_special || USED_AS_TRANSPORT,
null,null,_inlineRequires);};})(


this);
Object.

















assign = function(target,sources){
if(__DEV__){
if(target == null){
throw new TypeError('Object.assign target cannot be null or undefined');}

if(typeof target !== 'object' && typeof target !== 'function'){
throw new TypeError(
'In this environment the target of assign MUST be an object.' + 
'This error is a performance optimization and not spec compliant.');}}




for(var nextIndex=1;nextIndex < arguments.length;nextIndex++) {
var nextSource=arguments[nextIndex];
if(nextSource == null){
continue;}


if(__DEV__){
if(typeof nextSource !== 'object' && 
typeof nextSource !== 'function'){
throw new TypeError(
'In this environment the target of assign MUST be an object.' + 
'This error is a performance optimization and not spec compliant.');}}








for(var key in nextSource) {
if(__DEV__){
var hasOwnProperty=Object.prototype.hasOwnProperty;
if(!hasOwnProperty.call(nextSource,key)){
throw new TypeError(
'One of the sources to assign has an enumerable key on the ' + 
'prototype chain. This is an edge case that we do not support. ' + 
'This error is a performance optimization and not spec compliant.');}}



target[key] = nextSource[key];}}



return target;};
(















function(global){
'use strict';

var inspect=(function(){























function inspect(obj,opts){
var ctx={
seen:[],
stylize:stylizeNoColor};

return formatValue(ctx,obj,opts.depth);}


function stylizeNoColor(str,styleType){
return str;}


function arrayToHash(array){
var hash={};

array.forEach(function(val,idx){
hash[val] = true;});


return hash;}



function formatValue(ctx,value,recurseTimes){

var primitive=formatPrimitive(ctx,value);
if(primitive){
return primitive;}



var keys=Object.keys(value);
var visibleKeys=arrayToHash(keys);



if(isError(value) && (
keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)){
return formatError(value);}



if(keys.length === 0){
if(isFunction(value)){
var name=value.name?': ' + value.name:'';
return ctx.stylize('[Function' + name + ']','special');}

if(isRegExp(value)){
return ctx.stylize(RegExp.prototype.toString.call(value),'regexp');}

if(isDate(value)){
return ctx.stylize(Date.prototype.toString.call(value),'date');}

if(isError(value)){
return formatError(value);}}



var base='',array=false,braces=['{','}'];


if(isArray(value)){
array = true;
braces = ['[',']'];}



if(isFunction(value)){
var n=value.name?': ' + value.name:'';
base = ' [Function' + n + ']';}



if(isRegExp(value)){
base = ' ' + RegExp.prototype.toString.call(value);}



if(isDate(value)){
base = ' ' + Date.prototype.toUTCString.call(value);}



if(isError(value)){
base = ' ' + formatError(value);}


if(keys.length === 0 && (!array || value.length == 0)){
return braces[0] + base + braces[1];}


if(recurseTimes < 0){
if(isRegExp(value)){
return ctx.stylize(RegExp.prototype.toString.call(value),'regexp');}else 
{
return ctx.stylize('[Object]','special');}}



ctx.seen.push(value);

var output;
if(array){
output = formatArray(ctx,value,recurseTimes,visibleKeys,keys);}else 
{
output = keys.map(function(key){
return formatProperty(ctx,value,recurseTimes,visibleKeys,key,array);});}



ctx.seen.pop();

return reduceToSingleString(output,base,braces);}



function formatPrimitive(ctx,value){
if(isUndefined(value))
return ctx.stylize('undefined','undefined');
if(isString(value)){
var simple='\'' + JSON.stringify(value).replace(/^"|"$/g,'').
replace(/'/g,"\\'").
replace(/\\"/g,'"') + '\'';
return ctx.stylize(simple,'string');}

if(isNumber(value))
return ctx.stylize('' + value,'number');
if(isBoolean(value))
return ctx.stylize('' + value,'boolean');

if(isNull(value))
return ctx.stylize('null','null');}



function formatError(value){
return '[' + Error.prototype.toString.call(value) + ']';}



function formatArray(ctx,value,recurseTimes,visibleKeys,keys){
var output=[];
for(var i=0,l=value.length;i < l;++i) {
if(hasOwnProperty(value,String(i))){
output.push(formatProperty(ctx,value,recurseTimes,visibleKeys,
String(i),true));}else 
{
output.push('');}}


keys.forEach(function(key){
if(!key.match(/^\d+$/)){
output.push(formatProperty(ctx,value,recurseTimes,visibleKeys,
key,true));}});


return output;}



function formatProperty(ctx,value,recurseTimes,visibleKeys,key,array){
var name,str,desc;
desc = Object.getOwnPropertyDescriptor(value,key) || {value:value[key]};
if(desc.get){
if(desc.set){
str = ctx.stylize('[Getter/Setter]','special');}else 
{
str = ctx.stylize('[Getter]','special');}}else 

{
if(desc.set){
str = ctx.stylize('[Setter]','special');}}


if(!hasOwnProperty(visibleKeys,key)){
name = '[' + key + ']';}

if(!str){
if(ctx.seen.indexOf(desc.value) < 0){
if(isNull(recurseTimes)){
str = formatValue(ctx,desc.value,null);}else 
{
str = formatValue(ctx,desc.value,recurseTimes - 1);}

if(str.indexOf('\n') > -1){
if(array){
str = str.split('\n').map(function(line){
return '  ' + line;}).
join('\n').substr(2);}else 
{
str = '\n' + str.split('\n').map(function(line){
return '   ' + line;}).
join('\n');}}}else 


{
str = ctx.stylize('[Circular]','special');}}


if(isUndefined(name)){
if(array && key.match(/^\d+$/)){
return str;}

name = JSON.stringify('' + key);
if(name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)){
name = name.substr(1,name.length - 2);
name = ctx.stylize(name,'name');}else 
{
name = name.replace(/'/g,"\\'").
replace(/\\"/g,'"').
replace(/(^"|"$)/g,"'");
name = ctx.stylize(name,'string');}}



return name + ': ' + str;}



function reduceToSingleString(output,base,braces){
var numLinesEst=0;
var length=output.reduce(function(prev,cur){
numLinesEst++;
if(cur.indexOf('\n') >= 0)numLinesEst++;
return prev + cur.replace(/\u001b\[\d\d?m/g,'').length + 1;},
0);

if(length > 60){
return braces[0] + (
base === ''?'':base + '\n ') + 
' ' + 
output.join(',\n  ') + 
' ' + 
braces[1];}


return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];}





function isArray(ar){
return Array.isArray(ar);}


function isBoolean(arg){
return typeof arg === 'boolean';}


function isNull(arg){
return arg === null;}


function isNullOrUndefined(arg){
return arg == null;}


function isNumber(arg){
return typeof arg === 'number';}


function isString(arg){
return typeof arg === 'string';}


function isSymbol(arg){
return typeof arg === 'symbol';}


function isUndefined(arg){
return arg === void 0;}


function isRegExp(re){
return isObject(re) && objectToString(re) === '[object RegExp]';}


function isObject(arg){
return typeof arg === 'object' && arg !== null;}


function isDate(d){
return isObject(d) && objectToString(d) === '[object Date]';}


function isError(e){
return isObject(e) && (
objectToString(e) === '[object Error]' || e instanceof Error);}


function isFunction(arg){
return typeof arg === 'function';}


function isPrimitive(arg){
return arg === null || 
typeof arg === 'boolean' || 
typeof arg === 'number' || 
typeof arg === 'string' || 
typeof arg === 'symbol' || 
typeof arg === 'undefined';}


function objectToString(o){
return Object.prototype.toString.call(o);}


function hasOwnProperty(obj,prop){
return Object.prototype.hasOwnProperty.call(obj,prop);}


return inspect;})();



var OBJECT_COLUMN_NAME='(index)';
var LOG_LEVELS={
trace:0,
log:1,
info:2,
warn:3,
error:4};


function setupConsole(global){

var originalConsole=global.console;

if(!global.nativeLoggingHook){
return;}


function getNativeLogFunction(level){
return function(){
var str=Array.prototype.map.call(arguments,function(arg){
return inspect(arg,{depth:10});}).
join(', ');
if(str.slice(0,10) === "'Warning: " && level >= LOG_LEVELS.error){



level = LOG_LEVELS.warn;}

global.nativeLoggingHook(str,level);};}



var repeat=function(element,n){
return Array.apply(null,Array(n)).map(function(){return element;});};


function consoleTablePolyfill(rows){

if(!Array.isArray(rows)){
var data=rows;
rows = [];
for(var key in data) {
if(data.hasOwnProperty(key)){
var row=data[key];
row[OBJECT_COLUMN_NAME] = key;
rows.push(row);}}}



if(rows.length === 0){
global.nativeLoggingHook('',LOG_LEVELS.log);
return;}


var columns=Object.keys(rows[0]).sort();
var stringRows=[];
var columnWidths=[];



columns.forEach(function(k,i){
columnWidths[i] = k.length;
for(var j=0;j < rows.length;j++) {
var cellStr=rows[j][k].toString();
stringRows[j] = stringRows[j] || [];
stringRows[j][i] = cellStr;
columnWidths[i] = Math.max(columnWidths[i],cellStr.length);}});





var joinRow=function(row,space){
var cells=row.map(function(cell,i){
var extraSpaces=repeat(' ',columnWidths[i] - cell.length).join('');
return cell + extraSpaces;});

space = space || ' ';
return cells.join(space + '|' + space);};


var separators=columnWidths.map(function(columnWidth){
return repeat('-',columnWidth).join('');});

var separatorRow=joinRow(separators,'-');
var header=joinRow(columns);
var table=[header,separatorRow];

for(var i=0;i < rows.length;i++) {
table.push(joinRow(stringRows[i]));}






global.nativeLoggingHook('\n' + table.join('\n'),LOG_LEVELS.log);}


global.console = {
error:getNativeLogFunction(LOG_LEVELS.error),
info:getNativeLogFunction(LOG_LEVELS.info),
log:getNativeLogFunction(LOG_LEVELS.log),
warn:getNativeLogFunction(LOG_LEVELS.warn),
trace:getNativeLogFunction(LOG_LEVELS.trace),
table:consoleTablePolyfill};





if(__DEV__ && originalConsole){
Object.keys(global.console).forEach(function(methodName){
var reactNativeMethod=global.console[methodName];
if(originalConsole[methodName]){
global.console[methodName] = function(){
originalConsole[methodName].apply(originalConsole,arguments);
reactNativeMethod.apply(global.console,arguments);};}});}}






if(typeof module !== 'undefined'){
module.exports = setupConsole;}else 
{
setupConsole(global);}})(


this);
(















function(global){
var ErrorUtils={
_inGuard:0,
_globalHandler:null,
setGlobalHandler:function(fun){
ErrorUtils._globalHandler = fun;},

reportError:function(error){
ErrorUtils._globalHandler && ErrorUtils._globalHandler(error);},

reportFatalError:function(error){
ErrorUtils._globalHandler && ErrorUtils._globalHandler(error,true);},

applyWithGuard:function(fun,context,args){
try{
ErrorUtils._inGuard++;
return fun.apply(context,args);}
catch(e) {
ErrorUtils.reportError(e);}finally 
{
ErrorUtils._inGuard--;}},


applyWithGuardIfNeeded:function(fun,context,args){
if(ErrorUtils.inGuard()){
return fun.apply(context,args);}else 
{
ErrorUtils.applyWithGuard(fun,context,args);}},


inGuard:function(){
return ErrorUtils._inGuard;},

guard:function(fun,name,context){
if(typeof fun !== 'function'){
console.warn('A function must be passed to ErrorUtils.guard, got ',fun);
return null;}

name = name || fun.name || '<generated guard>';
function guarded(){
return (
ErrorUtils.applyWithGuard(
fun,
context || this,
arguments,
null,
name));}




return guarded;}};


global.ErrorUtils = ErrorUtils;





function setupErrorGuard(){
var onError=function(e){
global.console.error(
'Error: ' + 
'\n stack: ' + e.stack + 
'\n line: ' + e.line + 
'\n message: ' + e.message,
e);};


global.ErrorUtils.setGlobalHandler(onError);}


setupErrorGuard();})(
this);
if(











!String.prototype.startsWith){
String.prototype.startsWith = function(search){
'use strict';
if(this == null){
throw TypeError();}

var string=String(this);
var pos=arguments.length > 1?
Number(arguments[1]) || 0:0;
var start=Math.min(Math.max(pos,0),string.length);
return string.indexOf(String(search),pos) === start;};}



if(!String.prototype.endsWith){
String.prototype.endsWith = function(search){
'use strict';
if(this == null){
throw TypeError();}

var string=String(this);
var stringLength=string.length;
var searchString=String(search);
var pos=arguments.length > 1?
Number(arguments[1]) || 0:stringLength;
var end=Math.min(Math.max(pos,0),stringLength);
var start=end - searchString.length;
if(start < 0){
return false;}

return string.lastIndexOf(searchString,start) === start;};}



if(!String.prototype.contains){
String.prototype.contains = function(search){
'use strict';
if(this == null){
throw TypeError();}

var string=String(this);
var pos=arguments.length > 1?
Number(arguments[1]) || 0:0;
return string.indexOf(String(search),pos) !== -1;};}



if(!String.prototype.repeat){
String.prototype.repeat = function(count){
'use strict';
if(this == null){
throw TypeError();}

var string=String(this);
count = Number(count) || 0;
if(count < 0 || count === Infinity){
throw RangeError();}

if(count === 1){
return string;}

var result='';
while(count) {
if(count & 1){
result += string;}

if(count >>= 1){
string += string;}}


return result;};}
(









function(undefined){

function findIndex(predicate,context){
if(this == null){
throw new TypeError(
'Array.prototype.findIndex called on null or undefined');}


if(typeof predicate !== 'function'){
throw new TypeError('predicate must be a function');}

var list=Object(this);
var length=list.length >>> 0;
for(var i=0;i < length;i++) {
if(predicate.call(context,list[i],i,list)){
return i;}}


return -1;}


if(!Array.prototype.findIndex){
Object.defineProperty(Array.prototype,'findIndex',{
enumerable:false,
writable:true,
configurable:true,
value:findIndex});}




if(!Array.prototype.find){
Object.defineProperty(Array.prototype,'find',{
enumerable:false,
writable:true,
configurable:true,
value:function(predicate,context){
if(this == null){
throw new TypeError(
'Array.prototype.find called on null or undefined');}


var index=findIndex.call(this,predicate,context);
return index === -1?undefined:this[index];}});}})();
__d('plainX/index.ios.js',["react-native/Libraries/react-native/react-native.js","react-native-rest-kit/index.js","plainX/components/PlainNavigator.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

AppRegistry=




React.AppRegistry;var PushNotificationIOS=React.PushNotificationIOS;var AppStateIOS=React.AppStateIOS;var Navigator=React.Navigator;var AsyncStorage=React.AsyncStorage;

var PlainNavigator=require('plainX/components/PlainNavigator.js');

var API_DOMAIN='https://plainexchange.herokuapp.com/api/v1/';
var RestKit=require('react-native-rest-kit/index.js');



var body=React.createClass({displayName:'body',
getInitialState:function(){
return {
uri:'main',
messageCount:0};},


saveDeviceToken:function callee$0$0(token){return regeneratorRuntime.async(function callee$0$0$(context$1$0){while(1) switch(context$1$0.prev = context$1$0.next){case 0:context$1$0.prev = 0;context$1$0.next = 3;return regeneratorRuntime.awrap(

AsyncStorage.setItem("DEVICE_TOKEN",token));case 3:
console.log("SAVED");context$1$0.next = 9;break;case 6:context$1$0.prev = 6;context$1$0.t0 = context$1$0['catch'](0);

console.log("ERROR" + context$1$0.t0);case 9:case 'end':return context$1$0.stop();}},null,this,[[0,6]]);},


loadTokenIfAny:function callee$0$0(){var 


value;return regeneratorRuntime.async(function callee$0$0$(context$1$0){while(1) switch(context$1$0.prev = context$1$0.next){case 0:if(!this.loginToken){context$1$0.next = 2;break;}return context$1$0.abrupt('return',this.loginToken);case 2:context$1$0.prev = 2;context$1$0.next = 5;return regeneratorRuntime.awrap(AsyncStorage.getItem("SESSION"));case 5:value = context$1$0.sent;
console.log("User Is Logged In");
this.loginToken = value;return context$1$0.abrupt('return',
value);case 11:context$1$0.prev = 11;context$1$0.t0 = context$1$0['catch'](2);

console.log("Error Retreving LoginToken");return context$1$0.abrupt('return',
null);case 15:case 'end':return context$1$0.stop();}},null,this,[[2,11]]);},


onCheckPermission:function(permission){
console.log("ON CHECK PERMISSION");
console.log("Permission alert:" + permission.alert + " badge:" + permission.badge + " sound:" + permission.sound);
if(!permission.alert){
console.log("REQUESTING PERMISSION BECAUSE U DON'T HAVE ONE");
PushNotificationIOS.requestPermissions();}

console.log("ADD NOTIFICATION LISTENER");
PushNotificationIOS.addEventListener("notification",this.onNotification);},

onNotification:function(event){var _this=this;
console.log("ON NOTIFICATION");
console.log(event);
var state=AppStateIOS.currentState;
if(state != 'active' && event["_data"]["uri"]){
this.setState({uri:event["_data"]["uri"]});}else 

{
this.loadTokenIfAny().
then(function(token){
if(token == null)return;
_this.updateMessageCount(token);}).

done();}},


onRegister:function(deviceToken){
console.log("ON REGISTER");

this.saveDeviceToken(deviceToken);
this.sendDeviceToken(deviceToken);},

sendDeviceToken:function(deviceToken){
this.loadTokenIfAny().
then(function(loginToken){
console.log("LOGINTOKEN IS " + loginToken);
console.log("SENDING DEVICE TOKEN " + deviceToken);
if(loginToken == null)loginToken = "";
var request={
method:'post',
headers:{
'X-Session':loginToken,
'Accept':'application/json',
'Content-Type':'application/json'},

body:JSON.stringify({"Token":deviceToken})};

var url=API_DOMAIN + "user/token";
RestKit.send(url,request,function(error,json){console.log(error);console.log(json);});}).

done();},

updateMessageCount:function(token){
var request={
method:'get',
headers:{'X-Session':token}};

var unread_url=API_DOMAIN + "user/unreadmsgs";
RestKit.send(unread_url,request,this.handleMessageCount);},

handleMessageCount:function(error,json){
if(error){
console.log("Error loading MsgCount" + error);
return;}

if(json){
var count=json["Count"];
console.log("Message Count is " + count);
if(this.state.messageCount != count){
console.log("Update Message Count!");
this.setState({messageCount:count});
PushNotificationIOS.setApplicationIconBadgeNumber(count);}}},



onError:function(message,key){
console.log('An error occurred: ',message);
console.log('An error occurred key: ',key);},

componentDidMount:function(){
PushNotificationIOS.addEventListener("register",this.onRegister);
PushNotificationIOS.addEventListener('error',this.onError);
PushNotificationIOS.checkPermissions(this.onCheckPermission);},

componentWillUnmount:function(){
PushNotificationIOS.removeEventListener('notification',this.onNotification);
PushNotificationIOS.removeEventListener("register",this.onRegister);
PushNotificationIOS.removeEventListener('error',this.onError);},

render:function(){
return (
React.createElement(PlainNavigator,{
API_DOMAIN:API_DOMAIN,
messageCount:this.state.messageCount,
uri:this.state.uri,
updateMessageCount:this.updateMessageCount}));}});




AppRegistry.registerComponent('plainX',function(){return body;});
});
__d('react-native/Libraries/react-native/react-native.js',["React","ActivityIndicatorIOS","DatePickerIOS","DrawerLayoutAndroid","Image","ListView","MapView","Modal","Navigator","NavigatorIOS","PickerIOS","ProgressBarAndroid","ProgressViewIOS","ScrollView","SegmentedControlIOS","SliderIOS","SnapshotView","Switch","SwitchAndroid","SwitchIOS","TabBarIOS","Text","TextInput","ToastAndroid","ToolbarAndroid","TouchableHighlight","TouchableNativeFeedback","TouchableOpacity","TouchableWithoutFeedback","View","ViewPagerAndroid","WebView","ActionSheetIOS","AdSupportIOS","AlertIOS","Animated","AppRegistry","AppStateIOS","AsyncStorage","BackAndroid","CameraRoll","Dimensions","Easing","ImagePickerIOS","InteractionManager","LayoutAnimation","LinkingIOS","NetInfo","PanResponder","PixelRatio","PushNotificationIOS","Settings","StatusBarIOS","StyleSheet","VibrationIOS","RCTDeviceEventEmitter","RCTNativeAppEventEmitter","NativeModules","Platform","processColor","requireNativeComponent","EdgeInsetsPropType","PointPropType","LinkedStateMixin","ReactComponentWithPureRenderMixin","NativeModules","ReactUpdates","cloneWithProps","ReactFragment","update","ReactDefaultPerf","ReactTestUtils"],function(global, require, module, exports) {  'use strict';


















var ReactNative=Object.assign(Object.create(require('React')),{

ActivityIndicatorIOS:require('ActivityIndicatorIOS'),
DatePickerIOS:require('DatePickerIOS'),
DrawerLayoutAndroid:require('DrawerLayoutAndroid'),
Image:require('Image'),
ListView:require('ListView'),
MapView:require('MapView'),
Modal:require('Modal'),
Navigator:require('Navigator'),
NavigatorIOS:require('NavigatorIOS'),
PickerIOS:require('PickerIOS'),
ProgressBarAndroid:require('ProgressBarAndroid'),
ProgressViewIOS:require('ProgressViewIOS'),
ScrollView:require('ScrollView'),
SegmentedControlIOS:require('SegmentedControlIOS'),
SliderIOS:require('SliderIOS'),
SnapshotView:require('SnapshotView'),
Switch:require('Switch'),
SwitchAndroid:require('SwitchAndroid'),
SwitchIOS:require('SwitchIOS'),
TabBarIOS:require('TabBarIOS'),
Text:require('Text'),
TextInput:require('TextInput'),
ToastAndroid:require('ToastAndroid'),
ToolbarAndroid:require('ToolbarAndroid'),
TouchableHighlight:require('TouchableHighlight'),
TouchableNativeFeedback:require('TouchableNativeFeedback'),
TouchableOpacity:require('TouchableOpacity'),
TouchableWithoutFeedback:require('TouchableWithoutFeedback'),
View:require('View'),
ViewPagerAndroid:require('ViewPagerAndroid'),
WebView:require('WebView'),


ActionSheetIOS:require('ActionSheetIOS'),
AdSupportIOS:require('AdSupportIOS'),
AlertIOS:require('AlertIOS'),
Animated:require('Animated'),
AppRegistry:require('AppRegistry'),
AppStateIOS:require('AppStateIOS'),
AsyncStorage:require('AsyncStorage'),
BackAndroid:require('BackAndroid'),
CameraRoll:require('CameraRoll'),
Dimensions:require('Dimensions'),
Easing:require('Easing'),
ImagePickerIOS:require('ImagePickerIOS'),
InteractionManager:require('InteractionManager'),
LayoutAnimation:require('LayoutAnimation'),
LinkingIOS:require('LinkingIOS'),
NetInfo:require('NetInfo'),
PanResponder:require('PanResponder'),
PixelRatio:require('PixelRatio'),
PushNotificationIOS:require('PushNotificationIOS'),
Settings:require('Settings'),
StatusBarIOS:require('StatusBarIOS'),
StyleSheet:require('StyleSheet'),
VibrationIOS:require('VibrationIOS'),


DeviceEventEmitter:require('RCTDeviceEventEmitter'),
NativeAppEventEmitter:require('RCTNativeAppEventEmitter'),
NativeModules:require('NativeModules'),
Platform:require('Platform'),
processColor:require('processColor'),
requireNativeComponent:require('requireNativeComponent'),


EdgeInsetsPropType:require('EdgeInsetsPropType'),
PointPropType:require('PointPropType'),


addons:{
LinkedStateMixin:require('LinkedStateMixin'),
Perf:undefined,
PureRenderMixin:require('ReactComponentWithPureRenderMixin'),
TestModule:require('NativeModules').TestModule,
TestUtils:undefined,
batchedUpdates:require('ReactUpdates').batchedUpdates,
cloneWithProps:require('cloneWithProps'),
createFragment:require('ReactFragment').create,
update:require('update')}});



if(__DEV__){
ReactNative.addons.Perf = require('ReactDefaultPerf');
ReactNative.addons.TestUtils = require('ReactTestUtils');}


module.exports = ReactNative;
});
__d('React',["ReactNative"],function(global, require, module, exports) {  'use strict';












module.exports = require('ReactNative');
});
__d('ReactNative',["ReactChildren","ReactClass","ReactComponent","ReactCurrentOwner","ReactElement","ReactElementValidator","ReactInstanceHandles","ReactNativeDefaultInjection","ReactNativeMount","ReactPropTypes","ReactUpdates","deprecated","findNodeHandle","invariant","onlyChild","warning","ReactReconciler","ReactNativeTextComponent"],function(global, require, module, exports) {  'use strict';












var ReactChildren=require('ReactChildren');
var ReactClass=require('ReactClass');
var ReactComponent=require('ReactComponent');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactElementValidator=require('ReactElementValidator');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactNativeDefaultInjection=require('ReactNativeDefaultInjection');
var ReactNativeMount=require('ReactNativeMount');
var ReactPropTypes=require('ReactPropTypes');
var ReactUpdates=require('ReactUpdates');

var deprecated=require('deprecated');
var findNodeHandle=require('findNodeHandle');
var invariant=require('invariant');
var onlyChild=require('onlyChild');
var warning=require('warning');

ReactNativeDefaultInjection.inject();

var createElement=ReactElement.createElement;
var createFactory=ReactElement.createFactory;
var cloneElement=ReactElement.cloneElement;

if(__DEV__){
createElement = ReactElementValidator.createElement;
createFactory = ReactElementValidator.createFactory;
cloneElement = ReactElementValidator.cloneElement;}


var resolveDefaultProps=function(element){

var defaultProps=element.type.defaultProps;
var props=element.props;
for(var propName in defaultProps) {
if(props[propName] === undefined){
props[propName] = defaultProps[propName];}}};





var augmentElement=function(element){
if(__DEV__){
invariant(
false,
'This optimized path should never be used in DEV mode because ' + 
'it does not provide validation. Check your JSX transform.');}


element._owner = ReactCurrentOwner.current;
if(element.type.defaultProps){
resolveDefaultProps(element);}

return element;};


var render=function(
element,
mountInto,
callback)
{
return ReactNativeMount.renderComponent(element,mountInto,callback);};


var ReactNative={
hasReactNativeInitialized:false,
Children:{
map:ReactChildren.map,
forEach:ReactChildren.forEach,
count:ReactChildren.count,
only:onlyChild},

Component:ReactComponent,
PropTypes:ReactPropTypes,
createClass:ReactClass.createClass,
createElement:createElement,
createFactory:createFactory,
cloneElement:cloneElement,
_augmentElement:augmentElement,
findNodeHandle:findNodeHandle,
render:render,
unmountComponentAtNode:ReactNativeMount.unmountComponentAtNode,


unstable_batchedUpdates:ReactUpdates.batchedUpdates,



__spread:Object.assign,

unmountComponentAtNodeAndRemoveContainer:ReactNativeMount.unmountComponentAtNodeAndRemoveContainer,
isValidClass:ReactElement.isValidFactory,
isValidElement:ReactElement.isValidElement,


renderComponent:function(
element,
mountInto,
callback)
{
warning('Use React.render instead of React.renderComponent');
return ReactNative.render(element,mountInto,callback);}};






if(
typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && 
typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function'){
__REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
CurrentOwner:ReactCurrentOwner,
InstanceHandles:ReactInstanceHandles,
Mount:ReactNativeMount,
Reconciler:require('ReactReconciler'),
TextComponent:require('ReactNativeTextComponent')});}



module.exports = ReactNative;
});
__d('ReactChildren',["PooledClass","ReactFragment","traverseAllChildren","warning"],function(global, require, module, exports) {  'use strict';












var PooledClass=require('PooledClass');
var ReactFragment=require('ReactFragment');

var traverseAllChildren=require('traverseAllChildren');
var warning=require('warning');

var twoArgumentPooler=PooledClass.twoArgumentPooler;
var threeArgumentPooler=PooledClass.threeArgumentPooler;









function ForEachBookKeeping(forEachFunction,forEachContext){
this.func = forEachFunction;
this.context = forEachContext;
this.count = 0;}

PooledClass.addPoolingTo(ForEachBookKeeping,twoArgumentPooler);

function forEachSingleChild(traverseContext,child,name){
var bookKeeping=traverseContext;
bookKeeping.func.call(bookKeeping.context,child,bookKeeping.count++);}












function forEachChildren(children,forEachFunc,forEachContext){
if(children == null){
return children;}


var traverseContext=
ForEachBookKeeping.getPooled(forEachFunc,forEachContext);
traverseAllChildren(children,forEachSingleChild,traverseContext);
ForEachBookKeeping.release(traverseContext);}











function MapBookKeeping(mapResult,mapFunction,mapContext){
this.result = mapResult;
this.func = mapFunction;
this.context = mapContext;
this.count = 0;}

PooledClass.addPoolingTo(MapBookKeeping,threeArgumentPooler);

function mapSingleChildIntoContext(traverseContext,child,name){
var bookKeeping=traverseContext;
var mapResult=bookKeeping.result;

var keyUnique=mapResult[name] === undefined;
if(__DEV__){
warning(
keyUnique,
'ReactChildren.map(...): Encountered two children with the same key, ' + 
'`%s`. Child keys must be unique; when two children share a key, only ' + 
'the first child will be used.',
name);}



if(keyUnique){
var mappedChild=
bookKeeping.func.call(bookKeeping.context,child,bookKeeping.count++);
mapResult[name] = mappedChild;}}

















function mapChildren(children,func,context){
if(children == null){
return children;}


var mapResult={};
var traverseContext=MapBookKeeping.getPooled(mapResult,func,context);
traverseAllChildren(children,mapSingleChildIntoContext,traverseContext);
MapBookKeeping.release(traverseContext);
return ReactFragment.create(mapResult);}


function forEachSingleChildDummy(traverseContext,child,name){
return null;}









function countChildren(children,context){
return traverseAllChildren(children,forEachSingleChildDummy,null);}


var ReactChildren={
forEach:forEachChildren,
map:mapChildren,
count:countChildren};


module.exports = ReactChildren;
});
__d('PooledClass',["invariant"],function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');








var oneArgumentPooler=function(copyFieldsFrom){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,copyFieldsFrom);
return instance;}else 
{
return new Klass(copyFieldsFrom);}};



var twoArgumentPooler=function(a1,a2){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,a1,a2);
return instance;}else 
{
return new Klass(a1,a2);}};



var threeArgumentPooler=function(a1,a2,a3){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,a1,a2,a3);
return instance;}else 
{
return new Klass(a1,a2,a3);}};



var fourArgumentPooler=function(a1,a2,a3,a4){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,a1,a2,a3,a4);
return instance;}else 
{
return new Klass(a1,a2,a3,a4);}};



var fiveArgumentPooler=function(a1,a2,a3,a4,a5){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,a1,a2,a3,a4,a5);
return instance;}else 
{
return new Klass(a1,a2,a3,a4,a5);}};



var standardReleaser=function(instance){
var Klass=this;
invariant(
instance instanceof Klass,
'Trying to release an instance into a pool of a different type.');

if(instance.destructor){
instance.destructor();}

if(Klass.instancePool.length < Klass.poolSize){
Klass.instancePool.push(instance);}};



var DEFAULT_POOL_SIZE=10;
var DEFAULT_POOLER=oneArgumentPooler;










var addPoolingTo=function(CopyConstructor,pooler){
var NewKlass=CopyConstructor;
NewKlass.instancePool = [];
NewKlass.getPooled = pooler || DEFAULT_POOLER;
if(!NewKlass.poolSize){
NewKlass.poolSize = DEFAULT_POOL_SIZE;}

NewKlass.release = standardReleaser;
return NewKlass;};


var PooledClass={
addPoolingTo:addPoolingTo,
oneArgumentPooler:oneArgumentPooler,
twoArgumentPooler:twoArgumentPooler,
threeArgumentPooler:threeArgumentPooler,
fourArgumentPooler:fourArgumentPooler,
fiveArgumentPooler:fiveArgumentPooler};


module.exports = PooledClass;
});
__d('invariant',[],function(global, require, module, exports) {  "use strict";























var invariant=function(condition,format,a,b,c,d,e,f){
if(__DEV__){
if(format === undefined){
throw new Error('invariant requires an error message argument');}}



if(!condition){
var error;
if(format === undefined){
error = new Error(
'Minified exception occurred; use the non-minified dev environment ' + 
'for the full error message and additional helpful warnings.');}else 

{
var args=[a,b,c,d,e,f];
var argIndex=0;
error = new Error(
'Invariant Violation: ' + 
format.replace(/%s/g,function(){return args[argIndex++];}));}



error.framesToPop = 1;
throw error;}};



module.exports = invariant;
});
__d('ReactFragment',["ReactElement","warning"],function(global, require, module, exports) {  'use strict';












var ReactElement=require('ReactElement');

var warning=require('warning');









var fragmentKey;
var didWarnKey;
var canWarnForReactFragment;

if(__DEV__){
fragmentKey = '_reactFragment';
didWarnKey = '_reactDidWarn';

try{



var dummy=function(){
return 1;};


Object.defineProperty(
{},
fragmentKey,
{enumerable:false,value:true});


Object.defineProperty(
{},
'key',
{enumerable:true,get:dummy});


canWarnForReactFragment = true;}
catch(x) {
canWarnForReactFragment = false;}


var proxyPropertyAccessWithWarning=function(obj,key){
Object.defineProperty(obj,key,{
enumerable:true,
get:function(){
warning(
this[didWarnKey],
'A ReactFragment is an opaque type. Accessing any of its ' + 
'properties is deprecated. Pass it to one of the React.Children ' + 
'helpers.');

this[didWarnKey] = true;
return this[fragmentKey][key];},

set:function(value){
warning(
this[didWarnKey],
'A ReactFragment is an immutable opaque type. Mutating its ' + 
'properties is deprecated.');

this[didWarnKey] = true;
this[fragmentKey][key] = value;}});};




var issuedWarnings={};

var didWarnForFragment=function(fragment){


var fragmentCacheKey='';
for(var key in fragment) {
fragmentCacheKey += key + ':' + typeof fragment[key] + ',';}

var alreadyWarnedOnce=!!issuedWarnings[fragmentCacheKey];
issuedWarnings[fragmentCacheKey] = true;
return alreadyWarnedOnce;};}



var ReactFragment={


create:function(object){
if(__DEV__){
if(typeof object !== 'object' || !object || Array.isArray(object)){
warning(
false,
'React.addons.createFragment only accepts a single object. Got: %s',
object);

return object;}

if(ReactElement.isValidElement(object)){
warning(
false,
'React.addons.createFragment does not accept a ReactElement ' + 
'without a wrapper object.');

return object;}

if(canWarnForReactFragment){
var proxy={};
Object.defineProperty(proxy,fragmentKey,{
enumerable:false,
value:object});

Object.defineProperty(proxy,didWarnKey,{
writable:true,
enumerable:false,
value:false});

for(var key in object) {
proxyPropertyAccessWithWarning(proxy,key);}

Object.preventExtensions(proxy);
return proxy;}}


return object;},



extract:function(fragment){
if(__DEV__){
if(canWarnForReactFragment){
if(!fragment[fragmentKey]){
warning(
didWarnForFragment(fragment),
'Any use of a keyed object should be wrapped in ' + 
'React.addons.createFragment(object) before being passed as a ' + 
'child.');

return fragment;}

return fragment[fragmentKey];}}


return fragment;},




extractIfFragment:function(fragment){
if(__DEV__){
if(canWarnForReactFragment){

if(fragment[fragmentKey]){
return fragment[fragmentKey];}




for(var key in fragment) {
if(fragment.hasOwnProperty(key) && 
ReactElement.isValidElement(fragment[key])){


return ReactFragment.extract(fragment);}}}}




return fragment;}};



module.exports = ReactFragment;
});
__d('ReactElement',["ReactCurrentOwner","Object.assign"],function(global, require, module, exports) {  'use strict';












var ReactCurrentOwner=require('ReactCurrentOwner');

var assign=require('Object.assign');

var RESERVED_PROPS={
key:true,
ref:true};













var ReactElement=function(type,key,ref,owner,props){

this.type = type;
this.key = key;
this.ref = ref;


this._owner = owner;

this.props = props;

if(__DEV__){




this._store = {};





try{
Object.defineProperty(this._store,'validated',{
configurable:false,
enumerable:false,
writable:true,
value:false});}

catch(x) {
this._store.validated = false;}

Object.freeze(this.props);
Object.freeze(this);}};





ReactElement.prototype = {
_isReactElement:true};


ReactElement.createElement = function(type,config,children){
var propName;


var props={};

var key=null;
var ref=null;

if(config != null){
ref = config.ref === undefined?null:config.ref;
key = config.key === undefined?null:'' + config.key;

for(propName in config) {
if(config.hasOwnProperty(propName) && 
!RESERVED_PROPS.hasOwnProperty(propName)){
props[propName] = config[propName];}}}






var childrenLength=arguments.length - 2;
if(childrenLength === 1){
props.children = children;}else 
if(childrenLength > 1){
var childArray=Array(childrenLength);
for(var i=0;i < childrenLength;i++) {
childArray[i] = arguments[i + 2];}

props.children = childArray;}



if(type && type.defaultProps){
var defaultProps=type.defaultProps;
for(propName in defaultProps) {
if(typeof props[propName] === 'undefined'){
props[propName] = defaultProps[propName];}}}




return new ReactElement(
type,
key,
ref,
ReactCurrentOwner.current,
props);};



ReactElement.createFactory = function(type){
var factory=ReactElement.createElement.bind(null,type);





factory.type = type;
return factory;};


ReactElement.cloneAndReplaceProps = function(oldElement,newProps){
var newElement=new ReactElement(
oldElement.type,
oldElement.key,
oldElement.ref,
oldElement._owner,
newProps);


if(__DEV__){

newElement._store.validated = oldElement._store.validated;}


return newElement;};


ReactElement.cloneElement = function(element,config,children){
var propName;


var props=assign({},element.props);


var key=element.key;
var ref=element.ref;


var owner=element._owner;

if(config != null){
if(config.ref !== undefined){

ref = config.ref;
owner = ReactCurrentOwner.current;}

if(config.key !== undefined){
key = '' + config.key;}


for(propName in config) {
if(config.hasOwnProperty(propName) && 
!RESERVED_PROPS.hasOwnProperty(propName)){
props[propName] = config[propName];}}}






var childrenLength=arguments.length - 2;
if(childrenLength === 1){
props.children = children;}else 
if(childrenLength > 1){
var childArray=Array(childrenLength);
for(var i=0;i < childrenLength;i++) {
childArray[i] = arguments[i + 2];}

props.children = childArray;}


return new ReactElement(
element.type,
key,
ref,
owner,
props);};








ReactElement.isValidElement = function(object){




var isElement=!!(object && object._isReactElement);





return isElement;};


module.exports = ReactElement;
});
__d('ReactCurrentOwner',[],function(global, require, module, exports) {  'use strict';


















var ReactCurrentOwner={





current:null};



module.exports = ReactCurrentOwner;
});
__d('Object.assign',[],function(global, require, module, exports) {  'use strict';














function assign(target,sources){
if(target == null){
throw new TypeError('Object.assign target cannot be null or undefined');}


var to=Object(target);
var hasOwnProperty=Object.prototype.hasOwnProperty;

for(var nextIndex=1;nextIndex < arguments.length;nextIndex++) {
var nextSource=arguments[nextIndex];
if(nextSource == null){
continue;}


var from=Object(nextSource);






for(var key in from) {
if(hasOwnProperty.call(from,key)){
to[key] = from[key];}}}




return to;}


module.exports = assign;
});
__d('warning',["emptyFunction"],function(global, require, module, exports) {  "use strict";












var emptyFunction=require('emptyFunction');








var warning=emptyFunction;

if(__DEV__){
warning = function(condition,format){for(var _len=arguments.length,args=Array(_len > 2?_len - 2:0),_key=2;_key < _len;_key++) {args[_key - 2] = arguments[_key];}
if(format === undefined){
throw new Error(
'`warning(condition, format, ...args)` requires a warning ' + 
'message argument');}



if(format.indexOf('Failed Composite propType: ') === 0){
return;}


if(!condition){
var argIndex=0;
var message='Warning: ' + format.replace(/%s/g,function(){return args[argIndex++];});
if(typeof console !== 'undefined'){
console.error(message);}

try{



throw new Error(message);}
catch(x) {}}};}




module.exports = warning;
});
__d('emptyFunction',[],function(global, require, module, exports) {  function 










makeEmptyFunction(arg){
return function(){
return arg;};}








function emptyFunction(){}

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function(){return this;};
emptyFunction.thatReturnsArgument = function(arg){return arg;};

module.exports = emptyFunction;
});
__d('traverseAllChildren',["ReactElement","ReactFragment","ReactInstanceHandles","getIteratorFn","invariant","warning"],function(global, require, module, exports) {  'use strict';












var ReactElement=require('ReactElement');
var ReactFragment=require('ReactFragment');
var ReactInstanceHandles=require('ReactInstanceHandles');

var getIteratorFn=require('getIteratorFn');
var invariant=require('invariant');
var warning=require('warning');

var SEPARATOR=ReactInstanceHandles.SEPARATOR;
var SUBSEPARATOR=':';






var userProvidedKeyEscaperLookup={
'=':'=0',
'.':'=1',
':':'=2'};


var userProvidedKeyEscapeRegex=/[=.:]/g;

var didWarnAboutMaps=false;

function userProvidedKeyEscaper(match){
return userProvidedKeyEscaperLookup[match];}









function getComponentKey(component,index){
if(component && component.key != null){

return wrapUserProvidedKey(component.key);}


return index.toString(36);}








function escapeUserProvidedKey(text){
return ('' + text).replace(
userProvidedKeyEscapeRegex,
userProvidedKeyEscaper);}










function wrapUserProvidedKey(key){
return '$' + escapeUserProvidedKey(key);}










function traverseAllChildrenImpl(
children,
nameSoFar,
callback,
traverseContext)
{
var type=typeof children;

if(type === 'undefined' || type === 'boolean'){

children = null;}


if(children === null || 
type === 'string' || 
type === 'number' || 
ReactElement.isValidElement(children)){
callback(
traverseContext,
children,


nameSoFar === ''?SEPARATOR + getComponentKey(children,0):nameSoFar);

return 1;}


var child;
var nextName;
var subtreeCount=0;

if(Array.isArray(children)){
for(var i=0;i < children.length;i++) {
child = children[i];
nextName = 
(nameSoFar !== ''?nameSoFar + SUBSEPARATOR:SEPARATOR) + 
getComponentKey(child,i);

subtreeCount += traverseAllChildrenImpl(
child,
nextName,
callback,
traverseContext);}}else 


{
var iteratorFn=getIteratorFn(children);
if(iteratorFn){
var iterator=iteratorFn.call(children);
var step;
if(iteratorFn !== children.entries){
var ii=0;
while(!(step = iterator.next()).done) {
child = step.value;
nextName = 
(nameSoFar !== ''?nameSoFar + SUBSEPARATOR:SEPARATOR) + 
getComponentKey(child,ii++);

subtreeCount += traverseAllChildrenImpl(
child,
nextName,
callback,
traverseContext);}}else 


{
if(__DEV__){
warning(
didWarnAboutMaps,
'Using Maps as children is not yet fully supported. It is an ' + 
'experimental feature that might be removed. Convert it to a ' + 
'sequence / iterable of keyed ReactElements instead.');

didWarnAboutMaps = true;}


while(!(step = iterator.next()).done) {
var entry=step.value;
if(entry){
child = entry[1];
nextName = 
(nameSoFar !== ''?nameSoFar + SUBSEPARATOR:SEPARATOR) + 
wrapUserProvidedKey(entry[0]) + SUBSEPARATOR + 
getComponentKey(child,0);

subtreeCount += traverseAllChildrenImpl(
child,
nextName,
callback,
traverseContext);}}}}else 




if(type === 'object'){
invariant(
children.nodeType !== 1,
'traverseAllChildren(...): Encountered an invalid child; DOM ' + 
'elements are not valid children of React components.');

var fragment=ReactFragment.extract(children);
for(var key in fragment) {
if(fragment.hasOwnProperty(key)){
child = fragment[key];
nextName = 
(nameSoFar !== ''?nameSoFar + SUBSEPARATOR:SEPARATOR) + 
wrapUserProvidedKey(key) + SUBSEPARATOR + 
getComponentKey(child,0);

subtreeCount += traverseAllChildrenImpl(
child,
nextName,
callback,
traverseContext);}}}}






return subtreeCount;}


















function traverseAllChildren(children,callback,traverseContext){
if(children == null){
return 0;}


return traverseAllChildrenImpl(children,'',callback,traverseContext);}


module.exports = traverseAllChildren;
});
__d('ReactInstanceHandles',["ReactRootIndex","invariant"],function(global, require, module, exports) {  'use strict';













var ReactRootIndex=require('ReactRootIndex');

var invariant=require('invariant');

var SEPARATOR='.';
var SEPARATOR_LENGTH=SEPARATOR.length;




var MAX_TREE_DEPTH=10000;








function getReactRootIDString(index){
return SEPARATOR + index.toString(36);}










function isBoundary(id,index){
return id.charAt(index) === SEPARATOR || index === id.length;}









function isValidID(id){
return id === '' || 
id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR;}











function isAncestorIDOf(ancestorID,descendantID){
return (
descendantID.indexOf(ancestorID) === 0 && 
isBoundary(descendantID,ancestorID.length));}










function getParentID(id){
return id?id.substr(0,id.lastIndexOf(SEPARATOR)):'';}











function getNextDescendantID(ancestorID,destinationID){
invariant(
isValidID(ancestorID) && isValidID(destinationID),
'getNextDescendantID(%s, %s): Received an invalid React DOM ID.',
ancestorID,
destinationID);

invariant(
isAncestorIDOf(ancestorID,destinationID),
'getNextDescendantID(...): React has made an invalid assumption about ' + 
'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.',
ancestorID,
destinationID);

if(ancestorID === destinationID){
return ancestorID;}



var start=ancestorID.length + SEPARATOR_LENGTH;
var i;
for(i = start;i < destinationID.length;i++) {
if(isBoundary(destinationID,i)){
break;}}


return destinationID.substr(0,i);}













function getFirstCommonAncestorID(oneID,twoID){
var minLength=Math.min(oneID.length,twoID.length);
if(minLength === 0){
return '';}

var lastCommonMarkerIndex=0;

for(var i=0;i <= minLength;i++) {
if(isBoundary(oneID,i) && isBoundary(twoID,i)){
lastCommonMarkerIndex = i;}else 
if(oneID.charAt(i) !== twoID.charAt(i)){
break;}}


var longestCommonID=oneID.substr(0,lastCommonMarkerIndex);
invariant(
isValidID(longestCommonID),
'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s',
oneID,
twoID,
longestCommonID);

return longestCommonID;}















function traverseParentPath(start,stop,cb,arg,skipFirst,skipLast){
start = start || '';
stop = stop || '';
invariant(
start !== stop,
'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.',
start);

var traverseUp=isAncestorIDOf(stop,start);
invariant(
traverseUp || isAncestorIDOf(start,stop),
'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' + 
'not have a parent path.',
start,
stop);


var depth=0;
var traverse=traverseUp?getParentID:getNextDescendantID;
for(var id=start;;id = traverse(id,stop)) {
var ret;
if((!skipFirst || id !== start) && (!skipLast || id !== stop)){
ret = cb(id,traverseUp,arg);}

if(ret === false || id === stop){

break;}

invariant(
depth++ < MAX_TREE_DEPTH,
'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' + 
'traversing the React DOM ID tree. This may be due to malformed IDs: %s',
start,stop,id);}}











var ReactInstanceHandles={





createReactRootID:function(){
return getReactRootIDString(ReactRootIndex.createReactRootIndex());},










createReactID:function(rootID,name){
return rootID + name;},










getReactRootIDFromNodeID:function(id){
if(id && id.charAt(0) === SEPARATOR && id.length > 1){
var index=id.indexOf(SEPARATOR,1);
return index > -1?id.substr(0,index):id;}

return null;},
















traverseEnterLeave:function(leaveID,enterID,cb,upArg,downArg){
var ancestorID=getFirstCommonAncestorID(leaveID,enterID);
if(ancestorID !== leaveID){
traverseParentPath(leaveID,ancestorID,cb,upArg,false,true);}

if(ancestorID !== enterID){
traverseParentPath(ancestorID,enterID,cb,downArg,true,false);}},













traverseTwoPhase:function(targetID,cb,arg){
if(targetID){
traverseParentPath('',targetID,cb,arg,true,false);
traverseParentPath(targetID,'',cb,arg,false,true);}},






traverseTwoPhaseSkipTarget:function(targetID,cb,arg){
if(targetID){
traverseParentPath('',targetID,cb,arg,true,true);
traverseParentPath(targetID,'',cb,arg,true,true);}},















traverseAncestors:function(targetID,cb,arg){
traverseParentPath('',targetID,cb,arg,true,false);},


getFirstCommonAncestorID:getFirstCommonAncestorID,





_getNextDescendantID:getNextDescendantID,

isAncestorIDOf:isAncestorIDOf,

SEPARATOR:SEPARATOR};



module.exports = ReactInstanceHandles;
});
__d('ReactRootIndex',[],function(global, require, module, exports) {  'use strict';













var ReactRootIndexInjection={



injectCreateReactRootIndex:function(_createReactRootIndex){
ReactRootIndex.createReactRootIndex = _createReactRootIndex;}};



var ReactRootIndex={
createReactRootIndex:null,
injection:ReactRootIndexInjection};


module.exports = ReactRootIndex;
});
__d('getIteratorFn',[],function(global, require, module, exports) {  'use strict';














var ITERATOR_SYMBOL=typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL='@@iterator';















function getIteratorFn(maybeIterable){
var iteratorFn=maybeIterable && (
ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || 
maybeIterable[FAUX_ITERATOR_SYMBOL]);

if(typeof iteratorFn === 'function'){
return iteratorFn;}}



module.exports = getIteratorFn;
});
__d('ReactClass',["ReactComponent","ReactElement","ReactErrorUtils","ReactPropTypeLocations","ReactPropTypeLocationNames","ReactNoopUpdateQueue","Object.assign","emptyObject","invariant","keyMirror","keyOf","warning"],function(global, require, module, exports) {  'use strict';












var ReactComponent=require('ReactComponent');
var ReactElement=require('ReactElement');
var ReactErrorUtils=require('ReactErrorUtils');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');
var ReactNoopUpdateQueue=require('ReactNoopUpdateQueue');

var assign=require('Object.assign');
var emptyObject=require('emptyObject');
var invariant=require('invariant');
var keyMirror=require('keyMirror');
var keyOf=require('keyOf');
var warning=require('warning');

var MIXINS_KEY=keyOf({mixins:null});




var SpecPolicy=keyMirror({



DEFINE_ONCE:null,




DEFINE_MANY:null,



OVERRIDE_BASE:null,





DEFINE_MANY_MERGED:null});



var injectedMixins=[];

var warnedSetProps=false;
function warnSetProps(){
if(!warnedSetProps){
warnedSetProps = true;
warning(
false,
'setProps(...) and replaceProps(...) are deprecated. ' + 
'Instead, call React.render again at the top level.');}}


























var ReactClassInterface={







mixins:SpecPolicy.DEFINE_MANY,








statics:SpecPolicy.DEFINE_MANY,







propTypes:SpecPolicy.DEFINE_MANY,







contextTypes:SpecPolicy.DEFINE_MANY,







childContextTypes:SpecPolicy.DEFINE_MANY,













getDefaultProps:SpecPolicy.DEFINE_MANY_MERGED,















getInitialState:SpecPolicy.DEFINE_MANY_MERGED,





getChildContext:SpecPolicy.DEFINE_MANY_MERGED,

















render:SpecPolicy.DEFINE_ONCE,












componentWillMount:SpecPolicy.DEFINE_MANY,











componentDidMount:SpecPolicy.DEFINE_MANY,




















componentWillReceiveProps:SpecPolicy.DEFINE_MANY,





















shouldComponentUpdate:SpecPolicy.DEFINE_ONCE,
















componentWillUpdate:SpecPolicy.DEFINE_MANY,













componentDidUpdate:SpecPolicy.DEFINE_MANY,












componentWillUnmount:SpecPolicy.DEFINE_MANY,















updateComponent:SpecPolicy.OVERRIDE_BASE};












var RESERVED_SPEC_KEYS={
displayName:function(Constructor,displayName){
Constructor.displayName = displayName;},

mixins:function(Constructor,mixins){
if(mixins){
for(var i=0;i < mixins.length;i++) {
mixSpecIntoComponent(Constructor,mixins[i]);}}},



childContextTypes:function(Constructor,childContextTypes){
if(__DEV__){
validateTypeDef(
Constructor,
childContextTypes,
ReactPropTypeLocations.childContext);}


Constructor.childContextTypes = assign(
{},
Constructor.childContextTypes,
childContextTypes);},


contextTypes:function(Constructor,contextTypes){
if(__DEV__){
validateTypeDef(
Constructor,
contextTypes,
ReactPropTypeLocations.context);}


Constructor.contextTypes = assign(
{},
Constructor.contextTypes,
contextTypes);},






getDefaultProps:function(Constructor,getDefaultProps){
if(Constructor.getDefaultProps){
Constructor.getDefaultProps = createMergedResultFunction(
Constructor.getDefaultProps,
getDefaultProps);}else 

{
Constructor.getDefaultProps = getDefaultProps;}},


propTypes:function(Constructor,propTypes){
if(__DEV__){
validateTypeDef(
Constructor,
propTypes,
ReactPropTypeLocations.prop);}


Constructor.propTypes = assign(
{},
Constructor.propTypes,
propTypes);},


statics:function(Constructor,statics){
mixStaticSpecIntoComponent(Constructor,statics);}};



function validateTypeDef(Constructor,typeDef,location){
for(var propName in typeDef) {
if(typeDef.hasOwnProperty(propName)){


warning(
typeof typeDef[propName] === 'function',
'%s: %s type `%s` is invalid; it must be a function, usually from ' + 
'React.PropTypes.',
Constructor.displayName || 'ReactClass',
ReactPropTypeLocationNames[location],
propName);}}}





function validateMethodOverride(proto,name){
var specPolicy=ReactClassInterface.hasOwnProperty(name)?
ReactClassInterface[name]:
null;


if(ReactClassMixin.hasOwnProperty(name)){
invariant(
specPolicy === SpecPolicy.OVERRIDE_BASE,
'ReactClassInterface: You are attempting to override ' + 
'`%s` from your class specification. Ensure that your method names ' + 
'do not overlap with React methods.',
name);}




if(proto.hasOwnProperty(name)){
invariant(
specPolicy === SpecPolicy.DEFINE_MANY || 
specPolicy === SpecPolicy.DEFINE_MANY_MERGED,
'ReactClassInterface: You are attempting to define ' + 
'`%s` on your component more than once. This conflict may be due ' + 
'to a mixin.',
name);}}








function mixSpecIntoComponent(Constructor,spec){
if(!spec){
return;}


invariant(
typeof spec !== 'function',
'ReactClass: You\'re attempting to ' + 
'use a component class as a mixin. Instead, just use a regular object.');

invariant(
!ReactElement.isValidElement(spec),
'ReactClass: You\'re attempting to ' + 
'use a component as a mixin. Instead, just use a regular object.');


var proto=Constructor.prototype;




if(spec.hasOwnProperty(MIXINS_KEY)){
RESERVED_SPEC_KEYS.mixins(Constructor,spec.mixins);}


for(var name in spec) {
if(!spec.hasOwnProperty(name)){
continue;}


if(name === MIXINS_KEY){

continue;}


var property=spec[name];
validateMethodOverride(proto,name);

if(RESERVED_SPEC_KEYS.hasOwnProperty(name)){
RESERVED_SPEC_KEYS[name](Constructor,property);}else 
{




var isReactClassMethod=
ReactClassInterface.hasOwnProperty(name);
var isAlreadyDefined=proto.hasOwnProperty(name);
var isFunction=typeof property === 'function';
var shouldAutoBind=
isFunction && 
!isReactClassMethod && 
!isAlreadyDefined;

if(shouldAutoBind){
if(!proto.__reactAutoBindMap){
proto.__reactAutoBindMap = {};}

proto.__reactAutoBindMap[name] = property;
proto[name] = property;}else 
{
if(isAlreadyDefined){
var specPolicy=ReactClassInterface[name];


invariant(
isReactClassMethod && (
specPolicy === SpecPolicy.DEFINE_MANY_MERGED || 
specPolicy === SpecPolicy.DEFINE_MANY),

'ReactClass: Unexpected spec policy %s for key %s ' + 
'when mixing in component specs.',
specPolicy,
name);




if(specPolicy === SpecPolicy.DEFINE_MANY_MERGED){
proto[name] = createMergedResultFunction(proto[name],property);}else 
if(specPolicy === SpecPolicy.DEFINE_MANY){
proto[name] = createChainedFunction(proto[name],property);}}else 

{
proto[name] = property;
if(__DEV__){


if(typeof property === 'function' && spec.displayName){
proto[name].displayName = spec.displayName + '_' + name;}}}}}}}








function mixStaticSpecIntoComponent(Constructor,statics){
if(!statics){
return;}

for(var name in statics) {
var property=statics[name];
if(!statics.hasOwnProperty(name)){
continue;}


var isReserved=(name in RESERVED_SPEC_KEYS);
invariant(
!isReserved,
'ReactClass: You are attempting to define a reserved ' + 
'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' + 
'as an instance property instead; it will still be accessible on the ' + 
'constructor.',
name);


var isInherited=(name in Constructor);
invariant(
!isInherited,
'ReactClass: You are attempting to define ' + 
'`%s` on your component more than once. This conflict may be ' + 
'due to a mixin.',
name);

Constructor[name] = property;}}










function mergeIntoWithNoDuplicateKeys(one,two){
invariant(
one && two && typeof one === 'object' && typeof two === 'object',
'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.');


for(var key in two) {
if(two.hasOwnProperty(key)){
invariant(
one[key] === undefined,
'mergeIntoWithNoDuplicateKeys(): ' + 
'Tried to merge two objects with the same key: `%s`. This conflict ' + 
'may be due to a mixin; in particular, this may be caused by two ' + 
'getInitialState() or getDefaultProps() methods returning objects ' + 
'with clashing keys.',
key);

one[key] = two[key];}}


return one;}










function createMergedResultFunction(one,two){
return function mergedResult(){
var a=one.apply(this,arguments);
var b=two.apply(this,arguments);
if(a == null){
return b;}else 
if(b == null){
return a;}

var c={};
mergeIntoWithNoDuplicateKeys(c,a);
mergeIntoWithNoDuplicateKeys(c,b);
return c;};}











function createChainedFunction(one,two){
return function chainedFunction(){
one.apply(this,arguments);
two.apply(this,arguments);};}










function bindAutoBindMethod(component,method){
var boundMethod=method.bind(component);
if(__DEV__){
boundMethod.__reactBoundContext = component;
boundMethod.__reactBoundMethod = method;
boundMethod.__reactBoundArguments = null;
var componentName=component.constructor.displayName;
var _bind=boundMethod.bind;

boundMethod.bind = function(newThis){for(var _len=arguments.length,args=Array(_len > 1?_len - 1:0),_key=1;_key < _len;_key++) {args[_key - 1] = arguments[_key];}



if(newThis !== component && newThis !== null){
warning(
false,
'bind(): React component methods may only be bound to the ' + 
'component instance. See %s',
componentName);}else 

if(!args.length){
warning(
false,
'bind(): You are binding a component method to the component. ' + 
'React does this for you automatically in a high-performance ' + 
'way, so you can safely remove this call. See %s',
componentName);

return boundMethod;}

var reboundMethod=_bind.apply(boundMethod,arguments);
reboundMethod.__reactBoundContext = component;
reboundMethod.__reactBoundMethod = method;
reboundMethod.__reactBoundArguments = args;
return reboundMethod;};}



return boundMethod;}







function bindAutoBindMethods(component){
for(var autoBindKey in component.__reactAutoBindMap) {
if(component.__reactAutoBindMap.hasOwnProperty(autoBindKey)){
var method=component.__reactAutoBindMap[autoBindKey];
component[autoBindKey] = bindAutoBindMethod(
component,
ReactErrorUtils.guard(
method,
component.constructor.displayName + '.' + autoBindKey));}}}










var ReactClassMixin={





replaceState:function(newState,callback){
this.updater.enqueueReplaceState(this,newState);
if(callback){
this.updater.enqueueCallback(this,callback);}},









isMounted:function(){
return this.updater.isMounted(this);},











setProps:function(partialProps,callback){
if(__DEV__){
warnSetProps();}

this.updater.enqueueSetProps(this,partialProps);
if(callback){
this.updater.enqueueCallback(this,callback);}},












replaceProps:function(newProps,callback){
if(__DEV__){
warnSetProps();}

this.updater.enqueueReplaceProps(this,newProps);
if(callback){
this.updater.enqueueCallback(this,callback);}}};




var ReactClassComponent=function(){};
assign(
ReactClassComponent.prototype,
ReactComponent.prototype,
ReactClassMixin);







var ReactClass={








createClass:function(spec){
var Constructor=function(props,context,updater){



if(__DEV__){
warning(
this instanceof Constructor,
'Something is calling a React component directly. Use a factory or ' + 
'JSX instead. See: https://fb.me/react-legacyfactory');}




if(this.__reactAutoBindMap){
bindAutoBindMethods(this);}


this.props = props;
this.context = context;
this.refs = emptyObject;
this.updater = updater || ReactNoopUpdateQueue;

this.state = null;




var initialState=this.getInitialState?this.getInitialState():null;
if(__DEV__){

if(typeof initialState === 'undefined' && 
this.getInitialState._isMockFunction){


initialState = null;}}


invariant(
typeof initialState === 'object' && !Array.isArray(initialState),
'%s.getInitialState(): must return an object or null',
Constructor.displayName || 'ReactCompositeComponent');


this.state = initialState;};

Constructor.prototype = new ReactClassComponent();
Constructor.prototype.constructor = Constructor;

injectedMixins.forEach(
mixSpecIntoComponent.bind(null,Constructor));


mixSpecIntoComponent(Constructor,spec);


if(Constructor.getDefaultProps){
Constructor.defaultProps = Constructor.getDefaultProps();}


if(__DEV__){




if(Constructor.getDefaultProps){
Constructor.getDefaultProps.isReactClassApproved = {};}

if(Constructor.prototype.getInitialState){
Constructor.prototype.getInitialState.isReactClassApproved = {};}}



invariant(
Constructor.prototype.render,
'createClass(...): Class specification must implement a `render` method.');


if(__DEV__){
warning(
!Constructor.prototype.componentShouldUpdate,
'%s has a method called ' + 
'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 
'The name is phrased as a question because the function is ' + 
'expected to return a value.',
spec.displayName || 'A component');

warning(
!Constructor.prototype.componentWillRecieveProps,
'%s has a method called ' + 
'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
spec.displayName || 'A component');}




for(var methodName in ReactClassInterface) {
if(!Constructor.prototype[methodName]){
Constructor.prototype[methodName] = null;}}



return Constructor;},


injection:{
injectMixin:function(mixin){
injectedMixins.push(mixin);}}};





module.exports = ReactClass;
});
__d('ReactComponent',["ReactNoopUpdateQueue","emptyObject","invariant","warning"],function(global, require, module, exports) {  'use strict';












var ReactNoopUpdateQueue=require('ReactNoopUpdateQueue');

var emptyObject=require('emptyObject');
var invariant=require('invariant');
var warning=require('warning');




function ReactComponent(props,context,updater){
this.props = props;
this.context = context;
this.refs = emptyObject;


this.updater = updater || ReactNoopUpdateQueue;}



























ReactComponent.prototype.setState = function(partialState,callback){
invariant(
typeof partialState === 'object' || 
typeof partialState === 'function' || 
partialState == null,
'setState(...): takes an object of state variables to update or a ' + 
'function which returns an object of state variables.');

if(__DEV__){
warning(
partialState != null,
'setState(...): You passed an undefined or null state object; ' + 
'instead, use forceUpdate().');}


this.updater.enqueueSetState(this,partialState);
if(callback){
this.updater.enqueueCallback(this,callback);}};

















ReactComponent.prototype.forceUpdate = function(callback){
this.updater.enqueueForceUpdate(this);
if(callback){
this.updater.enqueueCallback(this,callback);}};








if(__DEV__){
var deprecatedAPIs={
getDOMNode:[
'getDOMNode',
'Use React.findDOMNode(component) instead.'],

isMounted:[
'isMounted',
'Instead, make sure to clean up subscriptions and pending requests in ' + 
'componentWillUnmount to prevent memory leaks.'],

replaceProps:[
'replaceProps',
'Instead, call React.render again at the top level.'],

replaceState:[
'replaceState',
'Refactor your code to use setState instead (see ' + 
'https://github.com/facebook/react/issues/3236).'],

setProps:[
'setProps',
'Instead, call React.render again at the top level.']};


var defineDeprecationWarning=function(methodName,info){
try{
Object.defineProperty(ReactComponent.prototype,methodName,{
get:function(){
warning(
false,
'%s(...) is deprecated in plain JavaScript React classes. %s',
info[0],
info[1]);

return undefined;}});}


catch(x) {}};



for(var fnName in deprecatedAPIs) {
if(deprecatedAPIs.hasOwnProperty(fnName)){
defineDeprecationWarning(fnName,deprecatedAPIs[fnName]);}}}




module.exports = ReactComponent;
});
__d('ReactNoopUpdateQueue',["warning"],function(global, require, module, exports) {  'use strict';












var warning=require('warning');

function warnTDZ(publicInstance,callerName){
if(__DEV__){
warning(
false,
'%s(...): Can only update a mounted or mounting component. ' + 
'This usually means you called %s() on an unmounted component. ' + 
'This is a no-op. Please check the code for the %s component.',
callerName,
callerName,
publicInstance.constructor && publicInstance.constructor.displayName || '');}}







var ReactNoopUpdateQueue={








isMounted:function(publicInstance){
return false;},










enqueueCallback:function(publicInstance,callback){},














enqueueForceUpdate:function(publicInstance){
warnTDZ(publicInstance,'forceUpdate');},













enqueueReplaceState:function(publicInstance,completeState){
warnTDZ(publicInstance,'replaceState');},












enqueueSetState:function(publicInstance,partialState){
warnTDZ(publicInstance,'setState');},









enqueueSetProps:function(publicInstance,partialProps){
warnTDZ(publicInstance,'setProps');},









enqueueReplaceProps:function(publicInstance,props){
warnTDZ(publicInstance,'replaceProps');}};




module.exports = ReactNoopUpdateQueue;
});
__d('emptyObject',[],function(global, require, module, exports) {  "use strict";












var emptyObject={};

if(__DEV__){
Object.freeze(emptyObject);}


module.exports = emptyObject;
});
__d('ReactErrorUtils',[],function(global, require, module, exports) {  'use strict';













var ReactErrorUtils={









guard:function(func,name){
return func;}};



module.exports = ReactErrorUtils;
});
__d('ReactPropTypeLocations',["keyMirror"],function(global, require, module, exports) {  'use strict';












var keyMirror=require('keyMirror');

var ReactPropTypeLocations=keyMirror({
prop:null,
context:null,
childContext:null});


module.exports = ReactPropTypeLocations;
});
__d('keyMirror',["invariant"],function(global, require, module, exports) {  'use strict';













var invariant=require('invariant');



















var keyMirror=function(obj){
var ret={};
var key;
invariant(
obj instanceof Object && !Array.isArray(obj),
'keyMirror(...): Argument must be an object.');

for(key in obj) {
if(!obj.hasOwnProperty(key)){
continue;}

ret[key] = key;}

return ret;};


module.exports = keyMirror;
});
__d('ReactPropTypeLocationNames',[],function(global, require, module, exports) {  'use strict';












var ReactPropTypeLocationNames={};

if(__DEV__){
ReactPropTypeLocationNames = {
prop:'prop',
context:'context',
childContext:'child context'};}



module.exports = ReactPropTypeLocationNames;
});
__d('keyOf',[],function(global, require, module, exports) {  var 




















keyOf=function(oneKeyObj){
var key;
for(key in oneKeyObj) {
if(!oneKeyObj.hasOwnProperty(key)){
continue;}

return key;}

return null;};



module.exports = keyOf;
});
__d('ReactElementValidator',["ReactElement","ReactFragment","ReactPropTypeLocations","ReactPropTypeLocationNames","ReactCurrentOwner","getIteratorFn","invariant","warning"],function(global, require, module, exports) {  'use strict';



















var ReactElement=require('ReactElement');
var ReactFragment=require('ReactFragment');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');
var ReactCurrentOwner=require('ReactCurrentOwner');

var getIteratorFn=require('getIteratorFn');
var invariant=require('invariant');
var warning=require('warning');

function getDeclarationErrorAddendum(){
if(ReactCurrentOwner.current){
var name=ReactCurrentOwner.current.getName();
if(name){
return ' Check the render method of `' + name + '`.';}}


return '';}







var ownerHasKeyUseWarning={};

var loggedTypeFailures={};

var NUMERIC_PROPERTY_REGEX=/^\d+$/;







function getName(instance){
var publicInstance=instance && instance.getPublicInstance();
if(!publicInstance){
return undefined;}

var constructor=publicInstance.constructor;
if(!constructor){
return undefined;}

return constructor.displayName || constructor.name || undefined;}








function getCurrentOwnerDisplayName(){
var current=ReactCurrentOwner.current;
return (
current && getName(current) || undefined);}













function validateExplicitKey(element,parentType){
if(element._store.validated || element.key != null){
return;}

element._store.validated = true;

var addenda=getAddendaForKeyUse('uniqueKey',element,parentType);
if(addenda === null){

return;}

warning(
false,
'Each child in an array or iterator should have a unique "key" prop.' + 
'%s%s%s',
addenda.parentOrOwner || '',
addenda.childOwner || '',
addenda.url || '');}












function validatePropertyKey(name,element,parentType){
if(!NUMERIC_PROPERTY_REGEX.test(name)){
return;}

var addenda=getAddendaForKeyUse('numericKeys',element,parentType);
if(addenda === null){

return;}

warning(
false,
'Child objects should have non-numeric keys so ordering is preserved.' + 
'%s%s%s',
addenda.parentOrOwner || '',
addenda.childOwner || '',
addenda.url || '');}













function getAddendaForKeyUse(messageType,element,parentType){
var ownerName=getCurrentOwnerDisplayName();
var parentName=typeof parentType === 'string'?
parentType:parentType.displayName || parentType.name;

var useName=ownerName || parentName;
var memoizer=ownerHasKeyUseWarning[messageType] || (
ownerHasKeyUseWarning[messageType] = {});

if(memoizer[useName]){
return null;}

memoizer[useName] = true;

var addenda={
parentOrOwner:
ownerName?' Check the render method of ' + ownerName + '.':
parentName?' Check the React.render call using <' + parentName + '>.':
null,
url:' See https://fb.me/react-warning-keys for more information.',
childOwner:null};





if(element && 
element._owner && 
element._owner !== ReactCurrentOwner.current){

addenda.childOwner = ' It was passed a child from ' + 
getName(element._owner) + '.';}


return addenda;}











function validateChildKeys(node,parentType){
if(Array.isArray(node)){
for(var i=0;i < node.length;i++) {
var child=node[i];
if(ReactElement.isValidElement(child)){
validateExplicitKey(child,parentType);}}}else 


if(ReactElement.isValidElement(node)){

node._store.validated = true;}else 
if(node){
var iteratorFn=getIteratorFn(node);

if(iteratorFn){
if(iteratorFn !== node.entries){
var iterator=iteratorFn.call(node);
var step;
while(!(step = iterator.next()).done) {
if(ReactElement.isValidElement(step.value)){
validateExplicitKey(step.value,parentType);}}}}else 



if(typeof node === 'object'){
var fragment=ReactFragment.extractIfFragment(node);
for(var key in fragment) {
if(fragment.hasOwnProperty(key)){
validatePropertyKey(key,fragment[key],parentType);}}}}}















function checkPropTypes(componentName,propTypes,props,location){
for(var propName in propTypes) {
if(propTypes.hasOwnProperty(propName)){
var error;



try{


invariant(
typeof propTypes[propName] === 'function',
'%s: %s type `%s` is invalid; it must be a function, usually from ' + 
'React.PropTypes.',
componentName || 'React class',
ReactPropTypeLocationNames[location],
propName);

error = propTypes[propName](props,propName,componentName,location);}
catch(ex) {
error = ex;}

warning(
!error || error instanceof Error,
'%s: type specification of %s `%s` is invalid; the type checker ' + 
'function must return `null` or an `Error` but returned a %s. ' + 
'You may have forgotten to pass an argument to the type checker ' + 
'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 
'shape all require an argument).',
componentName || 'React class',
ReactPropTypeLocationNames[location],
propName,
typeof error);

if(error instanceof Error && !(error.message in loggedTypeFailures)){


loggedTypeFailures[error.message] = true;

var addendum=getDeclarationErrorAddendum();
warning(false,'Failed propType: %s%s',error.message,addendum);}}}}











function validatePropTypes(element){
var componentClass=element.type;
if(typeof componentClass !== 'function'){
return;}

var name=componentClass.displayName || componentClass.name;
if(componentClass.propTypes){
checkPropTypes(
name,
componentClass.propTypes,
element.props,
ReactPropTypeLocations.prop);}


if(typeof componentClass.getDefaultProps === 'function'){
warning(
componentClass.getDefaultProps.isReactClassApproved,
'getDefaultProps is only used on classic React.createClass ' + 
'definitions. Use a static property named `defaultProps` instead.');}}




var ReactElementValidator={

createElement:function(type,props,children){


warning(typeof type === 'string' || typeof type === 'function',
'React.createElement: type should not be null, undefined, boolean, or ' + 
'number. It should be a string (for DOM elements) or a ReactClass ' + 
'(for composite components).%s',
getDeclarationErrorAddendum());


var element=ReactElement.createElement.apply(this,arguments);



if(element == null){
return element;}


for(var i=2;i < arguments.length;i++) {
validateChildKeys(arguments[i],type);}


validatePropTypes(element);

return element;},


createFactory:function(type){
var validatedFactory=ReactElementValidator.createElement.bind(
null,
type);


validatedFactory.type = type;

if(__DEV__){
try{
Object.defineProperty(
validatedFactory,
'type',
{
enumerable:false,
get:function(){
warning(
false,
'Factory.type is deprecated. Access the class directly ' + 
'before passing it to createFactory.');

Object.defineProperty(this,'type',{
value:type});

return type;}});}



catch(x) {}}





return validatedFactory;},


cloneElement:function(element,props,children){
var newElement=ReactElement.cloneElement.apply(this,arguments);
for(var i=2;i < arguments.length;i++) {
validateChildKeys(arguments[i],newElement.type);}

validatePropTypes(newElement);
return newElement;}};




module.exports = ReactElementValidator;
});
__d('ReactNativeDefaultInjection',["InitializeJavaScriptAppEngine","EventPluginHub","EventPluginUtils","IOSDefaultEventPluginOrder","IOSNativeBridgeEventPlugin","NodeHandle","ReactComponentEnvironment","ReactDefaultBatchingStrategy","ReactEmptyComponent","ReactInstanceHandles","ReactNativeComponentEnvironment","ReactNativeGlobalInteractionHandler","ReactNativeGlobalResponderHandler","ReactNativeMount","ReactNativeTextComponent","ReactNativeComponent","ReactUpdates","ResponderEventPlugin","UniversalWorkerNodeHandle","createReactNativeComponentClass","invariant","RCTEventEmitter","RCTLog","JSTimersExecution"],function(global, require, module, exports) {  'use strict';















require('InitializeJavaScriptAppEngine');
var EventPluginHub=require('EventPluginHub');
var EventPluginUtils=require('EventPluginUtils');
var IOSDefaultEventPluginOrder=require('IOSDefaultEventPluginOrder');
var IOSNativeBridgeEventPlugin=require('IOSNativeBridgeEventPlugin');
var NodeHandle=require('NodeHandle');
var ReactComponentEnvironment=require('ReactComponentEnvironment');
var ReactDefaultBatchingStrategy=require('ReactDefaultBatchingStrategy');
var ReactEmptyComponent=require('ReactEmptyComponent');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactNativeComponentEnvironment=require('ReactNativeComponentEnvironment');
var ReactNativeGlobalInteractionHandler=require('ReactNativeGlobalInteractionHandler');
var ReactNativeGlobalResponderHandler=require('ReactNativeGlobalResponderHandler');
var ReactNativeMount=require('ReactNativeMount');
var ReactNativeTextComponent=require('ReactNativeTextComponent');
var ReactNativeComponent=require('ReactNativeComponent');
var ReactUpdates=require('ReactUpdates');
var ResponderEventPlugin=require('ResponderEventPlugin');
var UniversalWorkerNodeHandle=require('UniversalWorkerNodeHandle');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var invariant=require('invariant');


require('RCTEventEmitter');
require('RCTLog');
require('JSTimersExecution');

function inject(){



EventPluginHub.injection.injectEventPluginOrder(IOSDefaultEventPluginOrder);
EventPluginHub.injection.injectInstanceHandle(ReactInstanceHandles);

ResponderEventPlugin.injection.injectGlobalResponderHandler(
ReactNativeGlobalResponderHandler);


ResponderEventPlugin.injection.injectGlobalInteractionHandler(
ReactNativeGlobalInteractionHandler);






EventPluginHub.injection.injectEventPluginsByName({
'ResponderEventPlugin':ResponderEventPlugin,
'IOSNativeBridgeEventPlugin':IOSNativeBridgeEventPlugin});


ReactUpdates.injection.injectReconcileTransaction(
ReactNativeComponentEnvironment.ReactReconcileTransaction);


ReactUpdates.injection.injectBatchingStrategy(
ReactDefaultBatchingStrategy);


ReactComponentEnvironment.injection.injectEnvironment(
ReactNativeComponentEnvironment);



var RCTView=createReactNativeComponentClass({
validAttributes:{},
uiViewClassName:'RCTView'});

ReactEmptyComponent.injection.injectEmptyComponent(RCTView);

EventPluginUtils.injection.injectMount(ReactNativeMount);

ReactNativeComponent.injection.injectTextComponentClass(
ReactNativeTextComponent);

ReactNativeComponent.injection.injectGenericComponentClass(function(tag){

var info='';
if(typeof tag === 'string' && /^[a-z]/.test(tag)){
info += ' Each component name should start with an uppercase letter.';}

invariant(false,'Expected a component class, got %s.%s',tag,info);});


NodeHandle.injection.injectImplementation(UniversalWorkerNodeHandle);}


module.exports = {
inject:inject};
});
__d('InitializeJavaScriptAppEngine',["RCTDebugComponentOwnership","RCTDeviceEventEmitter","PerformanceLogger","regenerator/runtime.js","ExceptionsManager","ErrorUtils","ExceptionsManager","Platform","checkFlowAtRuntime","JSTimers","NativeModules","Promise","XMLHttpRequest","FormData","fetch","Geolocation","WebSocket","BridgeProfiling"],function(global, require, module, exports) {  var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};
























require('RCTDebugComponentOwnership');
require('RCTDeviceEventEmitter');
require('PerformanceLogger');
require('regenerator/runtime.js');

if(typeof GLOBAL === 'undefined'){
GLOBAL = this;}


if(typeof window === 'undefined'){
window = GLOBAL;}


function handleError(e,isFatal){
try{
require('ExceptionsManager').handleException(e,isFatal);}
catch(ee) {
console.log('Failed to print error: ',ee.message);}}


















function polyfillGlobal(name,newValue){var scope=arguments.length <= 2 || arguments[2] === undefined?GLOBAL:arguments[2];
var descriptor=Object.getOwnPropertyDescriptor(scope,name);

if(scope[name] !== undefined){
var backupName='original' + name[0].toUpperCase() + name.substr(1);
Object.defineProperty(scope,backupName,_extends({},descriptor,{value:scope[name]}));}

Object.defineProperty(scope,name,_extends({},descriptor,{value:newValue}));}


function setUpRedBoxErrorHandler(){
var ErrorUtils=require('ErrorUtils');
ErrorUtils.setGlobalHandler(handleError);}


function setUpRedBoxConsoleErrorHandler(){

var ExceptionsManager=require('ExceptionsManager');
var Platform=require('Platform');

if(__DEV__ && Platform.OS === 'ios'){
ExceptionsManager.installConsoleErrorReporter();}}



function setUpFlowChecker(){
if(__DEV__){
var checkFlowAtRuntime=require('checkFlowAtRuntime');
checkFlowAtRuntime();}}










function setUpTimers(){
var JSTimers=require('JSTimers');
GLOBAL.setTimeout = JSTimers.setTimeout;
GLOBAL.setInterval = JSTimers.setInterval;
GLOBAL.setImmediate = JSTimers.setImmediate;
GLOBAL.clearTimeout = JSTimers.clearTimeout;
GLOBAL.clearInterval = JSTimers.clearInterval;
GLOBAL.clearImmediate = JSTimers.clearImmediate;
GLOBAL.cancelAnimationFrame = JSTimers.clearInterval;
GLOBAL.requestAnimationFrame = function(cb){

return JSTimers.requestAnimationFrame(cb);};}



function setUpAlert(){
var RCTAlertManager=require('NativeModules').AlertManager;
if(!GLOBAL.alert){
GLOBAL.alert = function(text){
var alertOpts={
title:'Alert',
message:'' + text,
buttons:[{'cancel':'OK'}]};

RCTAlertManager.alertWithArgs(alertOpts,function(){});};}}




function setUpPromise(){


GLOBAL.Promise = require('Promise');}


function setUpXHR(){


polyfillGlobal('XMLHttpRequest',require('XMLHttpRequest'));
polyfillGlobal('FormData',require('FormData'));

var fetchPolyfill=require('fetch');
polyfillGlobal('fetch',fetchPolyfill.fetch);
polyfillGlobal('Headers',fetchPolyfill.Headers);
polyfillGlobal('Request',fetchPolyfill.Request);
polyfillGlobal('Response',fetchPolyfill.Response);}


function setUpGeolocation(){
GLOBAL.navigator = GLOBAL.navigator || {};
polyfillGlobal('geolocation',require('Geolocation'),GLOBAL.navigator);}


function setUpWebSockets(){
polyfillGlobal('WebSocket',require('WebSocket'));}


function setUpProfile(){
console.profile = console.profile || GLOBAL.nativeTraceBeginSection || function(){};
console.profileEnd = console.profileEnd || GLOBAL.nativeTraceEndSection || function(){};
if(__DEV__){
require('BridgeProfiling').swizzleReactPerf();}}



function setUpProcessEnv(){
GLOBAL.process = GLOBAL.process || {};
GLOBAL.process.env = GLOBAL.process.env || {};
if(!GLOBAL.process.env.NODE_ENV){
GLOBAL.process.env.NODE_ENV = __DEV__?'development':'production';}}



function setUpNumber(){
Number.EPSILON = Number.EPSILON || Math.pow(2,-52);
Number.MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || Math.pow(2,53) - 1;
Number.MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER || -(Math.pow(2,53) - 1);}


setUpRedBoxErrorHandler();
setUpTimers();
setUpAlert();
setUpPromise();
setUpXHR();
setUpRedBoxConsoleErrorHandler();
setUpGeolocation();
setUpWebSockets();
setUpProfile();
setUpProcessEnv();
setUpFlowChecker();
setUpNumber();
});
__d('RCTDebugComponentOwnership',["NativeModules","InspectorUtils","ReactNativeTagHandles"],function(global, require, module, exports) {  'use strict';
















var DebugComponentOwnershipModule=require('NativeModules').DebugComponentOwnershipModule;
var InspectorUtils=require('InspectorUtils');
var ReactNativeTagHandles=require('ReactNativeTagHandles');

function componentToString(component){
return component.getName?component.getName():'Unknown';}


function getRootTagForTag(tag){
var rootNodeID=ReactNativeTagHandles.tagToRootNodeID[tag];
if(!rootNodeID){
return null;}

var rootID=ReactNativeTagHandles.getNativeTopRootIDFromNodeID(rootNodeID);
if(!rootID){
return null;}

return ReactNativeTagHandles.rootNodeIDToTag[rootID];}


module.exports = {








getOwnerHierarchy:function(requestID,tag){
var rootTag=getRootTagForTag(tag);
var instance=InspectorUtils.findInstanceByNativeTag(rootTag,tag);
var ownerHierarchy=instance?
InspectorUtils.getOwnerHierarchy(instance).map(componentToString):
null;
DebugComponentOwnershipModule.receiveOwnershipHierarchy(requestID,tag,ownerHierarchy);}};
});
__d('NativeModules',["BatchedBridge","nativeModulePrefixNormalizer"],function(global, require, module, exports) {  'use strict';












var NativeModules=require('BatchedBridge').RemoteModules;

var nativeModulePrefixNormalizer=require('nativeModulePrefixNormalizer');

nativeModulePrefixNormalizer(NativeModules);

module.exports = NativeModules;
});
__d('BatchedBridge',["MessageQueue"],function(global, require, module, exports) {  'use strict';











var MessageQueue=require('MessageQueue');

var BatchedBridge=new MessageQueue(
__fbBatchedBridgeConfig.remoteModuleConfig,
__fbBatchedBridgeConfig.localModulesConfig);


module.exports = BatchedBridge;
});
__d('MessageQueue',["BridgeProfiling","ErrorUtils","JSTimersExecution","ReactUpdates","invariant","keyMirror","stringifySafe"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _objectWithoutProperties(obj,keys){var target={};for(var i in obj) {if(keys.indexOf(i) >= 0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i] = obj[i];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}














var BridgeProfiling=require('BridgeProfiling');
var ErrorUtils=require('ErrorUtils');
var JSTimersExecution=require('JSTimersExecution');
var ReactUpdates=require('ReactUpdates');

var invariant=require('invariant');
var keyMirror=require('keyMirror');
var stringifySafe=require('stringifySafe');

var MODULE_IDS=0;
var METHOD_IDS=1;
var PARAMS=2;

var SPY_MODE=false;

var MethodTypes=keyMirror({
local:null,
remote:null,
remoteAsync:null});


var guard=function(fn){
try{
fn();}
catch(error) {
ErrorUtils.reportFatalError(error);}};var 



MessageQueue=(function(){

function MessageQueue(remoteModules,localModules,customRequire){var _this=this;_classCallCheck(this,MessageQueue);
this.RemoteModules = {};

this._require = customRequire || require;
this._queue = [[],[],[]];
this._moduleTable = {};
this._methodTable = {};
this._callbacks = [];
this._callbackID = 0;

[
'processBatch',
'invokeCallbackAndReturnFlushedQueue',
'callFunctionReturnFlushedQueue',
'flushedQueue'].
forEach(function(fn){return _this[fn] = _this[fn].bind(_this);});

this._genModules(remoteModules);
localModules && this._genLookupTables(
localModules,this._moduleTable,this._methodTable);

this._debugInfo = {};
this._remoteModuleTable = {};
this._remoteMethodTable = {};
this._genLookupTables(
remoteModules,this._remoteModuleTable,this._remoteMethodTable);}_createClass(MessageQueue,[{key:'processBatch',value:





function processBatch(batch){var _this2=this;
guard(function(){
ReactUpdates.batchedUpdates(function(){
batch.forEach(function(call){
var method=call.method === 'callFunctionReturnFlushedQueue'?
'__callFunction':'__invokeCallback';
guard(function(){return _this2[method].apply(_this2,call.args);});});


_this2.__callImmediates();});



while(JSTimersExecution.immediates.length) {
ReactUpdates.batchedUpdates(function(){
_this2.__callImmediates();});}});




return this.__flushedQueue();}},{key:'callFunctionReturnFlushedQueue',value:


function callFunctionReturnFlushedQueue(module,method,args){var _this3=this;
guard(function(){return _this3.__callFunction(module,method,args);});
return this.flushedQueue();}},{key:'invokeCallbackAndReturnFlushedQueue',value:


function invokeCallbackAndReturnFlushedQueue(cbID,args){var _this4=this;
guard(function(){return _this4.__invokeCallback(cbID,args);});
return this.flushedQueue();}},{key:'flushedQueue',value:


function flushedQueue(){
this.__callImmediates();
return this.__flushedQueue();}},{key:'__callImmediates',value:






function __callImmediates(){
BridgeProfiling.profile('JSTimersExecution.callImmediates()');
guard(function(){return JSTimersExecution.callImmediates();});
BridgeProfiling.profileEnd();}},{key:'__flushedQueue',value:


function __flushedQueue(){
var queue=this._queue;
this._queue = [[],[],[]];
return queue[0].length?queue:null;}},{key:'__nativeCall',value:

function __nativeCall(module,method,params,onFail,onSucc){
if(onFail || onSucc){

this._callbackID > 1 << 5 && (
this._debugInfo[this._callbackID >> 5] = null);

this._debugInfo[this._callbackID >> 1] = [module,method];
onFail && params.push(this._callbackID);
this._callbacks[this._callbackID++] = onFail;
onSucc && params.push(this._callbackID);
this._callbacks[this._callbackID++] = onSucc;}

this._queue[MODULE_IDS].push(module);
this._queue[METHOD_IDS].push(method);
this._queue[PARAMS].push(params);
if(__DEV__ && SPY_MODE && isFinite(module)){
console.log('JS->N : ' + this._remoteModuleTable[module] + '.' + 
this._remoteMethodTable[module][method] + '(' + JSON.stringify(params) + ')');}}},{key:'__callFunction',value:



function __callFunction(module,method,args){
BridgeProfiling.profile(function(){return module + '.' + method + '(' + stringifySafe(args) + ')';});
if(isFinite(module)){
method = this._methodTable[module][method];
module = this._moduleTable[module];}

if(__DEV__ && SPY_MODE){
console.log('N->JS : ' + module + '.' + method + '(' + JSON.stringify(args) + ')');}

module = this._require(module);
module[method].apply(module,args);
BridgeProfiling.profileEnd();}},{key:'__invokeCallback',value:


function __invokeCallback(cbID,args){
BridgeProfiling.profile(
function(){return 'MessageQueue.invokeCallback(' + cbID + ', ' + stringifySafe(args) + ')';});
var callback=this._callbacks[cbID];
if(!callback || __DEV__){
var debug=this._debugInfo[cbID >> 1];
var _module2=debug && this._remoteModuleTable[debug[0]];
var method=debug && this._remoteMethodTable[debug[0]][debug[1]];
invariant(
callback,'Callback with id ' + 
cbID + ': ' + _module2 + '.' + method + '() not found');

if(callback && SPY_MODE){
console.log('N->JS : <callback for ' + _module2 + '.' + method + '>(' + JSON.stringify(args) + ')');}}


this._callbacks[cbID & ~1] = null;
this._callbacks[cbID | 1] = null;
callback.apply(null,args);
BridgeProfiling.profileEnd();}},{key:'_genLookupTables',value:





function _genLookupTables(localModules,moduleTable,methodTable){
var moduleNames=Object.keys(localModules);
for(var i=0,l=moduleNames.length;i < l;i++) {
var moduleName=moduleNames[i];
var methods=localModules[moduleName].methods;
var moduleID=localModules[moduleName].moduleID;
moduleTable[moduleID] = moduleName;
methodTable[moduleID] = {};

var methodNames=Object.keys(methods);
for(var j=0,k=methodNames.length;j < k;j++) {
var methodName=methodNames[j];
var methodConfig=methods[methodName];
methodTable[moduleID][methodConfig.methodID] = methodName;}}}},{key:'_genModules',value:




function _genModules(remoteModules){
var moduleNames=Object.keys(remoteModules);
for(var i=0,l=moduleNames.length;i < l;i++) {
var moduleName=moduleNames[i];
var moduleConfig=remoteModules[moduleName];
this.RemoteModules[moduleName] = this._genModule({},moduleConfig);}}},{key:'_genModule',value:



function _genModule(module,moduleConfig){
var methodNames=Object.keys(moduleConfig.methods);
for(var i=0,l=methodNames.length;i < l;i++) {
var methodName=methodNames[i];
var methodConfig=moduleConfig.methods[methodName];
module[methodName] = this._genMethod(
moduleConfig.moduleID,methodConfig.methodID,methodConfig.type);}

Object.assign(module,moduleConfig.constants);
return module;}},{key:'_genMethod',value:


function _genMethod(module,method,type){
if(type === MethodTypes.local){
return null;}


var fn=null;
var self=this;
if(type === MethodTypes.remoteAsync){
fn = function(){for(var _len=arguments.length,args=Array(_len),_key=0;_key < _len;_key++) {args[_key] = arguments[_key];}
return new Promise(function(resolve,reject){
self.__nativeCall(module,method,args,resolve,function(errorData){
var error=createErrorFromErrorData(errorData);
reject(error);});});};}else 



{
fn = function(){for(var _len2=arguments.length,args=Array(_len2),_key2=0;_key2 < _len2;_key2++) {args[_key2] = arguments[_key2];}
var lastArg=args.length > 0?args[args.length - 1]:null;
var secondLastArg=args.length > 1?args[args.length - 2]:null;
var hasSuccCB=typeof lastArg === 'function';
var hasErrorCB=typeof secondLastArg === 'function';
hasErrorCB && invariant(
hasSuccCB,
'Cannot have a non-function arg after a function arg.');

var numCBs=hasSuccCB + hasErrorCB;
var onSucc=hasSuccCB?lastArg:null;
var onFail=hasErrorCB?secondLastArg:null;
args = args.slice(0,args.length - numCBs);
return self.__nativeCall(module,method,args,onFail,onSucc);};}


fn.type = type;
return fn;}}]);return MessageQueue;})();




function createErrorFromErrorData(errorData){var 

message=

errorData.message;var extraErrorInfo=_objectWithoutProperties(errorData,['message']);
var error=new Error(message);
error.framesToPop = 1;
return Object.assign(error,extraErrorInfo);}


module.exports = MessageQueue;
});
__d('BridgeProfiling',["ReactPerf"],function(global, require, module, exports) {  'use strict';












var GLOBAL=GLOBAL || this;
var TRACE_TAG_REACT_APPS=1 << 17;

var _enabled=false;
var _ReactPerf=null;
function ReactPerf(){
if(!_ReactPerf){
_ReactPerf = require('ReactPerf');}

return _ReactPerf;}


var BridgeProfiling={
setEnabled:function(enabled){
_enabled = enabled;

ReactPerf().enableMeasure = enabled;},


profile:function(profileName){
if(_enabled){
profileName = typeof profileName === 'function'?
profileName():profileName;
console.profile(TRACE_TAG_REACT_APPS,profileName);}},



profileEnd:function(){
if(_enabled){
console.profileEnd(TRACE_TAG_REACT_APPS);}},



reactPerfMeasure:function(objName,fnName,func){
return function(component){
if(!_enabled){
return func.apply(this,arguments);}


var name=objName === 'ReactCompositeComponent' && this.getName() || '';
BridgeProfiling.profile(objName + '.' + fnName + '(' + name + ')');
var ret=func.apply(this,arguments);
BridgeProfiling.profileEnd();
return ret;};},



swizzleReactPerf:function(){
ReactPerf().injection.injectMeasure(BridgeProfiling.reactPerfMeasure);}};



module.exports = BridgeProfiling;
});
__d('ReactPerf',[],function(global, require, module, exports) {  'use strict';

















var ReactPerf={




enableMeasure:false,





storedMeasure:_noMeasure,






measureMethods:function(object,objectName,methodNames){
if(__DEV__){
for(var key in methodNames) {
if(!methodNames.hasOwnProperty(key)){
continue;}

object[key] = ReactPerf.measure(
objectName,
methodNames[key],
object[key]);}}},













measure:function(objName,fnName,func){
if(__DEV__){
var measuredFunc=null;
var wrapper=function(){
if(ReactPerf.enableMeasure){
if(!measuredFunc){
measuredFunc = ReactPerf.storedMeasure(objName,fnName,func);}

return measuredFunc.apply(this,arguments);}

return func.apply(this,arguments);};

wrapper.displayName = objName + '_' + fnName;
return wrapper;}

return func;},


injection:{



injectMeasure:function(measure){
ReactPerf.storedMeasure = measure;}}};












function _noMeasure(objName,fnName,func){
return func;}


module.exports = ReactPerf;
});
__d('ErrorUtils',[],function(global, require, module, exports) {  var 











GLOBAL=this;













module.exports = GLOBAL.ErrorUtils;
});
__d('JSTimersExecution',["invariant","keyMirror","performanceNow","warning","JSTimers","JSTimers"],function(global, require, module, exports) {  'use strict';











var invariant=require('invariant');
var keyMirror=require('keyMirror');
var performanceNow=require('performanceNow');
var warning=require('warning');






var JSTimersExecution={
GUID:1,
Type:keyMirror({
setTimeout:null,
setInterval:null,
requestAnimationFrame:null,
setImmediate:null}),



callbacks:[],
types:[],
timerIDs:[],
immediates:[],






callTimer:function(timerID){
warning(timerID <= JSTimersExecution.GUID,'Tried to call timer with ID ' + timerID + ' but no such timer exists');
var timerIndex=JSTimersExecution.timerIDs.indexOf(timerID);





if(timerIndex === -1){
return;}

var type=JSTimersExecution.types[timerIndex];
var callback=JSTimersExecution.callbacks[timerIndex];


if(type === JSTimersExecution.Type.setTimeout || 
type === JSTimersExecution.Type.setImmediate || 
type === JSTimersExecution.Type.requestAnimationFrame){
JSTimersExecution._clearIndex(timerIndex);}


try{
if(type === JSTimersExecution.Type.setTimeout || 
type === JSTimersExecution.Type.setInterval || 
type === JSTimersExecution.Type.setImmediate){
callback();}else 
if(type === JSTimersExecution.Type.requestAnimationFrame){
var currentTime=performanceNow();
callback(currentTime);}else 
{
console.error('Tried to call a callback with invalid type: ' + type);
return;}}

catch(e) {

JSTimersExecution.errors = JSTimersExecution.errors || [];
JSTimersExecution.errors.push(e);}},







callTimers:function(timerIDs){
invariant(timerIDs.length !== 0,'Probably shouldn\'t call "callTimers" with no timerIDs');

JSTimersExecution.errors = null;
timerIDs.forEach(JSTimersExecution.callTimer);

var errors=JSTimersExecution.errors;
if(errors){
var errorCount=errors.length;
if(errorCount > 1){


for(var ii=1;ii < errorCount;ii++) {
require('JSTimers').setTimeout(
(function(error){throw error;}).bind(null,errors[ii]),
0);}}



throw errors[0];}},







callImmediates:function(){
JSTimersExecution.errors = null;
while(JSTimersExecution.immediates.length !== 0) {
JSTimersExecution.callTimer(JSTimersExecution.immediates.shift());}

if(JSTimersExecution.errors){
JSTimersExecution.errors.forEach(function(error){return (
require('JSTimers').setTimeout(function(){throw error;},0));});}},




_clearIndex:function(i){
JSTimersExecution.timerIDs[i] = null;
JSTimersExecution.callbacks[i] = null;
JSTimersExecution.types[i] = null;}};



module.exports = JSTimersExecution;
});
__d('performanceNow',["performance"],function(global, require, module, exports) {  var 











performance=require('performance');






if(!performance || !performance.now){
performance = Date;}


var performanceNow=performance.now.bind(performance);

module.exports = performanceNow;
});
__d('performance',["ExecutionEnvironment"],function(global, require, module, exports) {  "use strict";













var ExecutionEnvironment=require('ExecutionEnvironment');

var performance;

if(ExecutionEnvironment.canUseDOM){
performance = 
window.performance || 
window.msPerformance || 
window.webkitPerformance;}


module.exports = performance || {};
});
__d('ExecutionEnvironment',[],function(global, require, module, exports) {  "use strict";























var canUseDOM=false;







var ExecutionEnvironment={

canUseDOM:canUseDOM,

canUseWorkers:typeof Worker !== 'undefined',

canUseEventListeners:
canUseDOM && !!(window.addEventListener || window.attachEvent),

canUseViewport:canUseDOM && !!window.screen,

isInWorker:!canUseDOM};



module.exports = ExecutionEnvironment;
});
__d('JSTimers',["NativeModules","JSTimersExecution"],function(global, require, module, exports) {  'use strict';













var RCTTiming=require('NativeModules').Timing;
var JSTimersExecution=require('JSTimersExecution');






var JSTimers={
Types:JSTimersExecution.Types,





_getFreeIndex:function(){
var freeIndex=JSTimersExecution.timerIDs.indexOf(null);
if(freeIndex === -1){
freeIndex = JSTimersExecution.timerIDs.length;}

return freeIndex;},






setTimeout:function(func,duration){for(var _len=arguments.length,args=Array(_len > 2?_len - 2:0),_key=2;_key < _len;_key++) {args[_key - 2] = arguments[_key];}
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex] = newID;
JSTimersExecution.callbacks[freeIndex] = function(){
return func.apply(undefined,args);};

JSTimersExecution.types[freeIndex] = JSTimersExecution.Type.setTimeout;
RCTTiming.createTimer(newID,duration || 0,Date.now(),false);
return newID;},






setInterval:function(func,duration){for(var _len2=arguments.length,args=Array(_len2 > 2?_len2 - 2:0),_key2=2;_key2 < _len2;_key2++) {args[_key2 - 2] = arguments[_key2];}
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex] = newID;
JSTimersExecution.callbacks[freeIndex] = function(){
return func.apply(undefined,args);};

JSTimersExecution.types[freeIndex] = JSTimersExecution.Type.setInterval;
RCTTiming.createTimer(newID,duration || 0,Date.now(),true);
return newID;},






setImmediate:function(func){for(var _len3=arguments.length,args=Array(_len3 > 1?_len3 - 1:0),_key3=1;_key3 < _len3;_key3++) {args[_key3 - 1] = arguments[_key3];}
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex] = newID;
JSTimersExecution.callbacks[freeIndex] = function(){
return func.apply(undefined,args);};

JSTimersExecution.types[freeIndex] = JSTimersExecution.Type.setImmediate;
JSTimersExecution.immediates.push(newID);
return newID;},





requestAnimationFrame:function(func){
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex] = newID;
JSTimersExecution.callbacks[freeIndex] = func;
JSTimersExecution.types[freeIndex] = JSTimersExecution.Type.requestAnimationFrame;
RCTTiming.createTimer(newID,1,Date.now(),false);
return newID;},


clearTimeout:function(timerID){
JSTimers._clearTimerID(timerID);},


clearInterval:function(timerID){
JSTimers._clearTimerID(timerID);},


clearImmediate:function(timerID){
JSTimers._clearTimerID(timerID);
JSTimersExecution.immediates.splice(
JSTimersExecution.immediates.indexOf(timerID),
1);},



cancelAnimationFrame:function(timerID){
JSTimers._clearTimerID(timerID);},


_clearTimerID:function(timerID){


if(timerID == null){
return;}


var index=JSTimersExecution.timerIDs.indexOf(timerID);

if(index !== -1){
JSTimersExecution._clearIndex(index);
if(JSTimersExecution.types[index] !== JSTimersExecution.Type.setImmediate){
RCTTiming.deleteTimer(timerID);}}}};





module.exports = JSTimers;
});
__d('ReactUpdates',["CallbackQueue","PooledClass","ReactPerf","ReactReconciler","Transaction","Object.assign","invariant"],function(global, require, module, exports) {  'use strict';












var CallbackQueue=require('CallbackQueue');
var PooledClass=require('PooledClass');
var ReactPerf=require('ReactPerf');
var ReactReconciler=require('ReactReconciler');
var Transaction=require('Transaction');

var assign=require('Object.assign');
var invariant=require('invariant');

var dirtyComponents=[];
var asapCallbackQueue=CallbackQueue.getPooled();
var asapEnqueued=false;

var batchingStrategy=null;

function ensureInjected(){
invariant(
ReactUpdates.ReactReconcileTransaction && batchingStrategy,
'ReactUpdates: must inject a reconcile transaction class and batching ' + 
'strategy');}



var NESTED_UPDATES={
initialize:function(){
this.dirtyComponentsLength = dirtyComponents.length;},

close:function(){
if(this.dirtyComponentsLength !== dirtyComponents.length){





dirtyComponents.splice(0,this.dirtyComponentsLength);
flushBatchedUpdates();}else 
{
dirtyComponents.length = 0;}}};




var UPDATE_QUEUEING={
initialize:function(){
this.callbackQueue.reset();},

close:function(){
this.callbackQueue.notifyAll();}};



var TRANSACTION_WRAPPERS=[NESTED_UPDATES,UPDATE_QUEUEING];

function ReactUpdatesFlushTransaction(){
this.reinitializeTransaction();
this.dirtyComponentsLength = null;
this.callbackQueue = CallbackQueue.getPooled();
this.reconcileTransaction = 
ReactUpdates.ReactReconcileTransaction.getPooled();}


assign(
ReactUpdatesFlushTransaction.prototype,
Transaction.Mixin,{
getTransactionWrappers:function(){
return TRANSACTION_WRAPPERS;},


destructor:function(){
this.dirtyComponentsLength = null;
CallbackQueue.release(this.callbackQueue);
this.callbackQueue = null;
ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
this.reconcileTransaction = null;},


perform:function(method,scope,a){


return Transaction.Mixin.perform.call(
this,
this.reconcileTransaction.perform,
this.reconcileTransaction,
method,
scope,
a);}});




PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

function batchedUpdates(callback,a,b,c,d,e){
ensureInjected();
batchingStrategy.batchedUpdates(callback,a,b,c,d,e);}









function mountOrderComparator(c1,c2){
return c1._mountOrder - c2._mountOrder;}


function runBatchedUpdates(transaction){
var len=transaction.dirtyComponentsLength;
invariant(
len === dirtyComponents.length,
'Expected flush transaction\'s stored dirty-components length (%s) to ' + 
'match dirty-components array length (%s).',
len,
dirtyComponents.length);





dirtyComponents.sort(mountOrderComparator);

for(var i=0;i < len;i++) {



var component=dirtyComponents[i];




var callbacks=component._pendingCallbacks;
component._pendingCallbacks = null;

ReactReconciler.performUpdateIfNecessary(
component,
transaction.reconcileTransaction);


if(callbacks){
for(var j=0;j < callbacks.length;j++) {
transaction.callbackQueue.enqueue(
callbacks[j],
component.getPublicInstance());}}}}






var flushBatchedUpdates=function(){




while(dirtyComponents.length || asapEnqueued) {
if(dirtyComponents.length){
var transaction=ReactUpdatesFlushTransaction.getPooled();
transaction.perform(runBatchedUpdates,null,transaction);
ReactUpdatesFlushTransaction.release(transaction);}


if(asapEnqueued){
asapEnqueued = false;
var queue=asapCallbackQueue;
asapCallbackQueue = CallbackQueue.getPooled();
queue.notifyAll();
CallbackQueue.release(queue);}}};



flushBatchedUpdates = ReactPerf.measure(
'ReactUpdates',
'flushBatchedUpdates',
flushBatchedUpdates);






function enqueueUpdate(component){
ensureInjected();







if(!batchingStrategy.isBatchingUpdates){
batchingStrategy.batchedUpdates(enqueueUpdate,component);
return;}


dirtyComponents.push(component);}






function asap(callback,context){
invariant(
batchingStrategy.isBatchingUpdates,
'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where' + 
'updates are not being batched.');

asapCallbackQueue.enqueue(callback,context);
asapEnqueued = true;}


var ReactUpdatesInjection={
injectReconcileTransaction:function(ReconcileTransaction){
invariant(
ReconcileTransaction,
'ReactUpdates: must provide a reconcile transaction class');

ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;},


injectBatchingStrategy:function(_batchingStrategy){
invariant(
_batchingStrategy,
'ReactUpdates: must provide a batching strategy');

invariant(
typeof _batchingStrategy.batchedUpdates === 'function',
'ReactUpdates: must provide a batchedUpdates() function');

invariant(
typeof _batchingStrategy.isBatchingUpdates === 'boolean',
'ReactUpdates: must provide an isBatchingUpdates boolean attribute');

batchingStrategy = _batchingStrategy;}};



var ReactUpdates={






ReactReconcileTransaction:null,

batchedUpdates:batchedUpdates,
enqueueUpdate:enqueueUpdate,
flushBatchedUpdates:flushBatchedUpdates,
injection:ReactUpdatesInjection,
asap:asap};


module.exports = ReactUpdates;
});
__d('CallbackQueue',["PooledClass","Object.assign","invariant"],function(global, require, module, exports) {  'use strict';












var PooledClass=require('PooledClass');

var assign=require('Object.assign');
var invariant=require('invariant');












function CallbackQueue(){
this._callbacks = null;
this._contexts = null;}


assign(CallbackQueue.prototype,{








enqueue:function(callback,context){
this._callbacks = this._callbacks || [];
this._contexts = this._contexts || [];
this._callbacks.push(callback);
this._contexts.push(context);},








notifyAll:function(){
var callbacks=this._callbacks;
var contexts=this._contexts;
if(callbacks){
invariant(
callbacks.length === contexts.length,
'Mismatched list of contexts in callback queue');

this._callbacks = null;
this._contexts = null;
for(var i=0;i < callbacks.length;i++) {
callbacks[i].call(contexts[i]);}

callbacks.length = 0;
contexts.length = 0;}},








reset:function(){
this._callbacks = null;
this._contexts = null;},





destructor:function(){
this.reset();}});




PooledClass.addPoolingTo(CallbackQueue);

module.exports = CallbackQueue;
});
__d('ReactReconciler',["ReactRef"],function(global, require, module, exports) {  'use strict';












var ReactRef=require('ReactRef');





function attachRefs(){
ReactRef.attachRefs(this,this._currentElement);}


var ReactReconciler={











mountComponent:function(internalInstance,rootID,transaction,context){
var markup=internalInstance.mountComponent(rootID,transaction,context);
if(internalInstance._currentElement.ref != null){
transaction.getReactMountReady().enqueue(attachRefs,internalInstance);}

return markup;},








unmountComponent:function(internalInstance){
ReactRef.detachRefs(internalInstance,internalInstance._currentElement);
internalInstance.unmountComponent();},











receiveComponent:function(
internalInstance,nextElement,transaction,context)
{
var prevElement=internalInstance._currentElement;
if(nextElement === prevElement && 
nextElement._owner != null)

{










return;}


var refsChanged=ReactRef.shouldUpdateRefs(
prevElement,
nextElement);


if(refsChanged){
ReactRef.detachRefs(internalInstance,prevElement);}


internalInstance.receiveComponent(nextElement,transaction,context);

if(refsChanged){
transaction.getReactMountReady().enqueue(attachRefs,internalInstance);}},










performUpdateIfNecessary:function(
internalInstance,
transaction)
{
internalInstance.performUpdateIfNecessary(transaction);}};




module.exports = ReactReconciler;
});
__d('ReactRef',["ReactOwner"],function(global, require, module, exports) {  'use strict';












var ReactOwner=require('ReactOwner');

var ReactRef={};

function attachRef(ref,component,owner){
if(typeof ref === 'function'){
ref(component.getPublicInstance());}else 
{

ReactOwner.addComponentAsRefTo(component,ref,owner);}}



function detachRef(ref,component,owner){
if(typeof ref === 'function'){
ref(null);}else 
{

ReactOwner.removeComponentAsRefFrom(component,ref,owner);}}



ReactRef.attachRefs = function(instance,element){
var ref=element.ref;
if(ref != null){
attachRef(ref,instance,element._owner);}};



ReactRef.shouldUpdateRefs = function(prevElement,nextElement){












return (
nextElement._owner !== prevElement._owner || 
nextElement.ref !== prevElement.ref);};



ReactRef.detachRefs = function(instance,element){
var ref=element.ref;
if(ref != null){
detachRef(ref,instance,element._owner);}};



module.exports = ReactRef;
});
__d('ReactOwner',["invariant"],function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');































var ReactOwner={






isValidOwner:function(object){
return !!(
object && 
typeof object.attachRef === 'function' && 
typeof object.detachRef === 'function');},












addComponentAsRefTo:function(component,ref,owner){
invariant(
ReactOwner.isValidOwner(owner),
'addComponentAsRefTo(...): Only a ReactOwner can have refs. This ' + 
'usually means that you\'re trying to add a ref to a component that ' + 
'doesn\'t have an owner (that is, was not created inside of another ' + 
'component\'s `render` method). Try rendering this component inside of ' + 
'a new top-level component which will hold the ref.');

owner.attachRef(ref,component);},











removeComponentAsRefFrom:function(component,ref,owner){
invariant(
ReactOwner.isValidOwner(owner),
'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. This ' + 
'usually means that you\'re trying to remove a ref to a component that ' + 
'doesn\'t have an owner (that is, was not created inside of another ' + 
'component\'s `render` method). Try rendering this component inside of ' + 
'a new top-level component which will hold the ref.');



if(owner.getPublicInstance().refs[ref] === component.getPublicInstance()){
owner.detachRef(ref);}}};





module.exports = ReactOwner;
});
__d('Transaction',["invariant"],function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');






























































var Mixin={







reinitializeTransaction:function(){
this.transactionWrappers = this.getTransactionWrappers();
if(!this.wrapperInitData){
this.wrapperInitData = [];}else 
{
this.wrapperInitData.length = 0;}

this._isInTransaction = false;},


_isInTransaction:false,





getTransactionWrappers:null,

isInTransaction:function(){
return !!this._isInTransaction;},



















perform:function(method,scope,a,b,c,d,e,f){
invariant(
!this.isInTransaction(),
'Transaction.perform(...): Cannot initialize a transaction when there ' + 
'is already an outstanding transaction.');

var errorThrown;
var ret;
try{
this._isInTransaction = true;




errorThrown = true;
this.initializeAll(0);
ret = method.call(scope,a,b,c,d,e,f);
errorThrown = false;}finally 
{
try{
if(errorThrown){


try{
this.closeAll(0);}
catch(err) {}}else 

{


this.closeAll(0);}}finally 

{
this._isInTransaction = false;}}


return ret;},


initializeAll:function(startIndex){
var transactionWrappers=this.transactionWrappers;
for(var i=startIndex;i < transactionWrappers.length;i++) {
var wrapper=transactionWrappers[i];
try{




this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
this.wrapperInitData[i] = wrapper.initialize?
wrapper.initialize.call(this):
null;}finally 
{
if(this.wrapperInitData[i] === Transaction.OBSERVED_ERROR){



try{
this.initializeAll(i + 1);}
catch(err) {}}}}},












closeAll:function(startIndex){
invariant(
this.isInTransaction(),
'Transaction.closeAll(): Cannot close transaction when none are open.');

var transactionWrappers=this.transactionWrappers;
for(var i=startIndex;i < transactionWrappers.length;i++) {
var wrapper=transactionWrappers[i];
var initData=this.wrapperInitData[i];
var errorThrown;
try{




errorThrown = true;
if(initData !== Transaction.OBSERVED_ERROR && wrapper.close){
wrapper.close.call(this,initData);}

errorThrown = false;}finally 
{
if(errorThrown){



try{
this.closeAll(i + 1);}
catch(e) {}}}}




this.wrapperInitData.length = 0;}};



var Transaction={

Mixin:Mixin,




OBSERVED_ERROR:{}};



module.exports = Transaction;
});
__d('stringifySafe',[],function(global, require, module, exports) {  'use strict';
















function stringifySafe(arg){
var ret;
var type=typeof arg;
if(arg === undefined){
ret = 'undefined';}else 
if(arg === null){
ret = 'null';}else 
if(type === 'string'){
ret = '"' + arg + '"';}else 
if(type === 'function'){
try{
ret = arg.toString();}
catch(e) {
ret = '[function unknown]';}}else 

{


try{
ret = JSON.stringify(arg);}
catch(e) {
if(typeof arg.toString === 'function'){
try{
ret = arg.toString();}
catch(E) {}}}}



return ret || '["' + type + '" failed to stringify]';}


module.exports = stringifySafe;
});
__d('nativeModulePrefixNormalizer',[],function(global, require, module, exports) {  'use strict';













function nativeModulePrefixNormalizer(
modules)
{
Object.keys(modules).forEach(function(moduleName){
var strippedName=moduleName.replace(/^(RCT|RK)/,'');
if(modules['RCT' + strippedName] && modules['RK' + strippedName]){
throw new Error(
'Module cannot be registered as both RCT and RK: ' + moduleName);}


if(strippedName !== moduleName){
modules[strippedName] = modules[moduleName];
delete modules[moduleName];}});}




module.exports = nativeModulePrefixNormalizer;
});
__d('InspectorUtils',["ReactInstanceHandles","ReactInstanceMap","ReactNativeMount","ReactNativeTagHandles"],function(global, require, module, exports) {  'use strict';











var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactNativeMount=require('ReactNativeMount');
var ReactNativeTagHandles=require('ReactNativeTagHandles');

function traverseOwnerTreeUp(hierarchy,instance){
if(instance){
hierarchy.unshift(instance);
traverseOwnerTreeUp(hierarchy,instance._currentElement._owner);}}



function findInstance(component,targetID){
if(targetID === findRootNodeID(component)){
return component;}

if(component._renderedComponent){
return findInstance(component._renderedComponent,targetID);}else 
{
for(var key in component._renderedChildren) {
var child=component._renderedChildren[key];
if(ReactInstanceHandles.isAncestorIDOf(findRootNodeID(child),targetID)){
var instance=findInstance(child,targetID);
if(instance){
return instance;}}}}}






function findRootNodeID(component){
var internalInstance=ReactInstanceMap.get(component);
return internalInstance?internalInstance._rootNodeID:component._rootNodeID;}


function findInstanceByNativeTag(rootTag,nativeTag){
var containerID=ReactNativeTagHandles.tagToRootNodeID[rootTag];
var rootInstance=ReactNativeMount._instancesByContainerID[containerID];
var targetID=ReactNativeTagHandles.tagToRootNodeID[nativeTag];
if(!targetID){
return undefined;}

return findInstance(rootInstance,targetID);}


function getOwnerHierarchy(instance){
var hierarchy=[];
traverseOwnerTreeUp(hierarchy,instance);
return hierarchy;}


module.exports = {findInstanceByNativeTag:findInstanceByNativeTag,getOwnerHierarchy:getOwnerHierarchy};
});
__d('ReactInstanceMap',[],function(global, require, module, exports) {  'use strict';




















var ReactInstanceMap={






remove:function(key){
key._reactInternalInstance = undefined;},


get:function(key){
return key._reactInternalInstance;},


has:function(key){
return key._reactInternalInstance !== undefined;},


set:function(key,value){
key._reactInternalInstance = value;}};




module.exports = ReactInstanceMap;
});
__d('ReactNativeMount',["NativeModules","ReactElement","ReactNativeTagHandles","ReactPerf","ReactReconciler","ReactUpdateQueue","ReactUpdates","emptyObject","instantiateReactComponent","shouldUpdateReactComponent","findNodeHandle"],function(global, require, module, exports) {  'use strict';












var RCTUIManager=require('NativeModules').UIManager;

var ReactElement=require('ReactElement');
var ReactNativeTagHandles=require('ReactNativeTagHandles');
var ReactPerf=require('ReactPerf');
var ReactReconciler=require('ReactReconciler');
var ReactUpdateQueue=require('ReactUpdateQueue');
var ReactUpdates=require('ReactUpdates');

var emptyObject=require('emptyObject');
var instantiateReactComponent=require('instantiateReactComponent');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');

function instanceNumberToChildRootID(rootNodeID,instanceNumber){
return rootNodeID + '[' + instanceNumber + ']';}







var TopLevelWrapper=function(){};
TopLevelWrapper.prototype.render = function(){

return this.props;};










function mountComponentIntoNode(
componentInstance,
rootID,
container,
transaction){
var markup=ReactReconciler.mountComponent(
componentInstance,rootID,transaction,emptyObject);

componentInstance._renderedComponent._topLevelWrapper = componentInstance;
ReactNativeMount._mountImageIntoNode(markup,container);}









function batchedMountComponentIntoNode(
componentInstance,
rootID,
container){
var transaction=ReactUpdates.ReactReconcileTransaction.getPooled();
transaction.perform(
mountComponentIntoNode,
null,
componentInstance,
rootID,
container,
transaction);

ReactUpdates.ReactReconcileTransaction.release(transaction);}






var ReactNativeMount={
instanceCount:0,

_instancesByContainerID:{},


findNodeHandle:require('findNodeHandle'),
nativeTagToRootNodeID:function(nativeTag){
return ReactNativeTagHandles.tagToRootNodeID[nativeTag];},






renderComponent:function(
nextElement,
containerTag,
callback)
{
var nextWrappedElement=new ReactElement(
TopLevelWrapper,
null,
null,
null,
nextElement);


var topRootNodeID=ReactNativeTagHandles.tagToRootNodeID[containerTag];
if(topRootNodeID){
var prevComponent=ReactNativeMount._instancesByContainerID[topRootNodeID];
if(prevComponent){
var prevWrappedElement=prevComponent._currentElement;
var prevElement=prevWrappedElement.props;
if(shouldUpdateReactComponent(prevElement,nextElement)){
ReactUpdateQueue.enqueueElementInternal(prevComponent,nextWrappedElement);
if(callback){
ReactUpdateQueue.enqueueCallbackInternal(prevComponent,callback);}

return prevComponent;}else 
{
ReactNativeMount.unmountComponentAtNode(containerTag);}}}




if(!ReactNativeTagHandles.reactTagIsNativeTopRootID(containerTag)){
console.error('You cannot render into anything but a top root');
return;}


var topRootNodeID=ReactNativeTagHandles.allocateRootNodeIDForTag(containerTag);
ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(
topRootNodeID,
containerTag);


var instance=instantiateReactComponent(nextWrappedElement);
ReactNativeMount._instancesByContainerID[topRootNodeID] = instance;

var childRootNodeID=instanceNumberToChildRootID(
topRootNodeID,
ReactNativeMount.instanceCount++);






ReactUpdates.batchedUpdates(
batchedMountComponentIntoNode,
instance,
childRootNodeID,
topRootNodeID);

var component=instance.getPublicInstance();
if(callback){
callback.call(component);}

return component;},






_mountImageIntoNode:ReactPerf.measure(

'ReactComponentBrowserEnvironment',
'mountImageIntoNode',
function(mountImage,containerID){


ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(
mountImage.rootNodeID,
mountImage.tag);

var addChildTags=[mountImage.tag];
var addAtIndices=[0];
RCTUIManager.manageChildren(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(containerID),
null,
null,
addChildTags,
addAtIndices,
null);}),












unmountComponentAtNodeAndRemoveContainer:function(
containerTag)
{
ReactNativeMount.unmountComponentAtNode(containerTag);

RCTUIManager.removeRootView(containerTag);},







unmountComponentAtNode:function(containerTag){
if(!ReactNativeTagHandles.reactTagIsNativeTopRootID(containerTag)){
console.error('You cannot render into anything but a top root');
return false;}


var containerID=ReactNativeTagHandles.tagToRootNodeID[containerTag];
var instance=ReactNativeMount._instancesByContainerID[containerID];
if(!instance){
return false;}

ReactNativeMount.unmountComponentFromNode(instance,containerID);
delete ReactNativeMount._instancesByContainerID[containerID];
return true;},











unmountComponentFromNode:function(
instance,
containerID)
{

ReactReconciler.unmountComponent(instance);
var containerTag=
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(containerID);
RCTUIManager.removeSubviewsFromContainerWithID(containerTag);},


getNode:function(rootNodeID){
return ReactNativeTagHandles.rootNodeIDToTag[rootNodeID];},


getID:function(nativeTag){
return ReactNativeTagHandles.tagToRootNodeID[nativeTag];}};



ReactNativeMount.renderComponent = ReactPerf.measure(
'ReactMount',
'_renderNewRootComponent',
ReactNativeMount.renderComponent);


module.exports = ReactNativeMount;
});
__d('ReactNativeTagHandles',["invariant","warning"],function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');
var warning=require('warning');














var INITIAL_TAG_COUNT=1;
var NATIVE_TOP_ROOT_ID_SEPARATOR='{TOP_LEVEL}';
var ReactNativeTagHandles={
tagsStartAt:INITIAL_TAG_COUNT,
tagCount:INITIAL_TAG_COUNT,

allocateTag:function(){

while(this.reactTagIsNativeTopRootID(ReactNativeTagHandles.tagCount)) {
ReactNativeTagHandles.tagCount++;}

var tag=ReactNativeTagHandles.tagCount;
ReactNativeTagHandles.tagCount++;
return tag;},











associateRootNodeIDWithMountedNodeHandle:function(
rootNodeID,
tag)
{
warning(rootNodeID && tag,'Root node or tag is null when associating');
if(rootNodeID && tag){
ReactNativeTagHandles.tagToRootNodeID[tag] = rootNodeID;
ReactNativeTagHandles.rootNodeIDToTag[rootNodeID] = tag;}},



allocateRootNodeIDForTag:function(tag){
invariant(
this.reactTagIsNativeTopRootID(tag),
'Expect a native root tag, instead got ',tag);

return '.r[' + tag + ']' + NATIVE_TOP_ROOT_ID_SEPARATOR;},


reactTagIsNativeTopRootID:function(reactTag){

return reactTag % 10 === 1;},


getNativeTopRootIDFromNodeID:function(nodeID){
if(!nodeID){
return null;}

var index=nodeID.indexOf(NATIVE_TOP_ROOT_ID_SEPARATOR);
if(index === -1){
return null;}

return nodeID.substr(0,index + NATIVE_TOP_ROOT_ID_SEPARATOR.length);},














mostRecentMountedNodeHandleForRootNodeID:function(
rootNodeID)
{
return ReactNativeTagHandles.rootNodeIDToTag[rootNodeID];},


tagToRootNodeID:[],

rootNodeIDToTag:{}};


module.exports = ReactNativeTagHandles;
});
__d('ReactUpdateQueue',["ReactCurrentOwner","ReactElement","ReactInstanceMap","ReactUpdates","Object.assign","invariant","warning"],function(global, require, module, exports) {  'use strict';












var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactUpdates=require('ReactUpdates');

var assign=require('Object.assign');
var invariant=require('invariant');
var warning=require('warning');

function enqueueUpdate(internalInstance){
ReactUpdates.enqueueUpdate(internalInstance);}


function getInternalInstanceReadyForUpdate(publicInstance,callerName){
if(__DEV__){
warning(
ReactCurrentOwner.current == null,
'%s(...): Cannot update during an existing state transition ' + 
'(such as within `render`). Render methods should be a pure function ' + 
'of props and state.',
callerName);}



var internalInstance=ReactInstanceMap.get(publicInstance);
if(!internalInstance){
if(__DEV__){



warning(
!callerName,
'%s(...): Can only update a mounted or mounting component. ' + 
'This usually means you called %s() on an unmounted component. ' + 
'This is a no-op. Please check the code for the %s component.',
callerName,
callerName,
publicInstance.constructor.displayName);}


return null;}


return internalInstance;}






var ReactUpdateQueue={








isMounted:function(publicInstance){
if(__DEV__){
var owner=ReactCurrentOwner.current;
if(owner !== null){
warning(
owner._warnedAboutRefsInRender,
'%s is accessing isMounted inside its render() function. ' + 
'render() should be a pure function of props and state. It should ' + 
'never access something that requires stale data from the previous ' + 
'render, such as refs. Move this logic to componentDidMount and ' + 
'componentDidUpdate instead.',
owner.getName() || 'A component');

owner._warnedAboutRefsInRender = true;}}


var internalInstance=ReactInstanceMap.get(publicInstance);
if(internalInstance){



return !!internalInstance._renderedComponent;}else 
{
return false;}},











enqueueCallback:function(publicInstance,callback){
invariant(
typeof callback === 'function',
'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + 
'`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 
'isn\'t callable.');

var internalInstance=getInternalInstanceReadyForUpdate(publicInstance);






if(!internalInstance){
return null;}


if(internalInstance._pendingCallbacks){
internalInstance._pendingCallbacks.push(callback);}else 
{
internalInstance._pendingCallbacks = [callback];}





enqueueUpdate(internalInstance);},


enqueueCallbackInternal:function(internalInstance,callback){
invariant(
typeof callback === 'function',
'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + 
'`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 
'isn\'t callable.');

if(internalInstance._pendingCallbacks){
internalInstance._pendingCallbacks.push(callback);}else 
{
internalInstance._pendingCallbacks = [callback];}

enqueueUpdate(internalInstance);},















enqueueForceUpdate:function(publicInstance){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'forceUpdate');


if(!internalInstance){
return;}


internalInstance._pendingForceUpdate = true;

enqueueUpdate(internalInstance);},













enqueueReplaceState:function(publicInstance,completeState){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'replaceState');


if(!internalInstance){
return;}


internalInstance._pendingStateQueue = [completeState];
internalInstance._pendingReplaceState = true;

enqueueUpdate(internalInstance);},












enqueueSetState:function(publicInstance,partialState){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'setState');


if(!internalInstance){
return;}


var queue=
internalInstance._pendingStateQueue || (
internalInstance._pendingStateQueue = []);
queue.push(partialState);

enqueueUpdate(internalInstance);},









enqueueSetProps:function(publicInstance,partialProps){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'setProps');

if(!internalInstance){
return;}

ReactUpdateQueue.enqueueSetPropsInternal(internalInstance,partialProps);},


enqueueSetPropsInternal:function(internalInstance,partialProps){
var topLevelWrapper=internalInstance._topLevelWrapper;
invariant(
topLevelWrapper,
'setProps(...): You called `setProps` on a ' + 
'component with a parent. This is an anti-pattern since props will ' + 
'get reactively updated when rendered. Instead, change the owner\'s ' + 
'`render` method to pass the correct value as props to the component ' + 
'where it is created.');




var wrapElement=topLevelWrapper._pendingElement || 
topLevelWrapper._currentElement;
var element=wrapElement.props;
var props=assign({},element.props,partialProps);
topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(
wrapElement,
ReactElement.cloneAndReplaceProps(element,props));


enqueueUpdate(topLevelWrapper);},









enqueueReplaceProps:function(publicInstance,props){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'replaceProps');

if(!internalInstance){
return;}

ReactUpdateQueue.enqueueReplacePropsInternal(internalInstance,props);},


enqueueReplacePropsInternal:function(internalInstance,props){
var topLevelWrapper=internalInstance._topLevelWrapper;
invariant(
topLevelWrapper,
'replaceProps(...): You called `replaceProps` on a ' + 
'component with a parent. This is an anti-pattern since props will ' + 
'get reactively updated when rendered. Instead, change the owner\'s ' + 
'`render` method to pass the correct value as props to the component ' + 
'where it is created.');




var wrapElement=topLevelWrapper._pendingElement || 
topLevelWrapper._currentElement;
var element=wrapElement.props;
topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(
wrapElement,
ReactElement.cloneAndReplaceProps(element,props));


enqueueUpdate(topLevelWrapper);},


enqueueElementInternal:function(internalInstance,newElement){
internalInstance._pendingElement = newElement;
enqueueUpdate(internalInstance);}};




module.exports = ReactUpdateQueue;
});
__d('instantiateReactComponent',["ReactCompositeComponent","ReactEmptyComponent","ReactNativeComponent","Object.assign","invariant","warning"],function(global, require, module, exports) {  'use strict';













var ReactCompositeComponent=require('ReactCompositeComponent');
var ReactEmptyComponent=require('ReactEmptyComponent');
var ReactNativeComponent=require('ReactNativeComponent');

var assign=require('Object.assign');
var invariant=require('invariant');
var warning=require('warning');


var ReactCompositeComponentWrapper=function(){};
assign(
ReactCompositeComponentWrapper.prototype,
ReactCompositeComponent.Mixin,
{
_instantiateReactComponent:instantiateReactComponent});



function getDeclarationErrorAddendum(owner){
if(owner){
var name=owner.getName();
if(name){
return ' Check the render method of `' + name + '`.';}}


return '';}









function isInternalComponentType(type){
return (
typeof type === 'function' && 
typeof type.prototype !== 'undefined' && 
typeof type.prototype.mountComponent === 'function' && 
typeof type.prototype.receiveComponent === 'function');}










function instantiateReactComponent(node){
var instance;

if(node === null || node === false){
node = ReactEmptyComponent.emptyElement;}


if(typeof node === 'object'){
var element=node;
invariant(
element && (typeof element.type === 'function' || 
typeof element.type === 'string'),
'Element type is invalid: expected a string (for built-in components) ' + 
'or a class/function (for composite components) but got: %s.%s',
element.type == null?element.type:typeof element.type,
getDeclarationErrorAddendum(element._owner));



if(typeof element.type === 'string'){
instance = ReactNativeComponent.createInternalComponent(element);}else 
if(isInternalComponentType(element.type)){



instance = new element.type(element);}else 
{
instance = new ReactCompositeComponentWrapper();}}else 

if(typeof node === 'string' || typeof node === 'number'){
instance = ReactNativeComponent.createInstanceForText(node);}else 
{
invariant(
false,
'Encountered invalid React node of type %s',
typeof node);}



if(__DEV__){
warning(
typeof instance.construct === 'function' && 
typeof instance.mountComponent === 'function' && 
typeof instance.receiveComponent === 'function' && 
typeof instance.unmountComponent === 'function',
'Only React Components can be mounted.');}




instance.construct(node);




instance._mountIndex = 0;
instance._mountImage = null;

if(__DEV__){
instance._isOwnerNecessary = false;
instance._warnedAboutRefsInRender = false;}




if(__DEV__){
if(Object.preventExtensions){
Object.preventExtensions(instance);}}



return instance;}


module.exports = instantiateReactComponent;
});
__d('ReactCompositeComponent',["ReactComponentEnvironment","ReactCurrentOwner","ReactElement","ReactInstanceMap","ReactPerf","ReactPropTypeLocations","ReactPropTypeLocationNames","ReactReconciler","ReactUpdateQueue","Object.assign","emptyObject","invariant","shouldUpdateReactComponent","warning"],function(global, require, module, exports) {  'use strict';












var ReactComponentEnvironment=require('ReactComponentEnvironment');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactPerf=require('ReactPerf');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');
var ReactReconciler=require('ReactReconciler');
var ReactUpdateQueue=require('ReactUpdateQueue');

var assign=require('Object.assign');
var emptyObject=require('emptyObject');
var invariant=require('invariant');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');
var warning=require('warning');

function getDeclarationErrorAddendum(component){
var owner=component._currentElement._owner || null;
if(owner){
var name=owner.getName();
if(name){
return ' Check the render method of `' + name + '`.';}}


return '';}



































var nextMountID=1;




var ReactCompositeComponentMixin={








construct:function(element){
this._currentElement = element;
this._rootNodeID = null;
this._instance = null;


this._pendingElement = null;
this._pendingStateQueue = null;
this._pendingReplaceState = false;
this._pendingForceUpdate = false;

this._renderedComponent = null;

this._context = null;
this._mountOrder = 0;
this._topLevelWrapper = null;


this._pendingCallbacks = null;},











mountComponent:function(rootID,transaction,context){
this._context = context;
this._mountOrder = nextMountID++;
this._rootNodeID = rootID;

var publicProps=this._processProps(this._currentElement.props);
var publicContext=this._processContext(context);

var Component=this._currentElement.type;


var inst=new Component(publicProps,publicContext,ReactUpdateQueue);

if(__DEV__){


warning(
inst.render != null,
'%s(...): No `render` method found on the returned component ' + 
'instance: you may have forgotten to define `render` in your ' + 
'component or you may have accidentally tried to render an element ' + 
'whose type is a function that isn\'t a React component.',
Component.displayName || Component.name || 'Component');}





inst.props = publicProps;
inst.context = publicContext;
inst.refs = emptyObject;
inst.updater = ReactUpdateQueue;

this._instance = inst;


ReactInstanceMap.set(inst,this);

if(__DEV__){



warning(
!inst.getInitialState || 
inst.getInitialState.isReactClassApproved,
'getInitialState was defined on %s, a plain JavaScript class. ' + 
'This is only supported for classes created using React.createClass. ' + 
'Did you mean to define a state property instead?',
this.getName() || 'a component');

warning(
!inst.getDefaultProps || 
inst.getDefaultProps.isReactClassApproved,
'getDefaultProps was defined on %s, a plain JavaScript class. ' + 
'This is only supported for classes created using React.createClass. ' + 
'Use a static property to define defaultProps instead.',
this.getName() || 'a component');

warning(
!inst.propTypes,
'propTypes was defined as an instance property on %s. Use a static ' + 
'property to define propTypes instead.',
this.getName() || 'a component');

warning(
!inst.contextTypes,
'contextTypes was defined as an instance property on %s. Use a ' + 
'static property to define contextTypes instead.',
this.getName() || 'a component');

warning(
typeof inst.componentShouldUpdate !== 'function',
'%s has a method called ' + 
'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 
'The name is phrased as a question because the function is ' + 
'expected to return a value.',
this.getName() || 'A component');

warning(
typeof inst.componentDidUnmount !== 'function',
'%s has a method called ' + 
'componentDidUnmount(). But there is no such lifecycle method. ' + 
'Did you mean componentWillUnmount()?',
this.getName() || 'A component');

warning(
typeof inst.componentWillRecieveProps !== 'function',
'%s has a method called ' + 
'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
this.getName() || 'A component');}



var initialState=inst.state;
if(initialState === undefined){
inst.state = initialState = null;}

invariant(
typeof initialState === 'object' && !Array.isArray(initialState),
'%s.state: must be set to an object or null',
this.getName() || 'ReactCompositeComponent');


this._pendingStateQueue = null;
this._pendingReplaceState = false;
this._pendingForceUpdate = false;

if(inst.componentWillMount){
inst.componentWillMount();


if(this._pendingStateQueue){
inst.state = this._processPendingState(inst.props,inst.context);}}



var renderedElement=this._renderValidatedComponent();

this._renderedComponent = this._instantiateReactComponent(
renderedElement);


var markup=ReactReconciler.mountComponent(
this._renderedComponent,
rootID,
transaction,
this._processChildContext(context));

if(inst.componentDidMount){
transaction.getReactMountReady().enqueue(inst.componentDidMount,inst);}


return markup;},








unmountComponent:function(){
var inst=this._instance;

if(inst.componentWillUnmount){
inst.componentWillUnmount();}


ReactReconciler.unmountComponent(this._renderedComponent);
this._renderedComponent = null;




this._pendingStateQueue = null;
this._pendingReplaceState = false;
this._pendingForceUpdate = false;
this._pendingCallbacks = null;
this._pendingElement = null;



this._context = null;
this._rootNodeID = null;
this._topLevelWrapper = null;




ReactInstanceMap.remove(inst);},
















_maskContext:function(context){
var maskedContext=null;
var Component=this._currentElement.type;
var contextTypes=Component.contextTypes;
if(!contextTypes){
return emptyObject;}

maskedContext = {};
for(var contextName in contextTypes) {
maskedContext[contextName] = context[contextName];}

return maskedContext;},










_processContext:function(context){
var maskedContext=this._maskContext(context);
if(__DEV__){
var Component=this._currentElement.type;
if(Component.contextTypes){
this._checkPropTypes(
Component.contextTypes,
maskedContext,
ReactPropTypeLocations.context);}}



return maskedContext;},







_processChildContext:function(currentContext){
var Component=this._currentElement.type;
var inst=this._instance;
var childContext=inst.getChildContext && inst.getChildContext();
if(childContext){
invariant(
typeof Component.childContextTypes === 'object',
'%s.getChildContext(): childContextTypes must be defined in order to ' + 
'use getChildContext().',
this.getName() || 'ReactCompositeComponent');

if(__DEV__){
this._checkPropTypes(
Component.childContextTypes,
childContext,
ReactPropTypeLocations.childContext);}


for(var name in childContext) {
invariant(
name in Component.childContextTypes,
'%s.getChildContext(): key "%s" is not defined in childContextTypes.',
this.getName() || 'ReactCompositeComponent',
name);}


return assign({},currentContext,childContext);}

return currentContext;},











_processProps:function(newProps){
if(__DEV__){
var Component=this._currentElement.type;
if(Component.propTypes){
this._checkPropTypes(
Component.propTypes,
newProps,
ReactPropTypeLocations.prop);}}



return newProps;},










_checkPropTypes:function(propTypes,props,location){


var componentName=this.getName();
for(var propName in propTypes) {
if(propTypes.hasOwnProperty(propName)){
var error;
try{


invariant(
typeof propTypes[propName] === 'function',
'%s: %s type `%s` is invalid; it must be a function, usually ' + 
'from React.PropTypes.',
componentName || 'React class',
ReactPropTypeLocationNames[location],
propName);

error = propTypes[propName](props,propName,componentName,location);}
catch(ex) {
error = ex;}

if(error instanceof Error){



var addendum=getDeclarationErrorAddendum(this);

if(location === ReactPropTypeLocations.prop){

warning(
false,
'Failed Composite propType: %s%s',
error.message,
addendum);}else 

{
warning(
false,
'Failed Context Types: %s%s',
error.message,
addendum);}}}}},







receiveComponent:function(nextElement,transaction,nextContext){
var prevElement=this._currentElement;
var prevContext=this._context;

this._pendingElement = null;

this.updateComponent(
transaction,
prevElement,
nextElement,
prevContext,
nextContext);},










performUpdateIfNecessary:function(transaction){
if(this._pendingElement != null){
ReactReconciler.receiveComponent(
this,
this._pendingElement || this._currentElement,
transaction,
this._context);}



if(this._pendingStateQueue !== null || this._pendingForceUpdate){
this.updateComponent(
transaction,
this._currentElement,
this._currentElement,
this._context,
this._context);}},



















updateComponent:function(
transaction,
prevParentElement,
nextParentElement,
prevUnmaskedContext,
nextUnmaskedContext)
{
var inst=this._instance;

var nextContext=this._context === nextUnmaskedContext?
inst.context:
this._processContext(nextUnmaskedContext);
var nextProps;


if(prevParentElement === nextParentElement){


nextProps = nextParentElement.props;}else 
{
nextProps = this._processProps(nextParentElement.props);




if(inst.componentWillReceiveProps){
inst.componentWillReceiveProps(nextProps,nextContext);}}



var nextState=this._processPendingState(nextProps,nextContext);

var shouldUpdate=
this._pendingForceUpdate || 
!inst.shouldComponentUpdate || 
inst.shouldComponentUpdate(nextProps,nextState,nextContext);

if(__DEV__){
warning(
typeof shouldUpdate !== 'undefined',
'%s.shouldComponentUpdate(): Returned undefined instead of a ' + 
'boolean value. Make sure to return true or false.',
this.getName() || 'ReactCompositeComponent');}



if(shouldUpdate){
this._pendingForceUpdate = false;

this._performComponentUpdate(
nextParentElement,
nextProps,
nextState,
nextContext,
transaction,
nextUnmaskedContext);}else 

{


this._currentElement = nextParentElement;
this._context = nextUnmaskedContext;
inst.props = nextProps;
inst.state = nextState;
inst.context = nextContext;}},



_processPendingState:function(props,context){
var inst=this._instance;
var queue=this._pendingStateQueue;
var replace=this._pendingReplaceState;
this._pendingReplaceState = false;
this._pendingStateQueue = null;

if(!queue){
return inst.state;}


if(replace && queue.length === 1){
return queue[0];}


var nextState=assign({},replace?queue[0]:inst.state);
for(var i=replace?1:0;i < queue.length;i++) {
var partial=queue[i];
assign(
nextState,
typeof partial === 'function'?
partial.call(inst,nextState,props,context):
partial);}



return nextState;},














_performComponentUpdate:function(
nextElement,
nextProps,
nextState,
nextContext,
transaction,
unmaskedContext)
{
var inst=this._instance;

var hasComponentDidUpdate=Boolean(inst.componentDidUpdate);
var prevProps;
var prevState;
var prevContext;
if(hasComponentDidUpdate){
prevProps = inst.props;
prevState = inst.state;
prevContext = inst.context;}


if(inst.componentWillUpdate){
inst.componentWillUpdate(nextProps,nextState,nextContext);}


this._currentElement = nextElement;
this._context = unmaskedContext;
inst.props = nextProps;
inst.state = nextState;
inst.context = nextContext;

this._updateRenderedComponent(transaction,unmaskedContext);

if(hasComponentDidUpdate){
transaction.getReactMountReady().enqueue(
inst.componentDidUpdate.bind(inst,prevProps,prevState,prevContext),
inst);}},










_updateRenderedComponent:function(transaction,context){
var prevComponentInstance=this._renderedComponent;
var prevRenderedElement=prevComponentInstance._currentElement;
var nextRenderedElement=this._renderValidatedComponent();
if(shouldUpdateReactComponent(prevRenderedElement,nextRenderedElement)){
ReactReconciler.receiveComponent(
prevComponentInstance,
nextRenderedElement,
transaction,
this._processChildContext(context));}else 

{

var thisID=this._rootNodeID;
var prevComponentID=prevComponentInstance._rootNodeID;
ReactReconciler.unmountComponent(prevComponentInstance);

this._renderedComponent = this._instantiateReactComponent(
nextRenderedElement);

var nextMarkup=ReactReconciler.mountComponent(
this._renderedComponent,
thisID,
transaction,
this._processChildContext(context));

this._replaceNodeWithMarkupByID(prevComponentID,nextMarkup);}},






_replaceNodeWithMarkupByID:function(prevComponentID,nextMarkup){
ReactComponentEnvironment.replaceNodeWithMarkupByID(
prevComponentID,
nextMarkup);},






_renderValidatedComponentWithoutOwnerOrContext:function(){
var inst=this._instance;
var renderedComponent=inst.render();
if(__DEV__){

if(typeof renderedComponent === 'undefined' && 
inst.render._isMockFunction){


renderedComponent = null;}}



return renderedComponent;},





_renderValidatedComponent:function(){
var renderedComponent;
ReactCurrentOwner.current = this;
try{
renderedComponent = 
this._renderValidatedComponentWithoutOwnerOrContext();}finally 
{
ReactCurrentOwner.current = null;}

invariant(

renderedComponent === null || renderedComponent === false || 
ReactElement.isValidElement(renderedComponent),
'%s.render(): A valid ReactComponent must be returned. You may have ' + 
'returned undefined, an array or some other invalid object.',
this.getName() || 'ReactCompositeComponent');

return renderedComponent;},










attachRef:function(ref,component){
var inst=this.getPublicInstance();
var refs=inst.refs === emptyObject?inst.refs = {}:inst.refs;
refs[ref] = component.getPublicInstance();},









detachRef:function(ref){
var refs=this.getPublicInstance().refs;
delete refs[ref];},








getName:function(){
var type=this._currentElement.type;
var constructor=this._instance && this._instance.constructor;
return (
type.displayName || constructor && constructor.displayName || 
type.name || constructor && constructor.name || 
null);},











getPublicInstance:function(){
return this._instance;},



_instantiateReactComponent:null};



ReactPerf.measureMethods(
ReactCompositeComponentMixin,
'ReactCompositeComponent',
{
mountComponent:'mountComponent',
updateComponent:'updateComponent',
_renderValidatedComponent:'_renderValidatedComponent'});



var ReactCompositeComponent={

Mixin:ReactCompositeComponentMixin};



module.exports = ReactCompositeComponent;
});
__d('ReactComponentEnvironment',["invariant"],function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');

var injected=false;

var ReactComponentEnvironment={






unmountIDFromEnvironment:null,





replaceNodeWithMarkupByID:null,





processChildrenUpdates:null,

injection:{
injectEnvironment:function(environment){
invariant(
!injected,
'ReactCompositeComponent: injectEnvironment() can only be called once.');

ReactComponentEnvironment.unmountIDFromEnvironment = 
environment.unmountIDFromEnvironment;
ReactComponentEnvironment.replaceNodeWithMarkupByID = 
environment.replaceNodeWithMarkupByID;
ReactComponentEnvironment.processChildrenUpdates = 
environment.processChildrenUpdates;
injected = true;}}};





module.exports = ReactComponentEnvironment;
});
__d('shouldUpdateReactComponent',[],function(global, require, module, exports) {  'use strict';
























function shouldUpdateReactComponent(prevElement,nextElement){
if(prevElement != null && nextElement != null){
var prevType=typeof prevElement;
var nextType=typeof nextElement;
if(prevType === 'string' || prevType === 'number'){
return nextType === 'string' || nextType === 'number';}else 
{
return (
nextType === 'object' && 
prevElement.type === nextElement.type && 
prevElement.key === nextElement.key);}}



return false;}


module.exports = shouldUpdateReactComponent;
});
__d('ReactEmptyComponent',["ReactElement","ReactInstanceMap","invariant"],function(global, require, module, exports) {  'use strict';












var ReactElement=require('ReactElement');
var ReactInstanceMap=require('ReactInstanceMap');

var invariant=require('invariant');

var component;


var nullComponentIDsRegistry={};

var ReactEmptyComponentInjection={
injectEmptyComponent:function(emptyComponent){
component = ReactElement.createFactory(emptyComponent);}};



var ReactEmptyComponentType=function(){};
ReactEmptyComponentType.prototype.componentDidMount = function(){
var internalInstance=ReactInstanceMap.get(this);




if(!internalInstance){
return;}

registerNullComponentID(internalInstance._rootNodeID);};

ReactEmptyComponentType.prototype.componentWillUnmount = function(){
var internalInstance=ReactInstanceMap.get(this);

if(!internalInstance){
return;}

deregisterNullComponentID(internalInstance._rootNodeID);};

ReactEmptyComponentType.prototype.render = function(){
invariant(
component,
'Trying to return null from a render, but no null placeholder component ' + 
'was injected.');

return component();};


var emptyElement=ReactElement.createElement(ReactEmptyComponentType);





function registerNullComponentID(id){
nullComponentIDsRegistry[id] = true;}






function deregisterNullComponentID(id){
delete nullComponentIDsRegistry[id];}






function isNullComponentID(id){
return !!nullComponentIDsRegistry[id];}


var ReactEmptyComponent={
emptyElement:emptyElement,
injection:ReactEmptyComponentInjection,
isNullComponentID:isNullComponentID};


module.exports = ReactEmptyComponent;
});
__d('ReactNativeComponent',["Object.assign","invariant"],function(global, require, module, exports) {  'use strict';












var assign=require('Object.assign');
var invariant=require('invariant');

var autoGenerateWrapperClass=null;
var genericComponentClass=null;

var tagToComponentClass={};
var textComponentClass=null;

var ReactNativeComponentInjection={


injectGenericComponentClass:function(componentClass){
genericComponentClass = componentClass;},



injectTextComponentClass:function(componentClass){
textComponentClass = componentClass;},



injectComponentClasses:function(componentClasses){
assign(tagToComponentClass,componentClasses);}};









function getComponentClassForElement(element){
if(typeof element.type === 'function'){
return element.type;}

var tag=element.type;
var componentClass=tagToComponentClass[tag];
if(componentClass == null){
tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);}

return componentClass;}








function createInternalComponent(element){
invariant(
genericComponentClass,
'There is no registered component for the tag %s',
element.type);

return new genericComponentClass(element.type,element.props);}






function createInstanceForText(text){
return new textComponentClass(text);}






function isTextComponent(component){
return component instanceof textComponentClass;}


var ReactNativeComponent={
getComponentClassForElement:getComponentClassForElement,
createInternalComponent:createInternalComponent,
createInstanceForText:createInstanceForText,
isTextComponent:isTextComponent,
injection:ReactNativeComponentInjection};


module.exports = ReactNativeComponent;
});
__d('findNodeHandle',["ReactCurrentOwner","ReactInstanceMap","ReactNativeTagHandles","invariant","warning"],function(global, require, module, exports) {  'use strict';













var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactNativeTagHandles=require('ReactNativeTagHandles');

var invariant=require('invariant');
var warning=require('warning');































function findNodeHandle(componentOrHandle){
if(__DEV__){
var owner=ReactCurrentOwner.current;
if(owner !== null){
warning(
owner._warnedAboutRefsInRender,
'%s is accessing findNodeHandle inside its render(). ' + 
'render() should be a pure function of props and state. It should ' + 
'never access something that requires stale data from the previous ' + 
'render, such as refs. Move this logic to componentDidMount and ' + 
'componentDidUpdate instead.',
owner.getName() || 'A component');

owner._warnedAboutRefsInRender = true;}}


if(componentOrHandle == null){
return null;}

if(typeof componentOrHandle === 'number'){

return componentOrHandle;}


var component=componentOrHandle;



var internalInstance=ReactInstanceMap.get(component);
if(internalInstance){
return ReactNativeTagHandles.rootNodeIDToTag[internalInstance._rootNodeID];}else 
{
var rootNodeID=component._rootNodeID;
if(rootNodeID){
return ReactNativeTagHandles.rootNodeIDToTag[rootNodeID];}else 
{
invariant(


typeof component === 'object' && 
'_rootNodeID' in component || 


component.render != null && 
typeof component.render === 'function',

'findNodeHandle(...): Argument is not a component ' + 
'(type: %s, keys: %s)',
typeof component,
Object.keys(component));

invariant(
false,
'findNodeHandle(...): Unable to find node handle for unmounted ' + 
'component.');}}}





module.exports = findNodeHandle;
});
__d('RCTDeviceEventEmitter',["EventEmitter"],function(global, require, module, exports) {  'use strict';












var EventEmitter=require('EventEmitter');

var RCTDeviceEventEmitter=new EventEmitter();

module.exports = RCTDeviceEventEmitter;
});
__d('EventEmitter',["EmitterSubscription","ErrorUtils","EventSubscriptionVendor","emptyFunction","invariant"],function(global, require, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}

















var EmitterSubscription=require('EmitterSubscription');
var ErrorUtils=require('ErrorUtils');
var EventSubscriptionVendor=require('EventSubscriptionVendor');
var emptyFunction=require('emptyFunction');
var invariant=require('invariant');var 














EventEmitter=(function(){



function EventEmitter(){_classCallCheck(this,EventEmitter);
this._subscriber = new EventSubscriptionVendor();}_createClass(EventEmitter,[{key:'addListener',value:
















function addListener(
eventType,listener,context){
return this._subscriber.addSubscription(
eventType,
new EmitterSubscription(this._subscriber,listener,context));}},{key:'once',value:












function once(eventType,listener,context){
var emitter=this;
return this.addListener(eventType,function(){
emitter.removeCurrentListener();
listener.apply(context,arguments);});}},{key:'removeAllListeners',value:










function removeAllListeners(eventType){
this._subscriber.removeAllSubscriptions(eventType);}},{key:'removeCurrentListener',value:























function removeCurrentListener(){
invariant(
!!this._currentSubscription,
'Not in an emitting cycle; there is no current subscription');

this._subscriber.removeSubscription(this._currentSubscription);}},{key:'listeners',value:









function listeners(eventType){
var subscriptions=this._subscriber.getSubscriptionsForType(eventType);
return subscriptions?
subscriptions.filter(emptyFunction.thatReturnsTrue).map(
function(subscription){
return subscription.listener;}):

[];}},{key:'emit',value:
















function emit(eventType){
var subscriptions=this._subscriber.getSubscriptionsForType(eventType);
if(subscriptions){
var keys=Object.keys(subscriptions);
for(var ii=0;ii < keys.length;ii++) {
var key=keys[ii];
var subscription=subscriptions[key];


if(subscription){
this._currentSubscription = subscription;

ErrorUtils.applyWithGuard(
subscription.listener,
subscription.context,
Array.prototype.slice.call(arguments,1),
null,
'EventEmitter:' + eventType);}}



this._currentSubscription = null;}}}]);return EventEmitter;})();




module.exports = EventEmitter;
});
__d('EmitterSubscription',["EventSubscription"],function(global, require, module, exports) {  'use strict';var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}


















var EventSubscription=require('EventSubscription');var 




EmitterSubscription=(function(_EventSubscription){_inherits(EmitterSubscription,_EventSubscription);









function EmitterSubscription(subscriber,listener,context){_classCallCheck(this,EmitterSubscription);
_get(Object.getPrototypeOf(EmitterSubscription.prototype),'constructor',this).call(this,subscriber);
this.listener = listener;
this.context = context;}return EmitterSubscription;})(EventSubscription);



module.exports = EmitterSubscription;
});
__d('EventSubscription',[],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var 






















EventSubscription=(function(){





function EventSubscription(subscriber){_classCallCheck(this,EventSubscription);
this.subscriber = subscriber;}_createClass(EventSubscription,[{key:'remove',value:





function remove(){
this.subscriber.removeSubscription(this);}}]);return EventSubscription;})();



module.exports = EventSubscription;
});
__d('EventSubscriptionVendor',["invariant"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}


















var invariant=require('invariant');var 





EventSubscriptionVendor=(function(){

function EventSubscriptionVendor(){_classCallCheck(this,EventSubscriptionVendor);
this._subscriptionsForType = {};
this._currentSubscription = null;}_createClass(EventSubscriptionVendor,[{key:'addSubscription',value:








function addSubscription(
eventType,subscription){
invariant(
subscription.subscriber === this,
'The subscriber of the subscription is incorrectly set.');
if(!this._subscriptionsForType[eventType]){
this._subscriptionsForType[eventType] = [];}

var key=this._subscriptionsForType[eventType].length;
this._subscriptionsForType[eventType].push(subscription);
subscription.eventType = eventType;
subscription.key = key;
return subscription;}},{key:'removeAllSubscriptions',value:








function removeAllSubscriptions(eventType){
if(eventType === undefined){
this._subscriptionsForType = {};}else 
{
delete this._subscriptionsForType[eventType];}}},{key:'removeSubscription',value:









function removeSubscription(subscription){
var eventType=subscription.eventType;
var key=subscription.key;

var subscriptionsForType=this._subscriptionsForType[eventType];
if(subscriptionsForType){
delete subscriptionsForType[key];}}},{key:'getSubscriptionsForType',value:















function getSubscriptionsForType(eventType){
return this._subscriptionsForType[eventType];}}]);return EventSubscriptionVendor;})();



module.exports = EventSubscriptionVendor;
});
__d('PerformanceLogger',["performanceNow"],function(global, require, module, exports) {  'use strict';












var performanceNow=require('performanceNow');

var timespans={};





var PerformanceLogger={
addTimespan:function(key,lengthInMs,description){
if(timespans[key]){
if(__DEV__){
console.log(
'PerformanceLogger: Attempting to add a timespan that already exists ',
key);}


return;}


timespans[key] = {
description:description,
totalTime:lengthInMs};},



startTimespan:function(key,description){
if(timespans[key]){
if(__DEV__){
console.log(
'PerformanceLogger: Attempting to start a timespan that already exists ',
key);}


return;}


timespans[key] = {
description:description,
startTime:performanceNow()};},



stopTimespan:function(key){
if(!timespans[key] || !timespans[key].startTime){
if(__DEV__){
console.log(
'PerformanceLogger: Attempting to end a timespan that has not started ',
key);}


return;}


timespans[key].endTime = performanceNow();
timespans[key].totalTime = 
timespans[key].endTime - timespans[key].startTime;},


clearTimespans:function(){
timespans = {};},


getTimespans:function(){
return timespans;},


hasTimespan:function(key){
return !!timespans[key];},


logTimespans:function(){
for(var key in timespans) {
if(timespans[key].totalTime){
console.log(key + ': ' + timespans[key].totalTime + 'ms');}}},




addTimespans:function(newTimespans,labels){
for(var i=0,l=newTimespans.length;i < l;i += 2) {
var label=labels[i / 2];
PerformanceLogger.addTimespan(
label,
newTimespans[i + 1] - newTimespans[i],
label);}}};





module.exports = PerformanceLogger;
});
__d('regenerator/runtime.js',[],function(global, require, module, exports) {  !









(function(global){
"use strict";

var hasOwn=Object.prototype.hasOwnProperty;
var undefined;
var iteratorSymbol=
typeof Symbol === "function" && Symbol.iterator || "@@iterator";

var inModule=typeof module === "object";
var runtime=global.regeneratorRuntime;
if(runtime){
if(inModule){


module.exports = runtime;}



return;}




runtime = global.regeneratorRuntime = inModule?module.exports:{};

function wrap(innerFn,outerFn,self,tryLocsList){

var generator=Object.create((outerFn || Generator).prototype);
var context=new Context(tryLocsList || []);



generator._invoke = makeInvokeMethod(innerFn,self,context);

return generator;}

runtime.wrap = wrap;











function tryCatch(fn,obj,arg){
try{
return {type:"normal",arg:fn.call(obj,arg)};}
catch(err) {
return {type:"throw",arg:err};}}



var GenStateSuspendedStart="suspendedStart";
var GenStateSuspendedYield="suspendedYield";
var GenStateExecuting="executing";
var GenStateCompleted="completed";



var ContinueSentinel={};





function Generator(){}
function GeneratorFunction(){}
function GeneratorFunctionPrototype(){}

var Gp=GeneratorFunctionPrototype.prototype = Generator.prototype;
GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
GeneratorFunctionPrototype.constructor = GeneratorFunction;
GeneratorFunction.displayName = "GeneratorFunction";



function defineIteratorMethods(prototype){
["next","throw","return"].forEach(function(method){
prototype[method] = function(arg){
return this._invoke(method,arg);};});}




runtime.isGeneratorFunction = function(genFun){
var ctor=typeof genFun === "function" && genFun.constructor;
return ctor?
ctor === GeneratorFunction || 


(ctor.displayName || ctor.name) === "GeneratorFunction":
false;};


runtime.mark = function(genFun){
if(Object.setPrototypeOf){
Object.setPrototypeOf(genFun,GeneratorFunctionPrototype);}else 
{
genFun.__proto__ = GeneratorFunctionPrototype;}

genFun.prototype = Object.create(Gp);
return genFun;};







runtime.awrap = function(arg){
return new AwaitArgument(arg);};


function AwaitArgument(arg){
this.arg = arg;}


function AsyncIterator(generator){
function invoke(method,arg,resolve,reject){
var record=tryCatch(generator[method],generator,arg);
if(record.type === "throw"){
reject(record.arg);}else 
{
var result=record.arg;
var value=result.value;
if(value instanceof AwaitArgument){
return Promise.resolve(value.arg).then(function(value){
invoke("next",value,resolve,reject);},
function(err){
invoke("throw",err,resolve,reject);});}



return Promise.resolve(value).then(function(unwrapped){















result.value = unwrapped;
resolve(result);},
reject);}}



if(typeof process === "object" && process.domain){
invoke = process.domain.bind(invoke);}


var previousPromise;

function enqueue(method,arg){
function callInvokeWithMethodAndArg(){
return new Promise(function(resolve,reject){
invoke(method,arg,resolve,reject);});}



return previousPromise = 












previousPromise?previousPromise.then(
callInvokeWithMethodAndArg,


callInvokeWithMethodAndArg):
callInvokeWithMethodAndArg();}




this._invoke = enqueue;}


defineIteratorMethods(AsyncIterator.prototype);




runtime.async = function(innerFn,outerFn,self,tryLocsList){
var iter=new AsyncIterator(
wrap(innerFn,outerFn,self,tryLocsList));


return runtime.isGeneratorFunction(outerFn)?
iter:
iter.next().then(function(result){
return result.done?result.value:iter.next();});};



function makeInvokeMethod(innerFn,self,context){
var state=GenStateSuspendedStart;

return function invoke(method,arg){
if(state === GenStateExecuting){
throw new Error("Generator is already running");}


if(state === GenStateCompleted){
if(method === "throw"){
throw arg;}




return doneResult();}


while(true) {
var delegate=context.delegate;
if(delegate){
if(method === "return" || 
method === "throw" && delegate.iterator[method] === undefined){


context.delegate = null;



var returnMethod=delegate.iterator["return"];
if(returnMethod){
var record=tryCatch(returnMethod,delegate.iterator,arg);
if(record.type === "throw"){


method = "throw";
arg = record.arg;
continue;}}



if(method === "return"){


continue;}}



var record=tryCatch(
delegate.iterator[method],
delegate.iterator,
arg);


if(record.type === "throw"){
context.delegate = null;



method = "throw";
arg = record.arg;
continue;}





method = "next";
arg = undefined;

var info=record.arg;
if(info.done){
context[delegate.resultName] = info.value;
context.next = delegate.nextLoc;}else 
{
state = GenStateSuspendedYield;
return info;}


context.delegate = null;}


if(method === "next"){
if(state === GenStateSuspendedYield){
context.sent = arg;}else 
{
context.sent = undefined;}}else 


if(method === "throw"){
if(state === GenStateSuspendedStart){
state = GenStateCompleted;
throw arg;}


if(context.dispatchException(arg)){


method = "next";
arg = undefined;}}else 


if(method === "return"){
context.abrupt("return",arg);}


state = GenStateExecuting;

var record=tryCatch(innerFn,self,context);
if(record.type === "normal"){


state = context.done?
GenStateCompleted:
GenStateSuspendedYield;

var info={
value:record.arg,
done:context.done};


if(record.arg === ContinueSentinel){
if(context.delegate && method === "next"){


arg = undefined;}}else 

{
return info;}}else 


if(record.type === "throw"){
state = GenStateCompleted;


method = "throw";
arg = record.arg;}}};}







defineIteratorMethods(Gp);

Gp[iteratorSymbol] = function(){
return this;};


Gp.toString = function(){
return "[object Generator]";};


function pushTryEntry(locs){
var entry={tryLoc:locs[0]};

if(1 in locs){
entry.catchLoc = locs[1];}


if(2 in locs){
entry.finallyLoc = locs[2];
entry.afterLoc = locs[3];}


this.tryEntries.push(entry);}


function resetTryEntry(entry){
var record=entry.completion || {};
record.type = "normal";
delete record.arg;
entry.completion = record;}


function Context(tryLocsList){



this.tryEntries = [{tryLoc:"root"}];
tryLocsList.forEach(pushTryEntry,this);
this.reset(true);}


runtime.keys = function(object){
var keys=[];
for(var key in object) {
keys.push(key);}

keys.reverse();



return function next(){
while(keys.length) {
var key=keys.pop();
if(key in object){
next.value = key;
next.done = false;
return next;}}






next.done = true;
return next;};};



function values(iterable){
if(iterable){
var iteratorMethod=iterable[iteratorSymbol];
if(iteratorMethod){
return iteratorMethod.call(iterable);}


if(typeof iterable.next === "function"){
return iterable;}


if(!isNaN(iterable.length)){
var i=-1,next=function next(){
while(++i < iterable.length) {
if(hasOwn.call(iterable,i)){
next.value = iterable[i];
next.done = false;
return next;}}



next.value = undefined;
next.done = true;

return next;};


return next.next = next;}}




return {next:doneResult};}

runtime.values = values;

function doneResult(){
return {value:undefined,done:true};}


Context.prototype = {
constructor:Context,

reset:function(skipTempReset){
this.prev = 0;
this.next = 0;
this.sent = undefined;
this.done = false;
this.delegate = null;

this.tryEntries.forEach(resetTryEntry);

if(!skipTempReset){
for(var name in this) {

if(name.charAt(0) === "t" && 
hasOwn.call(this,name) && 
!isNaN(+name.slice(1))){
this[name] = undefined;}}}},





stop:function(){
this.done = true;

var rootEntry=this.tryEntries[0];
var rootRecord=rootEntry.completion;
if(rootRecord.type === "throw"){
throw rootRecord.arg;}


return this.rval;},


dispatchException:function(exception){
if(this.done){
throw exception;}


var context=this;
function handle(loc,caught){
record.type = "throw";
record.arg = exception;
context.next = loc;
return !!caught;}


for(var i=this.tryEntries.length - 1;i >= 0;--i) {
var entry=this.tryEntries[i];
var record=entry.completion;

if(entry.tryLoc === "root"){



return handle("end");}


if(entry.tryLoc <= this.prev){
var hasCatch=hasOwn.call(entry,"catchLoc");
var hasFinally=hasOwn.call(entry,"finallyLoc");

if(hasCatch && hasFinally){
if(this.prev < entry.catchLoc){
return handle(entry.catchLoc,true);}else 
if(this.prev < entry.finallyLoc){
return handle(entry.finallyLoc);}}else 


if(hasCatch){
if(this.prev < entry.catchLoc){
return handle(entry.catchLoc,true);}}else 


if(hasFinally){
if(this.prev < entry.finallyLoc){
return handle(entry.finallyLoc);}}else 


{
throw new Error("try statement without catch or finally");}}}},





abrupt:function(type,arg){
for(var i=this.tryEntries.length - 1;i >= 0;--i) {
var entry=this.tryEntries[i];
if(entry.tryLoc <= this.prev && 
hasOwn.call(entry,"finallyLoc") && 
this.prev < entry.finallyLoc){
var finallyEntry=entry;
break;}}



if(finallyEntry && (
type === "break" || 
type === "continue") && 
finallyEntry.tryLoc <= arg && 
arg <= finallyEntry.finallyLoc){


finallyEntry = null;}


var record=finallyEntry?finallyEntry.completion:{};
record.type = type;
record.arg = arg;

if(finallyEntry){
this.next = finallyEntry.finallyLoc;}else 
{
this.complete(record);}


return ContinueSentinel;},


complete:function(record,afterLoc){
if(record.type === "throw"){
throw record.arg;}


if(record.type === "break" || 
record.type === "continue"){
this.next = record.arg;}else 
if(record.type === "return"){
this.rval = record.arg;
this.next = "end";}else 
if(record.type === "normal" && afterLoc){
this.next = afterLoc;}},



finish:function(finallyLoc){
for(var i=this.tryEntries.length - 1;i >= 0;--i) {
var entry=this.tryEntries[i];
if(entry.finallyLoc === finallyLoc){
this.complete(entry.completion,entry.afterLoc);
resetTryEntry(entry);
return ContinueSentinel;}}},




"catch":function(tryLoc){
for(var i=this.tryEntries.length - 1;i >= 0;--i) {
var entry=this.tryEntries[i];
if(entry.tryLoc === tryLoc){
var record=entry.completion;
if(record.type === "throw"){
var thrown=record.arg;
resetTryEntry(entry);}

return thrown;}}





throw new Error("illegal catch attempt");},


delegateYield:function(iterable,resultName,nextLoc){
this.delegate = {
iterator:values(iterable),
resultName:resultName,
nextLoc:nextLoc};


return ContinueSentinel;}};})(






typeof global === "object"?global:
typeof window === "object"?window:
typeof self === "object"?self:this);
});
__d('ExceptionsManager',["NativeModules","loadSourceMap","parseErrorStack","stringifySafe"],function(global, require, module, exports) {  'use strict';












var RCTExceptionsManager=require('NativeModules').ExceptionsManager;

var loadSourceMap=require('loadSourceMap');
var parseErrorStack=require('parseErrorStack');
var stringifySafe=require('stringifySafe');

var sourceMapPromise;

var exceptionID=0;

function reportException(e,isFatal,stack){
var currentExceptionID=++exceptionID;
if(RCTExceptionsManager){
if(!stack){
stack = parseErrorStack(e);}

if(isFatal){
RCTExceptionsManager.reportFatalException(e.message,stack,currentExceptionID);}else 
{
RCTExceptionsManager.reportSoftException(e.message,stack,currentExceptionID);}

if(__DEV__){
(sourceMapPromise = sourceMapPromise || loadSourceMap()).
then(function(map){
var prettyStack=parseErrorStack(e,map);
RCTExceptionsManager.updateExceptionMessage(e.message,prettyStack,currentExceptionID);}).

catch(function(error){


console.warn('Unable to load source map: ' + error.message);});}}}





function handleException(e,isFatal){




if(!e.message){
e = new Error(e);}

var stack=parseErrorStack(e);
var msg=
'Error: ' + e.message + 
'\n stack: \n' + stackToString(stack) + 
'\n URL: ' + e.sourceURL + 
'\n line: ' + e.line + 
'\n message: ' + e.message;
if(console.errorOriginal){
console.errorOriginal(msg);}else 
{
console.error(msg);}

reportException(e,isFatal,stack);}






function installConsoleErrorReporter(){
if(console.reportException){
return;}

console.reportException = reportException;
console.errorOriginal = console.error.bind(console);
console.error = function reactConsoleError(){



console.errorOriginal.apply(null,arguments);
if(!console.reportErrorsAsExceptions){
return;}

var str=Array.prototype.map.call(arguments,stringifySafe).join(', ');
if(str.slice(0,10) === '"Warning: '){



return;}

var error=new Error('console.error: ' + str);
error.framesToPop = 1;
reportException(error,false);};

if(console.reportErrorsAsExceptions === undefined){
console.reportErrorsAsExceptions = true;}}



function stackToString(stack){
var maxLength=Math.max.apply(null,stack.map(function(frame){return frame.methodName.length;}));
return stack.map(function(frame){return stackFrameToString(frame,maxLength);}).join('\n');}


function stackFrameToString(stackFrame,maxLength){
var fileNameParts=stackFrame.file.split('/');
var fileName=fileNameParts[fileNameParts.length - 1];

if(fileName.length > 18){
fileName = fileName.substr(0,17) + '\u2026';}


var spaces=fillSpaces(maxLength - stackFrame.methodName.length);
return '  ' + stackFrame.methodName + spaces + '  ' + fileName + ':' + stackFrame.lineNumber;}


function fillSpaces(n){
return new Array(n + 1).join(' ');}


module.exports = {handleException:handleException,installConsoleErrorReporter:installConsoleErrorReporter};
});
__d('loadSourceMap',["Promise","NativeModules","SourceMap","react-native/Libraries/JavaScriptAppEngine/Initialization/source-map-url.js"],function(global, require, module, exports) {  'use strict';













var Promise=require('Promise');
var NativeModules=require('NativeModules');
var SourceMapConsumer=require('SourceMap').SourceMapConsumer;
var SourceMapURL=require('react-native/Libraries/JavaScriptAppEngine/Initialization/source-map-url.js');

var RCTSourceCode=NativeModules.SourceCode;
var RCTNetworking=NativeModules.Networking;

function loadSourceMap(){
return fetchSourceMap().
then(function(map){return new SourceMapConsumer(map);});}


function fetchSourceMap(){
if(global.RAW_SOURCE_MAP){
return Promise.resolve(global.RAW_SOURCE_MAP);}


if(!RCTSourceCode){
return Promise.reject(new Error('RCTSourceCode module is not available'));}


if(!RCTNetworking){

return Promise.reject(new Error('RCTNetworking module is not available'));}


return new Promise(RCTSourceCode.getScriptText).
then(extractSourceMapURL).
then(function(url){
if(url === null){
return Promise.reject(new Error('No source map URL found. May be running from bundled file.'));}

return Promise.resolve(url);}).

then(fetch).
then(function(response){return response.text();});}


function extractSourceMapURL(_ref){var url=_ref.url;var text=_ref.text;var fullSourceMappingURL=_ref.fullSourceMappingURL;
if(fullSourceMappingURL){
return fullSourceMappingURL;}

var mapURL=SourceMapURL.getFrom(text);
if(!mapURL){
return null;}

var baseURL=url.match(/(.+:\/\/.*?)\//)[1];
return baseURL + mapURL;}


module.exports = loadSourceMap;
});
__d('Promise',["setImmediate","promise/setimmediate/es6-extensions.js","promise/setimmediate/done.js"],function(global, require, module, exports) {  'use strict';























global.setImmediate = require('setImmediate');
var Promise=require('promise/setimmediate/es6-extensions.js');
require('promise/setimmediate/done.js');




Promise.prototype.finally = function(onSettled){
return this.then(onSettled,onSettled);};



module.exports = Promise;
});
__d('setImmediate',["ImmediateImplementation"],function(global, require, module, exports) {  module.
















exports = global.setImmediate || 
require('ImmediateImplementation').setImmediate;
});
__d('ImmediateImplementation',[],function(global, require, module, exports) {  /**
 * @generated SignedSource<<57d0446bbd1186485d372efe6b323dca>>
 *
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 * !! This file is a check-in of a static_upstream project!      !!
 * !!                                                            !!
 * !! You should not modify this file directly. Instead:         !!
 * !! 1) Use `fjs use-upstream` to temporarily replace this with !!
 * !!    the latest version from upstream.                       !!
 * !! 2) Make your changes, test them, etc.                      !!
 * !! 3) Use `fjs push-upstream` to copy your changes back to    !!
 * !!    static_upstream.                                        !!
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 *
 * Copyright (c) 2012 Barnesandnoble.com, llc, Donavon West, and Domenic
 * Denicola
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * @preserve-header
 * @providesModule ImmediateImplementation
 */

(function(global,undefined){
"use strict";

var nextHandle=1;
var tasksByHandle={};
var queueHead={};
var queueTail=queueHead;
var currentlyRunningATask=false;
var doc=global.document;
var setImmediate;

function addFromSetImmediateArguments(args){
var handler=args[0];
args = Array.prototype.slice.call(args,1);
tasksByHandle[nextHandle] = function(){
handler.apply(undefined,args);};

queueTail = queueTail.next = {handle:nextHandle++};
return queueTail.handle;}


function flushQueue(){
var next,task;
while(!currentlyRunningATask && (next = queueHead.next)) {
queueHead = next;
if(task = tasksByHandle[next.handle]){
currentlyRunningATask = true;
try{
task();
currentlyRunningATask = false;}finally 
{
clearImmediate(next.handle);
if(currentlyRunningATask){
currentlyRunningATask = false;






if(queueHead.next){
setImmediate(flushQueue);}}}}}}







function clearImmediate(handle){
delete tasksByHandle[handle];}


function canUsePostMessage(){


if(global.postMessage && !global.importScripts){
var postMessageIsAsynchronous=true;

var onMessage=function(){
postMessageIsAsynchronous = false;
if(global.removeEventListener){
global.removeEventListener("message",onMessage,false);}else 
{
global.detachEvent("onmessage",onMessage);}};



if(global.addEventListener){
global.addEventListener("message",onMessage,false);}else 
if(global.attachEvent){
global.attachEvent("onmessage",onMessage);}else 
{
return false;}


global.postMessage("","*");
return postMessageIsAsynchronous;}}



function installPostMessageImplementation(){


var messagePrefix="setImmediate$" + Math.random() + "$";
var onGlobalMessage=function(event){
if(event.source === global && 
typeof event.data === "string" && 
event.data.indexOf(messagePrefix) === 0){
flushQueue();}};



if(global.addEventListener){
global.addEventListener("message",onGlobalMessage,false);}else 
{
global.attachEvent("onmessage",onGlobalMessage);}


setImmediate = function(){
var handle=addFromSetImmediateArguments(arguments);
global.postMessage(messagePrefix + handle,"*");
return handle;};}



function installMessageChannelImplementation(){
var channel=new MessageChannel();
channel.port1.onmessage = flushQueue;
setImmediate = function(){
var handle=addFromSetImmediateArguments(arguments);
channel.port2.postMessage(handle);
return handle;};}



function installReadyStateChangeImplementation(){
var html=doc.documentElement;
setImmediate = function(){
var handle=addFromSetImmediateArguments(arguments);


var script=doc.createElement("script");
script.onreadystatechange = function(){
script.onreadystatechange = null;
html.removeChild(script);
script = null;
flushQueue();};

html.appendChild(script);
return handle;};}



function installSetTimeoutImplementation(){
setImmediate = function(){
setTimeout(flushQueue,0);
return addFromSetImmediateArguments(arguments);};}



if(canUsePostMessage()){

installPostMessageImplementation();}else 

if(global.MessageChannel){

installMessageChannelImplementation();}else 

if(doc && "onreadystatechange" in doc.createElement("script")){

installReadyStateChangeImplementation();}else 

{

installSetTimeoutImplementation();}


exports.setImmediate = setImmediate;
exports.clearImmediate = clearImmediate;})(
Function("return this")());
});
__d('promise/setimmediate/es6-extensions.js',["promise/setimmediate/core.js"],function(global, require, module, exports) {  'use strict';



var Promise=require('promise/setimmediate/core.js');

module.exports = Promise;



var TRUE=valuePromise(true);
var FALSE=valuePromise(false);
var NULL=valuePromise(null);
var UNDEFINED=valuePromise(undefined);
var ZERO=valuePromise(0);
var EMPTYSTRING=valuePromise('');

function valuePromise(value){
var p=new Promise(Promise._99);
p._37 = 1;
p._12 = value;
return p;}

Promise.resolve = function(value){
if(value instanceof Promise)return value;

if(value === null)return NULL;
if(value === undefined)return UNDEFINED;
if(value === true)return TRUE;
if(value === false)return FALSE;
if(value === 0)return ZERO;
if(value === '')return EMPTYSTRING;

if(typeof value === 'object' || typeof value === 'function'){
try{
var then=value.then;
if(typeof then === 'function'){
return new Promise(then.bind(value));}}

catch(ex) {
return new Promise(function(resolve,reject){
reject(ex);});}}



return valuePromise(value);};


Promise.all = function(arr){
var args=Array.prototype.slice.call(arr);

return new Promise(function(resolve,reject){
if(args.length === 0)return resolve([]);
var remaining=args.length;
function res(i,val){
if(val && (typeof val === 'object' || typeof val === 'function')){
if(val instanceof Promise && val.then === Promise.prototype.then){
while(val._37 === 3) {
val = val._12;}

if(val._37 === 1)return res(i,val._12);
if(val._37 === 2)reject(val._12);
val.then(function(val){
res(i,val);},
reject);
return;}else 
{
var then=val.then;
if(typeof then === 'function'){
var p=new Promise(then.bind(val));
p.then(function(val){
res(i,val);},
reject);
return;}}}



args[i] = val;
if(--remaining === 0){
resolve(args);}}


for(var i=0;i < args.length;i++) {
res(i,args[i]);}});};




Promise.reject = function(value){
return new Promise(function(resolve,reject){
reject(value);});};



Promise.race = function(values){
return new Promise(function(resolve,reject){
values.forEach(function(value){
Promise.resolve(value).then(resolve,reject);});});};






Promise.prototype['catch'] = function(onRejected){
return this.then(null,onRejected);};
});
__d('promise/setimmediate/core.js',[],function(global, require, module, exports) {  'use strict';



function noop(){}


















var LAST_ERROR=null;
var IS_ERROR={};
function getThen(obj){
try{
return obj.then;}
catch(ex) {
LAST_ERROR = ex;
return IS_ERROR;}}



function tryCallOne(fn,a){
try{
return fn(a);}
catch(ex) {
LAST_ERROR = ex;
return IS_ERROR;}}


function tryCallTwo(fn,a,b){
try{
fn(a,b);}
catch(ex) {
LAST_ERROR = ex;
return IS_ERROR;}}



module.exports = Promise;

function Promise(fn){
if(typeof this !== 'object'){
throw new TypeError('Promises must be constructed via new');}

if(typeof fn !== 'function'){
throw new TypeError('not a function');}

this._37 = 0;
this._12 = null;
this._59 = [];
if(fn === noop)return;
doResolve(fn,this);}

Promise._99 = noop;

Promise.prototype.then = function(onFulfilled,onRejected){
if(this.constructor !== Promise){
return safeThen(this,onFulfilled,onRejected);}

var res=new Promise(noop);
handle(this,new Handler(onFulfilled,onRejected,res));
return res;};


function safeThen(self,onFulfilled,onRejected){
return new self.constructor(function(resolve,reject){
var res=new Promise(noop);
res.then(resolve,reject);
handle(self,new Handler(onFulfilled,onRejected,res));});}

;
function handle(self,deferred){
while(self._37 === 3) {
self = self._12;}

if(self._37 === 0){
self._59.push(deferred);
return;}

setImmediate(function(){
var cb=self._37 === 1?deferred.onFulfilled:deferred.onRejected;
if(cb === null){
if(self._37 === 1){
resolve(deferred.promise,self._12);}else 
{
reject(deferred.promise,self._12);}

return;}

var ret=tryCallOne(cb,self._12);
if(ret === IS_ERROR){
reject(deferred.promise,LAST_ERROR);}else 
{
resolve(deferred.promise,ret);}});}



function resolve(self,newValue){

if(newValue === self){
return reject(
self,
new TypeError('A promise cannot be resolved with itself.'));}


if(
newValue && (
typeof newValue === 'object' || typeof newValue === 'function'))
{
var then=getThen(newValue);
if(then === IS_ERROR){
return reject(self,LAST_ERROR);}

if(
then === self.then && 
newValue instanceof Promise)
{
self._37 = 3;
self._12 = newValue;
finale(self);
return;}else 
if(typeof then === 'function'){
doResolve(then.bind(newValue),self);
return;}}


self._37 = 1;
self._12 = newValue;
finale(self);}


function reject(self,newValue){
self._37 = 2;
self._12 = newValue;
finale(self);}

function finale(self){
for(var i=0;i < self._59.length;i++) {
handle(self,self._59[i]);}

self._59 = null;}


function Handler(onFulfilled,onRejected,promise){
this.onFulfilled = typeof onFulfilled === 'function'?onFulfilled:null;
this.onRejected = typeof onRejected === 'function'?onRejected:null;
this.promise = promise;}








function doResolve(fn,promise){
var done=false;
var res=tryCallTwo(fn,function(value){
if(done)return;
done = true;
resolve(promise,value);},
function(reason){
if(done)return;
done = true;
reject(promise,reason);});

if(!done && res === IS_ERROR){
done = true;
reject(promise,LAST_ERROR);}}
});
__d('promise/setimmediate/done.js',["promise/setimmediate/core.js"],function(global, require, module, exports) {  'use strict';

var Promise=require('promise/setimmediate/core.js');

module.exports = Promise;
Promise.prototype.done = function(onFulfilled,onRejected){
var self=arguments.length?this.then.apply(this,arguments):this;
self.then(null,function(err){
setTimeout(function(){
throw err;},
0);});};
});
__d('SourceMap',[],function(global, require, module, exports) {  var 























scope={};
wrapper.call(scope);

module.exports = scope.sourceMap;

function wrapper(){














function define(moduleName,deps,payload){
if(typeof moduleName != "string"){
throw new TypeError('Expected string, got: ' + moduleName);}


if(arguments.length == 2){
payload = deps;}


if(moduleName in define.modules){
throw new Error("Module already defined: " + moduleName);}

define.modules[moduleName] = payload;}
;




define.modules = {};










function Domain(){
this.modules = {};
this._currentModule = null;}


(function(){
















Domain.prototype.require = function(deps,callback){
if(Array.isArray(deps)){
var params=deps.map(function(dep){
return this.lookup(dep);},
this);
if(callback){
callback.apply(null,params);}

return undefined;}else 

{
return this.lookup(deps);}};



function normalize(path){
var bits=path.split('/');
var i=1;
while(i < bits.length) {
if(bits[i] === '..'){
bits.splice(i - 1,1);}else 
if(bits[i] === '.'){
bits.splice(i,1);}else 
{
i++;}}


return bits.join('/');}


function join(a,b){
a = a.trim();
b = b.trim();
if(/^\//.test(b)){
return b;}else 
{
return a.replace(/\/*$/,'/') + b;}}



function dirname(path){
var bits=path.split('/');
bits.pop();
return bits.join('/');}








Domain.prototype.lookup = function(moduleName){
if(/^\./.test(moduleName)){
moduleName = normalize(join(dirname(this._currentModule),moduleName));}


if(moduleName in this.modules){
var module=this.modules[moduleName];
return module;}


if(!(moduleName in define.modules)){
throw new Error("Module not defined: " + moduleName);}


var module=define.modules[moduleName];

if(typeof module == "function"){
var exports={};
var previousModule=this._currentModule;
this._currentModule = moduleName;
module(this.require.bind(this),exports,{id:moduleName,uri:""});
this._currentModule = previousModule;
module = exports;}



this.modules[moduleName] = module;

return module;};})();




define.Domain = Domain;
define.globalDomain = new Domain();
var require=define.globalDomain.require.bind(define.globalDomain);






define('source-map/source-map-generator',['require','exports','module','source-map/base64-vlq','source-map/util','source-map/array-set'],function(require,exports,module){

var base64VLQ=require('./base64-vlq');
var util=require('./util');
var ArraySet=require('./array-set').ArraySet;









function SourceMapGenerator(aArgs){
this._file = util.getArg(aArgs,'file');
this._sourceRoot = util.getArg(aArgs,'sourceRoot',null);
this._sources = new ArraySet();
this._names = new ArraySet();
this._mappings = [];
this._sourcesContents = null;}


SourceMapGenerator.prototype._version = 3;






SourceMapGenerator.fromSourceMap = 
function SourceMapGenerator_fromSourceMap(aSourceMapConsumer){
var sourceRoot=aSourceMapConsumer.sourceRoot;
var generator=new SourceMapGenerator({
file:aSourceMapConsumer.file,
sourceRoot:sourceRoot});

aSourceMapConsumer.eachMapping(function(mapping){
var newMapping={
generated:{
line:mapping.generatedLine,
column:mapping.generatedColumn}};



if(mapping.source){
newMapping.source = mapping.source;
if(sourceRoot){
newMapping.source = util.relative(sourceRoot,newMapping.source);}


newMapping.original = {
line:mapping.originalLine,
column:mapping.originalColumn};


if(mapping.name){
newMapping.name = mapping.name;}}



generator.addMapping(newMapping);});

aSourceMapConsumer.sources.forEach(function(sourceFile){
var content=aSourceMapConsumer.sourceContentFor(sourceFile);
if(content){
generator.setSourceContent(sourceFile,content);}});


return generator;};












SourceMapGenerator.prototype.addMapping = 
function SourceMapGenerator_addMapping(aArgs){
var generated=util.getArg(aArgs,'generated');
var original=util.getArg(aArgs,'original',null);
var source=util.getArg(aArgs,'source',null);
var name=util.getArg(aArgs,'name',null);

this._validateMapping(generated,original,source,name);

if(source && !this._sources.has(source)){
this._sources.add(source);}


if(name && !this._names.has(name)){
this._names.add(name);}


this._mappings.push({
generatedLine:generated.line,
generatedColumn:generated.column,
originalLine:original != null && original.line,
originalColumn:original != null && original.column,
source:source,
name:name});};






SourceMapGenerator.prototype.setSourceContent = 
function SourceMapGenerator_setSourceContent(aSourceFile,aSourceContent){
var source=aSourceFile;
if(this._sourceRoot){
source = util.relative(this._sourceRoot,source);}


if(aSourceContent !== null){


if(!this._sourcesContents){
this._sourcesContents = {};}

this._sourcesContents[util.toSetString(source)] = aSourceContent;}else 
{


delete this._sourcesContents[util.toSetString(source)];
if(Object.keys(this._sourcesContents).length === 0){
this._sourcesContents = null;}}};














SourceMapGenerator.prototype.applySourceMap = 
function SourceMapGenerator_applySourceMap(aSourceMapConsumer,aSourceFile){

if(!aSourceFile){
aSourceFile = aSourceMapConsumer.file;}

var sourceRoot=this._sourceRoot;

if(sourceRoot){
aSourceFile = util.relative(sourceRoot,aSourceFile);}



var newSources=new ArraySet();
var newNames=new ArraySet();


this._mappings.forEach(function(mapping){
if(mapping.source === aSourceFile && mapping.originalLine){

var original=aSourceMapConsumer.originalPositionFor({
line:mapping.originalLine,
column:mapping.originalColumn});

if(original.source !== null){

if(sourceRoot){
mapping.source = util.relative(sourceRoot,original.source);}else 
{
mapping.source = original.source;}

mapping.originalLine = original.line;
mapping.originalColumn = original.column;
if(original.name !== null && mapping.name !== null){


mapping.name = original.name;}}}




var source=mapping.source;
if(source && !newSources.has(source)){
newSources.add(source);}


var name=mapping.name;
if(name && !newNames.has(name)){
newNames.add(name);}},


this);
this._sources = newSources;
this._names = newNames;


aSourceMapConsumer.sources.forEach(function(sourceFile){
var content=aSourceMapConsumer.sourceContentFor(sourceFile);
if(content){
if(sourceRoot){
sourceFile = util.relative(sourceRoot,sourceFile);}

this.setSourceContent(sourceFile,content);}},

this);};













SourceMapGenerator.prototype._validateMapping = 
function SourceMapGenerator_validateMapping(aGenerated,aOriginal,aSource,
aName){
if(aGenerated && 'line' in aGenerated && 'column' in aGenerated && 
aGenerated.line > 0 && aGenerated.column >= 0 && 
!aOriginal && !aSource && !aName){

return;}else 

if(aGenerated && 'line' in aGenerated && 'column' in aGenerated && 
aOriginal && 'line' in aOriginal && 'column' in aOriginal && 
aGenerated.line > 0 && aGenerated.column >= 0 && 
aOriginal.line > 0 && aOriginal.column >= 0 && 
aSource){

return;}else 

{
throw new Error('Invalid mapping: ' + JSON.stringify({
generated:aGenerated,
source:aSource,
orginal:aOriginal,
name:aName}));}};








SourceMapGenerator.prototype._serializeMappings = 
function SourceMapGenerator_serializeMappings(){
var previousGeneratedColumn=0;
var previousGeneratedLine=1;
var previousOriginalColumn=0;
var previousOriginalLine=0;
var previousName=0;
var previousSource=0;
var result='';
var mapping;






this._mappings.sort(util.compareByGeneratedPositions);

for(var i=0,len=this._mappings.length;i < len;i++) {
mapping = this._mappings[i];

if(mapping.generatedLine !== previousGeneratedLine){
previousGeneratedColumn = 0;
while(mapping.generatedLine !== previousGeneratedLine) {
result += ';';
previousGeneratedLine++;}}else 


{
if(i > 0){
if(!util.compareByGeneratedPositions(mapping,this._mappings[i - 1])){
continue;}

result += ',';}}



result += base64VLQ.encode(mapping.generatedColumn - 
previousGeneratedColumn);
previousGeneratedColumn = mapping.generatedColumn;

if(mapping.source){
result += base64VLQ.encode(this._sources.indexOf(mapping.source) - 
previousSource);
previousSource = this._sources.indexOf(mapping.source);


result += base64VLQ.encode(mapping.originalLine - 1 - 
previousOriginalLine);
previousOriginalLine = mapping.originalLine - 1;

result += base64VLQ.encode(mapping.originalColumn - 
previousOriginalColumn);
previousOriginalColumn = mapping.originalColumn;

if(mapping.name){
result += base64VLQ.encode(this._names.indexOf(mapping.name) - 
previousName);
previousName = this._names.indexOf(mapping.name);}}}




return result;};


SourceMapGenerator.prototype._generateSourcesContent = 
function SourceMapGenerator_generateSourcesContent(aSources,aSourceRoot){
return aSources.map(function(source){
if(!this._sourcesContents){
return null;}

if(aSourceRoot){
source = util.relative(aSourceRoot,source);}

var key=util.toSetString(source);
return Object.prototype.hasOwnProperty.call(this._sourcesContents,
key)?
this._sourcesContents[key]:
null;},
this);};





SourceMapGenerator.prototype.toJSON = 
function SourceMapGenerator_toJSON(){
var map={
version:this._version,
file:this._file,
sources:this._sources.toArray(),
names:this._names.toArray(),
mappings:this._serializeMappings()};

if(this._sourceRoot){
map.sourceRoot = this._sourceRoot;}

if(this._sourcesContents){
map.sourcesContent = this._generateSourcesContent(map.sources,map.sourceRoot);}


return map;};





SourceMapGenerator.prototype.toString = 
function SourceMapGenerator_toString(){
return JSON.stringify(this);};


exports.SourceMapGenerator = SourceMapGenerator;});






































define('source-map/base64-vlq',['require','exports','module','source-map/base64'],function(require,exports,module){

var base64=require('./base64');













var VLQ_BASE_SHIFT=5;


var VLQ_BASE=1 << VLQ_BASE_SHIFT;


var VLQ_BASE_MASK=VLQ_BASE - 1;


var VLQ_CONTINUATION_BIT=VLQ_BASE;







function toVLQSigned(aValue){
return aValue < 0?
(-aValue << 1) + 1:
(aValue << 1) + 0;}








function fromVLQSigned(aValue){
var isNegative=(aValue & 1) === 1;
var shifted=aValue >> 1;
return isNegative?
-shifted:
shifted;}





exports.encode = function base64VLQ_encode(aValue){
var encoded="";
var digit;

var vlq=toVLQSigned(aValue);

do {
digit = vlq & VLQ_BASE_MASK;
vlq >>>= VLQ_BASE_SHIFT;
if(vlq > 0){


digit |= VLQ_CONTINUATION_BIT;}

encoded += base64.encode(digit);}while(
vlq > 0);

return encoded;};






exports.decode = function base64VLQ_decode(aStr){
var i=0;
var strLen=aStr.length;
var result=0;
var shift=0;
var continuation,digit;

do {
if(i >= strLen){
throw new Error("Expected more digits in base 64 VLQ value.");}

digit = base64.decode(aStr.charAt(i++));
continuation = !!(digit & VLQ_CONTINUATION_BIT);
digit &= VLQ_BASE_MASK;
result = result + (digit << shift);
shift += VLQ_BASE_SHIFT;}while(
continuation);

return {
value:fromVLQSigned(result),
rest:aStr.slice(i)};};});










define('source-map/base64',['require','exports','module'],function(require,exports,module){

var charToIntMap={};
var intToCharMap={};

'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.
split('').
forEach(function(ch,index){
charToIntMap[ch] = index;
intToCharMap[index] = ch;});





exports.encode = function base64_encode(aNumber){
if(aNumber in intToCharMap){
return intToCharMap[aNumber];}

throw new TypeError("Must be between 0 and 63: " + aNumber);};





exports.decode = function base64_decode(aChar){
if(aChar in charToIntMap){
return charToIntMap[aChar];}

throw new TypeError("Not a valid base 64 digit: " + aChar);};});









define('source-map/util',['require','exports','module'],function(require,exports,module){











function getArg(aArgs,aName,aDefaultValue){
if(aName in aArgs){
return aArgs[aName];}else 
if(arguments.length === 3){
return aDefaultValue;}else 
{
throw new Error('"' + aName + '" is a required argument.');}}


exports.getArg = getArg;

var urlRegexp=/([\w+\-.]+):\/\/((\w+:\w+)@)?([\w.]+)?(:(\d+))?(\S+)?/;
var dataUrlRegexp=/^data:.+\,.+/;

function urlParse(aUrl){
var match=aUrl.match(urlRegexp);
if(!match){
return null;}

return {
scheme:match[1],
auth:match[3],
host:match[4],
port:match[6],
path:match[7]};}


exports.urlParse = urlParse;

function urlGenerate(aParsedUrl){
var url=aParsedUrl.scheme + "://";
if(aParsedUrl.auth){
url += aParsedUrl.auth + "@";}

if(aParsedUrl.host){
url += aParsedUrl.host;}

if(aParsedUrl.port){
url += ":" + aParsedUrl.port;}

if(aParsedUrl.path){
url += aParsedUrl.path;}

return url;}

exports.urlGenerate = urlGenerate;

function join(aRoot,aPath){
var url;

if(aPath.match(urlRegexp) || aPath.match(dataUrlRegexp)){
return aPath;}


if(aPath.charAt(0) === '/' && (url = urlParse(aRoot))){
url.path = aPath;
return urlGenerate(url);}


return aRoot.replace(/\/$/,'') + '/' + aPath;}

exports.join = join;










function toSetString(aStr){
return '$' + aStr;}

exports.toSetString = toSetString;

function fromSetString(aStr){
return aStr.substr(1);}

exports.fromSetString = fromSetString;

function relative(aRoot,aPath){
aRoot = aRoot.replace(/\/$/,'');

var url=urlParse(aRoot);
if(aPath.charAt(0) == "/" && url && url.path == "/"){
return aPath.slice(1);}


return aPath.indexOf(aRoot + '/') === 0?
aPath.substr(aRoot.length + 1):
aPath;}

exports.relative = relative;

function strcmp(aStr1,aStr2){
var s1=aStr1 || "";
var s2=aStr2 || "";
return (s1 > s2) - (s1 < s2);}










function compareByOriginalPositions(mappingA,mappingB,onlyCompareOriginal){
var cmp;

cmp = strcmp(mappingA.source,mappingB.source);
if(cmp){
return cmp;}


cmp = mappingA.originalLine - mappingB.originalLine;
if(cmp){
return cmp;}


cmp = mappingA.originalColumn - mappingB.originalColumn;
if(cmp || onlyCompareOriginal){
return cmp;}


cmp = strcmp(mappingA.name,mappingB.name);
if(cmp){
return cmp;}


cmp = mappingA.generatedLine - mappingB.generatedLine;
if(cmp){
return cmp;}


return mappingA.generatedColumn - mappingB.generatedColumn;}
;
exports.compareByOriginalPositions = compareByOriginalPositions;










function compareByGeneratedPositions(mappingA,mappingB,onlyCompareGenerated){
var cmp;

cmp = mappingA.generatedLine - mappingB.generatedLine;
if(cmp){
return cmp;}


cmp = mappingA.generatedColumn - mappingB.generatedColumn;
if(cmp || onlyCompareGenerated){
return cmp;}


cmp = strcmp(mappingA.source,mappingB.source);
if(cmp){
return cmp;}


cmp = mappingA.originalLine - mappingB.originalLine;
if(cmp){
return cmp;}


cmp = mappingA.originalColumn - mappingB.originalColumn;
if(cmp){
return cmp;}


return strcmp(mappingA.name,mappingB.name);}
;
exports.compareByGeneratedPositions = compareByGeneratedPositions;});








define('source-map/array-set',['require','exports','module','source-map/util'],function(require,exports,module){

var util=require('./util');







function ArraySet(){
this._array = [];
this._set = {};}





ArraySet.fromArray = function ArraySet_fromArray(aArray,aAllowDuplicates){
var set=new ArraySet();
for(var i=0,len=aArray.length;i < len;i++) {
set.add(aArray[i],aAllowDuplicates);}

return set;};







ArraySet.prototype.add = function ArraySet_add(aStr,aAllowDuplicates){
var isDuplicate=this.has(aStr);
var idx=this._array.length;
if(!isDuplicate || aAllowDuplicates){
this._array.push(aStr);}

if(!isDuplicate){
this._set[util.toSetString(aStr)] = idx;}};








ArraySet.prototype.has = function ArraySet_has(aStr){
return Object.prototype.hasOwnProperty.call(this._set,
util.toSetString(aStr));};







ArraySet.prototype.indexOf = function ArraySet_indexOf(aStr){
if(this.has(aStr)){
return this._set[util.toSetString(aStr)];}

throw new Error('"' + aStr + '" is not in the set.');};







ArraySet.prototype.at = function ArraySet_at(aIdx){
if(aIdx >= 0 && aIdx < this._array.length){
return this._array[aIdx];}

throw new Error('No element indexed by ' + aIdx);};







ArraySet.prototype.toArray = function ArraySet_toArray(){
return this._array.slice();};


exports.ArraySet = ArraySet;});








define('source-map/source-map-consumer',['require','exports','module','source-map/util','source-map/binary-search','source-map/array-set','source-map/base64-vlq'],function(require,exports,module){

var util=require('./util');
var binarySearch=require('./binary-search');
var ArraySet=require('./array-set').ArraySet;
var base64VLQ=require('./base64-vlq');































function SourceMapConsumer(aSourceMap){
var sourceMap=aSourceMap;
if(typeof aSourceMap === 'string'){
sourceMap = JSON.parse(aSourceMap.replace(/^\)\]\}'/,''));}


var version=util.getArg(sourceMap,'version');
var sources=util.getArg(sourceMap,'sources');


var names=util.getArg(sourceMap,'names',[]);
var sourceRoot=util.getArg(sourceMap,'sourceRoot',null);
var sourcesContent=util.getArg(sourceMap,'sourcesContent',null);
var mappings=util.getArg(sourceMap,'mappings');
var file=util.getArg(sourceMap,'file',null);



if(version != this._version){
throw new Error('Unsupported version: ' + version);}






this._names = ArraySet.fromArray(names,true);
this._sources = ArraySet.fromArray(sources,true);

this.sourceRoot = sourceRoot;
this.sourcesContent = sourcesContent;
this._mappings = mappings;
this.file = file;}









SourceMapConsumer.fromSourceMap = 
function SourceMapConsumer_fromSourceMap(aSourceMap){
var smc=Object.create(SourceMapConsumer.prototype);

smc._names = ArraySet.fromArray(aSourceMap._names.toArray(),true);
smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(),true);
smc.sourceRoot = aSourceMap._sourceRoot;
smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),
smc.sourceRoot);
smc.file = aSourceMap._file;

smc.__generatedMappings = aSourceMap._mappings.slice().
sort(util.compareByGeneratedPositions);
smc.__originalMappings = aSourceMap._mappings.slice().
sort(util.compareByOriginalPositions);

return smc;};





SourceMapConsumer.prototype._version = 3;




Object.defineProperty(SourceMapConsumer.prototype,'sources',{
get:function(){
return this._sources.toArray().map(function(s){
return this.sourceRoot?util.join(this.sourceRoot,s):s;},
this);}});

































SourceMapConsumer.prototype.__generatedMappings = null;
Object.defineProperty(SourceMapConsumer.prototype,'_generatedMappings',{
get:function(){
if(!this.__generatedMappings){
this.__generatedMappings = [];
this.__originalMappings = [];
this._parseMappings(this._mappings,this.sourceRoot);}


return this.__generatedMappings;}});



SourceMapConsumer.prototype.__originalMappings = null;
Object.defineProperty(SourceMapConsumer.prototype,'_originalMappings',{
get:function(){
if(!this.__originalMappings){
this.__generatedMappings = [];
this.__originalMappings = [];
this._parseMappings(this._mappings,this.sourceRoot);}


return this.__originalMappings;}});








SourceMapConsumer.prototype._parseMappings = 
function SourceMapConsumer_parseMappings(aStr,aSourceRoot){
var generatedLine=1;
var previousGeneratedColumn=0;
var previousOriginalLine=0;
var previousOriginalColumn=0;
var previousSource=0;
var previousName=0;
var mappingSeparator=/^[,;]/;
var str=aStr;
var mapping;
var temp;

while(str.length > 0) {
if(str.charAt(0) === ';'){
generatedLine++;
str = str.slice(1);
previousGeneratedColumn = 0;}else 

if(str.charAt(0) === ','){
str = str.slice(1);}else 

{
mapping = {};
mapping.generatedLine = generatedLine;


temp = base64VLQ.decode(str);
mapping.generatedColumn = previousGeneratedColumn + temp.value;
previousGeneratedColumn = mapping.generatedColumn;
str = temp.rest;

if(str.length > 0 && !mappingSeparator.test(str.charAt(0))){

temp = base64VLQ.decode(str);
mapping.source = this._sources.at(previousSource + temp.value);
previousSource += temp.value;
str = temp.rest;
if(str.length === 0 || mappingSeparator.test(str.charAt(0))){
throw new Error('Found a source, but no line and column');}



temp = base64VLQ.decode(str);
mapping.originalLine = previousOriginalLine + temp.value;
previousOriginalLine = mapping.originalLine;

mapping.originalLine += 1;
str = temp.rest;
if(str.length === 0 || mappingSeparator.test(str.charAt(0))){
throw new Error('Found a source and line, but no column');}



temp = base64VLQ.decode(str);
mapping.originalColumn = previousOriginalColumn + temp.value;
previousOriginalColumn = mapping.originalColumn;
str = temp.rest;

if(str.length > 0 && !mappingSeparator.test(str.charAt(0))){

temp = base64VLQ.decode(str);
mapping.name = this._names.at(previousName + temp.value);
previousName += temp.value;
str = temp.rest;}}



this.__generatedMappings.push(mapping);
if(typeof mapping.originalLine === 'number'){
this.__originalMappings.push(mapping);}}}




this.__originalMappings.sort(util.compareByOriginalPositions);};






SourceMapConsumer.prototype._findMapping = 
function SourceMapConsumer_findMapping(aNeedle,aMappings,aLineName,
aColumnName,aComparator){





if(aNeedle[aLineName] <= 0){
throw new TypeError('Line must be greater than or equal to 1, got ' + 
aNeedle[aLineName]);}

if(aNeedle[aColumnName] < 0){
throw new TypeError('Column must be greater than or equal to 0, got ' + 
aNeedle[aColumnName]);}


return binarySearch.search(aNeedle,aMappings,aComparator);};

















SourceMapConsumer.prototype.originalPositionFor = 
function SourceMapConsumer_originalPositionFor(aArgs){
var needle={
generatedLine:util.getArg(aArgs,'line'),
generatedColumn:util.getArg(aArgs,'column')};


var mapping=this._findMapping(needle,
this._generatedMappings,
"generatedLine",
"generatedColumn",
util.compareByGeneratedPositions);

if(mapping){
var source=util.getArg(mapping,'source',null);
if(source && this.sourceRoot){
source = util.join(this.sourceRoot,source);}

return {
source:source,
line:util.getArg(mapping,'originalLine',null),
column:util.getArg(mapping,'originalColumn',null),
name:util.getArg(mapping,'name',null)};}



return {
source:null,
line:null,
column:null,
name:null};};








SourceMapConsumer.prototype.sourceContentFor = 
function SourceMapConsumer_sourceContentFor(aSource){
if(!this.sourcesContent){
return null;}


if(this.sourceRoot){
aSource = util.relative(this.sourceRoot,aSource);}


if(this._sources.has(aSource)){
return this.sourcesContent[this._sources.indexOf(aSource)];}


var url;
if(this.sourceRoot && (
url = util.urlParse(this.sourceRoot))){




var fileUriAbsPath=aSource.replace(/^file:\/\//,"");
if(url.scheme == "file" && 
this._sources.has(fileUriAbsPath)){
return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)];}


if((!url.path || url.path == "/") && 
this._sources.has("/" + aSource)){
return this.sourcesContent[this._sources.indexOf("/" + aSource)];}}



throw new Error('"' + aSource + '" is not in the SourceMap.');};
















SourceMapConsumer.prototype.generatedPositionFor = 
function SourceMapConsumer_generatedPositionFor(aArgs){
var needle={
source:util.getArg(aArgs,'source'),
originalLine:util.getArg(aArgs,'line'),
originalColumn:util.getArg(aArgs,'column')};


if(this.sourceRoot){
needle.source = util.relative(this.sourceRoot,needle.source);}


var mapping=this._findMapping(needle,
this._originalMappings,
"originalLine",
"originalColumn",
util.compareByOriginalPositions);

if(mapping){
return {
line:util.getArg(mapping,'generatedLine',null),
column:util.getArg(mapping,'generatedColumn',null)};}



return {
line:null,
column:null};};



SourceMapConsumer.GENERATED_ORDER = 1;
SourceMapConsumer.ORIGINAL_ORDER = 2;

















SourceMapConsumer.prototype.eachMapping = 
function SourceMapConsumer_eachMapping(aCallback,aContext,aOrder){
var context=aContext || null;
var order=aOrder || SourceMapConsumer.GENERATED_ORDER;

var mappings;
switch(order){
case SourceMapConsumer.GENERATED_ORDER:
mappings = this._generatedMappings;
break;
case SourceMapConsumer.ORIGINAL_ORDER:
mappings = this._originalMappings;
break;
default:
throw new Error("Unknown order of iteration.");}


var sourceRoot=this.sourceRoot;
mappings.map(function(mapping){
var source=mapping.source;
if(source && sourceRoot){
source = util.join(sourceRoot,source);}

return {
source:source,
generatedLine:mapping.generatedLine,
generatedColumn:mapping.generatedColumn,
originalLine:mapping.originalLine,
originalColumn:mapping.originalColumn,
name:mapping.name};}).

forEach(aCallback,context);};


exports.SourceMapConsumer = SourceMapConsumer;});








define('source-map/binary-search',['require','exports','module'],function(require,exports,module){










function recursiveSearch(aLow,aHigh,aNeedle,aHaystack,aCompare){










var mid=Math.floor((aHigh - aLow) / 2) + aLow;
var cmp=aCompare(aNeedle,aHaystack[mid],true);
if(cmp === 0){

return aHaystack[mid];}else 

if(cmp > 0){

if(aHigh - mid > 1){

return recursiveSearch(mid,aHigh,aNeedle,aHaystack,aCompare);}



return aHaystack[mid];}else 

{

if(mid - aLow > 1){

return recursiveSearch(aLow,mid,aNeedle,aHaystack,aCompare);}



return aLow < 0?
null:
aHaystack[aLow];}}
















exports.search = function search(aNeedle,aHaystack,aCompare){
return aHaystack.length > 0?
recursiveSearch(-1,aHaystack.length,aNeedle,aHaystack,aCompare):
null;};});









define('source-map/source-node',['require','exports','module','source-map/source-map-generator','source-map/util'],function(require,exports,module){

var SourceMapGenerator=require('./source-map-generator').SourceMapGenerator;
var util=require('./util');













function SourceNode(aLine,aColumn,aSource,aChunks,aName){
this.children = [];
this.sourceContents = {};
this.line = aLine === undefined?null:aLine;
this.column = aColumn === undefined?null:aColumn;
this.source = aSource === undefined?null:aSource;
this.name = aName === undefined?null:aName;
if(aChunks != null)this.add(aChunks);}








SourceNode.fromStringWithSourceMap = 
function SourceNode_fromStringWithSourceMap(aGeneratedCode,aSourceMapConsumer){


var node=new SourceNode();



var remainingLines=aGeneratedCode.split('\n');


var lastGeneratedLine=1,lastGeneratedColumn=0;




var lastMapping=null;

aSourceMapConsumer.eachMapping(function(mapping){
if(lastMapping === null){



while(lastGeneratedLine < mapping.generatedLine) {
node.add(remainingLines.shift() + "\n");
lastGeneratedLine++;}

if(lastGeneratedColumn < mapping.generatedColumn){
var nextLine=remainingLines[0];
node.add(nextLine.substr(0,mapping.generatedColumn));
remainingLines[0] = nextLine.substr(mapping.generatedColumn);
lastGeneratedColumn = mapping.generatedColumn;}}else 

{


if(lastGeneratedLine < mapping.generatedLine){
var code="";

do {
code += remainingLines.shift() + "\n";
lastGeneratedLine++;
lastGeneratedColumn = 0;}while(
lastGeneratedLine < mapping.generatedLine);


if(lastGeneratedColumn < mapping.generatedColumn){
var nextLine=remainingLines[0];
code += nextLine.substr(0,mapping.generatedColumn);
remainingLines[0] = nextLine.substr(mapping.generatedColumn);
lastGeneratedColumn = mapping.generatedColumn;}


addMappingWithCode(lastMapping,code);}else 
{



var nextLine=remainingLines[0];
var code=nextLine.substr(0,mapping.generatedColumn - 
lastGeneratedColumn);
remainingLines[0] = nextLine.substr(mapping.generatedColumn - 
lastGeneratedColumn);
lastGeneratedColumn = mapping.generatedColumn;
addMappingWithCode(lastMapping,code);}}


lastMapping = mapping;},
this);



addMappingWithCode(lastMapping,remainingLines.join("\n"));


aSourceMapConsumer.sources.forEach(function(sourceFile){
var content=aSourceMapConsumer.sourceContentFor(sourceFile);
if(content){
node.setSourceContent(sourceFile,content);}});



return node;

function addMappingWithCode(mapping,code){
if(mapping === null || mapping.source === undefined){
node.add(code);}else 
{
node.add(new SourceNode(mapping.originalLine,
mapping.originalColumn,
mapping.source,
code,
mapping.name));}}};










SourceNode.prototype.add = function SourceNode_add(aChunk){
if(Array.isArray(aChunk)){
aChunk.forEach(function(chunk){
this.add(chunk);},
this);}else 

if(aChunk instanceof SourceNode || typeof aChunk === "string"){
if(aChunk){
this.children.push(aChunk);}}else 


{
throw new TypeError(
"Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk);}


return this;};








SourceNode.prototype.prepend = function SourceNode_prepend(aChunk){
if(Array.isArray(aChunk)){
for(var i=aChunk.length - 1;i >= 0;i--) {
this.prepend(aChunk[i]);}}else 


if(aChunk instanceof SourceNode || typeof aChunk === "string"){
this.children.unshift(aChunk);}else 

{
throw new TypeError(
"Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk);}


return this;};









SourceNode.prototype.walk = function SourceNode_walk(aFn){
var chunk;
for(var i=0,len=this.children.length;i < len;i++) {
chunk = this.children[i];
if(chunk instanceof SourceNode){
chunk.walk(aFn);}else 

{
if(chunk !== ''){
aFn(chunk,{source:this.source,
line:this.line,
column:this.column,
name:this.name});}}}};











SourceNode.prototype.join = function SourceNode_join(aSep){
var newChildren;
var i;
var len=this.children.length;
if(len > 0){
newChildren = [];
for(i = 0;i < len - 1;i++) {
newChildren.push(this.children[i]);
newChildren.push(aSep);}

newChildren.push(this.children[i]);
this.children = newChildren;}

return this;};









SourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern,aReplacement){
var lastChild=this.children[this.children.length - 1];
if(lastChild instanceof SourceNode){
lastChild.replaceRight(aPattern,aReplacement);}else 

if(typeof lastChild === 'string'){
this.children[this.children.length - 1] = lastChild.replace(aPattern,aReplacement);}else 

{
this.children.push(''.replace(aPattern,aReplacement));}

return this;};









SourceNode.prototype.setSourceContent = 
function SourceNode_setSourceContent(aSourceFile,aSourceContent){
this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;};








SourceNode.prototype.walkSourceContents = 
function SourceNode_walkSourceContents(aFn){
for(var i=0,len=this.children.length;i < len;i++) {
if(this.children[i] instanceof SourceNode){
this.children[i].walkSourceContents(aFn);}}



var sources=Object.keys(this.sourceContents);
for(var i=0,len=sources.length;i < len;i++) {
aFn(util.fromSetString(sources[i]),this.sourceContents[sources[i]]);}};







SourceNode.prototype.toString = function SourceNode_toString(){
var str="";
this.walk(function(chunk){
str += chunk;});

return str;};






SourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs){
var generated={
code:"",
line:1,
column:0};

var map=new SourceMapGenerator(aArgs);
var sourceMappingActive=false;
var lastOriginalSource=null;
var lastOriginalLine=null;
var lastOriginalColumn=null;
var lastOriginalName=null;
this.walk(function(chunk,original){
generated.code += chunk;
if(original.source !== null && 
original.line !== null && 
original.column !== null){
if(lastOriginalSource !== original.source || 
lastOriginalLine !== original.line || 
lastOriginalColumn !== original.column || 
lastOriginalName !== original.name){
map.addMapping({
source:original.source,
original:{
line:original.line,
column:original.column},

generated:{
line:generated.line,
column:generated.column},

name:original.name});}


lastOriginalSource = original.source;
lastOriginalLine = original.line;
lastOriginalColumn = original.column;
lastOriginalName = original.name;
sourceMappingActive = true;}else 
if(sourceMappingActive){
map.addMapping({
generated:{
line:generated.line,
column:generated.column}});


lastOriginalSource = null;
sourceMappingActive = false;}

chunk.split('').forEach(function(ch){
if(ch === '\n'){
generated.line++;
generated.column = 0;}else 
{
generated.column++;}});});



this.walkSourceContents(function(sourceFile,sourceContent){
map.setSourceContent(sourceFile,sourceContent);});


return {code:generated.code,map:map};};


exports.SourceNode = SourceNode;});





this.sourceMap = {
SourceMapConsumer:require('source-map/source-map-consumer').SourceMapConsumer,
SourceMapGenerator:require('source-map/source-map-generator').SourceMapGenerator,
SourceNode:require('source-map/source-node').SourceNode};}
});
__d('react-native/Libraries/JavaScriptAppEngine/Initialization/source-map-url.js',[],function(global, require, module, exports) {  (














function(){
var define=null;




void (function(root,factory){
if(typeof define === "function" && define.amd){
define(factory);}else 
if(typeof exports === "object"){
module.exports = factory();}else 
{
root.sourceMappingURL = factory();}})(

this,function(){

var innerRegex=/[#@] sourceMappingURL=([^\s'"]*)/;

var regex=RegExp(
"(?:" + 
"/\\*" + 
"(?:\\s*\r?\n(?://)?)?" + 
"(?:" + innerRegex.source + ")" + 
"\\s*" + 
"\\*/" + 
"|" + 
"//(?:" + innerRegex.source + ")" + 
")" + 
"\\s*$");


return {

regex:regex,
_innerRegex:innerRegex,

getFrom:function(code){
var match=code.match(regex);
return match?match[1] || match[2] || "":null;},


existsIn:function(code){
return regex.test(code);},


removeFrom:function(code){
return code.replace(regex,"");},


insertBefore:function(code,string){
var match=code.match(regex);
if(match){
return code.slice(0,match.index) + string + code.slice(match.index);}else 
{
return code + string;}}};});})();
});
__d('parseErrorStack',["stacktrace-parser/index.js"],function(global, require, module, exports) {  'use strict';











var stacktraceParser=require('stacktrace-parser/index.js');

function resolveSourceMaps(sourceMapInstance,stackFrame){
try{
var orig=sourceMapInstance.originalPositionFor({
line:stackFrame.lineNumber,
column:stackFrame.column});

if(orig){
stackFrame.file = orig.source;
stackFrame.lineNumber = orig.line;
stackFrame.column = orig.column;}}

catch(innerEx) {}}



function parseErrorStack(e,sourceMapInstance){
if(!e || !e.stack){
return [];}


var stack=Array.isArray(e.stack)?e.stack:stacktraceParser.parse(e.stack);

var framesToPop=e.framesToPop || 0;
while(framesToPop--) {
stack.shift();}


if(sourceMapInstance){
stack.forEach(resolveSourceMaps.bind(null,sourceMapInstance));}


return stack;}


module.exports = parseErrorStack;
});
__d('stacktrace-parser/index.js',["stacktrace-parser/lib/stacktrace-parser.js"],function(global, require, module, exports) {  module.exports = require('stacktrace-parser/lib/stacktrace-parser.js');
});
__d('stacktrace-parser/lib/stacktrace-parser.js',[],function(global, require, module, exports) {  var 

UNKNOWN_FUNCTION='<unknown>';

var StackTraceParser={




parse:function(stackString){
var chrome=/^\s*at (?:(?:(?:Anonymous function)?|((?:\[object object\])?\S+(?: \[as \S+\])?)) )?\(?((?:file|http|https):.*?):(\d+)(?::(\d+))?\)?\s*$/i,
gecko=/^(?:\s*(\S*)(?:\((.*?)\))?@)?(\S.*?):(\d+)(?::(\d+))?\s*$/i,
node=/^\s*at (?:((?:\[object object\])?\S+(?: \[as \S+\])?) )?\(?(.*?):(\d+)(?::(\d+))?\)?\s*$/i,
lines=stackString.split('\n'),
stack=[],
parts,
element;

for(var i=0,j=lines.length;i < j;++i) {
if(parts = gecko.exec(lines[i])){
element = {
'file':parts[3],
'methodName':parts[1] || UNKNOWN_FUNCTION,
'lineNumber':+parts[4],
'column':parts[5]?+parts[5]:null};}else 

if(parts = chrome.exec(lines[i])){
element = {
'file':parts[2],
'methodName':parts[1] || UNKNOWN_FUNCTION,
'lineNumber':+parts[3],
'column':parts[4]?+parts[4]:null};}else 

if(parts = node.exec(lines[i])){
element = {
'file':parts[2],
'methodName':parts[1] || UNKNOWN_FUNCTION,
'lineNumber':+parts[3],
'column':parts[4]?+parts[4]:null};}else 

{
continue;}


stack.push(element);}


return stack;}};




module.exports = StackTraceParser;
});
__d('Platform',[],function(global, require, module, exports) {  'use strict';













var Platform={
OS:'ios'};


module.exports = Platform;
});
__d('checkFlowAtRuntime',["NativeModules"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












function checkFlowAtRuntime(){
var url=getPackagerURL();
if(!url){
return;}

fetch(url + 'flow/').
then(function(response){return response.json();}).
then(function(response){
if(response.silentError){
return;}

throw {
message:response.message,
stack:response.errors.map(function(err){
return _extends({},
err,{
methodName:err.description,
file:err.filename});})};},




function(){}).


done();}


function getPackagerURL(){
var NativeModules=require('NativeModules');
var scriptURL=NativeModules && 
NativeModules.SourceCode && 
NativeModules.SourceCode.scriptURL || 
'';




return getFirstOrNull(scriptURL.match(/^https?:\/\/[^/]+\//));}


function getFirstOrNull(ar){
return ar?ar[0]:null;}


module.exports = checkFlowAtRuntime;
});
__d('XMLHttpRequest',["FormData","NativeModules","RCTDeviceEventEmitter","XMLHttpRequestBase"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}












var FormData=require('FormData');
var RCTNetworking=require('NativeModules').Networking;
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');

var XMLHttpRequestBase=require('XMLHttpRequestBase');var 

XMLHttpRequest=(function(_XMLHttpRequestBase){_inherits(XMLHttpRequest,_XMLHttpRequestBase);







function XMLHttpRequest(){_classCallCheck(this,XMLHttpRequest);
_get(Object.getPrototypeOf(XMLHttpRequest.prototype),'constructor',this).call(this);
this._requestId = null;
this._subscriptions = [];
this.upload = {};}_createClass(XMLHttpRequest,[{key:'_didCreateRequest',value:


function _didCreateRequest(requestId){var _this=this;
this._requestId = requestId;
this._subscriptions.push(RCTDeviceEventEmitter.addListener(
'didSendNetworkData',
function(args){return _this._didUploadProgress.call(_this,args[0],args[1],args[2]);}));

this._subscriptions.push(RCTDeviceEventEmitter.addListener(
'didReceiveNetworkResponse',
function(args){return _this._didReceiveResponse.call(_this,args[0],args[1],args[2]);}));

this._subscriptions.push(RCTDeviceEventEmitter.addListener(
'didReceiveNetworkData',
function(args){return _this._didReceiveData.call(_this,args[0],args[1]);}));

this._subscriptions.push(RCTDeviceEventEmitter.addListener(
'didCompleteNetworkResponse',
function(args){return _this._didCompleteResponse.call(_this,args[0],args[1]);}));}},{key:'_didUploadProgress',value:



function _didUploadProgress(requestId,progress,total){
if(requestId === this._requestId && this.upload.onprogress){
var event={
lengthComputable:true,
loaded:progress,
total:total};

this.upload.onprogress(event);}}},{key:'_didReceiveResponse',value:



function _didReceiveResponse(requestId,status,responseHeaders){
if(requestId === this._requestId){
this.status = status;
this.setResponseHeaders(responseHeaders);
this.setReadyState(this.HEADERS_RECEIVED);}}},{key:'_didReceiveData',value:



function _didReceiveData(requestId,responseText){
if(requestId === this._requestId){
if(!this.responseText){
this.responseText = responseText;}else 
{
this.responseText += responseText;}

this.setReadyState(this.LOADING);}}},{key:'_didCompleteResponse',value:



function _didCompleteResponse(requestId,error){
if(requestId === this._requestId){
if(error){
this.responseText = error;}

this._clearSubscriptions();
this._requestId = null;
this.setReadyState(this.DONE);}}},{key:'_clearSubscriptions',value:



function _clearSubscriptions(){
for(var i=0;i < this._subscriptions.length;i++) {
var sub=this._subscriptions[i];
sub.remove();}

this._subscriptions = [];}},{key:'sendImpl',value:


function sendImpl(method,url,headers,data){
if(typeof data === 'string'){
data = {string:data};}else 
if(data instanceof FormData){
data = {formData:data.getParts()};}

RCTNetworking.sendRequest(
{
method:method,
url:url,
data:data,
headers:headers,
incrementalUpdates:this.onreadystatechange?true:false},

this._didCreateRequest.bind(this));}},{key:'abortImpl',value:



function abortImpl(){
if(this._requestId){
RCTNetworking.cancelRequest(this._requestId);
this._clearSubscriptions();
this._requestId = null;}}}]);return XMLHttpRequest;})(XMLHttpRequestBase);




module.exports = XMLHttpRequest;
});
__d('FormData',[],function(global, require, module, exports) {  'use strict';var _slicedToArray=(function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n = (_s = _i.next()).done);_n = true) {_arr.push(_s.value);if(i && _arr.length === i)break;}}catch(err) {_d = true;_e = err;}finally {try{if(!_n && _i['return'])_i['return']();}finally {if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else {throw new TypeError('Invalid attempt to destructure non-iterable instance');}};})();var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var 














































FormData=(function(){



function FormData(){_classCallCheck(this,FormData);
this._parts = [];
this._partsByKey = {};}_createClass(FormData,[{key:'append',value:


function append(key,value){
var parts=this._partsByKey[key];
if(parts){




parts[1] = value;
return;}

parts = [key,value];
this._parts.push(parts);
this._partsByKey[key] = parts;}},{key:'getParts',value:


function getParts(){
return this._parts.map(function(_ref){var _ref2=_slicedToArray(_ref,2);var name=_ref2[0];var value=_ref2[1];
var contentDisposition='form-data; name="' + name + '"';
var headers={'content-disposition':contentDisposition};
if(typeof value === 'string'){
return {string:value,headers:headers,fieldName:name};}






if(typeof value.name === 'string'){
headers['content-disposition'] += '; filename="' + value.name + '"';}

if(typeof value.type === 'string'){
headers['content-type'] = value.type;}

return _extends({},value,{headers:headers,fieldName:name});});}}]);return FormData;})();




module.exports = FormData;
});
__d('XMLHttpRequestBase',[],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var 















XMLHttpRequestBase=(function(){






















function XMLHttpRequestBase(){_classCallCheck(this,XMLHttpRequestBase);
this.UNSENT = 0;
this.OPENED = 1;
this.HEADERS_RECEIVED = 2;
this.LOADING = 3;
this.DONE = 4;

this.onreadystatechange = null;
this.onload = null;
this.upload = undefined;

this._reset();
this._method = null;
this._url = null;
this._aborted = false;}_createClass(XMLHttpRequestBase,[{key:'_reset',value:


function _reset(){
this.readyState = this.UNSENT;
this.responseHeaders = undefined;
this.responseText = '';
this.status = 0;

this._headers = {};
this._sent = false;
this._lowerCaseResponseHeaders = {};}},{key:'getAllResponseHeaders',value:


function getAllResponseHeaders(){
if(!this.responseHeaders){

return null;}

var headers=this.responseHeaders || {};
return Object.keys(headers).map(function(headerName){
return headerName + ': ' + headers[headerName];}).
join('\n');}},{key:'getResponseHeader',value:


function getResponseHeader(header){
var value=this._lowerCaseResponseHeaders[header.toLowerCase()];
return value !== undefined?value:null;}},{key:'setRequestHeader',value:


function setRequestHeader(header,value){
if(this.readyState !== this.OPENED){
throw new Error('Request has not been opened');}

this._headers[header.toLowerCase()] = value;}},{key:'open',value:


function open(method,url,async){

if(this.readyState !== this.UNSENT){
throw new Error('Cannot open, already sending');}

if(async !== undefined && !async){

throw new Error('Synchronous http requests are not supported');}

this._reset();
this._method = method;
this._url = url;
this._aborted = false;
this.setReadyState(this.OPENED);}},{key:'sendImpl',value:


function sendImpl(method,url,headers,data){
throw new Error('Subclass must define sendImpl method');}},{key:'abortImpl',value:


function abortImpl(){
throw new Error('Subclass must define abortImpl method');}},{key:'send',value:


function send(data){
if(this.readyState !== this.OPENED){
throw new Error('Request has not been opened');}

if(this._sent){
throw new Error('Request has already been sent');}

this._sent = true;
this.sendImpl(this._method,this._url,this._headers,data);}},{key:'abort',value:


function abort(){
this._aborted = true;
this.abortImpl();


if(!(this.readyState === this.UNSENT || 
this.readyState === this.OPENED && !this._sent || 
this.readyState === this.DONE)){
this._reset();
this.setReadyState(this.DONE);}


this._reset();}},{key:'callback',value:


function callback(status,responseHeaders,responseText){
if(this._aborted){
return;}

this.status = status;
this.setResponseHeaders(responseHeaders || {});
this.responseText = responseText;
this.setReadyState(this.DONE);}},{key:'setResponseHeaders',value:


function setResponseHeaders(responseHeaders){
this.responseHeaders = responseHeaders || null;
var headers=responseHeaders || {};
this._lowerCaseResponseHeaders = 
Object.keys(headers).reduce(function(lcaseHeaders,headerName){
lcaseHeaders[headerName.toLowerCase()] = headers[headerName];
return lcaseHeaders;},
{});}},{key:'setReadyState',value:


function setReadyState(newState){
this.readyState = newState;

var onreadystatechange=this.onreadystatechange;
if(onreadystatechange){


onreadystatechange(null);}

if(newState === this.DONE && !this._aborted){
this._sendLoad();}}},{key:'_sendLoad',value:



function _sendLoad(){

var onload=this.onload;
if(onload){


onload(null);}}}]);return XMLHttpRequestBase;})();




module.exports = XMLHttpRequestBase;
});
__d('fetch',[],function(global, require, module, exports) {  'use strict';
















var self={};

/**
 * Copyright (c) 2014 GitHub, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * @preserve-header
 */
(function(){
'use strict';

if(self.fetch){
return;}


function normalizeName(name){
if(typeof name !== 'string'){
name = String(name);}

if(/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)){
throw new TypeError('Invalid character in header field name');}

return name.toLowerCase();}


function normalizeValue(value){
if(typeof value !== 'string'){
value = String(value);}

return value;}


function Headers(headers){
this.map = {};

if(headers instanceof Headers){
headers.forEach(function(value,name){
this.append(name,value);},
this);}else 

if(headers){
Object.getOwnPropertyNames(headers).forEach(function(name){
this.append(name,headers[name]);},
this);}}



Headers.prototype.append = function(name,value){
name = normalizeName(name);
value = normalizeValue(value);
var list=this.map[name];
if(!list){
list = [];
this.map[name] = list;}

list.push(value);};


Headers.prototype['delete'] = function(name){
delete this.map[normalizeName(name)];};


Headers.prototype.get = function(name){
var values=this.map[normalizeName(name)];
return values?values[0]:null;};


Headers.prototype.getAll = function(name){
return this.map[normalizeName(name)] || [];};


Headers.prototype.has = function(name){
return this.map.hasOwnProperty(normalizeName(name));};


Headers.prototype.set = function(name,value){
this.map[normalizeName(name)] = [normalizeValue(value)];};


Headers.prototype.forEach = function(callback,thisArg){
Object.getOwnPropertyNames(this.map).forEach(function(name){
this.map[name].forEach(function(value){
callback.call(thisArg,value,name,this);},
this);},
this);};


function consumed(body){
if(body.bodyUsed){
return Promise.reject(new TypeError('Already read'));}

body.bodyUsed = true;}


function fileReaderReady(reader){
return new Promise(function(resolve,reject){
reader.onload = function(){
resolve(reader.result);};

reader.onerror = function(){
reject(reader.error);};});}




function readBlobAsArrayBuffer(blob){
var reader=new FileReader();
reader.readAsArrayBuffer(blob);
return fileReaderReady(reader);}


function readBlobAsText(blob){
var reader=new FileReader();
reader.readAsText(blob);
return fileReaderReady(reader);}


var support={
blob:typeof FileReader === 'function' && typeof Blob === 'function' && (function(){
try{
new Blob();
return true;}
catch(e) {
return false;}})(),


formData:typeof FormData === 'function'};


function Body(){
this.bodyUsed = false;


this._initBody = function(body){
this._bodyInit = body;
if(typeof body === 'string'){
this._bodyText = body;}else 
if(support.blob && Blob.prototype.isPrototypeOf(body)){
this._bodyBlob = body;}else 
if(support.formData && FormData.prototype.isPrototypeOf(body)){
this._bodyFormData = body;}else 
if(!body){
this._bodyText = '';}else 
{
throw new Error('unsupported BodyInit type');}};



if(support.blob){
this.blob = function(){
var rejected=consumed(this);
if(rejected){
return rejected;}


if(this._bodyBlob){
return Promise.resolve(this._bodyBlob);}else 
if(this._bodyFormData){
throw new Error('could not read FormData body as blob');}else 
{
return Promise.resolve(new Blob([this._bodyText]));}};



this.arrayBuffer = function(){
return this.blob().then(readBlobAsArrayBuffer);};


this.text = function(){
var rejected=consumed(this);
if(rejected){
return rejected;}


if(this._bodyBlob){
return readBlobAsText(this._bodyBlob);}else 
if(this._bodyFormData){
throw new Error('could not read FormData body as text');}else 
{
return Promise.resolve(this._bodyText);}};}else 


{
this.text = function(){
var rejected=consumed(this);
return rejected?rejected:Promise.resolve(this._bodyText);};}



if(support.formData){
this.formData = function(){
return this.text().then(decode);};}



this.json = function(){
return this.text().then(JSON.parse);};


return this;}



var methods=['DELETE','GET','HEAD','OPTIONS','POST','PUT'];

function normalizeMethod(method){
var upcased=method.toUpperCase();
return methods.indexOf(upcased) > -1?upcased:method;}


function Request(input,options){
options = options || {};
var body=options.body;
if(Request.prototype.isPrototypeOf(input)){
if(input.bodyUsed){
throw new TypeError('Already read');}

this.url = input.url;
this.credentials = input.credentials;
if(!options.headers){
this.headers = new Headers(input.headers);}

this.method = input.method;
this.mode = input.mode;
if(!body){
body = input._bodyInit;
input.bodyUsed = true;}}else 

{
this.url = input;}


this.credentials = options.credentials || this.credentials || 'omit';
if(options.headers || !this.headers){
this.headers = new Headers(options.headers);}

this.method = normalizeMethod(options.method || this.method || 'GET');
this.mode = options.mode || this.mode || null;
this.referrer = null;

if((this.method === 'GET' || this.method === 'HEAD') && body){
throw new TypeError('Body not allowed for GET or HEAD requests');}

this._initBody(body);}


function decode(body){
var form=new FormData();
body.trim().split('&').forEach(function(bytes){
if(bytes){
var split=bytes.split('=');
var name=split.shift().replace(/\+/g,' ');
var value=split.join('=').replace(/\+/g,' ');
form.append(decodeURIComponent(name),decodeURIComponent(value));}});


return form;}


function headers(xhr){
var head=new Headers();
var pairs=xhr.getAllResponseHeaders().trim().split('\n');
pairs.forEach(function(header){
var split=header.trim().split(':');
var key=split.shift().trim();
var value=split.join(':').trim();
head.append(key,value);});

return head;}


Body.call(Request.prototype);

function Response(bodyInit,options){
if(!options){
options = {};}


this._initBody(bodyInit);
this.type = 'default';
this.url = null;
this.status = options.status;
this.ok = this.status >= 200 && this.status < 300;
this.statusText = options.statusText;
this.headers = options.headers instanceof Headers?options.headers:new Headers(options.headers);
this.url = options.url || '';}


Body.call(Response.prototype);

self.Headers = Headers;
self.Request = Request;
self.Response = Response;

self.fetch = function(input,init){
var request;
if(Request.prototype.isPrototypeOf(input) && !init){
request = input;}else 
{
request = new Request(input,init);}


return new Promise(function(resolve,reject){
var xhr=new XMLHttpRequest();

function responseURL(){
if('responseURL' in xhr){
return xhr.responseURL;}



if(/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())){
return xhr.getResponseHeader('X-Request-URL');}


return;}


xhr.onload = function(){
var status=xhr.status === 1223?204:xhr.status;
if(status < 100 || status > 599){
reject(new TypeError('Network request failed'));
return;}

var options={
status:status,
statusText:xhr.statusText,
headers:headers(xhr),
url:responseURL()};

var body='response' in xhr?xhr.response:xhr.responseText;
resolve(new Response(body,options));};


xhr.onerror = function(){
reject(new TypeError('Network request failed'));};


xhr.open(request.method,request.url,true);

if(request.credentials === 'include'){
xhr.withCredentials = true;}


if('responseType' in xhr && support.blob){
xhr.responseType = 'blob';}


request.headers.forEach(function(value,name){
xhr.setRequestHeader(name,value);});


xhr.send(typeof request._bodyInit === 'undefined'?null:request._bodyInit);});};


self.fetch.polyfill = true;})();




module.exports = self;
});
__d('Geolocation',["RCTDeviceEventEmitter","NativeModules","invariant","logError","warning"],function(global, require, module, exports) {  'use strict';












var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTLocationObserver=require('NativeModules').LocationObserver;

var invariant=require('invariant');
var logError=require('logError');
var warning=require('warning');

var subscriptions=[];

var updatesEnabled=false;















var Geolocation={





getCurrentPosition:function(
geo_success,
geo_error,
geo_options)
{
invariant(
typeof geo_success === 'function',
'Must provide a valid geo_success callback.');

RCTLocationObserver.getCurrentPosition(
geo_options || {},
geo_success,
geo_error || logError);},







watchPosition:function(success,error,options){
if(!updatesEnabled){
RCTLocationObserver.startObserving(options || {});
updatesEnabled = true;}

var watchID=subscriptions.length;
subscriptions.push([
RCTDeviceEventEmitter.addListener(
'geolocationDidChange',
success),

error?RCTDeviceEventEmitter.addListener(
'geolocationError',
error):
null]);

return watchID;},


clearWatch:function(watchID){
var sub=subscriptions[watchID];
if(!sub){


return;}


sub[0].remove();

var sub1=sub[1];sub1 && sub1.remove();
subscriptions[watchID] = undefined;
var noWatchers=true;
for(var ii=0;ii < subscriptions.length;ii++) {
if(subscriptions[ii]){
noWatchers = false;}}


if(noWatchers){
Geolocation.stopObserving();}},



stopObserving:function(){
if(updatesEnabled){
RCTLocationObserver.stopObserving();
updatesEnabled = false;
for(var ii=0;ii < subscriptions.length;ii++) {
var sub=subscriptions[ii];
if(sub){
warning('Called stopObserving with existing subscriptions.');
sub[0].remove();

var sub1=sub[1];sub1 && sub1.remove();}}


subscriptions = [];}}};




module.exports = Geolocation;
});
__d('logError',[],function(global, require, module, exports) {  'use strict';

















var logError=function(){
if(arguments.length === 1 && arguments[0] instanceof Error){
var err=arguments[0];
console.error('Error: "' + err.message + '".  Stack:\n' + err.stack);}else 
{
console.error.apply(console,arguments);}};



module.exports = logError;
});
__d('WebSocket',["RCTDeviceEventEmitter","NativeModules","Platform","WebSocketBase","WebSocketEvent"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}











var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTWebSocketModule=require('NativeModules').WebSocketModule;

var Platform=require('Platform');
var WebSocketBase=require('WebSocketBase');
var WebSocketEvent=require('WebSocketEvent');

var WebSocketId=0;
var CLOSE_NORMAL=1000;var 






WebSocket=(function(_WebSocketBase){_inherits(WebSocket,_WebSocketBase);function WebSocket(){_classCallCheck(this,WebSocket);_get(Object.getPrototypeOf(WebSocket.prototype),'constructor',this).apply(this,arguments);}_createClass(WebSocket,[{key:'connectToSocketImpl',value:



function connectToSocketImpl(url){
this._socketId = WebSocketId++;

RCTWebSocketModule.connect(url,this._socketId);

this._registerEvents(this._socketId);}},{key:'closeConnectionImpl',value:


function closeConnectionImpl(code,reason){
this._closeWebSocket(this._socketId,code,reason);}},{key:'cancelConnectionImpl',value:


function cancelConnectionImpl(){
this._closeWebSocket(this._socketId);}},{key:'sendStringImpl',value:


function sendStringImpl(message){
RCTWebSocketModule.send(message,this._socketId);}},{key:'sendArrayBufferImpl',value:


function sendArrayBufferImpl(){

console.warn('Sending ArrayBuffers is not yet supported');}},{key:'_closeWebSocket',value:


function _closeWebSocket(id,code,reason){
if(Platform.OS === 'android'){



var statusCode=typeof code === 'number'?code:CLOSE_NORMAL;
var closeReason=typeof reason === 'string'?reason:'';
RCTWebSocketModule.close(statusCode,closeReason,id);}else 
{
RCTWebSocketModule.close(id);}}},{key:'_unregisterEvents',value:



function _unregisterEvents(){
this._subs.forEach(function(e){return e.remove();});
this._subs = [];}},{key:'_registerEvents',value:


function _registerEvents(id){var _this=this;
this._subs = [
RCTDeviceEventEmitter.addListener('websocketMessage',function(ev){
if(ev.id !== id){
return;}

var event=new WebSocketEvent('message',{
data:ev.data});

_this.onmessage && _this.onmessage(event);
_this.dispatchEvent(event);}),

RCTDeviceEventEmitter.addListener('websocketOpen',function(ev){
if(ev.id !== id){
return;}

_this.readyState = _this.OPEN;
var event=new WebSocketEvent('open');
_this.onopen && _this.onopen(event);
_this.dispatchEvent(event);}),

RCTDeviceEventEmitter.addListener('websocketClosed',function(ev){
if(ev.id !== id){
return;}

_this.readyState = _this.CLOSED;
var event=new WebSocketEvent('close');
event.code = ev.code;
event.reason = ev.reason;
_this.onclose && _this.onclose(event);
_this.dispatchEvent(event);
_this._unregisterEvents();
_this._closeWebSocket(id);}),

RCTDeviceEventEmitter.addListener('websocketFailed',function(ev){
if(ev.id !== id){
return;}

var event=new WebSocketEvent('error');
event.message = ev.message;
_this.onerror && _this.onerror(event);
_this.dispatchEvent(event);
_this._unregisterEvents();
_this.readyState === _this.OPEN && _this._closeWebSocket(id);})];}}]);return WebSocket;})(WebSocketBase);





module.exports = WebSocket;
});
__d('WebSocketBase',["event-target-shim/lib/EventTarget.js"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}











var EventTarget=require('event-target-shim/lib/EventTarget.js');var 




WebSocketBase=(function(_EventTarget){_inherits(WebSocketBase,_EventTarget);

















function WebSocketBase(url,protocols){_classCallCheck(this,WebSocketBase);
_get(Object.getPrototypeOf(WebSocketBase.prototype),'constructor',this).call(this);
this.CONNECTING = 0;
this.OPEN = 1;
this.CLOSING = 2;
this.CLOSED = 3;

if(!protocols){
protocols = [];}


this.connectToSocketImpl(url);}_createClass(WebSocketBase,[{key:'close',value:


function close(){
if(this.readyState === WebSocketBase.CLOSING || 
this.readyState === WebSocketBase.CLOSED){
return;}


if(this.readyState === WebSocketBase.CONNECTING){
this.cancelConnectionImpl();}


this.closeConnectionImpl();}},{key:'send',value:


function send(data){
if(this.readyState === WebSocketBase.CONNECTING){
throw new Error('INVALID_STATE_ERR');}


if(typeof data === 'string'){
this.sendStringImpl(data);}else 
if(data instanceof ArrayBuffer){
this.sendArrayBufferImpl(data);}else 
{
throw new Error('Not supported data type');}}},{key:'closeConnectionImpl',value:



function closeConnectionImpl(){
throw new Error('Subclass must define closeConnectionImpl method');}},{key:'connectToSocketImpl',value:


function connectToSocketImpl(){
throw new Error('Subclass must define connectToSocketImpl method');}},{key:'cancelConnectionImpl',value:


function cancelConnectionImpl(){
throw new Error('Subclass must define cancelConnectionImpl method');}},{key:'sendStringImpl',value:


function sendStringImpl(){
throw new Error('Subclass must define sendStringImpl method');}},{key:'sendArrayBufferImpl',value:


function sendArrayBufferImpl(){
throw new Error('Subclass must define sendArrayBufferImpl method');}}]);return WebSocketBase;})(EventTarget);



module.exports = WebSocketBase;
});
__d('event-target-shim/lib/EventTarget.js',["event-target-shim/lib/commons.js","event-target-shim/lib/CustomEventTarget.js","event-target-shim/lib/EventWrapper.js"],function(global, require, module, exports) {  "use strict";

Object.defineProperty(exports,"__esModule",{
value:true});

exports["default"] = EventTarget;

var _commons=require("event-target-shim/lib/commons.js");

var _CustomEventTarget=require("event-target-shim/lib/CustomEventTarget.js");

var _EventWrapper=require("event-target-shim/lib/EventWrapper.js");

var HAS_EVENTTARGET_INTERFACE=typeof window !== "undefined" && typeof window.EventTarget !== "undefined";

function EventTarget(){
for(var _len=arguments.length,types=Array(_len),_key=0;_key < _len;_key++) {
types[_key] = arguments[_key];}


if(this instanceof EventTarget){









Object.defineProperty(this,_commons.LISTENERS,{value:Object.create(null)});}else 
if(types.length > 0){





return (0,_CustomEventTarget.defineCustomEventTarget)(EventTarget,types);}else 
{
throw new TypeError("Cannot call a class as a function");}}



EventTarget.prototype = Object.create((HAS_EVENTTARGET_INTERFACE?window.EventTarget:Object).prototype,{
constructor:{
value:EventTarget,
writable:true,
configurable:true},


addEventListener:{
value:function addEventListener(type,listener){
var capture=arguments[2] === undefined?false:arguments[2];

if(listener == null){
return false;}

if(typeof listener !== "function"){
throw new TypeError("listener should be a function.");}


var kind=capture?_commons.CAPTURE:_commons.BUBBLE;
var node=this[_commons.LISTENERS][type];
if(node == null){
this[_commons.LISTENERS][type] = (0,_commons.newNode)(listener,kind);
return true;}


var prev=null;
while(node != null) {
if(node.listener === listener && node.kind === kind){

return false;}

prev = node;
node = node.next;}


prev.next = (0,_commons.newNode)(listener,kind);
return true;},

configurable:true,
writable:true},


removeEventListener:{
value:function removeEventListener(type,listener){
var capture=arguments[2] === undefined?false:arguments[2];

if(listener == null){
return false;}


var kind=capture?_commons.CAPTURE:_commons.BUBBLE;
var prev=null;
var node=this[_commons.LISTENERS][type];
while(node != null) {
if(node.listener === listener && node.kind === kind){
if(prev == null){
this[_commons.LISTENERS][type] = node.next;}else 
{
prev.next = node.next;}

return true;}


prev = node;
node = node.next;}


return false;},

configurable:true,
writable:true},


dispatchEvent:{
value:function dispatchEvent(event){

var node=this[_commons.LISTENERS][event.type];
if(node == null){
return true;}



event = (0,_EventWrapper.createEventWrapper)(event,this);



while(node != null) {
node.listener.call(this,event);
if(event[_EventWrapper.STOP_IMMEDIATE_PROPAGATION_FLAG]){
break;}

node = node.next;}


return !event.defaultPrevented;},

configurable:true,
writable:true}});


module.exports = exports["default"];
});
__d('event-target-shim/lib/commons.js',[],function(global, require, module, exports) {  "use strict";

Object.defineProperty(exports,"__esModule",{
value:true});

exports.newNode = newNode;
var symbol=typeof Symbol !== "undefined"?Symbol:function Symbol(name){
return "[[" + name + "_" + Math.random().toFixed(8).slice(2) + "]]";};


exports.symbol = symbol;
var LISTENERS=symbol("listeners");
exports.LISTENERS = LISTENERS;
var CAPTURE=1;
exports.CAPTURE = CAPTURE;
var BUBBLE=2;
exports.BUBBLE = BUBBLE;
var ATTRIBUTE=3;

exports.ATTRIBUTE = ATTRIBUTE;


function newNode(listener,kind){
return {listener:listener,kind:kind,next:null};}
});
__d('event-target-shim/lib/CustomEventTarget.js',["event-target-shim/lib/commons.js"],function(global, require, module, exports) {  "use strict";

Object.defineProperty(exports,"__esModule",{
value:true});

exports.defineCustomEventTarget = defineCustomEventTarget;

var _commons=require("event-target-shim/lib/commons.js");

function getAttributeListener(eventTarget,type){
var node=eventTarget[_commons.LISTENERS][type];
while(node != null) {
if(node.kind === _commons.ATTRIBUTE){
return node.listener;}

node = node.next;}

return null;}


function setAttributeListener(eventTarget,type,listener){
if(listener != null && typeof listener !== "function"){
throw new TypeError("listener should be a function.");}


var prev=null;
var node=eventTarget[_commons.LISTENERS][type];
while(node != null) {
if(node.kind === _commons.ATTRIBUTE){

if(prev == null){
eventTarget[_commons.LISTENERS][type] = node.next;}else 
{
prev.next = node.next;}}else 

{
prev = node;}


node = node.next;}



if(listener != null){
if(prev == null){
eventTarget[_commons.LISTENERS][type] = (0,_commons.newNode)(listener,_commons.ATTRIBUTE);}else 
{
prev.next = (0,_commons.newNode)(listener,_commons.ATTRIBUTE);}}}




function defineCustomEventTarget(EventTargetBase,types){
function EventTarget(){
EventTargetBase.call(this);}


var descripter={
constructor:{
value:EventTarget,
configurable:true,
writable:true}};



types.forEach(function(type){
descripter["on" + type] = {
get:function get(){
return getAttributeListener(this,type);},

set:function set(listener){
setAttributeListener(this,type,listener);},

configurable:true,
enumerable:true};});



EventTarget.prototype = Object.create(EventTargetBase.prototype,descripter);

return EventTarget;}
});
__d('event-target-shim/lib/EventWrapper.js',["event-target-shim/lib/commons.js"],function(global, require, module, exports) {  "use strict";

Object.defineProperty(exports,"__esModule",{
value:true});

exports.createEventWrapper = createEventWrapper;

var _commons=require("event-target-shim/lib/commons.js");

var STOP_IMMEDIATE_PROPAGATION_FLAG=(0,_commons.symbol)("stop_immediate_propagation_flag");

exports.STOP_IMMEDIATE_PROPAGATION_FLAG = STOP_IMMEDIATE_PROPAGATION_FLAG;
var CANCELED_FLAG=(0,_commons.symbol)("canceled_flag");
var ORIGINAL_EVENT=(0,_commons.symbol)("original_event");

var wrapperPrototypeDefinition={
stopPropagation:{
value:function stopPropagation(){
var e=this[ORIGINAL_EVENT];
if(typeof e.stopPropagation === "function"){
e.stopPropagation();}},


writable:true,
configurable:true},


stopImmediatePropagation:{
value:function stopImmediatePropagation(){
this[STOP_IMMEDIATE_PROPAGATION_FLAG] = true;

var e=this[ORIGINAL_EVENT];
if(typeof e.stopImmediatePropagation === "function"){
e.stopImmediatePropagation();}},


writable:true,
configurable:true},


preventDefault:{
value:function preventDefault(){
if(this.cancelable === true){
this[CANCELED_FLAG] = true;}


var e=this[ORIGINAL_EVENT];
if(typeof e.preventDefault === "function"){
e.preventDefault();}},


writable:true,
configurable:true},


defaultPrevented:{
get:function get(){
return this[CANCELED_FLAG];},

enumerable:true,
configurable:true}};



function createEventWrapper(event,eventTarget){
var timeStamp=typeof event.timeStamp === "number"?event.timeStamp:Date.now();

var props={
type:{value:event.type,enumerable:true},
target:{value:eventTarget,enumerable:true},
currentTarget:{value:eventTarget,enumerable:true},
eventPhase:{value:2,enumerable:true},
bubbles:{value:Boolean(event.bubbles),enumerable:true},
cancelable:{value:Boolean(event.cancelable),enumerable:true},
timeStamp:{value:timeStamp,enumerable:true},
isTrusted:{value:false,enumerable:true}};

if(typeof event.detail !== "undefined"){
props.detail = {value:event.detail,enumerable:true};}


var retv=Object.create(Object.create(event,wrapperPrototypeDefinition),props);
Object.defineProperty(retv,STOP_IMMEDIATE_PROPAGATION_FLAG,{value:false,writable:true});
Object.defineProperty(retv,CANCELED_FLAG,{value:false,writable:true});
Object.defineProperty(retv,ORIGINAL_EVENT,{value:event});

return retv;}
});
__d('WebSocketEvent',[],function(global, require, module, exports) {  'use strict';function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var 




















WebSocketEvent=
function WebSocketEvent(type,eventInitDict){_classCallCheck(this,WebSocketEvent);
this.type = type.toString();
Object.assign(this,eventInitDict);};



module.exports = WebSocketEvent;
});
__d('EventPluginHub',["EventPluginRegistry","EventPluginUtils","accumulateInto","forEachAccumulated","invariant","warning"],function(global, require, module, exports) {  'use strict';












var EventPluginRegistry=require('EventPluginRegistry');
var EventPluginUtils=require('EventPluginUtils');

var accumulateInto=require('accumulateInto');
var forEachAccumulated=require('forEachAccumulated');
var invariant=require('invariant');
var warning=require('warning');




var listenerBank={};





var eventQueue=null;







var executeDispatchesAndRelease=function(event){
if(event){
var executeDispatch=EventPluginUtils.executeDispatch;

var PluginModule=EventPluginRegistry.getPluginModuleForEvent(event);
if(PluginModule && PluginModule.executeDispatch){
executeDispatch = PluginModule.executeDispatch;}

EventPluginUtils.executeDispatchesInOrder(event,executeDispatch);

if(!event.isPersistent()){
event.constructor.release(event);}}};








var InstanceHandle=null;

function validateInstanceHandle(){
var valid=
InstanceHandle && 
InstanceHandle.traverseTwoPhase && 
InstanceHandle.traverseEnterLeave;
warning(
valid,
'InstanceHandle not injected before use!');}

























var EventPluginHub={




injection:{





injectMount:EventPluginUtils.injection.injectMount,





injectInstanceHandle:function(InjectedInstanceHandle){
InstanceHandle = InjectedInstanceHandle;
if(__DEV__){
validateInstanceHandle();}},



getInstanceHandle:function(){
if(__DEV__){
validateInstanceHandle();}

return InstanceHandle;},






injectEventPluginOrder:EventPluginRegistry.injectEventPluginOrder,




injectEventPluginsByName:EventPluginRegistry.injectEventPluginsByName},



eventNameDispatchConfigs:EventPluginRegistry.eventNameDispatchConfigs,

registrationNameModules:EventPluginRegistry.registrationNameModules,








putListener:function(id,registrationName,listener){
invariant(
typeof listener === 'function',
'Expected %s listener to be a function, instead got type %s',
registrationName,typeof listener);


var bankForRegistrationName=
listenerBank[registrationName] || (listenerBank[registrationName] = {});
bankForRegistrationName[id] = listener;

var PluginModule=
EventPluginRegistry.registrationNameModules[registrationName];
if(PluginModule && PluginModule.didPutListener){
PluginModule.didPutListener(id,registrationName,listener);}},








getListener:function(id,registrationName){
var bankForRegistrationName=listenerBank[registrationName];
return bankForRegistrationName && bankForRegistrationName[id];},








deleteListener:function(id,registrationName){
var PluginModule=
EventPluginRegistry.registrationNameModules[registrationName];
if(PluginModule && PluginModule.willDeleteListener){
PluginModule.willDeleteListener(id,registrationName);}


var bankForRegistrationName=listenerBank[registrationName];

if(bankForRegistrationName){
delete bankForRegistrationName[id];}},








deleteAllListeners:function(id){
for(var registrationName in listenerBank) {
if(!listenerBank[registrationName][id]){
continue;}


var PluginModule=
EventPluginRegistry.registrationNameModules[registrationName];
if(PluginModule && PluginModule.willDeleteListener){
PluginModule.willDeleteListener(id,registrationName);}


delete listenerBank[registrationName][id];}},














extractEvents:function(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent,
nativeEventTarget){
var events;
var plugins=EventPluginRegistry.plugins;
for(var i=0;i < plugins.length;i++) {

var possiblePlugin=plugins[i];
if(possiblePlugin){
var extractedEvents=possiblePlugin.extractEvents(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent,
nativeEventTarget);

if(extractedEvents){
events = accumulateInto(events,extractedEvents);}}}



return events;},









enqueueEvents:function(events){
if(events){
eventQueue = accumulateInto(eventQueue,events);}},








processEventQueue:function(){


var processingEventQueue=eventQueue;
eventQueue = null;
forEachAccumulated(processingEventQueue,executeDispatchesAndRelease);
invariant(
!eventQueue,
'processEventQueue(): Additional events were enqueued while processing ' + 
'an event queue. Support for this has not yet been implemented.');},






__purge:function(){
listenerBank = {};},


__getListenerBank:function(){
return listenerBank;}};




module.exports = EventPluginHub;
});
__d('EventPluginRegistry',["invariant"],function(global, require, module, exports) {  'use strict';













var invariant=require('invariant');




var EventPluginOrder=null;




var namesToPlugins={};






function recomputePluginOrdering(){
if(!EventPluginOrder){

return;}

for(var pluginName in namesToPlugins) {
var PluginModule=namesToPlugins[pluginName];
var pluginIndex=EventPluginOrder.indexOf(pluginName);
invariant(
pluginIndex > -1,
'EventPluginRegistry: Cannot inject event plugins that do not exist in ' + 
'the plugin ordering, `%s`.',
pluginName);

if(EventPluginRegistry.plugins[pluginIndex]){
continue;}

invariant(
PluginModule.extractEvents,
'EventPluginRegistry: Event plugins must implement an `extractEvents` ' + 
'method, but `%s` does not.',
pluginName);

EventPluginRegistry.plugins[pluginIndex] = PluginModule;
var publishedEvents=PluginModule.eventTypes;
for(var eventName in publishedEvents) {
invariant(
publishEventForPlugin(
publishedEvents[eventName],
PluginModule,
eventName),

'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.',
eventName,
pluginName);}}}













function publishEventForPlugin(dispatchConfig,PluginModule,eventName){
invariant(
!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName),
'EventPluginHub: More than one plugin attempted to publish the same ' + 
'event name, `%s`.',
eventName);

EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

var phasedRegistrationNames=dispatchConfig.phasedRegistrationNames;
if(phasedRegistrationNames){
for(var phaseName in phasedRegistrationNames) {
if(phasedRegistrationNames.hasOwnProperty(phaseName)){
var phasedRegistrationName=phasedRegistrationNames[phaseName];
publishRegistrationName(
phasedRegistrationName,
PluginModule,
eventName);}}



return true;}else 
if(dispatchConfig.registrationName){
publishRegistrationName(
dispatchConfig.registrationName,
PluginModule,
eventName);

return true;}

return false;}










function publishRegistrationName(registrationName,PluginModule,eventName){
invariant(
!EventPluginRegistry.registrationNameModules[registrationName],
'EventPluginHub: More than one plugin attempted to publish the same ' + 
'registration name, `%s`.',
registrationName);

EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
EventPluginRegistry.registrationNameDependencies[registrationName] = 
PluginModule.eventTypes[eventName].dependencies;}







var EventPluginRegistry={




plugins:[],




eventNameDispatchConfigs:{},




registrationNameModules:{},




registrationNameDependencies:{},










injectEventPluginOrder:function(InjectedEventPluginOrder){
invariant(
!EventPluginOrder,
'EventPluginRegistry: Cannot inject event plugin ordering more than ' + 
'once. You are likely trying to load more than one copy of React.');


EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
recomputePluginOrdering();},












injectEventPluginsByName:function(injectedNamesToPlugins){
var isOrderingDirty=false;
for(var pluginName in injectedNamesToPlugins) {
if(!injectedNamesToPlugins.hasOwnProperty(pluginName)){
continue;}

var PluginModule=injectedNamesToPlugins[pluginName];
if(!namesToPlugins.hasOwnProperty(pluginName) || 
namesToPlugins[pluginName] !== PluginModule){
invariant(
!namesToPlugins[pluginName],
'EventPluginRegistry: Cannot inject two different event plugins ' + 
'using the same name, `%s`.',
pluginName);

namesToPlugins[pluginName] = PluginModule;
isOrderingDirty = true;}}


if(isOrderingDirty){
recomputePluginOrdering();}},










getPluginModuleForEvent:function(event){
var dispatchConfig=event.dispatchConfig;
if(dispatchConfig.registrationName){
return EventPluginRegistry.registrationNameModules[
dispatchConfig.registrationName] || 
null;}

for(var phase in dispatchConfig.phasedRegistrationNames) {
if(!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)){
continue;}

var PluginModule=EventPluginRegistry.registrationNameModules[
dispatchConfig.phasedRegistrationNames[phase]];

if(PluginModule){
return PluginModule;}}


return null;},






_resetEventPlugins:function(){
EventPluginOrder = null;
for(var pluginName in namesToPlugins) {
if(namesToPlugins.hasOwnProperty(pluginName)){
delete namesToPlugins[pluginName];}}


EventPluginRegistry.plugins.length = 0;

var eventNameDispatchConfigs=EventPluginRegistry.eventNameDispatchConfigs;
for(var eventName in eventNameDispatchConfigs) {
if(eventNameDispatchConfigs.hasOwnProperty(eventName)){
delete eventNameDispatchConfigs[eventName];}}



var registrationNameModules=EventPluginRegistry.registrationNameModules;
for(var registrationName in registrationNameModules) {
if(registrationNameModules.hasOwnProperty(registrationName)){
delete registrationNameModules[registrationName];}}}};






module.exports = EventPluginRegistry;
});
__d('EventPluginUtils',["EventConstants","invariant","warning"],function(global, require, module, exports) {  'use strict';












var EventConstants=require('EventConstants');

var invariant=require('invariant');
var warning=require('warning');









var injection={
Mount:null,
injectMount:function(InjectedMount){
injection.Mount = InjectedMount;
if(__DEV__){
warning(
InjectedMount && InjectedMount.getNode && InjectedMount.getID,
'EventPluginUtils.injection.injectMount(...): Injected Mount ' + 
'module is missing getNode or getID.');}}};





var topLevelTypes=EventConstants.topLevelTypes;

function isEndish(topLevelType){
return topLevelType === topLevelTypes.topMouseUp || 
topLevelType === topLevelTypes.topTouchEnd || 
topLevelType === topLevelTypes.topTouchCancel;}


function isMoveish(topLevelType){
return topLevelType === topLevelTypes.topMouseMove || 
topLevelType === topLevelTypes.topTouchMove;}

function isStartish(topLevelType){
return topLevelType === topLevelTypes.topMouseDown || 
topLevelType === topLevelTypes.topTouchStart;}



var validateEventDispatches;
if(__DEV__){
validateEventDispatches = function(event){
var dispatchListeners=event._dispatchListeners;
var dispatchIDs=event._dispatchIDs;

var listenersIsArr=Array.isArray(dispatchListeners);
var idsIsArr=Array.isArray(dispatchIDs);
var IDsLen=idsIsArr?dispatchIDs.length:dispatchIDs?1:0;
var listenersLen=listenersIsArr?
dispatchListeners.length:
dispatchListeners?1:0;

warning(
idsIsArr === listenersIsArr && IDsLen === listenersLen,
'EventPluginUtils: Invalid `event`.');};}









function forEachEventDispatch(event,cb){
var dispatchListeners=event._dispatchListeners;
var dispatchIDs=event._dispatchIDs;
if(__DEV__){
validateEventDispatches(event);}

if(Array.isArray(dispatchListeners)){
for(var i=0;i < dispatchListeners.length;i++) {
if(event.isPropagationStopped()){
break;}


cb(event,dispatchListeners[i],dispatchIDs[i]);}}else 

if(dispatchListeners){
cb(event,dispatchListeners,dispatchIDs);}}









function executeDispatch(event,listener,domID){
event.currentTarget = injection.Mount.getNode(domID);
var returnValue=listener(event,domID);
event.currentTarget = null;
return returnValue;}





function executeDispatchesInOrder(event,cb){
forEachEventDispatch(event,cb);
event._dispatchListeners = null;
event._dispatchIDs = null;}









function executeDispatchesInOrderStopAtTrueImpl(event){
var dispatchListeners=event._dispatchListeners;
var dispatchIDs=event._dispatchIDs;
if(__DEV__){
validateEventDispatches(event);}

if(Array.isArray(dispatchListeners)){
for(var i=0;i < dispatchListeners.length;i++) {
if(event.isPropagationStopped()){
break;}


if(dispatchListeners[i](event,dispatchIDs[i])){
return dispatchIDs[i];}}}else 


if(dispatchListeners){
if(dispatchListeners(event,dispatchIDs)){
return dispatchIDs;}}


return null;}





function executeDispatchesInOrderStopAtTrue(event){
var ret=executeDispatchesInOrderStopAtTrueImpl(event);
event._dispatchIDs = null;
event._dispatchListeners = null;
return ret;}











function executeDirectDispatch(event){
if(__DEV__){
validateEventDispatches(event);}

var dispatchListener=event._dispatchListeners;
var dispatchID=event._dispatchIDs;
invariant(
!Array.isArray(dispatchListener),
'executeDirectDispatch(...): Invalid `event`.');

var res=dispatchListener?
dispatchListener(event,dispatchID):
null;
event._dispatchListeners = null;
event._dispatchIDs = null;
return res;}






function hasDispatches(event){
return !!event._dispatchListeners;}





var EventPluginUtils={
isEndish:isEndish,
isMoveish:isMoveish,
isStartish:isStartish,

executeDirectDispatch:executeDirectDispatch,
executeDispatch:executeDispatch,
executeDispatchesInOrder:executeDispatchesInOrder,
executeDispatchesInOrderStopAtTrue:executeDispatchesInOrderStopAtTrue,
hasDispatches:hasDispatches,

getNode:function(id){
return injection.Mount.getNode(id);},

getID:function(node){
return injection.Mount.getID(node);},


injection:injection};


module.exports = EventPluginUtils;
});
__d('EventConstants',["keyMirror"],function(global, require, module, exports) {  'use strict';












var keyMirror=require('keyMirror');

var PropagationPhases=keyMirror({bubbled:null,captured:null});




var topLevelTypes=keyMirror({
topBlur:null,
topChange:null,
topClick:null,
topCompositionEnd:null,
topCompositionStart:null,
topCompositionUpdate:null,
topContextMenu:null,
topCopy:null,
topCut:null,
topDoubleClick:null,
topDrag:null,
topDragEnd:null,
topDragEnter:null,
topDragExit:null,
topDragLeave:null,
topDragOver:null,
topDragStart:null,
topDrop:null,
topError:null,
topFocus:null,
topInput:null,
topKeyDown:null,
topKeyPress:null,
topKeyUp:null,
topLoad:null,
topMouseDown:null,
topMouseMove:null,
topMouseOut:null,
topMouseOver:null,
topMouseUp:null,
topPaste:null,
topReset:null,
topScroll:null,
topSelectionChange:null,
topSubmit:null,
topTextInput:null,
topTouchCancel:null,
topTouchEnd:null,
topTouchMove:null,
topTouchStart:null,
topWheel:null});


var EventConstants={
topLevelTypes:topLevelTypes,
PropagationPhases:PropagationPhases};


module.exports = EventConstants;
});
__d('accumulateInto',["invariant"],function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');















function accumulateInto(current,next){
invariant(
next != null,
'accumulateInto(...): Accumulated items must not be null or undefined.');

if(current == null){
return next;}




var currentIsArray=Array.isArray(current);
var nextIsArray=Array.isArray(next);

if(currentIsArray && nextIsArray){
current.push.apply(current,next);
return current;}


if(currentIsArray){
current.push(next);
return current;}


if(nextIsArray){

return [current].concat(next);}


return [current,next];}


module.exports = accumulateInto;
});
__d('forEachAccumulated',[],function(global, require, module, exports) {  'use strict';



















var forEachAccumulated=function(arr,cb,scope){
if(Array.isArray(arr)){
arr.forEach(cb,scope);}else 
if(arr){
cb.call(scope,arr);}};



module.exports = forEachAccumulated;
});
__d('IOSDefaultEventPluginOrder',[],function(global, require, module, exports) {  'use strict';












var IOSDefaultEventPluginOrder=[
'ResponderEventPlugin',
'IOSNativeBridgeEventPlugin'];


module.exports = IOSDefaultEventPluginOrder;
});
__d('IOSNativeBridgeEventPlugin',["EventPropagators","NativeModules","SyntheticEvent","merge","warning"],function(global, require, module, exports) {  'use strict';












var EventPropagators=require('EventPropagators');
var NativeModules=require('NativeModules');
var SyntheticEvent=require('SyntheticEvent');

var merge=require('merge');
var warning=require('warning');

var RCTUIManager=NativeModules.UIManager;

var customBubblingEventTypes=RCTUIManager.customBubblingEventTypes;
var customDirectEventTypes=RCTUIManager.customDirectEventTypes;

var allTypesByEventName={};

for(var bubblingTypeName in customBubblingEventTypes) {
allTypesByEventName[bubblingTypeName] = customBubblingEventTypes[bubblingTypeName];}


for(var directTypeName in customDirectEventTypes) {
warning(
!customBubblingEventTypes[directTypeName],
'Event cannot be both direct and bubbling: %s',
directTypeName);

allTypesByEventName[directTypeName] = customDirectEventTypes[directTypeName];}


var IOSNativeBridgeEventPlugin={

eventTypes:merge(customBubblingEventTypes,customDirectEventTypes),









extractEvents:function(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent)
{
var bubbleDispatchConfig=customBubblingEventTypes[topLevelType];
var directDispatchConfig=customDirectEventTypes[topLevelType];
var event=SyntheticEvent.getPooled(
bubbleDispatchConfig || directDispatchConfig,
topLevelTargetID,
nativeEvent);

if(bubbleDispatchConfig){
EventPropagators.accumulateTwoPhaseDispatches(event);}else 
if(directDispatchConfig){
EventPropagators.accumulateDirectDispatches(event);}else 
{
return null;}

return event;}};



module.exports = IOSNativeBridgeEventPlugin;
});
__d('EventPropagators',["EventConstants","EventPluginHub","accumulateInto","forEachAccumulated"],function(global, require, module, exports) {  "use strict";



















var EventConstants=require('EventConstants');
var EventPluginHub=require('EventPluginHub');

var accumulateInto=require('accumulateInto');
var forEachAccumulated=require('forEachAccumulated');

var PropagationPhases=EventConstants.PropagationPhases;
var getListener=EventPluginHub.getListener;





function listenerAtPhase(id,event,propagationPhase){
var registrationName=
event.dispatchConfig.phasedRegistrationNames[propagationPhase];
return getListener(id,registrationName);}








function accumulateDirectionalDispatches(domID,upwards,event){
if(__DEV__){
if(!domID){
throw new Error('Dispatching id must not be null');}}


var phase=upwards?PropagationPhases.bubbled:PropagationPhases.captured;
var listener=listenerAtPhase(domID,event,phase);
if(listener){
event._dispatchListeners = 
accumulateInto(event._dispatchListeners,listener);
event._dispatchIDs = accumulateInto(event._dispatchIDs,domID);}}










function accumulateTwoPhaseDispatchesSingle(event){
if(event && event.dispatchConfig.phasedRegistrationNames){
EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(
event.dispatchMarker,
accumulateDirectionalDispatches,
event);}}







function accumulateTwoPhaseDispatchesSingleSkipTarget(event){
if(event && event.dispatchConfig.phasedRegistrationNames){
EventPluginHub.injection.getInstanceHandle().traverseTwoPhaseSkipTarget(
event.dispatchMarker,
accumulateDirectionalDispatches,
event);}}










function accumulateDispatches(id,ignoredDirection,event){
if(event && event.dispatchConfig.registrationName){
var registrationName=event.dispatchConfig.registrationName;
var listener=getListener(id,registrationName);
if(listener){
event._dispatchListeners = 
accumulateInto(event._dispatchListeners,listener);
event._dispatchIDs = accumulateInto(event._dispatchIDs,id);}}}









function accumulateDirectDispatchesSingle(event){
if(event && event.dispatchConfig.registrationName){
accumulateDispatches(event.dispatchMarker,null,event);}}



function accumulateTwoPhaseDispatches(events){
forEachAccumulated(events,accumulateTwoPhaseDispatchesSingle);}


function accumulateTwoPhaseDispatchesSkipTarget(events){
forEachAccumulated(events,accumulateTwoPhaseDispatchesSingleSkipTarget);}


function accumulateEnterLeaveDispatches(leave,enter,fromID,toID){
EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(
fromID,
toID,
accumulateDispatches,
leave,
enter);}




function accumulateDirectDispatches(events){
forEachAccumulated(events,accumulateDirectDispatchesSingle);}















var EventPropagators={
accumulateTwoPhaseDispatches:accumulateTwoPhaseDispatches,
accumulateTwoPhaseDispatchesSkipTarget:accumulateTwoPhaseDispatchesSkipTarget,
accumulateDirectDispatches:accumulateDirectDispatches,
accumulateEnterLeaveDispatches:accumulateEnterLeaveDispatches};


module.exports = EventPropagators;
});
__d('SyntheticEvent',["PooledClass","Object.assign","emptyFunction"],function(global, require, module, exports) {  'use strict';













var PooledClass=require('PooledClass');

var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');





var EventInterface={
path:null,
type:null,

currentTarget:emptyFunction.thatReturnsNull,
eventPhase:null,
bubbles:null,
cancelable:null,
timeStamp:function(event){
return event.timeStamp || Date.now();},

defaultPrevented:null,
isTrusted:null};



















function SyntheticEvent(dispatchConfig,dispatchMarker,nativeEvent,nativeEventTarget){
this.dispatchConfig = dispatchConfig;
this.dispatchMarker = dispatchMarker;
this.nativeEvent = nativeEvent;
this.target = nativeEventTarget;
this.currentTarget = nativeEventTarget;

var Interface=this.constructor.Interface;
for(var propName in Interface) {
if(!Interface.hasOwnProperty(propName)){
continue;}

var normalize=Interface[propName];
if(normalize){
this[propName] = normalize(nativeEvent);}else 
{
this[propName] = nativeEvent[propName];}}



var defaultPrevented=nativeEvent.defaultPrevented != null?
nativeEvent.defaultPrevented:
nativeEvent.returnValue === false;
if(defaultPrevented){
this.isDefaultPrevented = emptyFunction.thatReturnsTrue;}else 
{
this.isDefaultPrevented = emptyFunction.thatReturnsFalse;}

this.isPropagationStopped = emptyFunction.thatReturnsFalse;}


assign(SyntheticEvent.prototype,{

preventDefault:function(){
this.defaultPrevented = true;
var event=this.nativeEvent;
if(event.preventDefault){
event.preventDefault();}else 
{
event.returnValue = false;}

this.isDefaultPrevented = emptyFunction.thatReturnsTrue;},


stopPropagation:function(){
var event=this.nativeEvent;
if(event.stopPropagation){
event.stopPropagation();}else 
{
event.cancelBubble = true;}

this.isPropagationStopped = emptyFunction.thatReturnsTrue;},







persist:function(){
this.isPersistent = emptyFunction.thatReturnsTrue;},







isPersistent:emptyFunction.thatReturnsFalse,




destructor:function(){
var Interface=this.constructor.Interface;
for(var propName in Interface) {
this[propName] = null;}

this.dispatchConfig = null;
this.dispatchMarker = null;
this.nativeEvent = null;}});




SyntheticEvent.Interface = EventInterface;







SyntheticEvent.augmentClass = function(Class,Interface){
var Super=this;

var prototype=Object.create(Super.prototype);
assign(prototype,Class.prototype);
Class.prototype = prototype;
Class.prototype.constructor = Class;

Class.Interface = assign({},Super.Interface,Interface);
Class.augmentClass = Super.augmentClass;

PooledClass.addPoolingTo(Class,PooledClass.fourArgumentPooler);};


PooledClass.addPoolingTo(SyntheticEvent,PooledClass.fourArgumentPooler);

module.exports = SyntheticEvent;
});
__d('merge',["mergeInto"],function(global, require, module, exports) {  "use strict";
































var mergeInto=require('mergeInto');








var merge=function(one,two){
var result={};
mergeInto(result,one);
mergeInto(result,two);
return result;};


module.exports = merge;
});
__d('mergeInto',["mergeHelpers"],function(global, require, module, exports) {  "use strict";

































var mergeHelpers=require('mergeHelpers');

var checkMergeObjectArg=mergeHelpers.checkMergeObjectArg;
var checkMergeIntoObjectArg=mergeHelpers.checkMergeIntoObjectArg;







function mergeInto(one,two){
checkMergeIntoObjectArg(one);
if(two != null){
checkMergeObjectArg(two);
for(var key in two) {
if(!two.hasOwnProperty(key)){
continue;}

one[key] = two[key];}}}




module.exports = mergeInto;
});
__d('mergeHelpers',["invariant","keyMirror"],function(global, require, module, exports) {  "use strict";


































var invariant=require('invariant');
var keyMirror=require('keyMirror');





var MAX_MERGE_DEPTH=36;







var isTerminal=function(o){
return typeof o !== 'object' || o === null;};


var mergeHelpers={

MAX_MERGE_DEPTH:MAX_MERGE_DEPTH,

isTerminal:isTerminal,







normalizeMergeArg:function(arg){
return arg === undefined || arg === null?{}:arg;},










checkMergeArrayArgs:function(one,two){
invariant(
Array.isArray(one) && Array.isArray(two),
'Tried to merge arrays, instead got %s and %s.',
one,
two);},







checkMergeObjectArgs:function(one,two){
mergeHelpers.checkMergeObjectArg(one);
mergeHelpers.checkMergeObjectArg(two);},





checkMergeObjectArg:function(arg){
invariant(
!isTerminal(arg) && !Array.isArray(arg),
'Tried to merge an object, instead got %s.',
arg);},






checkMergeIntoObjectArg:function(arg){
invariant(
(!isTerminal(arg) || typeof arg === 'function') && !Array.isArray(arg),
'Tried to merge into an object, instead got %s.',
arg);},









checkMergeLevel:function(level){
invariant(
level < MAX_MERGE_DEPTH,
'Maximum deep merge depth exceeded. You may be attempting to merge ' + 
'circular structures in an unsupported way.');},








checkArrayStrategy:function(strategy){
invariant(
strategy === undefined || strategy in mergeHelpers.ArrayStrategies,
'You must provide an array strategy to deep merge functions to ' + 
'instruct the deep merge how to resolve merging two arrays.');},










ArrayStrategies:keyMirror({
Clobber:true,
IndexByIndex:true})};




module.exports = mergeHelpers;
});
__d('NodeHandle',[],function(global, require, module, exports) {  var 




























































NodeHandle={



injection:{
injectImplementation:function(Impl){
NodeHandle._Implementation = Impl;}},



_Implementation:null,





getRootNodeID:function(nodeHandle){
return NodeHandle._Implementation.getRootNodeID(nodeHandle);}};



module.exports = NodeHandle;
});
__d('ReactDefaultBatchingStrategy',["ReactUpdates","Transaction","Object.assign","emptyFunction"],function(global, require, module, exports) {  'use strict';












var ReactUpdates=require('ReactUpdates');
var Transaction=require('Transaction');

var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');

var RESET_BATCHED_UPDATES={
initialize:emptyFunction,
close:function(){
ReactDefaultBatchingStrategy.isBatchingUpdates = false;}};



var FLUSH_BATCHED_UPDATES={
initialize:emptyFunction,
close:ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)};


var TRANSACTION_WRAPPERS=[FLUSH_BATCHED_UPDATES,RESET_BATCHED_UPDATES];

function ReactDefaultBatchingStrategyTransaction(){
this.reinitializeTransaction();}


assign(
ReactDefaultBatchingStrategyTransaction.prototype,
Transaction.Mixin,
{
getTransactionWrappers:function(){
return TRANSACTION_WRAPPERS;}});




var transaction=new ReactDefaultBatchingStrategyTransaction();

var ReactDefaultBatchingStrategy={
isBatchingUpdates:false,





batchedUpdates:function(callback,a,b,c,d,e){
var alreadyBatchingUpdates=ReactDefaultBatchingStrategy.isBatchingUpdates;

ReactDefaultBatchingStrategy.isBatchingUpdates = true;


if(alreadyBatchingUpdates){
callback(a,b,c,d,e);}else 
{
transaction.perform(callback,null,a,b,c,d,e);}}};




module.exports = ReactDefaultBatchingStrategy;
});
__d('ReactNativeComponentEnvironment',["ReactNativeDOMIDOperations","ReactNativeReconcileTransaction"],function(global, require, module, exports) {  'use strict';












var ReactNativeDOMIDOperations=require('ReactNativeDOMIDOperations');
var ReactNativeReconcileTransaction=require('ReactNativeReconcileTransaction');

var ReactNativeComponentEnvironment={

processChildrenUpdates:ReactNativeDOMIDOperations.dangerouslyProcessChildrenUpdates,

replaceNodeWithMarkupByID:ReactNativeDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,






unmountIDFromEnvironment:function(){},






clearNode:function(){},



ReactReconcileTransaction:ReactNativeReconcileTransaction};


module.exports = ReactNativeComponentEnvironment;
});
__d('ReactNativeDOMIDOperations',["ReactNativeTagHandles","ReactMultiChildUpdateTypes","NativeModules","ReactPerf"],function(global, require, module, exports) {  'use strict';












var ReactNativeTagHandles=require('ReactNativeTagHandles');
var ReactMultiChildUpdateTypes=require('ReactMultiChildUpdateTypes');
var RCTUIManager=require('NativeModules').UIManager;
var ReactPerf=require('ReactPerf');













var dangerouslyProcessChildrenUpdates=function(childrenUpdates,markupList){
if(!childrenUpdates.length){
return;}

var byContainerTag={};


for(var i=0;i < childrenUpdates.length;i++) {
var update=childrenUpdates[i];
var containerTag=ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(update.parentID);
var updates=byContainerTag[containerTag] || (byContainerTag[containerTag] = {});
if(update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING){
(updates.moveFromIndices || (updates.moveFromIndices = [])).push(update.fromIndex);
(updates.moveToIndices || (updates.moveToIndices = [])).push(update.toIndex);}else 
if(update.type === ReactMultiChildUpdateTypes.REMOVE_NODE){
(updates.removeAtIndices || (updates.removeAtIndices = [])).push(update.fromIndex);}else 
if(update.type === ReactMultiChildUpdateTypes.INSERT_MARKUP){
var mountImage=markupList[update.markupIndex];
var tag=mountImage.tag;
var rootNodeID=mountImage.rootNodeID;
ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(rootNodeID,tag);
(updates.addAtIndices || (updates.addAtIndices = [])).push(update.toIndex);
(updates.addChildTags || (updates.addChildTags = [])).push(tag);}}





for(var updateParentTagString in byContainerTag) {
var updateParentTagNumber=+updateParentTagString;
var childUpdatesToSend=byContainerTag[updateParentTagNumber];
RCTUIManager.manageChildren(
updateParentTagNumber,
childUpdatesToSend.moveFromIndices,
childUpdatesToSend.moveToIndices,
childUpdatesToSend.addChildTags,
childUpdatesToSend.addAtIndices,
childUpdatesToSend.removeAtIndices);}};








var ReactNativeDOMIDOperations={
dangerouslyProcessChildrenUpdates:ReactPerf.measure(

'ReactDOMIDOperations',
'dangerouslyProcessChildrenUpdates',
dangerouslyProcessChildrenUpdates),








dangerouslyReplaceNodeWithMarkupByID:ReactPerf.measure(
'ReactDOMIDOperations',
'dangerouslyReplaceNodeWithMarkupByID',
function(id,mountImage){
var oldTag=ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(id);
RCTUIManager.replaceExistingNonRootView(oldTag,mountImage.tag);
ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(id,mountImage.tag);})};




module.exports = ReactNativeDOMIDOperations;
});
__d('ReactMultiChildUpdateTypes',["keyMirror"],function(global, require, module, exports) {  'use strict';












var keyMirror=require('keyMirror');









var ReactMultiChildUpdateTypes=keyMirror({
INSERT_MARKUP:null,
MOVE_EXISTING:null,
REMOVE_NODE:null,
TEXT_CONTENT:null});


module.exports = ReactMultiChildUpdateTypes;
});
__d('ReactNativeReconcileTransaction',["CallbackQueue","PooledClass","Transaction"],function(global, require, module, exports) {  'use strict';












var CallbackQueue=require('CallbackQueue');
var PooledClass=require('PooledClass');
var Transaction=require('Transaction');





var ON_DOM_READY_QUEUEING={



initialize:function(){
this.reactMountReady.reset();},





close:function(){
this.reactMountReady.notifyAll();}};








var TRANSACTION_WRAPPERS=[ON_DOM_READY_QUEUEING];















function ReactNativeReconcileTransaction(){
this.reinitializeTransaction();
this.reactMountReady = CallbackQueue.getPooled(null);}


var Mixin={







getTransactionWrappers:function(){
return TRANSACTION_WRAPPERS;},






getReactMountReady:function(){
return this.reactMountReady;},






destructor:function(){
CallbackQueue.release(this.reactMountReady);
this.reactMountReady = null;}};



Object.assign(
ReactNativeReconcileTransaction.prototype,
Transaction.Mixin,
ReactNativeReconcileTransaction,
Mixin);


PooledClass.addPoolingTo(ReactNativeReconcileTransaction);

module.exports = ReactNativeReconcileTransaction;
});
__d('ReactNativeGlobalInteractionHandler',["InteractionManager"],function(global, require, module, exports) {  'use strict';












var InteractionManager=require('InteractionManager');



var interactionHandle=null;

var ReactNativeGlobalInteractionHandler={
onChange:function(numberActiveTouches){
if(numberActiveTouches === 0){
if(interactionHandle){
InteractionManager.clearInteractionHandle(interactionHandle);
interactionHandle = null;}}else 

if(!interactionHandle){
interactionHandle = InteractionManager.createInteractionHandle();}}};




module.exports = ReactNativeGlobalInteractionHandler;
});
__d('InteractionManager',["ErrorUtils","EventEmitter","Set","invariant","keyMirror","setImmediate"],function(global, require, module, exports) {  'use strict';












var ErrorUtils=require('ErrorUtils');
var EventEmitter=require('EventEmitter');
var Set=require('Set');

var invariant=require('invariant');
var keyMirror=require('keyMirror');
var setImmediate=require('setImmediate');



var _emitter=new EventEmitter();
var _interactionSet=new Set();
var _addInteractionSet=new Set();
var _deleteInteractionSet=new Set();
var _nextUpdateHandle=null;
var _queue=[];
var _inc=0;




































var InteractionManager={
Events:keyMirror({
interactionStart:true,
interactionComplete:true}),





runAfterInteractions:function(callback){
invariant(
typeof callback === 'function',
'Must specify a function to schedule.');

scheduleUpdate();
_queue.push(callback);},





createInteractionHandle:function(){
scheduleUpdate();
var handle=++_inc;
_addInteractionSet.add(handle);
return handle;},





clearInteractionHandle:function(handle){
invariant(
!!handle,
'Must provide a handle to clear.');

scheduleUpdate();
_addInteractionSet.delete(handle);
_deleteInteractionSet.add(handle);},


addListener:_emitter.addListener.bind(_emitter)};





function scheduleUpdate(){
if(!_nextUpdateHandle){
_nextUpdateHandle = setImmediate(processUpdate);}}






function processUpdate(){
_nextUpdateHandle = null;

var interactionCount=_interactionSet.size;
_addInteractionSet.forEach(function(handle){return (
_interactionSet.add(handle));});

_deleteInteractionSet.forEach(function(handle){return (
_interactionSet.delete(handle));});

var nextInteractionCount=_interactionSet.size;

if(interactionCount !== 0 && nextInteractionCount === 0){

_emitter.emit(InteractionManager.Events.interactionComplete);}else 
if(interactionCount === 0 && nextInteractionCount !== 0){

_emitter.emit(InteractionManager.Events.interactionStart);}



if(nextInteractionCount === 0){
var queue=_queue;
_queue = [];
queue.forEach(function(callback){
ErrorUtils.applyWithGuard(callback);});}



_addInteractionSet.clear();
_deleteInteractionSet.clear();}


module.exports = InteractionManager;
});
__d('Set',["Map","toIterator","_shouldPolyfillES6Collection"],function(global, require, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}



















var Map=require('Map');
var toIterator=require('toIterator');
var _shouldPolyfillES6Collection=require('_shouldPolyfillES6Collection');

module.exports = (function(global,undefined){





if(!_shouldPolyfillES6Collection('Set')){
return global.Set;}var 











































Set=(function(){










function Set(iterable){_classCallCheck(this,Set);
if(this == null || 
typeof this !== 'object' && typeof this !== 'function'){
throw new TypeError('Wrong set object type.');}


initSet(this);

if(iterable != null){
var it=toIterator(iterable);
var next;
while(!(next = it.next()).done) {
this.add(next.value);}}}_createClass(Set,[{key:'add',value:












function add(value){
this._map.set(value,value);
this.size = this._map.size;
return this;}},{key:'clear',value:







function clear(){
initSet(this);}},{key:'delete',value:











function _delete(value){
var ret=this._map.delete(value);
this.size = this._map.size;
return ret;}},{key:'entries',value:







function entries(){
return this._map.entries();}},{key:'forEach',value:









function forEach(callback){
var thisArg=arguments[1];
var it=this._map.keys();
var next;
while(!(next = it.next()).done) {
callback.call(thisArg,next.value,next.value,this);}}},{key:'has',value:











function has(value){
return this._map.has(value);}},{key:'values',value:







function values(){
return this._map.values();}}]);return Set;})();




Set.prototype[toIterator.ITERATOR_SYMBOL] = Set.prototype.values;


Set.prototype.keys = Set.prototype.values;

function initSet(set){
set._map = new Map();
set.size = set._map.size;}


return Set;})(
Function('return this')());
});
__d('Map',["guid","isNode","toIterator","_shouldPolyfillES6Collection"],function(global, require, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}



















var guid=require('guid');
var isNode=require('isNode');
var toIterator=require('toIterator');
var _shouldPolyfillES6Collection=require('_shouldPolyfillES6Collection');

module.exports = (function(global,undefined){




if(!_shouldPolyfillES6Collection('Map')){
return global.Map;}

























































var KIND_KEY='key';
var KIND_VALUE='value';
var KIND_KEY_VALUE='key+value';



var KEY_PREFIX='$map_';



var SECRET_SIZE_PROP;
if(__DEV__){
SECRET_SIZE_PROP = '$size' + guid();}



var OLD_IE_HASH_PREFIX='IE_HASH_';var 

Map=(function(){










function Map(iterable){_classCallCheck(this,Map);
if(!isObject(this)){
throw new TypeError('Wrong map object type.');}


initMap(this);

if(iterable != null){
var it=toIterator(iterable);
var next;
while(!(next = it.next()).done) {
if(!isObject(next.value)){
throw new TypeError('Expected iterable items to be pair objects.');}

this.set(next.value[0],next.value[1]);}}}_createClass(Map,[{key:'clear',value:








function clear(){
initMap(this);}},{key:'has',value:









function has(key){
var index=getIndex(this,key);
return !!(index != null && this._mapData[index]);}},{key:'set',value:










function set(key,value){
var index=getIndex(this,key);

if(index != null && this._mapData[index]){
this._mapData[index][1] = value;}else 
{
index = this._mapData.push([
key,
value]) - 
1;
setIndex(this,key,index);
if(__DEV__){
this[SECRET_SIZE_PROP] += 1;}else 
{
this.size += 1;}}



return this;}},{key:'get',value:









function get(key){
var index=getIndex(this,key);
if(index == null){
return undefined;}else 
{
return this._mapData[index][1];}}},{key:'delete',value:











function _delete(key){
var index=getIndex(this,key);
if(index != null && this._mapData[index]){
setIndex(this,key,undefined);
this._mapData[index] = undefined;
if(__DEV__){
this[SECRET_SIZE_PROP] -= 1;}else 
{
this.size -= 1;}

return true;}else 
{
return false;}}},{key:'entries',value:










function entries(){
return new MapIterator(this,KIND_KEY_VALUE);}},{key:'keys',value:








function keys(){
return new MapIterator(this,KIND_KEY);}},{key:'values',value:








function values(){
return new MapIterator(this,KIND_VALUE);}},{key:'forEach',value:











function forEach(callback,thisArg){
if(typeof callback !== 'function'){
throw new TypeError('Callback must be callable.');}


var boundCallback=callback.bind(thisArg || undefined);
var mapData=this._mapData;




for(var i=0;i < mapData.length;i++) {
var entry=mapData[i];
if(entry != null){
boundCallback(entry[1],entry[0],this);}}}}]);return Map;})();






Map.prototype[toIterator.ITERATOR_SYMBOL] = Map.prototype.entries;var 

MapIterator=(function(){









function MapIterator(map,kind){_classCallCheck(this,MapIterator);
if(!(isObject(map) && map['_mapData'])){
throw new TypeError('Object is not a map.');}


if([KIND_KEY,KIND_KEY_VALUE,KIND_VALUE].indexOf(kind) === -1){
throw new Error('Invalid iteration kind.');}


this._map = map;
this._nextIndex = 0;
this._kind = kind;}_createClass(MapIterator,[{key:'next',value:








function next(){
if(!this instanceof Map){
throw new TypeError('Expected to be called on a MapIterator.');}


var map=this._map;
var index=this._nextIndex;
var kind=this._kind;

if(map == null){
return createIterResultObject(undefined,true);}


var entries=map['_mapData'];

while(index < entries.length) {
var record=entries[index];

index += 1;
this._nextIndex = index;

if(record){
if(kind === KIND_KEY){
return createIterResultObject(record[0],false);}else 
if(kind === KIND_VALUE){
return createIterResultObject(record[1],false);}else 
if(kind){
return createIterResultObject(record,false);}}}




this._map = undefined;

return createIterResultObject(undefined,true);}}]);return MapIterator;})();






MapIterator.prototype[toIterator.ITERATOR_SYMBOL] = function(){
return this;};













function getIndex(map,key){
if(isObject(key)){
var hash=getHash(key);
return map._objectIndex[hash];}else 
{
var prefixedKey=KEY_PREFIX + key;
if(typeof key === 'string'){
return map._stringIndex[prefixedKey];}else 
{
return map._otherIndex[prefixedKey];}}}










function setIndex(map,key,index){
var shouldDelete=index == null;

if(isObject(key)){
var hash=getHash(key);
if(shouldDelete){
delete map._objectIndex[hash];}else 
{
map._objectIndex[hash] = index;}}else 

{
var prefixedKey=KEY_PREFIX + key;
if(typeof key === 'string'){
if(shouldDelete){
delete map._stringIndex[prefixedKey];}else 
{
map._stringIndex[prefixedKey] = index;}}else 

{
if(shouldDelete){
delete map._otherIndex[prefixedKey];}else 
{
map._otherIndex[prefixedKey] = index;}}}}










function initMap(map){






map._mapData = [];







map._objectIndex = {};


map._stringIndex = {};


map._otherIndex = {};







if(__DEV__){
if(isES5){



if(map.hasOwnProperty(SECRET_SIZE_PROP)){
map[SECRET_SIZE_PROP] = 0;}else 
{
Object.defineProperty(map,SECRET_SIZE_PROP,{
value:0,
writable:true});

Object.defineProperty(map,'size',{
set:function(v){
console.error(
'PLEASE FIX ME: You are changing the map size property which ' + 
'should not be writable and will break in production.');

throw new Error('The map size property is not writable.');},

get:function(){return map[SECRET_SIZE_PROP];}});}




return;}}





map.size = 0;}








function isObject(o){
return o != null && (typeof o === 'object' || typeof o === 'function');}









function createIterResultObject(value,done){
return {value:value,done:done};}



var isES5=(function(){
try{
Object.defineProperty({},'x',{});
return true;}
catch(e) {
return false;}})();









function isExtensible(o){
if(!isES5){
return true;}else 
{
return Object.isExtensible(o);}}











function getIENodeHash(node){
var uniqueID;
switch(node.nodeType){
case 1:
uniqueID = node.uniqueID;
break;
case 9:
uniqueID = node.documentElement.uniqueID;
break;
default:
return null;}


if(uniqueID){
return OLD_IE_HASH_PREFIX + uniqueID;}else 
{
return null;}}



var getHash=(function(){
var propIsEnumerable=Object.prototype.propertyIsEnumerable;
var hashProperty=guid();
var hashCounter=0;







return function getHash(o){
if(o[hashProperty]){
return o[hashProperty];}else 
if(!isES5 && 
o.propertyIsEnumerable && 
o.propertyIsEnumerable[hashProperty]){
return o.propertyIsEnumerable[hashProperty];}else 
if(!isES5 && 
isNode(o) && 
getIENodeHash(o)){
return getIENodeHash(o);}else 
if(!isES5 && o[hashProperty]){
return o[hashProperty];}


if(isExtensible(o)){
hashCounter += 1;
if(isES5){
Object.defineProperty(o,hashProperty,{
enumerable:false,
writable:false,
configurable:false,
value:hashCounter});}else 

if(o.propertyIsEnumerable){




o.propertyIsEnumerable = function(){
return propIsEnumerable.apply(this,arguments);};

o.propertyIsEnumerable[hashProperty] = hashCounter;}else 
if(isNode(o)){




o[hashProperty] = hashCounter;}else 
{
throw new Error('Unable to set a non-enumerable property on object.');}

return hashCounter;}else 
{
throw new Error('Non-extensible objects are not allowed as keys.');}};})();




return Map;})(
Function('return this')());
});
__d('guid',[],function(global, require, module, exports) {  function 

























guid(){
return 'f' + (Math.random() * (1 << 30)).toString(16).replace('.','');}


module.exports = guid;
});
__d('isNode',[],function(global, require, module, exports) {  function 















isNode(object){
return !!(object && (
typeof Node === 'function'?object instanceof Node:
typeof object === 'object' && 
typeof object.nodeType === 'number' && 
typeof object.nodeName === 'string'));}



module.exports = isNode;
});
__d('toIterator',[],function(global, require, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}






























var KIND_KEY='key';
var KIND_VALUE='value';
var KIND_KEY_VAL='key+value';

var ITERATOR_SYMBOL=typeof Symbol === 'function'?
Symbol.iterator:
'@@iterator';

var toIterator=(function(){
if(!(Array.prototype[ITERATOR_SYMBOL] && 
String.prototype[ITERATOR_SYMBOL])){

return (function(){var 
ArrayIterator=(function(){

function ArrayIterator(array,kind){_classCallCheck(this,ArrayIterator);
if(!Array.isArray(array)){
throw new TypeError('Object is not an Array');}

this._iteratedObject = array;
this._kind = kind;
this._nextIndex = 0;}_createClass(ArrayIterator,[{key:'next',value:



function next(){
if(!this instanceof ArrayIterator){
throw new TypeError('Object is not an ArrayIterator');}


if(this._iteratedObject == null){
return createIterResultObject(undefined,true);}


var array=this._iteratedObject;
var len=this._iteratedObject.length;
var index=this._nextIndex;
var kind=this._kind;

if(index >= len){
this._iteratedObject = undefined;
return createIterResultObject(undefined,true);}


this._nextIndex = index + 1;

if(kind === KIND_KEY){
return createIterResultObject(index,false);}else 
if(kind === KIND_VALUE){
return createIterResultObject(array[index],false);}else 
if(kind === KIND_KEY_VAL){
return createIterResultObject([index,array[index]],false);}}},{key:




'@@iterator',value:function iterator(){
return this;}}]);return ArrayIterator;})();var 



StringIterator=(function(){

function StringIterator(string){_classCallCheck(this,StringIterator);
if(typeof string !== 'string'){
throw new TypeError('Object is not a string');}

this._iteratedString = string;
this._nextIndex = 0;}_createClass(StringIterator,[{key:'next',value:



function next(){
if(!this instanceof StringIterator){
throw new TypeError('Object is not a StringIterator');}


if(this._iteratedString == null){
return createIterResultObject(undefined,true);}


var index=this._nextIndex;
var s=this._iteratedString;
var len=s.length;

if(index >= len){
this._iteratedString = undefined;
return createIterResultObject(undefined,true);}


var ret;
var first=s.charCodeAt(index);

if(first < 0xD800 || first > 0xDBFF || index + 1 === len){
ret = s[index];}else 
{
var second=s.charCodeAt(index + 1);
if(second < 0xDC00 || second > 0xDFFF){
ret = s[index];}else 
{
ret = s[index] + s[index + 1];}}



this._nextIndex = index + ret.length;

return createIterResultObject(ret,false);}},{key:



'@@iterator',value:function iterator(){
return this;}}]);return StringIterator;})();




function createIterResultObject(value,done){
return {value:value,done:done};}


return function(object,kind){
if(typeof object === 'string'){
return new StringIterator(object);}else 
if(Array.isArray(object)){
return new ArrayIterator(object,kind || KIND_VALUE);}else 
{
return object[ITERATOR_SYMBOL]();}};})();}else 



{
return function(object){
return object[ITERATOR_SYMBOL]();};}})();








Object.assign(toIterator,{
KIND_KEY:KIND_KEY,
KIND_VALUE:KIND_VALUE,
KIND_KEY_VAL:KIND_KEY_VAL,
ITERATOR_SYMBOL:ITERATOR_SYMBOL});


module.exports = toIterator;
});
__d('_shouldPolyfillES6Collection',[],function(global, require, module, exports) {  var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

























function shouldPolyfillES6Collection(collectionName){
var Collection=global[collectionName];
if(Collection == null){
return true;}


var proto=Collection.prototype;


return Collection == null || 
typeof Collection !== 'function' || 
typeof proto.clear !== 'function' || 
new Collection().size !== 0 || 
typeof proto.keys !== 'function' || 
typeof proto.forEach !== 'function' || 
isCallableWithoutNew(Collection) || 
!supportsSubclassing(Collection);}







function supportsSubclassing(Collection){var 
SubCollection=(function(_Collection){_inherits(SubCollection,_Collection);function SubCollection(){_classCallCheck(this,SubCollection);_get(Object.getPrototypeOf(SubCollection.prototype),'constructor',this).apply(this,arguments);}return SubCollection;})(Collection);
try{
var s=new SubCollection([]);


s.size;
return s instanceof Collection;}
catch(e) {
return false;}}








function isCallableWithoutNew(Collection){
try{
Collection();}
catch(e) {
return false;}

return true;}


module.exports = shouldPolyfillES6Collection;
});
__d('ReactNativeGlobalResponderHandler',["NativeModules","ReactNativeTagHandles"],function(global, require, module, exports) {  'use strict';












var RCTUIManager=require('NativeModules').UIManager;
var ReactNativeTagHandles=require('ReactNativeTagHandles');

var ReactNativeGlobalResponderHandler={
onChange:function(from,to,blockNativeResponder){
if(to !== null){
RCTUIManager.setJSResponder(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(to),
blockNativeResponder);}else 

{
RCTUIManager.clearJSResponder();}}};




module.exports = ReactNativeGlobalResponderHandler;
});
__d('ReactNativeTextComponent',["ReactNativeTagHandles","NativeModules","Object.assign"],function(global, require, module, exports) {  'use strict';












var ReactNativeTagHandles=require('ReactNativeTagHandles');
var RCTUIManager=require('NativeModules').UIManager;

var assign=require('Object.assign');

var ReactNativeTextComponent=function(props){};



assign(ReactNativeTextComponent.prototype,{

construct:function(text){

this._currentElement = text;
this._stringText = '' + text;
this._rootNodeID = null;},


mountComponent:function(rootID,transaction,context){
this._rootNodeID = rootID;
var tag=ReactNativeTagHandles.allocateTag();
var nativeTopRootID=ReactNativeTagHandles.getNativeTopRootIDFromNodeID(rootID);
RCTUIManager.createView(
tag,
'RCTRawText',
nativeTopRootID?ReactNativeTagHandles.rootNodeIDToTag[nativeTopRootID]:null,
{text:this._stringText});

return {
rootNodeID:rootID,
tag:tag};},



receiveComponent:function(nextText,transaction,context){
if(nextText !== this._currentElement){
this._currentElement = nextText;
var nextStringText='' + nextText;
if(nextStringText !== this._stringText){
this._stringText = nextStringText;
RCTUIManager.updateView(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(
this._rootNodeID),

'RCTRawText',
{text:this._stringText});}}},





unmountComponent:function(){
this._currentElement = null;
this._stringText = null;
this._rootNodeID = null;}});




module.exports = ReactNativeTextComponent;
});
__d('ResponderEventPlugin',["EventConstants","EventPluginUtils","EventPropagators","ReactInstanceHandles","ResponderSyntheticEvent","ResponderTouchHistoryStore","accumulate","invariant","keyOf"],function(global, require, module, exports) {  'use strict';












var EventConstants=require('EventConstants');
var EventPluginUtils=require('EventPluginUtils');
var EventPropagators=require('EventPropagators');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ResponderSyntheticEvent=require('ResponderSyntheticEvent');
var ResponderTouchHistoryStore=require('ResponderTouchHistoryStore');

var accumulate=require('accumulate');
var invariant=require('invariant');
var keyOf=require('keyOf');

var isStartish=EventPluginUtils.isStartish;
var isMoveish=EventPluginUtils.isMoveish;
var isEndish=EventPluginUtils.isEndish;
var executeDirectDispatch=EventPluginUtils.executeDirectDispatch;
var hasDispatches=EventPluginUtils.hasDispatches;
var executeDispatchesInOrderStopAtTrue=
EventPluginUtils.executeDispatchesInOrderStopAtTrue;





var responderID=null;





var trackedTouchCount=0;




var previousActiveTouches=0;

var changeResponder=function(nextResponderID,blockNativeResponder){
var oldResponderID=responderID;
responderID = nextResponderID;
if(ResponderEventPlugin.GlobalResponderHandler !== null){
ResponderEventPlugin.GlobalResponderHandler.onChange(
oldResponderID,
nextResponderID,
blockNativeResponder);}};




var eventTypes={




startShouldSetResponder:{
phasedRegistrationNames:{
bubbled:keyOf({onStartShouldSetResponder:null}),
captured:keyOf({onStartShouldSetResponderCapture:null})}},












scrollShouldSetResponder:{
phasedRegistrationNames:{
bubbled:keyOf({onScrollShouldSetResponder:null}),
captured:keyOf({onScrollShouldSetResponderCapture:null})}},










selectionChangeShouldSetResponder:{
phasedRegistrationNames:{
bubbled:keyOf({onSelectionChangeShouldSetResponder:null}),
captured:keyOf({onSelectionChangeShouldSetResponderCapture:null})}},







moveShouldSetResponder:{
phasedRegistrationNames:{
bubbled:keyOf({onMoveShouldSetResponder:null}),
captured:keyOf({onMoveShouldSetResponderCapture:null})}},






responderStart:{registrationName:keyOf({onResponderStart:null})},
responderMove:{registrationName:keyOf({onResponderMove:null})},
responderEnd:{registrationName:keyOf({onResponderEnd:null})},
responderRelease:{registrationName:keyOf({onResponderRelease:null})},
responderTerminationRequest:{
registrationName:keyOf({onResponderTerminationRequest:null})},

responderGrant:{registrationName:keyOf({onResponderGrant:null})},
responderReject:{registrationName:keyOf({onResponderReject:null})},
responderTerminate:{registrationName:keyOf({onResponderTerminate:null})}};






































































































































































































function setResponderAndExtractTransfer(
topLevelType,
topLevelTargetID,
nativeEvent,
nativeEventTarget){
var shouldSetEventType=
isStartish(topLevelType)?eventTypes.startShouldSetResponder:
isMoveish(topLevelType)?eventTypes.moveShouldSetResponder:
topLevelType === EventConstants.topLevelTypes.topSelectionChange?
eventTypes.selectionChangeShouldSetResponder:
eventTypes.scrollShouldSetResponder;


var bubbleShouldSetFrom=!responderID?
topLevelTargetID:
ReactInstanceHandles.getFirstCommonAncestorID(responderID,topLevelTargetID);





var skipOverBubbleShouldSetFrom=bubbleShouldSetFrom === responderID;
var shouldSetEvent=ResponderSyntheticEvent.getPooled(
shouldSetEventType,
bubbleShouldSetFrom,
nativeEvent,
nativeEventTarget);

shouldSetEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
if(skipOverBubbleShouldSetFrom){
EventPropagators.accumulateTwoPhaseDispatchesSkipTarget(shouldSetEvent);}else 
{
EventPropagators.accumulateTwoPhaseDispatches(shouldSetEvent);}

var wantsResponderID=executeDispatchesInOrderStopAtTrue(shouldSetEvent);
if(!shouldSetEvent.isPersistent()){
shouldSetEvent.constructor.release(shouldSetEvent);}


if(!wantsResponderID || wantsResponderID === responderID){
return null;}

var extracted;
var grantEvent=ResponderSyntheticEvent.getPooled(
eventTypes.responderGrant,
wantsResponderID,
nativeEvent,
nativeEventTarget);

grantEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;

EventPropagators.accumulateDirectDispatches(grantEvent);
var blockNativeResponder=executeDirectDispatch(grantEvent) === true;
if(responderID){

var terminationRequestEvent=ResponderSyntheticEvent.getPooled(
eventTypes.responderTerminationRequest,
responderID,
nativeEvent,
nativeEventTarget);

terminationRequestEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(terminationRequestEvent);
var shouldSwitch=!hasDispatches(terminationRequestEvent) || 
executeDirectDispatch(terminationRequestEvent);
if(!terminationRequestEvent.isPersistent()){
terminationRequestEvent.constructor.release(terminationRequestEvent);}


if(shouldSwitch){
var terminateType=eventTypes.responderTerminate;
var terminateEvent=ResponderSyntheticEvent.getPooled(
terminateType,
responderID,
nativeEvent,
nativeEventTarget);

terminateEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(terminateEvent);
extracted = accumulate(extracted,[grantEvent,terminateEvent]);
changeResponder(wantsResponderID,blockNativeResponder);}else 
{
var rejectEvent=ResponderSyntheticEvent.getPooled(
eventTypes.responderReject,
wantsResponderID,
nativeEvent,
nativeEventTarget);

rejectEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(rejectEvent);
extracted = accumulate(extracted,rejectEvent);}}else 

{
extracted = accumulate(extracted,grantEvent);
changeResponder(wantsResponderID,blockNativeResponder);}

return extracted;}










function canTriggerTransfer(topLevelType,topLevelTargetID,nativeEvent){
return topLevelTargetID && (



topLevelType === EventConstants.topLevelTypes.topScroll && 
!nativeEvent.responderIgnoreScroll || 
trackedTouchCount > 0 && 
topLevelType === EventConstants.topLevelTypes.topSelectionChange || 
isStartish(topLevelType) || 
isMoveish(topLevelType));}










function noResponderTouches(nativeEvent){
var touches=nativeEvent.touches;
if(!touches || touches.length === 0){
return true;}

for(var i=0;i < touches.length;i++) {
var activeTouch=touches[i];
var target=activeTouch.target;
if(target !== null && target !== undefined && target !== 0){

var isAncestor=
ReactInstanceHandles.isAncestorIDOf(
responderID,
EventPluginUtils.getID(target));

if(isAncestor){
return false;}}}



return true;}



var ResponderEventPlugin={

getResponderID:function(){
return responderID;},


eventTypes:eventTypes,













extractEvents:function(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent,
nativeEventTarget){
if(isStartish(topLevelType)){
trackedTouchCount += 1;}else 
if(isEndish(topLevelType)){
trackedTouchCount -= 1;
invariant(
trackedTouchCount >= 0,
'Ended a touch event which was not counted in trackedTouchCount.');}



ResponderTouchHistoryStore.recordTouchTrack(topLevelType,nativeEvent,nativeEventTarget);

var extracted=canTriggerTransfer(topLevelType,topLevelTargetID,nativeEvent)?
setResponderAndExtractTransfer(
topLevelType,
topLevelTargetID,
nativeEvent,
nativeEventTarget):
null;










var isResponderTouchStart=responderID && isStartish(topLevelType);
var isResponderTouchMove=responderID && isMoveish(topLevelType);
var isResponderTouchEnd=responderID && isEndish(topLevelType);
var incrementalTouch=
isResponderTouchStart?eventTypes.responderStart:
isResponderTouchMove?eventTypes.responderMove:
isResponderTouchEnd?eventTypes.responderEnd:
null;

if(incrementalTouch){
var gesture=
ResponderSyntheticEvent.getPooled(
incrementalTouch,
responderID,
nativeEvent,
nativeEventTarget);

gesture.touchHistory = ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(gesture);
extracted = accumulate(extracted,gesture);}


var isResponderTerminate=
responderID && 
topLevelType === EventConstants.topLevelTypes.topTouchCancel;
var isResponderRelease=
responderID && 
!isResponderTerminate && 
isEndish(topLevelType) && 
noResponderTouches(nativeEvent);
var finalTouch=
isResponderTerminate?eventTypes.responderTerminate:
isResponderRelease?eventTypes.responderRelease:
null;
if(finalTouch){
var finalEvent=
ResponderSyntheticEvent.getPooled(finalTouch,responderID,nativeEvent,nativeEventTarget);
finalEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(finalEvent);
extracted = accumulate(extracted,finalEvent);
changeResponder(null);}


var numberActiveTouches=
ResponderTouchHistoryStore.touchHistory.numberActiveTouches;
if(ResponderEventPlugin.GlobalInteractionHandler && 
numberActiveTouches !== previousActiveTouches){
ResponderEventPlugin.GlobalInteractionHandler.onChange(
numberActiveTouches);}


previousActiveTouches = numberActiveTouches;

return extracted;},


GlobalResponderHandler:null,
GlobalInteractionHandler:null,

injection:{





injectGlobalResponderHandler:function(GlobalResponderHandler){
ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;},






injectGlobalInteractionHandler:function(GlobalInteractionHandler){
ResponderEventPlugin.GlobalInteractionHandler = GlobalInteractionHandler;}}};




module.exports = ResponderEventPlugin;
});
__d('ResponderSyntheticEvent',["SyntheticEvent"],function(global, require, module, exports) {  'use strict';













var SyntheticEvent=require('SyntheticEvent');






var ResponderEventInterface={
touchHistory:function(nativeEvent){
return null;}};









function ResponderSyntheticEvent(dispatchConfig,dispatchMarker,nativeEvent,nativeEventTarget){
SyntheticEvent.call(this,dispatchConfig,dispatchMarker,nativeEvent,nativeEventTarget);}


SyntheticEvent.augmentClass(ResponderSyntheticEvent,ResponderEventInterface);

module.exports = ResponderSyntheticEvent;
});
__d('ResponderTouchHistoryStore',["EventPluginUtils","invariant"],function(global, require, module, exports) {  'use strict';












var EventPluginUtils=require('EventPluginUtils');

var invariant=require('invariant');

var isMoveish=EventPluginUtils.isMoveish;
var isStartish=EventPluginUtils.isStartish;
var isEndish=EventPluginUtils.isEndish;

var MAX_TOUCH_BANK=20;
















var touchHistory={
touchBank:[],
numberActiveTouches:0,



indexOfSingleActiveTouch:-1,
mostRecentTimeStamp:0};


var timestampForTouch=function(touch){



return touch.timeStamp || touch.timestamp;};







var initializeTouchData=function(touch){
return {
touchActive:true,
startTimeStamp:timestampForTouch(touch),
startPageX:touch.pageX,
startPageY:touch.pageY,
currentPageX:touch.pageX,
currentPageY:touch.pageY,
currentTimeStamp:timestampForTouch(touch),
previousPageX:touch.pageX,
previousPageY:touch.pageY,
previousTimeStamp:timestampForTouch(touch)};};



var reinitializeTouchTrack=function(touchTrack,touch){
touchTrack.touchActive = true;
touchTrack.startTimeStamp = timestampForTouch(touch);
touchTrack.startPageX = touch.pageX;
touchTrack.startPageY = touch.pageY;
touchTrack.currentPageX = touch.pageX;
touchTrack.currentPageY = touch.pageY;
touchTrack.currentTimeStamp = timestampForTouch(touch);
touchTrack.previousPageX = touch.pageX;
touchTrack.previousPageY = touch.pageY;
touchTrack.previousTimeStamp = timestampForTouch(touch);};


var validateTouch=function(touch){
var identifier=touch.identifier;
invariant(identifier != null,'Touch object is missing identifier');
if(identifier > MAX_TOUCH_BANK){
console.warn(
'Touch identifier ' + identifier + ' is greater than maximum ' + 
'supported ' + MAX_TOUCH_BANK + ' which causes performance issues ' + 
'backfilling array locations for all of the indices.');}};




var recordStartTouchData=function(touch){
var touchBank=touchHistory.touchBank;
var identifier=touch.identifier;
var touchTrack=touchBank[identifier];
if(__DEV__){
validateTouch(touch);}

if(!touchTrack){
touchBank[touch.identifier] = initializeTouchData(touch);}else 
{
reinitializeTouchTrack(touchTrack,touch);}

touchHistory.mostRecentTimeStamp = timestampForTouch(touch);};


var recordMoveTouchData=function(touch){
var touchBank=touchHistory.touchBank;
var touchTrack=touchBank[touch.identifier];
if(__DEV__){
validateTouch(touch);
invariant(touchTrack,'Touch data should have been recorded on start');}

touchTrack.touchActive = true;
touchTrack.previousPageX = touchTrack.currentPageX;
touchTrack.previousPageY = touchTrack.currentPageY;
touchTrack.previousTimeStamp = touchTrack.currentTimeStamp;
touchTrack.currentPageX = touch.pageX;
touchTrack.currentPageY = touch.pageY;
touchTrack.currentTimeStamp = timestampForTouch(touch);
touchHistory.mostRecentTimeStamp = timestampForTouch(touch);};


var recordEndTouchData=function(touch){
var touchBank=touchHistory.touchBank;
var touchTrack=touchBank[touch.identifier];
if(__DEV__){
validateTouch(touch);
invariant(touchTrack,'Touch data should have been recorded on start');}

touchTrack.previousPageX = touchTrack.currentPageX;
touchTrack.previousPageY = touchTrack.currentPageY;
touchTrack.previousTimeStamp = touchTrack.currentTimeStamp;
touchTrack.currentPageX = touch.pageX;
touchTrack.currentPageY = touch.pageY;
touchTrack.currentTimeStamp = timestampForTouch(touch);
touchTrack.touchActive = false;
touchHistory.mostRecentTimeStamp = timestampForTouch(touch);};


var ResponderTouchHistoryStore={
recordTouchTrack:function(topLevelType,nativeEvent){
var touchBank=touchHistory.touchBank;
if(isMoveish(topLevelType)){
nativeEvent.changedTouches.forEach(recordMoveTouchData);}else 
if(isStartish(topLevelType)){
nativeEvent.changedTouches.forEach(recordStartTouchData);
touchHistory.numberActiveTouches = nativeEvent.touches.length;
if(touchHistory.numberActiveTouches === 1){
touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier;}}else 

if(isEndish(topLevelType)){
nativeEvent.changedTouches.forEach(recordEndTouchData);
touchHistory.numberActiveTouches = nativeEvent.touches.length;
if(touchHistory.numberActiveTouches === 1){
for(var i=0;i < touchBank.length;i++) {
var touchTrackToCheck=touchBank[i];
if(touchTrackToCheck != null && touchTrackToCheck.touchActive){
touchHistory.indexOfSingleActiveTouch = i;
break;}}


if(__DEV__){
var activeTouchData=touchBank[touchHistory.indexOfSingleActiveTouch];
var foundActive=activeTouchData != null && !!activeTouchData.touchActive;
invariant(foundActive,'Cannot find single active touch');}}}},





touchHistory:touchHistory};



module.exports = ResponderTouchHistoryStore;
});
__d('accumulate',["invariant"],function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');








function accumulate(current,next){
invariant(
next != null,
'accumulate(...): Accumulated items must be not be null or undefined.');

if(current == null){
return next;}else 
{


var currentIsArray=Array.isArray(current);
var nextIsArray=Array.isArray(next);
if(currentIsArray){
return current.concat(next);}else 
{
if(nextIsArray){
return [current].concat(next);}else 
{
return [current,next];}}}}





module.exports = accumulate;
});
__d('UniversalWorkerNodeHandle',["ReactNativeTagHandles","invariant"],function(global, require, module, exports) {  var 



ReactNativeTagHandles=require('ReactNativeTagHandles');

var invariant=require('invariant');

var UniversalWorkerNodeHandle={
getRootNodeID:function(nodeHandle){
invariant(
nodeHandle !== undefined && nodeHandle !== null && nodeHandle !== 0,
'No node handle defined');

return ReactNativeTagHandles.tagToRootNodeID[nodeHandle];}};



module.exports = UniversalWorkerNodeHandle;
});
__d('createReactNativeComponentClass',["ReactNativeBaseComponent"],function(global, require, module, exports) {  'use strict';













var ReactNativeBaseComponent=require('ReactNativeBaseComponent');












var createReactNativeComponentClass=function(
viewConfig)
{
var Constructor=function(element){
this._currentElement = element;

this._rootNodeID = null;
this._renderedChildren = null;};

Constructor.displayName = viewConfig.uiViewClassName;
Constructor.viewConfig = viewConfig;
Constructor.propTypes = viewConfig.propTypes;
Constructor.prototype = new ReactNativeBaseComponent(viewConfig);
Constructor.prototype.constructor = Constructor;

return Constructor;};


module.exports = createReactNativeComponentClass;
});
__d('ReactNativeBaseComponent',["NativeMethodsMixin","ReactNativeAttributePayload","ReactNativeEventEmitter","ReactNativeStyleAttributes","ReactNativeTagHandles","ReactMultiChild","NativeModules","deepFreezeAndThrowOnMutationInDev","warning"],function(global, require, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var ReactNativeAttributePayload=require('ReactNativeAttributePayload');
var ReactNativeEventEmitter=require('ReactNativeEventEmitter');
var ReactNativeStyleAttributes=require('ReactNativeStyleAttributes');
var ReactNativeTagHandles=require('ReactNativeTagHandles');
var ReactMultiChild=require('ReactMultiChild');
var RCTUIManager=require('NativeModules').UIManager;

var deepFreezeAndThrowOnMutationInDev=require('deepFreezeAndThrowOnMutationInDev');
var warning=require('warning');

var registrationNames=ReactNativeEventEmitter.registrationNames;
var putListener=ReactNativeEventEmitter.putListener;
var deleteListener=ReactNativeEventEmitter.deleteListener;
var deleteAllListeners=ReactNativeEventEmitter.deleteAllListeners;














var ReactNativeBaseComponent=function(
viewConfig)
{
this.viewConfig = viewConfig;};












var cachedIndexArray=function(size){
var cachedResult=cachedIndexArray._cache[size];
if(!cachedResult){
var arr=[];
for(var i=0;i < size;i++) {
arr[i] = i;}

cachedIndexArray._cache[size] = arr;
return arr;}else 
{
return cachedResult;}};


cachedIndexArray._cache = {};





ReactNativeBaseComponent.Mixin = {
getPublicInstance:function(){

return this;},


construct:function(element){
this._currentElement = element;},


unmountComponent:function(){
deleteAllListeners(this._rootNodeID);
this.unmountChildren();
this._rootNodeID = null;},










initializeChildren:function(children,containerTag,transaction,context){
var mountImages=this.mountChildren(children,transaction,context);



if(mountImages.length){
var indexes=cachedIndexArray(mountImages.length);


var createdTags=[];
for(var i=0;i < mountImages.length;i++) {
var mountImage=mountImages[i];
var childTag=mountImage.tag;
var childID=mountImage.rootNodeID;
warning(
mountImage && mountImage.rootNodeID && mountImage.tag,
'Mount image returned does not have required data');

ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(
childID,
childTag);

createdTags[i] = mountImage.tag;}

RCTUIManager.
manageChildren(containerTag,null,null,createdTags,indexes,null);}},











receiveComponent:function(nextElement,transaction,context){
var prevElement=this._currentElement;
this._currentElement = nextElement;

if(__DEV__){
deepFreezeAndThrowOnMutationInDev(this._currentElement.props);}


var updatePayload=ReactNativeAttributePayload.diff(
prevElement.props,
nextElement.props,
this.viewConfig.validAttributes);


if(updatePayload){
RCTUIManager.updateView(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(this._rootNodeID),
this.viewConfig.uiViewClassName,
updatePayload);}



this._reconcileListenersUponUpdate(
prevElement.props,
nextElement.props);

this.updateChildren(nextElement.props.children,transaction,context);},





_registerListenersUponCreation:function(initialProps){
for(var key in initialProps) {


if(registrationNames[key] && initialProps[key]){
var listener=initialProps[key];
putListener(this._rootNodeID,key,listener);}}},









_reconcileListenersUponUpdate:function(prevProps,nextProps){
for(var key in nextProps) {
if(registrationNames[key] && nextProps[key] !== prevProps[key]){
if(nextProps[key]){
putListener(this._rootNodeID,key,nextProps[key]);}else 
{
deleteListener(this._rootNodeID,key);}}}},










mountComponent:function(rootID,transaction,context){
this._rootNodeID = rootID;

var tag=ReactNativeTagHandles.allocateTag();

if(__DEV__){
deepFreezeAndThrowOnMutationInDev(this._currentElement.props);}


var updatePayload=ReactNativeAttributePayload.create(
this._currentElement.props,
this.viewConfig.validAttributes);


var nativeTopRootID=ReactNativeTagHandles.getNativeTopRootIDFromNodeID(rootID);
RCTUIManager.createView(
tag,
this.viewConfig.uiViewClassName,
nativeTopRootID?ReactNativeTagHandles.rootNodeIDToTag[nativeTopRootID]:null,
updatePayload);


this._registerListenersUponCreation(this._currentElement.props);
this.initializeChildren(
this._currentElement.props.children,
tag,
transaction,
context);

return {
rootNodeID:rootID,
tag:tag};}};








Object.assign(
ReactNativeBaseComponent.prototype,
ReactMultiChild.Mixin,
ReactNativeBaseComponent.Mixin,
NativeMethodsMixin);


module.exports = ReactNativeBaseComponent;
});
__d('NativeMethodsMixin',["NativeModules","ReactNativeAttributePayload","TextInputState","findNodeHandle","invariant"],function(global, require, module, exports) {  'use strict';












var NativeModules=require('NativeModules');
var RCTUIManager=NativeModules.UIManager;
var ReactNativeAttributePayload=require('ReactNativeAttributePayload');
var TextInputState=require('TextInputState');

var findNodeHandle=require('findNodeHandle');
var invariant=require('invariant');

















function warnForStyleProps(props,validAttributes){
for(var key in validAttributes.style) {
if(!(validAttributes[key] || props[key] === undefined)){
console.error(
'You are setting the style `{ ' + key + ': ... }` as a prop. You ' + 
'should nest it in a style object. ' + 
'E.g. `{ style: { ' + key + ': ... } }`');}}}

















var NativeMethodsMixin={

















measure:function(callback){
RCTUIManager.measure(
findNodeHandle(this),
mountSafeCallback(this,callback));},











measureLayout:function(
relativeToNativeNode,
onSuccess,
onFail)
{
RCTUIManager.measureLayout(
findNodeHandle(this),
relativeToNativeNode,
mountSafeCallback(this,onFail),
mountSafeCallback(this,onSuccess));},









setNativeProps:function(nativeProps){
if(__DEV__){
warnForStyleProps(nativeProps,this.viewConfig.validAttributes);}


var updatePayload=ReactNativeAttributePayload.create(
nativeProps,
this.viewConfig.validAttributes);


RCTUIManager.updateView(
findNodeHandle(this),
this.viewConfig.uiViewClassName,
updatePayload);},







focus:function(){
TextInputState.focusTextInput(findNodeHandle(this));},





blur:function(){
TextInputState.blurTextInput(findNodeHandle(this));}};



function throwOnStylesProp(component,props){
if(props.styles !== undefined){
var owner=component._owner || null;
var name=component.constructor.displayName;
var msg='`styles` is not a supported property of `' + name + '`, did ' + 
'you mean `style` (singular)?';
if(owner && owner.constructor && owner.constructor.displayName){
msg += '\n\nCheck the `' + owner.constructor.displayName + '` parent ' + 
' component.';}

throw new Error(msg);}}


if(__DEV__){



var NativeMethodsMixin_DEV=NativeMethodsMixin;
invariant(
!NativeMethodsMixin_DEV.componentWillMount && 
!NativeMethodsMixin_DEV.componentWillReceiveProps,
'Do not override existing functions.');

NativeMethodsMixin_DEV.componentWillMount = function(){
throwOnStylesProp(this,this.props);};

NativeMethodsMixin_DEV.componentWillReceiveProps = function(newProps){
throwOnStylesProp(this,newProps);};}







var mountSafeCallback=function(context,callback){
return function(){
if(!callback || context.isMounted && !context.isMounted()){
return;}

return callback.apply(context,arguments);};};



module.exports = NativeMethodsMixin;
});
__d('ReactNativeAttributePayload',["Platform","deepDiffer","styleDiffer","flattenStyle"],function(global, require, module, exports) {  'use strict';












var Platform=require('Platform');

var deepDiffer=require('deepDiffer');
var styleDiffer=require('styleDiffer');
var flattenStyle=require('flattenStyle');














function translateKey(propKey){
if(propKey === 'transform'){




if(Platform.OS === 'android'){
return 'decomposedMatrix';}else 
{
return 'transformMatrix';}}


return propKey;}


function defaultDiffer(prevProp,nextProp){
if(typeof nextProp !== 'object' || nextProp === null){

return true;}else 
{

return deepDiffer(prevProp,nextProp);}}



function diffNestedProperty(
updatePayload,
prevProp,
nextProp,
validAttributes)
{





if(!styleDiffer(prevProp,nextProp)){
return updatePayload;}




var previousFlattenedStyle=flattenStyle(prevProp);
var nextFlattenedStyle=flattenStyle(nextProp);

if(!previousFlattenedStyle || !nextFlattenedStyle){
if(nextFlattenedStyle){
return addProperties(
updatePayload,
nextFlattenedStyle,
validAttributes);}


if(previousFlattenedStyle){
return clearProperties(
updatePayload,
previousFlattenedStyle,
validAttributes);}


return updatePayload;}



return diffProperties(
updatePayload,
previousFlattenedStyle,
nextFlattenedStyle,
validAttributes);}























function clearNestedProperty(
updatePayload,
prevProp,
validAttributes)
{

return diffNestedProperty(updatePayload,prevProp,{},validAttributes);}








function diffProperties(
updatePayload,
prevProps,
nextProps,
validAttributes)
{
var attributeConfig;
var nextProp;
var prevProp;

for(var propKey in nextProps) {
attributeConfig = validAttributes[propKey];
if(!attributeConfig){
continue;}


var altKey=translateKey(propKey);
if(!validAttributes[altKey]){

altKey = propKey;}


if(updatePayload && updatePayload[altKey] !== undefined){


continue;}

prevProp = prevProps[propKey];
nextProp = nextProps[propKey];



if(typeof nextProp === 'function'){
nextProp = true;


if(typeof prevProp === 'function'){
prevProp = true;}}



if(prevProp === nextProp){
continue;}



if(typeof attributeConfig !== 'object'){

if(defaultDiffer(prevProp,nextProp)){

(updatePayload || (updatePayload = {}))[altKey] = nextProp;}}else 

if(typeof attributeConfig.diff === 'function' || 
typeof attributeConfig.process === 'function'){

var shouldUpdate=prevProp === undefined || (
typeof attributeConfig.diff === 'function'?
attributeConfig.diff(prevProp,nextProp):
defaultDiffer(prevProp,nextProp));

if(shouldUpdate){
var nextValue=typeof attributeConfig.process === 'function'?
attributeConfig.process(nextProp):
nextProp;
(updatePayload || (updatePayload = {}))[altKey] = nextValue;}}else 

{

updatePayload = diffNestedProperty(
updatePayload,
prevProp,
nextProp,
attributeConfig);}}







for(var propKey in prevProps) {
if(nextProps[propKey] !== undefined){
continue;}

attributeConfig = validAttributes[propKey];
if(!attributeConfig){
continue;}


prevProp = prevProps[propKey];
if(prevProp === undefined){
continue;}


if(typeof attributeConfig !== 'object' || 
typeof attributeConfig.diff === 'function' || 
typeof attributeConfig.process === 'function'){



(updatePayload || (updatePayload = {}))[translateKey(propKey)] = null;}else 
{



updatePayload = clearNestedProperty(
updatePayload,
prevProp,
attributeConfig);}}



return updatePayload;}





function addProperties(
updatePayload,
props,
validAttributes)
{
return diffProperties(updatePayload,{},props,validAttributes);}






function clearProperties(
updatePayload,
prevProps,
validAttributes)
{
return diffProperties(updatePayload,prevProps,{},validAttributes);}


var ReactNativeAttributePayload={

create:function(
props,
validAttributes)
{
return addProperties(
null,
props,
validAttributes);},



diff:function(
prevProps,
nextProps,
validAttributes)
{
return diffProperties(
null,
prevProps,
nextProps,
validAttributes);}};





module.exports = ReactNativeAttributePayload;
});
__d('deepDiffer',[],function(global, require, module, exports) {  'use strict';















var deepDiffer=function(one,two){
if(one === two){

return false;}

if(typeof one === 'function' && typeof two === 'function'){

return false;}

if(typeof one !== 'object' || one === null){

return one !== two;}

if(typeof two !== 'object' || two === null){


return true;}

if(one.constructor !== two.constructor){
return true;}

if(Array.isArray(one)){

var len=one.length;
if(two.length !== len){
return true;}

for(var ii=0;ii < len;ii++) {
if(deepDiffer(one[ii],two[ii])){
return true;}}}else 


{
for(var key in one) {
if(deepDiffer(one[key],two[key])){
return true;}}


for(var twoKey in two) {


if(one[twoKey] === undefined && two[twoKey] !== undefined){
return true;}}}



return false;};


module.exports = deepDiffer;
});
__d('styleDiffer',["deepDiffer"],function(global, require, module, exports) {  'use strict';












var deepDiffer=require('deepDiffer');

function styleDiffer(a,b){
return !styleEqual(a,b);}


function styleEqual(a,b){
if(!a){
return !b;}

if(!b){
return !a;}

if(typeof a !== typeof b){
return false;}

if(typeof a === 'number'){
return a === b;}


if(Array.isArray(a)){
if(!Array.isArray(b) || a.length !== b.length){
return false;}

for(var i=0;i < a.length;++i) {
if(!styleEqual(a[i],b[i])){
return false;}}


return true;}


for(var key in a) {
if(deepDiffer(a[key],b[key])){
return false;}}



for(var key in b) {
if(!a.hasOwnProperty(key)){
return false;}}



return true;}


module.exports = styleDiffer;
});
__d('flattenStyle',["StyleSheetTypes","StyleSheetRegistry","invariant"],function(global, require, module, exports) {  'use strict';












var StyleSheetRegistry=require('StyleSheetRegistry');
var invariant=require('invariant');



function getStyle(style){
if(typeof style === 'number'){
return StyleSheetRegistry.getStyleByID(style);}

return style;}


function flattenStyle(style){
if(!style){
return undefined;}

invariant(style !== true,'style may be false but not true');

if(!Array.isArray(style)){
return getStyle(style);}


var result={};
for(var i=0;i < style.length;++i) {
var computedStyle=flattenStyle(style[i]);
if(computedStyle){
for(var key in computedStyle) {
result[key] = computedStyle[key];

if(__DEV__){
var value=computedStyle[key];}}}}




return result;}


module.exports = flattenStyle;
});
__d('StyleSheetTypes',[],function(global, require, module, exports) {  'use strict';Object.defineProperty(exports,'__esModule',{value:true});
});
__d('StyleSheetRegistry',[],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var styles={};
var uniqueID=1;
var emptyStyle={};var 

StyleSheetRegistry=(function(){function StyleSheetRegistry(){_classCallCheck(this,StyleSheetRegistry);}_createClass(StyleSheetRegistry,null,[{key:'registerStyle',value:
function registerStyle(style){
var id=++uniqueID;
if(__DEV__){
Object.freeze(style);}

styles[id] = style;
return id;}},{key:'getStyleByID',value:


function getStyleByID(id){
if(!id){


return emptyStyle;}


var style=styles[id];
if(!style){
console.warn('Invalid style with id `' + id + '`. Skipping ...');
return emptyStyle;}

return style;}}]);return StyleSheetRegistry;})();



module.exports = StyleSheetRegistry;
});
__d('TextInputState',["Platform","NativeModules"],function(global, require, module, exports) {  'use strict';
















var Platform=require('Platform');
var RCTUIManager=require('NativeModules').UIManager;

var TextInputState={



_currentlyFocusedID:null,





currentlyFocusedField:function(){
return this._currentlyFocusedID;},







focusTextInput:function(textFieldID){
if(this._currentlyFocusedID !== textFieldID && textFieldID !== null){
this._currentlyFocusedID = textFieldID;
if(Platform.OS === 'ios'){
RCTUIManager.focus(textFieldID);}else 
if(Platform.OS === 'android'){
RCTUIManager.dispatchViewManagerCommand(
textFieldID,
RCTUIManager.AndroidTextInput.Commands.focusTextInput,
null);}}},










blurTextInput:function(textFieldID){
if(this._currentlyFocusedID === textFieldID && textFieldID !== null){
this._currentlyFocusedID = null;
if(Platform.OS === 'ios'){
RCTUIManager.blur(textFieldID);}else 
if(Platform.OS === 'android'){
RCTUIManager.dispatchViewManagerCommand(
textFieldID,
RCTUIManager.AndroidTextInput.Commands.blurTextInput,
null);}}}};






module.exports = TextInputState;
});
__d('ReactNativeEventEmitter',["EventPluginHub","ReactEventEmitterMixin","ReactNativeTagHandles","NodeHandle","EventConstants","merge","warning"],function(global, require, module, exports) {  'use strict';












var EventPluginHub=require('EventPluginHub');
var ReactEventEmitterMixin=require('ReactEventEmitterMixin');
var ReactNativeTagHandles=require('ReactNativeTagHandles');
var NodeHandle=require('NodeHandle');
var EventConstants=require('EventConstants');

var merge=require('merge');
var warning=require('warning');

var topLevelTypes=EventConstants.topLevelTypes;







var EMPTY_NATIVE_EVENT={};








var touchSubsequence=function(touches,indices){
var ret=[];
for(var i=0;i < indices.length;i++) {
ret.push(touches[indices[i]]);}

return ret;};













var removeTouchesAtIndices=function(
touches,
indices)
{
var rippedOut=[];


var temp=touches;
for(var i=0;i < indices.length;i++) {
var index=indices[i];
rippedOut.push(touches[index]);
temp[index] = null;}

var fillAt=0;
for(var j=0;j < temp.length;j++) {
var cur=temp[j];
if(cur !== null){
temp[fillAt++] = cur;}}


temp.length = fillAt;
return rippedOut;};











var ReactNativeEventEmitter=merge(ReactEventEmitterMixin,{

registrationNames:EventPluginHub.registrationNameModules,

putListener:EventPluginHub.putListener,

getListener:EventPluginHub.getListener,

deleteListener:EventPluginHub.deleteListener,

deleteAllListeners:EventPluginHub.deleteAllListeners,











_receiveRootNodeIDEvent:function(
rootNodeID,
topLevelType,
nativeEventParam)
{
var nativeEvent=nativeEventParam || EMPTY_NATIVE_EVENT;
ReactNativeEventEmitter.handleTopLevel(
topLevelType,
rootNodeID,
rootNodeID,
nativeEvent,
nativeEvent.target);},










receiveEvent:function(
tag,
topLevelType,
nativeEventParam)
{
var rootNodeID=ReactNativeTagHandles.tagToRootNodeID[tag];
ReactNativeEventEmitter._receiveRootNodeIDEvent(
rootNodeID,
topLevelType,
nativeEventParam);},



























receiveTouches:function(
eventTopLevelType,
touches,
changedIndices)
{
var changedTouches=
eventTopLevelType === topLevelTypes.topTouchEnd || 
eventTopLevelType === topLevelTypes.topTouchCancel?
removeTouchesAtIndices(touches,changedIndices):
touchSubsequence(touches,changedIndices);

for(var jj=0;jj < changedTouches.length;jj++) {
var touch=changedTouches[jj];


touch.changedTouches = changedTouches;
touch.touches = touches;
var nativeEvent=touch;
var rootNodeID=null;
var target=nativeEvent.target;
if(target !== null && target !== undefined){
if(target < ReactNativeTagHandles.tagsStartAt){
if(__DEV__){
warning(
false,
'A view is reporting that a touch occured on tag zero.');}}else 


{
rootNodeID = NodeHandle.getRootNodeID(target);}}


ReactNativeEventEmitter._receiveRootNodeIDEvent(
rootNodeID,
eventTopLevelType,
nativeEvent);}}});





module.exports = ReactNativeEventEmitter;
});
__d('ReactEventEmitterMixin',["EventPluginHub"],function(global, require, module, exports) {  'use strict';












var EventPluginHub=require('EventPluginHub');

function runEventQueueInBatch(events){
EventPluginHub.enqueueEvents(events);
EventPluginHub.processEventQueue();}


var ReactEventEmitterMixin={










handleTopLevel:function(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent,
nativeEventTarget){
var events=EventPluginHub.extractEvents(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent,
nativeEventTarget);

runEventQueueInBatch(events);}};



module.exports = ReactEventEmitterMixin;
});
__d('ReactNativeStyleAttributes',["ImageStylePropTypes","TextStylePropTypes","ViewStylePropTypes","keyMirror","matricesDiffer","processColor","processTransform","sizesDiffer"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};













var ImageStylePropTypes=require('ImageStylePropTypes');
var TextStylePropTypes=require('TextStylePropTypes');
var ViewStylePropTypes=require('ViewStylePropTypes');

var keyMirror=require('keyMirror');
var matricesDiffer=require('matricesDiffer');
var processColor=require('processColor');
var processTransform=require('processTransform');
var sizesDiffer=require('sizesDiffer');

var ReactNativeStyleAttributes=_extends({},
keyMirror(ViewStylePropTypes),
keyMirror(TextStylePropTypes),
keyMirror(ImageStylePropTypes));


ReactNativeStyleAttributes.transform = {process:processTransform};
ReactNativeStyleAttributes.transformMatrix = {diff:matricesDiffer};
ReactNativeStyleAttributes.shadowOffset = {diff:sizesDiffer};


ReactNativeStyleAttributes.decomposedMatrix = 'decomposedMatrix';

var colorAttributes={process:processColor};
ReactNativeStyleAttributes.backgroundColor = colorAttributes;
ReactNativeStyleAttributes.borderBottomColor = colorAttributes;
ReactNativeStyleAttributes.borderColor = colorAttributes;
ReactNativeStyleAttributes.borderLeftColor = colorAttributes;
ReactNativeStyleAttributes.borderRightColor = colorAttributes;
ReactNativeStyleAttributes.borderTopColor = colorAttributes;
ReactNativeStyleAttributes.color = colorAttributes;
ReactNativeStyleAttributes.shadowColor = colorAttributes;
ReactNativeStyleAttributes.textDecorationColor = colorAttributes;
ReactNativeStyleAttributes.tintColor = colorAttributes;

module.exports = ReactNativeStyleAttributes;
});
__d('ImageStylePropTypes',["ImageResizeMode","LayoutPropTypes","ReactPropTypes","TransformPropTypes"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var ImageResizeMode=require('ImageResizeMode');
var LayoutPropTypes=require('LayoutPropTypes');
var ReactPropTypes=require('ReactPropTypes');
var TransformPropTypes=require('TransformPropTypes');

var ImageStylePropTypes=_extends({},
LayoutPropTypes,
TransformPropTypes,{
resizeMode:ReactPropTypes.oneOf(Object.keys(ImageResizeMode)),
backgroundColor:ReactPropTypes.string,
borderColor:ReactPropTypes.string,
borderWidth:ReactPropTypes.number,
borderRadius:ReactPropTypes.number,
overflow:ReactPropTypes.oneOf(['visible','hidden']),



tintColor:ReactPropTypes.string,
opacity:ReactPropTypes.number});


module.exports = ImageStylePropTypes;
});
__d('ImageResizeMode',["keyMirror"],function(global, require, module, exports) {  'use strict';












var keyMirror=require('keyMirror');





var ImageResizeMode=keyMirror({




contain:null,




cover:null,





stretch:null});


module.exports = ImageResizeMode;
});
__d('LayoutPropTypes',["ReactPropTypes"],function(global, require, module, exports) {  'use strict';












var ReactPropTypes=require('ReactPropTypes');













var LayoutPropTypes={
width:ReactPropTypes.number,
height:ReactPropTypes.number,
top:ReactPropTypes.number,
left:ReactPropTypes.number,
right:ReactPropTypes.number,
bottom:ReactPropTypes.number,
margin:ReactPropTypes.number,
marginVertical:ReactPropTypes.number,
marginHorizontal:ReactPropTypes.number,
marginTop:ReactPropTypes.number,
marginBottom:ReactPropTypes.number,
marginLeft:ReactPropTypes.number,
marginRight:ReactPropTypes.number,
padding:ReactPropTypes.number,
paddingVertical:ReactPropTypes.number,
paddingHorizontal:ReactPropTypes.number,
paddingTop:ReactPropTypes.number,
paddingBottom:ReactPropTypes.number,
paddingLeft:ReactPropTypes.number,
paddingRight:ReactPropTypes.number,
borderWidth:ReactPropTypes.number,
borderTopWidth:ReactPropTypes.number,
borderRightWidth:ReactPropTypes.number,
borderBottomWidth:ReactPropTypes.number,
borderLeftWidth:ReactPropTypes.number,

position:ReactPropTypes.oneOf([
'absolute',
'relative']),



flexDirection:ReactPropTypes.oneOf([
'row',
'column']),



flexWrap:ReactPropTypes.oneOf([
'wrap',
'nowrap']),




justifyContent:ReactPropTypes.oneOf([
'flex-start',
'flex-end',
'center',
'space-between',
'space-around']),




alignItems:ReactPropTypes.oneOf([
'flex-start',
'flex-end',
'center',
'stretch']),




alignSelf:ReactPropTypes.oneOf([
'auto',
'flex-start',
'flex-end',
'center',
'stretch']),



flex:ReactPropTypes.number};


module.exports = LayoutPropTypes;
});
__d('ReactPropTypes',["ReactElement","ReactFragment","ReactPropTypeLocationNames","emptyFunction"],function(global, require, module, exports) {  'use strict';












var ReactElement=require('ReactElement');
var ReactFragment=require('ReactFragment');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');

var emptyFunction=require('emptyFunction');
















































var ANONYMOUS='<<anonymous>>';

var ReactPropTypes={
array:createPrimitiveTypeChecker('array'),
bool:createPrimitiveTypeChecker('boolean'),
func:createPrimitiveTypeChecker('function'),
number:createPrimitiveTypeChecker('number'),
object:createPrimitiveTypeChecker('object'),
string:createPrimitiveTypeChecker('string'),

any:createAnyTypeChecker(),
arrayOf:createArrayOfTypeChecker,
element:createElementTypeChecker(),
instanceOf:createInstanceTypeChecker,
node:createNodeChecker(),
objectOf:createObjectOfTypeChecker,
oneOf:createEnumTypeChecker,
oneOfType:createUnionTypeChecker,
shape:createShapeTypeChecker};


function createChainableTypeChecker(validate){
function checkType(
isRequired,
props,
propName,
componentName,
location,
propFullName)
{
componentName = componentName || ANONYMOUS;
propFullName = propFullName || propName;
if(props[propName] == null){
var locationName=ReactPropTypeLocationNames[location];
if(isRequired){
return new Error(
'Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + 
componentName + '`.'));}


return null;}else 
{
return validate(props,propName,componentName,location,propFullName);}}



var chainedCheckType=checkType.bind(null,false);
chainedCheckType.isRequired = checkType.bind(null,true);

return chainedCheckType;}


function createPrimitiveTypeChecker(expectedType){
function validate(props,propName,componentName,location,propFullName){
var propValue=props[propName];
var propType=getPropType(propValue);
if(propType !== expectedType){
var locationName=ReactPropTypeLocationNames[location];



var preciseType=getPreciseType(propValue);

return new Error(
'Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + 
preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + 
expectedType + '`.'));}


return null;}

return createChainableTypeChecker(validate);}


function createAnyTypeChecker(){
return createChainableTypeChecker(emptyFunction.thatReturns(null));}


function createArrayOfTypeChecker(typeChecker){
function validate(props,propName,componentName,location,propFullName){
var propValue=props[propName];
if(!Array.isArray(propValue)){
var locationName=ReactPropTypeLocationNames[location];
var propType=getPropType(propValue);
return new Error(
'Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + 
propType + '` supplied to `' + componentName + '`, expected an array.'));}


for(var i=0;i < propValue.length;i++) {
var error=typeChecker(
propValue,
i,
componentName,
location,
propFullName + '[' + i + ']');

if(error instanceof Error){
return error;}}


return null;}

return createChainableTypeChecker(validate);}


function createElementTypeChecker(){
function validate(props,propName,componentName,location,propFullName){
if(!ReactElement.isValidElement(props[propName])){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + 
componentName + '`, expected a single ReactElement.'));}


return null;}

return createChainableTypeChecker(validate);}


function createInstanceTypeChecker(expectedClass){
function validate(props,propName,componentName,location,propFullName){
if(!(props[propName] instanceof expectedClass)){
var locationName=ReactPropTypeLocationNames[location];
var expectedClassName=expectedClass.name || ANONYMOUS;
return new Error(
'Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + 
componentName + '`, expected instance of `' + expectedClassName + '`.'));}


return null;}

return createChainableTypeChecker(validate);}


function createEnumTypeChecker(expectedValues){
if(!Array.isArray(expectedValues)){
return createChainableTypeChecker(function(){
return new Error('Invalid argument supplied to oneOf, expected an instance of array.');});}





function validate(props,propName,componentName,location,propFullName){
var propValue=props[propName];
for(var i=0;i < expectedValues.length;i++) {
if(propValue === expectedValues[i]){
return null;}}



var locationName=ReactPropTypeLocationNames[location];
var valuesString=JSON.stringify(expectedValues);
return new Error(
'Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + 
componentName + '`, expected one of ' + valuesString + '.'));}


return createChainableTypeChecker(validate);}


function createObjectOfTypeChecker(typeChecker){
function validate(props,propName,componentName,location,propFullName){
var propValue=props[propName];
var propType=getPropType(propValue);
if(propType !== 'object'){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + 
propType + '` supplied to `' + componentName + '`, expected an object.'));}


for(var key in propValue) {
if(propValue.hasOwnProperty(key)){
var error=typeChecker(
propValue,
key,
componentName,
location,
propFullName + '.' + key);

if(error instanceof Error){
return error;}}}



return null;}

return createChainableTypeChecker(validate);}


function createUnionTypeChecker(arrayOfTypeCheckers){
if(!Array.isArray(arrayOfTypeCheckers)){
return createChainableTypeChecker(function(){
return new Error('Invalid argument supplied to oneOfType, expected an instance of array.');});}





function validate(props,propName,componentName,location,propFullName){
for(var i=0;i < arrayOfTypeCheckers.length;i++) {
var checker=arrayOfTypeCheckers[i];
if(
checker(props,propName,componentName,location,propFullName) == null)
{
return null;}}



var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + 
componentName + '`.'));}


return createChainableTypeChecker(validate);}


function createNodeChecker(){
function validate(props,propName,componentName,location,propFullName){
if(!isNode(props[propName])){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + 
componentName + '`, expected a ReactNode.'));}


return null;}

return createChainableTypeChecker(validate);}


function createShapeTypeChecker(shapeTypes){
function validate(props,propName,componentName,location,propFullName){
var propValue=props[propName];
var propType=getPropType(propValue);
if(propType !== 'object'){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + 
componentName + '`, expected `object`.'));}


for(var key in shapeTypes) {
var checker=shapeTypes[key];
if(!checker){
continue;}

var error=checker(
propValue,
key,
componentName,
location,
propFullName + '.' + key);

if(error){
return error;}}


return null;}

return createChainableTypeChecker(validate);}


function isNode(propValue){
switch(typeof propValue){
case 'number':
case 'string':
case 'undefined':
return true;
case 'boolean':
return !propValue;
case 'object':
if(Array.isArray(propValue)){
return propValue.every(isNode);}

if(propValue === null || ReactElement.isValidElement(propValue)){
return true;}

propValue = ReactFragment.extractIfFragment(propValue);
for(var k in propValue) {
if(!isNode(propValue[k])){
return false;}}


return true;
default:
return false;}}




function getPropType(propValue){
var propType=typeof propValue;
if(Array.isArray(propValue)){
return 'array';}

if(propValue instanceof RegExp){



return 'object';}

return propType;}




function getPreciseType(propValue){
var propType=getPropType(propValue);
if(propType === 'object'){
if(propValue instanceof Date){
return 'date';}else 
if(propValue instanceof RegExp){
return 'regexp';}}


return propType;}


module.exports = ReactPropTypes;
});
__d('TransformPropTypes',["ReactPropTypes"],function(global, require, module, exports) {  'use strict';












var ReactPropTypes=require('ReactPropTypes');

var ArrayOfNumberPropType=ReactPropTypes.arrayOf(ReactPropTypes.number);

var TransformMatrixPropType=function(
props,
propName,
componentName)
{
if(props.transform && props.transformMatrix){
return new Error(
'transformMatrix and transform styles cannot be used on the same ' + 
'component');}


return ArrayOfNumberPropType(props,propName,componentName);};


var TransformPropTypes={
transform:ReactPropTypes.arrayOf(
ReactPropTypes.oneOfType([
ReactPropTypes.shape({perspective:ReactPropTypes.number}),
ReactPropTypes.shape({rotate:ReactPropTypes.string}),
ReactPropTypes.shape({rotateX:ReactPropTypes.string}),
ReactPropTypes.shape({rotateY:ReactPropTypes.string}),
ReactPropTypes.shape({rotateZ:ReactPropTypes.string}),
ReactPropTypes.shape({scale:ReactPropTypes.number}),
ReactPropTypes.shape({scaleX:ReactPropTypes.number}),
ReactPropTypes.shape({scaleY:ReactPropTypes.number}),
ReactPropTypes.shape({translateX:ReactPropTypes.number}),
ReactPropTypes.shape({translateY:ReactPropTypes.number}),
ReactPropTypes.shape({skewX:ReactPropTypes.string}),
ReactPropTypes.shape({skewY:ReactPropTypes.string})])),


transformMatrix:TransformMatrixPropType};


module.exports = TransformPropTypes;
});
__d('TextStylePropTypes',["ReactPropTypes","ViewStylePropTypes"],function(global, require, module, exports) {  'use strict';












var ReactPropTypes=require('ReactPropTypes');
var ViewStylePropTypes=require('ViewStylePropTypes');


var TextStylePropTypes=Object.assign(Object.create(ViewStylePropTypes),{
color:ReactPropTypes.string,
fontFamily:ReactPropTypes.string,
fontSize:ReactPropTypes.number,
fontStyle:ReactPropTypes.oneOf(['normal','italic']),





fontWeight:ReactPropTypes.oneOf(
['normal','bold',
'100','200','300','400','500','600','700','800','900']),




letterSpacing:ReactPropTypes.number,
lineHeight:ReactPropTypes.number,



textAlign:ReactPropTypes.oneOf(
['auto','left','right','center','justify']),




textDecorationLine:ReactPropTypes.oneOf(
['none','underline','line-through','underline line-through']),




textDecorationStyle:ReactPropTypes.oneOf(
['solid','double','dotted','dashed']),




textDecorationColor:ReactPropTypes.string,



writingDirection:ReactPropTypes.oneOf(
['auto','ltr','rtl'])});




var unsupportedProps=Object.keys({
padding:null,
paddingTop:null,
paddingLeft:null,
paddingRight:null,
paddingBottom:null,
paddingVertical:null,
paddingHorizontal:null});


for(var ii=0;ii < unsupportedProps.length;ii++) {
delete TextStylePropTypes[unsupportedProps[ii]];}


module.exports = TextStylePropTypes;
});
__d('ViewStylePropTypes',["LayoutPropTypes","ReactPropTypes","TransformPropTypes"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var LayoutPropTypes=require('LayoutPropTypes');
var ReactPropTypes=require('ReactPropTypes');
var TransformPropTypes=require('TransformPropTypes');




var ViewStylePropTypes=_extends({},
LayoutPropTypes,
TransformPropTypes,{
backfaceVisibility:ReactPropTypes.oneOf(['visible','hidden']),
backgroundColor:ReactPropTypes.string,
borderColor:ReactPropTypes.string,
borderTopColor:ReactPropTypes.string,
borderRightColor:ReactPropTypes.string,
borderBottomColor:ReactPropTypes.string,
borderLeftColor:ReactPropTypes.string,
borderRadius:ReactPropTypes.number,
borderTopLeftRadius:ReactPropTypes.number,
borderTopRightRadius:ReactPropTypes.number,
borderBottomLeftRadius:ReactPropTypes.number,
borderBottomRightRadius:ReactPropTypes.number,
borderStyle:ReactPropTypes.oneOf(['solid','dotted','dashed']),
borderWidth:ReactPropTypes.number,
borderTopWidth:ReactPropTypes.number,
borderRightWidth:ReactPropTypes.number,
borderBottomWidth:ReactPropTypes.number,
borderLeftWidth:ReactPropTypes.number,
opacity:ReactPropTypes.number,
overflow:ReactPropTypes.oneOf(['visible','hidden']),
shadowColor:ReactPropTypes.string,
shadowOffset:ReactPropTypes.shape(
{width:ReactPropTypes.number,height:ReactPropTypes.number}),

shadowOpacity:ReactPropTypes.number,
shadowRadius:ReactPropTypes.number});


module.exports = ViewStylePropTypes;
});
__d('matricesDiffer',[],function(global, require, module, exports) {  'use strict';




















var matricesDiffer=function(one,two){
if(one === two){
return false;}

return !one || !two || 
one[12] !== two[12] || 
one[13] !== two[13] || 
one[14] !== two[14] || 
one[5] !== two[5] || 
one[10] !== two[10] || 
one[1] !== two[1] || 
one[2] !== two[2] || 
one[3] !== two[3] || 
one[4] !== two[4] || 
one[6] !== two[6] || 
one[7] !== two[7] || 
one[8] !== two[8] || 
one[9] !== two[9] || 
one[11] !== two[11] || 
one[15] !== two[15];};


module.exports = matricesDiffer;
});
__d('processColor',["tinycolor","Platform"],function(global, require, module, exports) {  'use strict';











var tinycolor=require('tinycolor');
var Platform=require('Platform');


function processColor(color){
if(!color || typeof color === 'number'){
return color;}else 
if(color instanceof Array){
return color.map(processColor);}else 
{
var color=tinycolor(color);
if(color.isValid()){
var rgb=color.toRgb();


var colorInt=Math.round(rgb.a * 255) * (1 << 24) + rgb.r * (1 << 16) + rgb.g * (1 << 8) + rgb.b;
if(Platform.OS === 'android'){




colorInt = colorInt | 0x0;}

return colorInt;}

return 0;}}



module.exports = processColor;
});
__d('tinycolor',[],function(global, require, module, exports) {  'use strict';









var trimLeft=/^[\s,#]+/,
trimRight=/\s+$/,
tinyCounter=0,
mathRound=Math.round,
mathMin=Math.min,
mathMax=Math.max;

function tinycolor(color,opts){

if(!(this instanceof tinycolor)){
return new tinycolor(color,opts);}


color = color?color:'';
opts = opts || {};

var rgb=inputToRGB(color);
this._r = rgb.r,
this._g = rgb.g,
this._b = rgb.b,
this._a = rgb.a,

this._ok = rgb.ok;}


tinycolor.prototype = {
toRgb:function(){
return {r:mathRound(this._r),g:mathRound(this._g),b:mathRound(this._b),a:this._a};},

isValid:function(){
return this._ok;}};


















function inputToRGB(color){
var rgb={r:0,g:0,b:0};
var a=1;
var ok=false;
var format=false;

if(typeof color == "string"){
color = stringInputToObject(color);}


if(typeof color == "object"){
if(color.hasOwnProperty("r") && color.hasOwnProperty("g") && color.hasOwnProperty("b")){
rgb = rgbToRgb(color.r,color.g,color.b);
ok = true;}else 

if(color.hasOwnProperty("h") && color.hasOwnProperty("s") && color.hasOwnProperty("v")){
color.s = convertToPercentage(color.s);
color.v = convertToPercentage(color.v);
rgb = hsvToRgb(color.h,color.s,color.v);
ok = true;}else 

if(color.hasOwnProperty("h") && color.hasOwnProperty("s") && color.hasOwnProperty("l")){
color.s = convertToPercentage(color.s);
color.l = convertToPercentage(color.l);
rgb = hslToRgb(color.h,color.s,color.l);
ok = true;}


if(color.hasOwnProperty("a")){
a = color.a;}}



a = boundAlpha(a);

return {
ok:ok,
r:mathMin(255,mathMax(rgb.r,0)),
g:mathMin(255,mathMax(rgb.g,0)),
b:mathMin(255,mathMax(rgb.b,0)),
a:a};}















function rgbToRgb(r,g,b){
return {
r:bound01(r,255) * 255,
g:bound01(g,255) * 255,
b:bound01(b,255) * 255};}







function hslToRgb(h,s,l){
var r,g,b;

h = bound01(h,360);
s = bound01(s,100);
l = bound01(l,100);

function hue2rgb(p,q,t){
if(t < 0)t += 1;
if(t > 1)t -= 1;
if(t < 1 / 6)return p + (q - p) * 6 * t;
if(t < 1 / 2)return q;
if(t < 2 / 3)return p + (q - p) * (2 / 3 - t) * 6;
return p;}


if(s === 0){
r = g = b = l;}else 

{
var q=l < 0.5?l * (1 + s):l + s - l * s;
var p=2 * l - q;
r = hue2rgb(p,q,h + 1 / 3);
g = hue2rgb(p,q,h);
b = hue2rgb(p,q,h - 1 / 3);}


return {r:r * 255,g:g * 255,b:b * 255};}






function hsvToRgb(h,s,v){
h = bound01(h,360) * 6;
s = bound01(s,100);
v = bound01(v,100);

var i=math.floor(h),
f=h - i,
p=v * (1 - s),
q=v * (1 - f * s),
t=v * (1 - (1 - f) * s),
mod=i % 6,
r=[v,q,p,p,t,v][mod],
g=[t,v,v,q,p,p][mod],
b=[p,p,t,v,v,q][mod];

return {r:r * 255,g:g * 255,b:b * 255};}





var names=tinycolor.names = {
aliceblue:"f0f8ff",
antiquewhite:"faebd7",
aqua:"0ff",
aquamarine:"7fffd4",
azure:"f0ffff",
beige:"f5f5dc",
bisque:"ffe4c4",
black:"000",
blanchedalmond:"ffebcd",
blue:"00f",
blueviolet:"8a2be2",
brown:"a52a2a",
burlywood:"deb887",
burntsienna:"ea7e5d",
cadetblue:"5f9ea0",
chartreuse:"7fff00",
chocolate:"d2691e",
coral:"ff7f50",
cornflowerblue:"6495ed",
cornsilk:"fff8dc",
crimson:"dc143c",
cyan:"0ff",
darkblue:"00008b",
darkcyan:"008b8b",
darkgoldenrod:"b8860b",
darkgray:"a9a9a9",
darkgreen:"006400",
darkgrey:"a9a9a9",
darkkhaki:"bdb76b",
darkmagenta:"8b008b",
darkolivegreen:"556b2f",
darkorange:"ff8c00",
darkorchid:"9932cc",
darkred:"8b0000",
darksalmon:"e9967a",
darkseagreen:"8fbc8f",
darkslateblue:"483d8b",
darkslategray:"2f4f4f",
darkslategrey:"2f4f4f",
darkturquoise:"00ced1",
darkviolet:"9400d3",
deeppink:"ff1493",
deepskyblue:"00bfff",
dimgray:"696969",
dimgrey:"696969",
dodgerblue:"1e90ff",
firebrick:"b22222",
floralwhite:"fffaf0",
forestgreen:"228b22",
fuchsia:"f0f",
gainsboro:"dcdcdc",
ghostwhite:"f8f8ff",
gold:"ffd700",
goldenrod:"daa520",
gray:"808080",
green:"008000",
greenyellow:"adff2f",
grey:"808080",
honeydew:"f0fff0",
hotpink:"ff69b4",
indianred:"cd5c5c",
indigo:"4b0082",
ivory:"fffff0",
khaki:"f0e68c",
lavender:"e6e6fa",
lavenderblush:"fff0f5",
lawngreen:"7cfc00",
lemonchiffon:"fffacd",
lightblue:"add8e6",
lightcoral:"f08080",
lightcyan:"e0ffff",
lightgoldenrodyellow:"fafad2",
lightgray:"d3d3d3",
lightgreen:"90ee90",
lightgrey:"d3d3d3",
lightpink:"ffb6c1",
lightsalmon:"ffa07a",
lightseagreen:"20b2aa",
lightskyblue:"87cefa",
lightslategray:"789",
lightslategrey:"789",
lightsteelblue:"b0c4de",
lightyellow:"ffffe0",
lime:"0f0",
limegreen:"32cd32",
linen:"faf0e6",
magenta:"f0f",
maroon:"800000",
mediumaquamarine:"66cdaa",
mediumblue:"0000cd",
mediumorchid:"ba55d3",
mediumpurple:"9370db",
mediumseagreen:"3cb371",
mediumslateblue:"7b68ee",
mediumspringgreen:"00fa9a",
mediumturquoise:"48d1cc",
mediumvioletred:"c71585",
midnightblue:"191970",
mintcream:"f5fffa",
mistyrose:"ffe4e1",
moccasin:"ffe4b5",
navajowhite:"ffdead",
navy:"000080",
oldlace:"fdf5e6",
olive:"808000",
olivedrab:"6b8e23",
orange:"ffa500",
orangered:"ff4500",
orchid:"da70d6",
palegoldenrod:"eee8aa",
palegreen:"98fb98",
paleturquoise:"afeeee",
palevioletred:"db7093",
papayawhip:"ffefd5",
peachpuff:"ffdab9",
peru:"cd853f",
pink:"ffc0cb",
plum:"dda0dd",
powderblue:"b0e0e6",
purple:"800080",
rebeccapurple:"663399",
red:"f00",
rosybrown:"bc8f8f",
royalblue:"4169e1",
saddlebrown:"8b4513",
salmon:"fa8072",
sandybrown:"f4a460",
seagreen:"2e8b57",
seashell:"fff5ee",
sienna:"a0522d",
silver:"c0c0c0",
skyblue:"87ceeb",
slateblue:"6a5acd",
slategray:"708090",
slategrey:"708090",
snow:"fffafa",
springgreen:"00ff7f",
steelblue:"4682b4",
tan:"d2b48c",
teal:"008080",
thistle:"d8bfd8",
tomato:"ff6347",
turquoise:"40e0d0",
violet:"ee82ee",
wheat:"f5deb3",
white:"fff",
whitesmoke:"f5f5f5",
yellow:"ff0",
yellowgreen:"9acd32"};



function boundAlpha(a){
a = parseFloat(a);

if(isNaN(a) || a < 0 || a > 1){
a = 1;}


return a;}



function bound01(n,max){
if(isOnePointZero(n)){n = "100%";}

var processPercent=isPercentage(n);
n = mathMin(max,mathMax(0,parseFloat(n)));


if(processPercent){
n = parseInt(n * max,10) / 100;}



if(Math.abs(n - max) < 0.000001){
return 1;}



return n % max / parseFloat(max);}



function parseIntFromHex(val){
return parseInt(val,16);}




function isOnePointZero(n){
return typeof n == "string" && n.indexOf('.') != -1 && parseFloat(n) === 1;}



function isPercentage(n){
return typeof n === "string" && n.indexOf('%') != -1;}



function convertToPercentage(n){
if(n <= 1){
n = n * 100 + "%";}


return n;}


var matchers=(function(){

var CSS_INTEGER="[-\\+]?\\d+%?";


var CSS_NUMBER="[-\\+]?\\d*\\.\\d+%?";


var CSS_UNIT="(?:" + CSS_NUMBER + ")|(?:" + CSS_INTEGER + ")";




var PERMISSIVE_MATCH3="[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
var PERMISSIVE_MATCH4="[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";

return {
rgb:new RegExp("rgb" + PERMISSIVE_MATCH3),
rgba:new RegExp("rgba" + PERMISSIVE_MATCH4),
hsl:new RegExp("hsl" + PERMISSIVE_MATCH3),
hsla:new RegExp("hsla" + PERMISSIVE_MATCH4),
hsv:new RegExp("hsv" + PERMISSIVE_MATCH3),
hsva:new RegExp("hsva" + PERMISSIVE_MATCH4),
hex3:/^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
hex6:/^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/};})();






function stringInputToObject(color){
color = color.replace(trimLeft,'').replace(trimRight,'').toLowerCase();
var named=false;
if(names[color]){
color = names[color];
named = true;}else 

if(color == 'transparent'){
return {r:0,g:0,b:0,a:0,format:"name"};}






var match;
if(match = matchers.rgb.exec(color)){
return {r:match[1],g:match[2],b:match[3]};}

if(match = matchers.rgba.exec(color)){
return {r:match[1],g:match[2],b:match[3],a:match[4]};}

if(match = matchers.hsl.exec(color)){
return {h:match[1],s:match[2],l:match[3]};}

if(match = matchers.hsla.exec(color)){
return {h:match[1],s:match[2],l:match[3],a:match[4]};}

if(match = matchers.hsv.exec(color)){
return {h:match[1],s:match[2],v:match[3]};}

if(match = matchers.hsva.exec(color)){
return {h:match[1],s:match[2],v:match[3],a:match[4]};}

if(match = matchers.hex6.exec(color)){
return {
r:parseIntFromHex(match[1]),
g:parseIntFromHex(match[2]),
b:parseIntFromHex(match[3]),
format:named?"name":"hex"};}


if(match = matchers.hex3.exec(color)){
return {
r:parseIntFromHex(match[1] + '' + match[1]),
g:parseIntFromHex(match[2] + '' + match[2]),
b:parseIntFromHex(match[3] + '' + match[3]),
format:named?"name":"hex"};}



return false;}


module.exports = tinycolor;
});
__d('processTransform',["MatrixMath","Platform","invariant","stringifySafe"],function(global, require, module, exports) {  'use strict';












var MatrixMath=require('MatrixMath');
var Platform=require('Platform');

var invariant=require('invariant');
var stringifySafe=require('stringifySafe');









function processTransform(transform){
var result=MatrixMath.createIdentityMatrix();

transform.forEach(function(transformation){
var key=Object.keys(transformation)[0];
var value=transformation[key];
if(__DEV__){
_validateTransform(key,value,transformation);}


switch(key){
case 'matrix':
MatrixMath.multiplyInto(result,result,value);
break;
case 'perspective':
_multiplyTransform(result,MatrixMath.reusePerspectiveCommand,[value]);
break;
case 'rotateX':
_multiplyTransform(result,MatrixMath.reuseRotateXCommand,[_convertToRadians(value)]);
break;
case 'rotateY':
_multiplyTransform(result,MatrixMath.reuseRotateYCommand,[_convertToRadians(value)]);
break;
case 'rotate':
case 'rotateZ':
_multiplyTransform(result,MatrixMath.reuseRotateZCommand,[_convertToRadians(value)]);
break;
case 'scale':
_multiplyTransform(result,MatrixMath.reuseScaleCommand,[value]);
break;
case 'scaleX':
_multiplyTransform(result,MatrixMath.reuseScaleXCommand,[value]);
break;
case 'scaleY':
_multiplyTransform(result,MatrixMath.reuseScaleYCommand,[value]);
break;
case 'translate':
_multiplyTransform(result,MatrixMath.reuseTranslate3dCommand,[value[0],value[1],value[2] || 0]);
break;
case 'translateX':
_multiplyTransform(result,MatrixMath.reuseTranslate2dCommand,[value,0]);
break;
case 'translateY':
_multiplyTransform(result,MatrixMath.reuseTranslate2dCommand,[0,value]);
break;
case 'skewX':
_multiplyTransform(result,MatrixMath.reuseSkewXCommand,[_convertToRadians(value)]);
break;
case 'skewY':
_multiplyTransform(result,MatrixMath.reuseSkewYCommand,[_convertToRadians(value)]);
break;
default:
throw new Error('Invalid transform name: ' + key);}});







if(Platform.OS === 'android'){
return MatrixMath.decomposeMatrix(result);}

return result;}





function _multiplyTransform(
result,
matrixMathFunction,
args)
{
var matrixToApply=MatrixMath.createIdentityMatrix();
var argsWithIdentity=[matrixToApply].concat(args);
matrixMathFunction.apply(this,argsWithIdentity);
MatrixMath.multiplyInto(result,result,matrixToApply);}






function _convertToRadians(value){
var floatValue=parseFloat(value,10);
return value.indexOf('rad') > -1?floatValue:floatValue * Math.PI / 180;}


function _validateTransform(key,value,transformation){
invariant(
!value.getValue,
'You passed an Animated.Value to a normal component. ' + 
'You need to wrap that component in an Animated. For example, ' + 
'replace <View /> by <Animated.View />.');


var multivalueTransforms=[
'matrix',
'translate'];

if(multivalueTransforms.indexOf(key) !== -1){
invariant(
Array.isArray(value),
'Transform with key of %s must have an array as the value: %s',
key,
stringifySafe(transformation));}


switch(key){
case 'matrix':
invariant(
value.length === 9 || value.length === 16,
'Matrix transform must have a length of 9 (2d) or 16 (3d). ' + 
'Provided matrix has a length of %s: %s',
value.length,
stringifySafe(transformation));

break;
case 'translate':
break;
case 'rotateX':
case 'rotateY':
case 'rotateZ':
case 'rotate':
case 'skewX':
case 'skewY':
invariant(
typeof value === 'string',
'Transform with key of "%s" must be a string: %s',
key,
stringifySafe(transformation));

invariant(
value.indexOf('deg') > -1 || value.indexOf('rad') > -1,
'Rotate transform must be expressed in degrees (deg) or radians ' + 
'(rad): %s',
stringifySafe(transformation));

break;
default:
invariant(
typeof value === 'number',
'Transform with key of "%s" must be a number: %s',
key,
stringifySafe(transformation));}}




module.exports = processTransform;
});
__d('MatrixMath',["invariant"],function(global, require, module, exports) {  'use strict';







var invariant=require('invariant');





var MatrixMath={
createIdentityMatrix:function(){
return [
1,0,0,0,
0,1,0,0,
0,0,1,0,
0,0,0,1];},



createCopy:function(m){
return [
m[0],m[1],m[2],m[3],
m[4],m[5],m[6],m[7],
m[8],m[9],m[10],m[11],
m[12],m[13],m[14],m[15]];},



createOrthographic:function(left,right,bottom,top,near,far){
var a=2 / (right - left);
var b=2 / (top - bottom);
var c=-2 / (far - near);

var tx=-(right + left) / (right - left);
var ty=-(top + bottom) / (top - bottom);
var tz=-(far + near) / (far - near);

return [
a,0,0,0,
0,b,0,0,
0,0,c,0,
tx,ty,tz,1];},



createFrustum:function(left,right,bottom,top,near,far){
var r_width=1 / (right - left);
var r_height=1 / (top - bottom);
var r_depth=1 / (near - far);
var x=2 * (near * r_width);
var y=2 * (near * r_height);
var A=(right + left) * r_width;
var B=(top + bottom) * r_height;
var C=(far + near) * r_depth;
var D=2 * (far * near * r_depth);
return [
x,0,0,0,
0,y,0,0,
A,B,C,-1,
0,0,D,0];},



createPerspective:function(fovInRadians,aspect,near,far){
var h=1 / Math.tan(fovInRadians);
var r_depth=1 / (near - far);
var C=(far + near) * r_depth;
var D=2 * (far * near * r_depth);
return [
h / aspect,0,0,0,
0,h,0,0,
0,0,C,-1,
0,0,D,0];},



createTranslate2d:function(x,y){
var mat=MatrixMath.createIdentityMatrix();
MatrixMath.reuseTranslate2dCommand(mat,x,y);
return mat;},


reuseTranslate2dCommand:function(matrixCommand,x,y){
matrixCommand[12] = x;
matrixCommand[13] = y;},


reuseTranslate3dCommand:function(matrixCommand,x,y,z){
matrixCommand[12] = x;
matrixCommand[13] = y;
matrixCommand[14] = z;},


createScale:function(factor){
var mat=MatrixMath.createIdentityMatrix();
MatrixMath.reuseScaleCommand(mat,factor);
return mat;},


reuseScaleCommand:function(matrixCommand,factor){
matrixCommand[0] = factor;
matrixCommand[5] = factor;},


reuseScale3dCommand:function(matrixCommand,x,y,z){
matrixCommand[0] = x;
matrixCommand[5] = y;
matrixCommand[10] = z;},


reusePerspectiveCommand:function(matrixCommand,p){
matrixCommand[11] = -1 / p;},


reuseScaleXCommand:function(matrixCommand,factor){
matrixCommand[0] = factor;},


reuseScaleYCommand:function(matrixCommand,factor){
matrixCommand[5] = factor;},


reuseScaleZCommand:function(matrixCommand,factor){
matrixCommand[10] = factor;},


reuseRotateXCommand:function(matrixCommand,radians){
matrixCommand[5] = Math.cos(radians);
matrixCommand[6] = Math.sin(radians);
matrixCommand[9] = -Math.sin(radians);
matrixCommand[10] = Math.cos(radians);},


reuseRotateYCommand:function(matrixCommand,amount){
matrixCommand[0] = Math.cos(amount);
matrixCommand[2] = -Math.sin(amount);
matrixCommand[8] = Math.sin(amount);
matrixCommand[10] = Math.cos(amount);},



reuseRotateZCommand:function(matrixCommand,radians){
matrixCommand[0] = Math.cos(radians);
matrixCommand[1] = Math.sin(radians);
matrixCommand[4] = -Math.sin(radians);
matrixCommand[5] = Math.cos(radians);},


createRotateZ:function(radians){
var mat=MatrixMath.createIdentityMatrix();
MatrixMath.reuseRotateZCommand(mat,radians);
return mat;},


reuseSkewXCommand:function(matrixCommand,radians){
matrixCommand[4] = Math.sin(radians);
matrixCommand[5] = Math.cos(radians);},


reuseSkewYCommand:function(matrixCommand,radians){
matrixCommand[0] = Math.cos(radians);
matrixCommand[1] = Math.sin(radians);},


multiplyInto:function(out,a,b){
var a00=a[0],a01=a[1],a02=a[2],a03=a[3],
a10=a[4],a11=a[5],a12=a[6],a13=a[7],
a20=a[8],a21=a[9],a22=a[10],a23=a[11],
a30=a[12],a31=a[13],a32=a[14],a33=a[15];

var b0=b[0],b1=b[1],b2=b[2],b3=b[3];
out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

b0 = b[4];b1 = b[5];b2 = b[6];b3 = b[7];
out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

b0 = b[8];b1 = b[9];b2 = b[10];b3 = b[11];
out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

b0 = b[12];b1 = b[13];b2 = b[14];b3 = b[15];
out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;},


determinant:function(matrix){var 

m00=



matrix[0];var m01=matrix[1];var m02=matrix[2];var m03=matrix[3];var m10=matrix[4];var m11=matrix[5];var m12=matrix[6];var m13=matrix[7];var m20=matrix[8];var m21=matrix[9];var m22=matrix[10];var m23=matrix[11];var m30=matrix[12];var m31=matrix[13];var m32=matrix[14];var m33=matrix[15];
return (
m03 * m12 * m21 * m30 - m02 * m13 * m21 * m30 - 
m03 * m11 * m22 * m30 + m01 * m13 * m22 * m30 + 
m02 * m11 * m23 * m30 - m01 * m12 * m23 * m30 - 
m03 * m12 * m20 * m31 + m02 * m13 * m20 * m31 + 
m03 * m10 * m22 * m31 - m00 * m13 * m22 * m31 - 
m02 * m10 * m23 * m31 + m00 * m12 * m23 * m31 + 
m03 * m11 * m20 * m32 - m01 * m13 * m20 * m32 - 
m03 * m10 * m21 * m32 + m00 * m13 * m21 * m32 + 
m01 * m10 * m23 * m32 - m00 * m11 * m23 * m32 - 
m02 * m11 * m20 * m33 + m01 * m12 * m20 * m33 + 
m02 * m10 * m21 * m33 - m00 * m12 * m21 * m33 - 
m01 * m10 * m22 * m33 + m00 * m11 * m22 * m33);},










inverse:function(matrix){
var det=MatrixMath.determinant(matrix);
if(!det){
return matrix;}var 


m00=



matrix[0];var m01=matrix[1];var m02=matrix[2];var m03=matrix[3];var m10=matrix[4];var m11=matrix[5];var m12=matrix[6];var m13=matrix[7];var m20=matrix[8];var m21=matrix[9];var m22=matrix[10];var m23=matrix[11];var m30=matrix[12];var m31=matrix[13];var m32=matrix[14];var m33=matrix[15];
return [
(m12 * m23 * m31 - m13 * m22 * m31 + m13 * m21 * m32 - m11 * m23 * m32 - m12 * m21 * m33 + m11 * m22 * m33) / det,
(m03 * m22 * m31 - m02 * m23 * m31 - m03 * m21 * m32 + m01 * m23 * m32 + m02 * m21 * m33 - m01 * m22 * m33) / det,
(m02 * m13 * m31 - m03 * m12 * m31 + m03 * m11 * m32 - m01 * m13 * m32 - m02 * m11 * m33 + m01 * m12 * m33) / det,
(m03 * m12 * m21 - m02 * m13 * m21 - m03 * m11 * m22 + m01 * m13 * m22 + m02 * m11 * m23 - m01 * m12 * m23) / det,
(m13 * m22 * m30 - m12 * m23 * m30 - m13 * m20 * m32 + m10 * m23 * m32 + m12 * m20 * m33 - m10 * m22 * m33) / det,
(m02 * m23 * m30 - m03 * m22 * m30 + m03 * m20 * m32 - m00 * m23 * m32 - m02 * m20 * m33 + m00 * m22 * m33) / det,
(m03 * m12 * m30 - m02 * m13 * m30 - m03 * m10 * m32 + m00 * m13 * m32 + m02 * m10 * m33 - m00 * m12 * m33) / det,
(m02 * m13 * m20 - m03 * m12 * m20 + m03 * m10 * m22 - m00 * m13 * m22 - m02 * m10 * m23 + m00 * m12 * m23) / det,
(m11 * m23 * m30 - m13 * m21 * m30 + m13 * m20 * m31 - m10 * m23 * m31 - m11 * m20 * m33 + m10 * m21 * m33) / det,
(m03 * m21 * m30 - m01 * m23 * m30 - m03 * m20 * m31 + m00 * m23 * m31 + m01 * m20 * m33 - m00 * m21 * m33) / det,
(m01 * m13 * m30 - m03 * m11 * m30 + m03 * m10 * m31 - m00 * m13 * m31 - m01 * m10 * m33 + m00 * m11 * m33) / det,
(m03 * m11 * m20 - m01 * m13 * m20 - m03 * m10 * m21 + m00 * m13 * m21 + m01 * m10 * m23 - m00 * m11 * m23) / det,
(m12 * m21 * m30 - m11 * m22 * m30 - m12 * m20 * m31 + m10 * m22 * m31 + m11 * m20 * m32 - m10 * m21 * m32) / det,
(m01 * m22 * m30 - m02 * m21 * m30 + m02 * m20 * m31 - m00 * m22 * m31 - m01 * m20 * m32 + m00 * m21 * m32) / det,
(m02 * m11 * m30 - m01 * m12 * m30 - m02 * m10 * m31 + m00 * m12 * m31 + m01 * m10 * m32 - m00 * m11 * m32) / det,
(m01 * m12 * m20 - m02 * m11 * m20 + m02 * m10 * m21 - m00 * m12 * m21 - m01 * m10 * m22 + m00 * m11 * m22) / det];},






transpose:function(m){
return [
m[0],m[4],m[8],m[12],
m[1],m[5],m[9],m[13],
m[2],m[6],m[10],m[14],
m[3],m[7],m[11],m[15]];},






multiplyVectorByMatrix:function(
v,
m)
{var 
vx=v[0];var vy=v[1];var vz=v[2];var vw=v[3];
return [
vx * m[0] + vy * m[4] + vz * m[8] + vw * m[12],
vx * m[1] + vy * m[5] + vz * m[9] + vw * m[13],
vx * m[2] + vy * m[6] + vz * m[10] + vw * m[14],
vx * m[3] + vy * m[7] + vz * m[11] + vw * m[15]];},






v3Length:function(a){
return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);},





v3Normalize:function(
vector,
v3Length)
{
var im=1 / (v3Length || MatrixMath.v3Length(vector));
return [
vector[0] * im,
vector[1] * im,
vector[2] * im];},







v3Dot:function(a,b){
return a[0] * b[0] + 
a[1] * b[1] + 
a[2] * b[2];},






v3Combine:function(
a,
b,
aScale,
bScale)
{
return [
aScale * a[0] + bScale * b[0],
aScale * a[1] + bScale * b[1],
aScale * a[2] + bScale * b[2]];},







v3Cross:function(a,b){
return [
a[1] * b[2] - a[2] * b[1],
a[2] * b[0] - a[0] * b[2],
a[0] * b[1] - a[1] * b[0]];},



















quaternionToDegreesXYZ:function(q,matrix,row){var 
qx=q[0];var qy=q[1];var qz=q[2];var qw=q[3];
var qw2=qw * qw;
var qx2=qx * qx;
var qy2=qy * qy;
var qz2=qz * qz;
var test=qx * qy + qz * qw;
var unit=qw2 + qx2 + qy2 + qz2;
var conv=180 / Math.PI;

if(test > 0.49999 * unit){
return [0,2 * Math.atan2(qx,qw) * conv,90];}

if(test < -0.49999 * unit){
return [0,-2 * Math.atan2(qx,qw) * conv,-90];}


return [
MatrixMath.roundTo3Places(
Math.atan2(2 * qx * qw - 2 * qy * qz,1 - 2 * qx2 - 2 * qz2) * conv),

MatrixMath.roundTo3Places(
Math.atan2(2 * qy * qw - 2 * qx * qz,1 - 2 * qy2 - 2 * qz2) * conv),

MatrixMath.roundTo3Places(
Math.asin(2 * qx * qy + 2 * qz * qw) * conv)];},








roundTo3Places:function(n){
var arr=n.toString().split('e');
return Math.round(arr[0] + 'e' + (arr[1]?+arr[1] - 3:3)) * 0.001;},













decomposeMatrix:function(transformMatrix){

invariant(
transformMatrix.length === 16,
'Matrix decomposition needs a list of 3d matrix values, received %s',
transformMatrix);



var perspective=[];
var quaternion=[];
var scale=[];
var skew=[];
var translation=[];



if(!transformMatrix[15]){
return;}

var matrix=[];
var perspectiveMatrix=[];
for(var i=0;i < 4;i++) {
matrix.push([]);
for(var j=0;j < 4;j++) {
var value=transformMatrix[i * 4 + j] / transformMatrix[15];
matrix[i].push(value);
perspectiveMatrix.push(j === 3?0:value);}}


perspectiveMatrix[15] = 1;


if(!MatrixMath.determinant(perspectiveMatrix)){
return;}



if(matrix[0][3] !== 0 || matrix[1][3] !== 0 || matrix[2][3] !== 0){


var rightHandSide=[
matrix[0][3],
matrix[1][3],
matrix[2][3],
matrix[3][3]];




var inversePerspectiveMatrix=MatrixMath.inverse3x3(
perspectiveMatrix);

var transposedInversePerspectiveMatrix=MatrixMath.transpose4x4(
inversePerspectiveMatrix);

var perspective=MatrixMath.multiplyVectorByMatrix(
rightHandSide,
transposedInversePerspectiveMatrix);}else 

{

perspective[0] = perspective[1] = perspective[2] = 0;
perspective[3] = 1;}



for(var i=0;i < 3;i++) {
translation[i] = matrix[3][i];}




var row=[];
for(i = 0;i < 3;i++) {
row[i] = [
matrix[i][0],
matrix[i][1],
matrix[i][2]];}




scale[0] = MatrixMath.v3Length(row[0]);
row[0] = MatrixMath.v3Normalize(row[0],scale[0]);


skew[0] = MatrixMath.v3Dot(row[0],row[1]);
row[1] = MatrixMath.v3Combine(row[1],row[0],1.0,-skew[0]);


skew[0] = MatrixMath.v3Dot(row[0],row[1]);
row[1] = MatrixMath.v3Combine(row[1],row[0],1.0,-skew[0]);


scale[1] = MatrixMath.v3Length(row[1]);
row[1] = MatrixMath.v3Normalize(row[1],scale[1]);
skew[0] /= scale[1];


skew[1] = MatrixMath.v3Dot(row[0],row[2]);
row[2] = MatrixMath.v3Combine(row[2],row[0],1.0,-skew[1]);
skew[2] = MatrixMath.v3Dot(row[1],row[2]);
row[2] = MatrixMath.v3Combine(row[2],row[1],1.0,-skew[2]);


scale[2] = MatrixMath.v3Length(row[2]);
row[2] = MatrixMath.v3Normalize(row[2],scale[2]);
skew[1] /= scale[2];
skew[2] /= scale[2];




var pdum3=MatrixMath.v3Cross(row[1],row[2]);
if(MatrixMath.v3Dot(row[0],pdum3) < 0){
for(i = 0;i < 3;i++) {
scale[i] *= -1;
row[i][0] *= -1;
row[i][1] *= -1;
row[i][2] *= -1;}}




quaternion[0] = 
0.5 * Math.sqrt(Math.max(1 + row[0][0] - row[1][1] - row[2][2],0));
quaternion[1] = 
0.5 * Math.sqrt(Math.max(1 - row[0][0] + row[1][1] - row[2][2],0));
quaternion[2] = 
0.5 * Math.sqrt(Math.max(1 - row[0][0] - row[1][1] + row[2][2],0));
quaternion[3] = 
0.5 * Math.sqrt(Math.max(1 + row[0][0] + row[1][1] + row[2][2],0));

if(row[2][1] > row[1][2]){
quaternion[0] = -quaternion[0];}

if(row[0][2] > row[2][0]){
quaternion[1] = -quaternion[1];}

if(row[1][0] > row[0][1]){
quaternion[2] = -quaternion[2];}



var rotationDegrees;
if(
quaternion[0] < 0.001 && quaternion[0] >= 0 && 
quaternion[1] < 0.001 && quaternion[1] >= 0)
{

rotationDegrees = [0,0,MatrixMath.roundTo3Places(
Math.atan2(row[0][1],row[0][0]) * 180 / Math.PI)];}else 

{
rotationDegrees = MatrixMath.quaternionToDegreesXYZ(quaternion,matrix,row);}



return {
rotationDegrees:rotationDegrees,
perspective:perspective,
quaternion:quaternion,
scale:scale,
skew:skew,
translation:translation,

rotate:rotationDegrees[2],
scaleX:scale[0],
scaleY:scale[1],
translateX:translation[0],
translateY:translation[1]};}};





module.exports = MatrixMath;
});
__d('sizesDiffer',[],function(global, require, module, exports) {  'use strict';






var dummySize={width:undefined,height:undefined};

var sizesDiffer=function(one,two){
one = one || dummySize;
two = two || dummySize;
return one !== two && (
one.width !== two.width || 
one.height !== two.height);};



module.exports = sizesDiffer;
});
__d('ReactMultiChild',["ReactComponentEnvironment","ReactMultiChildUpdateTypes","ReactReconciler","ReactChildReconciler"],function(global, require, module, exports) {  'use strict';













var ReactComponentEnvironment=require('ReactComponentEnvironment');
var ReactMultiChildUpdateTypes=require('ReactMultiChildUpdateTypes');

var ReactReconciler=require('ReactReconciler');
var ReactChildReconciler=require('ReactChildReconciler');








var updateDepth=0;









var updateQueue=[];







var markupQueue=[];









function enqueueMarkup(parentID,markup,toIndex){

updateQueue.push({
parentID:parentID,
parentNode:null,
type:ReactMultiChildUpdateTypes.INSERT_MARKUP,
markupIndex:markupQueue.push(markup) - 1,
textContent:null,
fromIndex:null,
toIndex:toIndex});}











function enqueueMove(parentID,fromIndex,toIndex){

updateQueue.push({
parentID:parentID,
parentNode:null,
type:ReactMultiChildUpdateTypes.MOVE_EXISTING,
markupIndex:null,
textContent:null,
fromIndex:fromIndex,
toIndex:toIndex});}










function enqueueRemove(parentID,fromIndex){

updateQueue.push({
parentID:parentID,
parentNode:null,
type:ReactMultiChildUpdateTypes.REMOVE_NODE,
markupIndex:null,
textContent:null,
fromIndex:fromIndex,
toIndex:null});}










function enqueueTextContent(parentID,textContent){

updateQueue.push({
parentID:parentID,
parentNode:null,
type:ReactMultiChildUpdateTypes.TEXT_CONTENT,
markupIndex:null,
textContent:textContent,
fromIndex:null,
toIndex:null});}








function processQueue(){
if(updateQueue.length){
ReactComponentEnvironment.processChildrenUpdates(
updateQueue,
markupQueue);

clearQueue();}}








function clearQueue(){
updateQueue.length = 0;
markupQueue.length = 0;}








var ReactMultiChild={








Mixin:{









mountChildren:function(nestedChildren,transaction,context){
var children=ReactChildReconciler.instantiateChildren(
nestedChildren,transaction,context);

this._renderedChildren = children;
var mountImages=[];
var index=0;
for(var name in children) {
if(children.hasOwnProperty(name)){
var child=children[name];

var rootID=this._rootNodeID + name;
var mountImage=ReactReconciler.mountComponent(
child,
rootID,
transaction,
context);

child._mountIndex = index;
mountImages.push(mountImage);
index++;}}


return mountImages;},








updateTextContent:function(nextContent){
updateDepth++;
var errorThrown=true;
try{
var prevChildren=this._renderedChildren;

ReactChildReconciler.unmountChildren(prevChildren);

for(var name in prevChildren) {
if(prevChildren.hasOwnProperty(name)){
this._unmountChildByName(prevChildren[name],name);}}



this.setTextContent(nextContent);
errorThrown = false;}finally 
{
updateDepth--;
if(!updateDepth){
if(errorThrown){
clearQueue();}else 
{
processQueue();}}}},












updateChildren:function(nextNestedChildren,transaction,context){
updateDepth++;
var errorThrown=true;
try{
this._updateChildren(nextNestedChildren,transaction,context);
errorThrown = false;}finally 
{
updateDepth--;
if(!updateDepth){
if(errorThrown){
clearQueue();}else 
{
processQueue();}}}},















_updateChildren:function(nextNestedChildren,transaction,context){
var prevChildren=this._renderedChildren;
var nextChildren=ReactChildReconciler.updateChildren(
prevChildren,nextNestedChildren,transaction,context);

this._renderedChildren = nextChildren;
if(!nextChildren && !prevChildren){
return;}

var name;


var lastIndex=0;
var nextIndex=0;
for(name in nextChildren) {
if(!nextChildren.hasOwnProperty(name)){
continue;}

var prevChild=prevChildren && prevChildren[name];
var nextChild=nextChildren[name];
if(prevChild === nextChild){
this.moveChild(prevChild,nextIndex,lastIndex);
lastIndex = Math.max(prevChild._mountIndex,lastIndex);
prevChild._mountIndex = nextIndex;}else 
{
if(prevChild){

lastIndex = Math.max(prevChild._mountIndex,lastIndex);
this._unmountChildByName(prevChild,name);}


this._mountChildByNameAtIndex(
nextChild,name,nextIndex,transaction,context);}


nextIndex++;}


for(name in prevChildren) {
if(prevChildren.hasOwnProperty(name) && 
!(nextChildren && nextChildren.hasOwnProperty(name))){
this._unmountChildByName(prevChildren[name],name);}}},










unmountChildren:function(){
var renderedChildren=this._renderedChildren;
ReactChildReconciler.unmountChildren(renderedChildren);
this._renderedChildren = null;},










moveChild:function(child,toIndex,lastIndex){



if(child._mountIndex < lastIndex){
enqueueMove(this._rootNodeID,child._mountIndex,toIndex);}},










createChild:function(child,mountImage){
enqueueMarkup(this._rootNodeID,mountImage,child._mountIndex);},








removeChild:function(child){
enqueueRemove(this._rootNodeID,child._mountIndex);},








setTextContent:function(textContent){
enqueueTextContent(this._rootNodeID,textContent);},













_mountChildByNameAtIndex:function(
child,
name,
index,
transaction,
context){

var rootID=this._rootNodeID + name;
var mountImage=ReactReconciler.mountComponent(
child,
rootID,
transaction,
context);

child._mountIndex = index;
this.createChild(child,mountImage);},











_unmountChildByName:function(child,name){
this.removeChild(child);
child._mountIndex = null;}}};






module.exports = ReactMultiChild;
});
__d('ReactChildReconciler',["ReactReconciler","flattenChildren","instantiateReactComponent","shouldUpdateReactComponent"],function(global, require, module, exports) {  'use strict';













var ReactReconciler=require('ReactReconciler');

var flattenChildren=require('flattenChildren');
var instantiateReactComponent=require('instantiateReactComponent');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');






var ReactChildReconciler={









instantiateChildren:function(nestedChildNodes,transaction,context){
var children=flattenChildren(nestedChildNodes);
for(var name in children) {
if(children.hasOwnProperty(name)){
var child=children[name];


var childInstance=instantiateReactComponent(child,null);
children[name] = childInstance;}}


return children;},












updateChildren:function(
prevChildren,
nextNestedChildNodes,
transaction,
context){





var nextChildren=flattenChildren(nextNestedChildNodes);
if(!nextChildren && !prevChildren){
return null;}

var name;
for(name in nextChildren) {
if(!nextChildren.hasOwnProperty(name)){
continue;}

var prevChild=prevChildren && prevChildren[name];
var prevElement=prevChild && prevChild._currentElement;
var nextElement=nextChildren[name];
if(shouldUpdateReactComponent(prevElement,nextElement)){
ReactReconciler.receiveComponent(
prevChild,nextElement,transaction,context);

nextChildren[name] = prevChild;}else 
{
if(prevChild){
ReactReconciler.unmountComponent(prevChild,name);}


var nextChildInstance=instantiateReactComponent(
nextElement,
null);

nextChildren[name] = nextChildInstance;}}



for(name in prevChildren) {
if(prevChildren.hasOwnProperty(name) && 
!(nextChildren && nextChildren.hasOwnProperty(name))){
ReactReconciler.unmountComponent(prevChildren[name]);}}


return nextChildren;},









unmountChildren:function(renderedChildren){
for(var name in renderedChildren) {
if(renderedChildren.hasOwnProperty(name)){
var renderedChild=renderedChildren[name];
ReactReconciler.unmountComponent(renderedChild);}}}};






module.exports = ReactChildReconciler;
});
__d('flattenChildren',["traverseAllChildren","warning"],function(global, require, module, exports) {  'use strict';












var traverseAllChildren=require('traverseAllChildren');
var warning=require('warning');






function flattenSingleChildIntoContext(traverseContext,child,name){

var result=traverseContext;
var keyUnique=result[name] === undefined;
if(__DEV__){
warning(
keyUnique,
'flattenChildren(...): Encountered two children with the same key, ' + 
'`%s`. Child keys must be unique; when two children share a key, only ' + 
'the first child will be used.',
name);}


if(keyUnique && child != null){
result[name] = child;}}








function flattenChildren(children){
if(children == null){
return children;}

var result={};
traverseAllChildren(children,flattenSingleChildIntoContext,result);
return result;}


module.exports = flattenChildren;
});
__d('deepFreezeAndThrowOnMutationInDev',[],function(global, require, module, exports) {  'use strict';






























function deepFreezeAndThrowOnMutationInDev(object){
if(__DEV__){
if(typeof object !== 'object' || 
object === null || 
Object.isFrozen(object) || 
Object.isSealed(object)){
return;}


for(var key in object) {
if(object.hasOwnProperty(key)){
object.__defineGetter__(key,identity.bind(null,object[key]));
object.__defineSetter__(key,throwOnImmutableMutation.bind(null,key));
deepFreezeAndThrowOnMutationInDev(object[key]);}}


Object.freeze(object);
Object.seal(object);}}



function throwOnImmutableMutation(key,value){
throw Error(
'You attempted to set the key `' + key + '` with the value `' + 
JSON.stringify(value) + '` on an object that is meant to be immutable ' + 
'and has been frozen.');}



function identity(value){
return value;}


module.exports = deepFreezeAndThrowOnMutationInDev;
});
__d('RCTEventEmitter',["ReactNativeEventEmitter"],function(global, require, module, exports) {  'use strict';












var ReactNativeEventEmitter=require('ReactNativeEventEmitter');


module.exports = ReactNativeEventEmitter;
});
__d('RCTLog',["invariant"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var invariant=require('invariant');

var levelsMap={
log:'log',
info:'info',
warn:'warn',
error:'error',
mustfix:'error'};var 


RCTLog=(function(){function RCTLog(){_classCallCheck(this,RCTLog);}_createClass(RCTLog,null,[{key:'logIfNoNativeHook',value:

function logIfNoNativeHook(){
var args=Array.prototype.slice.call(arguments);
var level=args.shift();
var logFn=levelsMap[level];
invariant(
logFn,
'Level "' + level + '" not one of ' + Object.keys(levelsMap));

if(typeof global.nativeLoggingHook === 'undefined'){

console[logFn].apply(console,args);}

return true;}}]);return RCTLog;})();



module.exports = RCTLog;
});
__d('deprecated',["Object.assign","warning"],function(global, require, module, exports) {  'use strict';












var assign=require('Object.assign');
var warning=require('warning');











function deprecated(fnName,newModule,ctx,fn){
var warned=false;
if(__DEV__){
var newFn=function(){
warning(
warned,



'`require' + '("react").%s` is deprecated. Please use `require' + '("%s").%s` ' + 
'instead.',
fnName,
newModule,
fnName);

warned = true;
return fn.apply(ctx,arguments);};



return assign(newFn,fn);}


return fn;}


module.exports = deprecated;
});
__d('onlyChild',["ReactElement","invariant"],function(global, require, module, exports) {  'use strict';











var ReactElement=require('ReactElement');

var invariant=require('invariant');












function onlyChild(children){
invariant(
ReactElement.isValidElement(children),
'onlyChild must be passed a children with exactly one child.');

return children;}


module.exports = onlyChild;
});
__d('ActivityIndicatorIOS',["NativeMethodsMixin","ReactPropTypes","React","StyleSheet","View","requireNativeComponent"],function(global, require, module, exports) {  'use strict';function _objectWithoutProperties(obj,keys){var target={};for(var i in obj) {if(keys.indexOf(i) >= 0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i] = obj[i];}return target;}












var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');

var GRAY='#999999';








var ActivityIndicatorIOS=React.createClass({displayName:'ActivityIndicatorIOS',
mixins:[NativeMethodsMixin],

propTypes:{



animating:PropTypes.bool,



color:PropTypes.string,



hidesWhenStopped:PropTypes.bool,



size:PropTypes.oneOf([
'small',
'large']),






onLayout:PropTypes.func},


getDefaultProps:function(){
return {
animating:true,
color:GRAY,
hidesWhenStopped:true,
size:'small'};},



render:function(){var _props=
this.props;var onLayout=_props.onLayout;var style=_props.style;var props=_objectWithoutProperties(_props,['onLayout','style']);
var sizeStyle=this.props.size === 'large'?styles.sizeLarge:styles.sizeSmall;
return (
React.createElement(View,{
onLayout:onLayout,
style:[styles.container,sizeStyle,style]},
React.createElement(RCTActivityIndicatorView,props)));}});





var styles=StyleSheet.create({
container:{
alignItems:'center',
justifyContent:'center'},

sizeSmall:{
width:20,
height:20},

sizeLarge:{
width:36,
height:36}});



var RCTActivityIndicatorView=requireNativeComponent(
'RCTActivityIndicatorView',
ActivityIndicatorIOS,
{nativeOnly:{activityIndicatorViewStyle:true}});


module.exports = ActivityIndicatorIOS;
});
__d('StyleSheet',["StyleSheetRegistry","StyleSheetValidation"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var StyleSheetRegistry=require('StyleSheetRegistry');
var StyleSheetValidation=require('StyleSheetValidation');var 













































StyleSheet=(function(){function StyleSheet(){_classCallCheck(this,StyleSheet);}_createClass(StyleSheet,null,[{key:'create',value:
function create(obj){
var result={};
for(var key in obj) {
StyleSheetValidation.validateStyle(key,obj);
result[key] = StyleSheetRegistry.registerStyle(obj[key]);}

return result;}}]);return StyleSheet;})();



module.exports = StyleSheet;
});
__d('StyleSheetValidation',["ImageStylePropTypes","ReactPropTypeLocations","TextStylePropTypes","ViewStylePropTypes","invariant"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var ImageStylePropTypes=require('ImageStylePropTypes');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var TextStylePropTypes=require('TextStylePropTypes');
var ViewStylePropTypes=require('ViewStylePropTypes');

var invariant=require('invariant');var 

StyleSheetValidation=(function(){function StyleSheetValidation(){_classCallCheck(this,StyleSheetValidation);}_createClass(StyleSheetValidation,null,[{key:'validateStyleProp',value:
function validateStyleProp(prop,style,caller){
if(!__DEV__){
return;}

if(allStylePropTypes[prop] === undefined){
var message1='"' + prop + '" is not a valid style property.';
var message2='\nValid style props: ' + 
JSON.stringify(Object.keys(allStylePropTypes).sort(),null,'  ');
styleError(message1,style,caller,message2);}

var error=allStylePropTypes[prop](
style,
prop,
caller,
ReactPropTypeLocations.prop);

if(error){
styleError(error.message,style,caller);}}},{key:'validateStyle',value:



function validateStyle(name,styles){
if(!__DEV__){
return;}

for(var prop in styles[name]) {
StyleSheetValidation.validateStyleProp(prop,styles[name],'StyleSheet ' + name);}}},{key:'addValidStylePropTypes',value:



function addValidStylePropTypes(stylePropTypes){
for(var key in stylePropTypes) {
allStylePropTypes[key] = stylePropTypes[key];}}}]);return StyleSheetValidation;})();




var styleError=function(message1,style,caller,message2){
invariant(
false,
message1 + '\n' + (caller || '<<unknown>>') + ': ' + 
JSON.stringify(style,null,'  ') + (message2 || ''));};



var allStylePropTypes={};

StyleSheetValidation.addValidStylePropTypes(ImageStylePropTypes);
StyleSheetValidation.addValidStylePropTypes(TextStylePropTypes);
StyleSheetValidation.addValidStylePropTypes(ViewStylePropTypes);

module.exports = StyleSheetValidation;
});
__d('View',["NativeMethodsMixin","ReactPropTypes","NativeModules","React","ReactNativeStyleAttributes","ReactNativeViewAttributes","StyleSheetPropType","ViewStylePropTypes","createReactNativeComponentClass"],function(global, require, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var RCTUIManager=require('NativeModules').UIManager;
var React=require('React');
var ReactNativeStyleAttributes=require('ReactNativeStyleAttributes');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheetPropType=require('StyleSheetPropType');
var ViewStylePropTypes=require('ViewStylePropTypes');

var createReactNativeComponentClass=require('createReactNativeComponentClass');

var stylePropType=StyleSheetPropType(ViewStylePropTypes);

var AccessibilityTraits=[
'none',
'button',
'link',
'header',
'search',
'image',
'selected',
'plays',
'key',
'text',
'summary',
'disabled',
'frequentUpdates',
'startsMedia',
'adjustable',
'allowsDirectInteraction',
'pageTurn'];


var AccessibilityComponentType=[
'none',
'button',
'radiobutton_checked',
'radiobutton_unchecked'];






















var View=React.createClass({displayName:'View',
mixins:[NativeMethodsMixin],





viewConfig:{
uiViewClassName:'RCTView',
validAttributes:ReactNativeViewAttributes.RCTView},


statics:{
AccessibilityTraits:AccessibilityTraits,
AccessibilityComponentType:AccessibilityComponentType},


propTypes:{




accessible:PropTypes.bool,






accessibilityLabel:PropTypes.string,






accessibilityComponentType:PropTypes.oneOf(AccessibilityComponentType),








accessibilityLiveRegion:PropTypes.oneOf([
'none',
'polite',
'assertive']),


















importantForAccessibility:PropTypes.oneOf([
'auto',
'yes',
'no',
'no-hide-descendants']),







accessibilityTraits:PropTypes.oneOfType([
PropTypes.oneOf(AccessibilityTraits),
PropTypes.arrayOf(PropTypes.oneOf(AccessibilityTraits))]),






onAccessibilityTap:PropTypes.func,





onMagicTap:PropTypes.func,





testID:PropTypes.string,






onMoveShouldSetResponder:PropTypes.func,
onResponderGrant:PropTypes.func,
onResponderMove:PropTypes.func,
onResponderReject:PropTypes.func,
onResponderRelease:PropTypes.func,
onResponderTerminate:PropTypes.func,
onResponderTerminationRequest:PropTypes.func,
onStartShouldSetResponder:PropTypes.func,
onStartShouldSetResponderCapture:PropTypes.func,










onLayout:PropTypes.func,































pointerEvents:PropTypes.oneOf([
'box-none',
'none',
'box-only',
'auto']),

style:stylePropType,









removeClippedSubviews:PropTypes.bool,














renderToHardwareTextureAndroid:PropTypes.bool,














shouldRasterizeIOS:PropTypes.bool,








collapsable:PropTypes.bool,






















needsOffscreenAlphaCompositing:PropTypes.bool},


render:function(){
return React.createElement(RCTView,this.props);}});



var RCTView=createReactNativeComponentClass({
validAttributes:ReactNativeViewAttributes.RCTView,
uiViewClassName:'RCTView'});

RCTView.propTypes = View.propTypes;
if(__DEV__){
var viewConfig=RCTUIManager.viewConfigs && RCTUIManager.viewConfigs.RCTView || {};
for(var prop in viewConfig.nativeProps) {
var viewAny=View;
if(!viewAny.propTypes[prop] && !ReactNativeStyleAttributes[prop]){
throw new Error(
'View is missing propType for native prop `' + prop + '`');}}}





var ViewToExport=RCTView;
if(__DEV__){
ViewToExport = View;}


module.exports = ViewToExport;
});
__d('ReactNativeViewAttributes',["ReactNativeStyleAttributes"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var ReactNativeStyleAttributes=require('ReactNativeStyleAttributes');

var ReactNativeViewAttributes={};

ReactNativeViewAttributes.UIView = {
pointerEvents:true,
accessible:true,
accessibilityLabel:true,
accessibilityComponentType:true,
accessibilityLiveRegion:true,
accessibilityTraits:true,
importantForAccessibility:true,
testID:true,
renderToHardwareTextureAndroid:true,
shouldRasterizeIOS:true,
onLayout:true,
onAccessibilityTap:true,
onMagicTap:true,
collapsable:true,
needsOffscreenAlphaCompositing:true,
style:ReactNativeStyleAttributes};


ReactNativeViewAttributes.RCTView = _extends({},
ReactNativeViewAttributes.UIView,{






removeClippedSubviews:true});


module.exports = ReactNativeViewAttributes;
});
__d('StyleSheetPropType',["createStrictShapeTypeChecker","flattenStyle"],function(global, require, module, exports) {  'use strict';












var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var flattenStyle=require('flattenStyle');

function StyleSheetPropType(
shape)
{
var shapePropType=createStrictShapeTypeChecker(shape);
return function(props,propName,componentName,location){
var newProps=props;
if(props[propName]){

newProps = {};
newProps[propName] = flattenStyle(props[propName]);}

return shapePropType(newProps,propName,componentName,location);};}



module.exports = StyleSheetPropType;
});
__d('createStrictShapeTypeChecker',["ReactPropTypeLocationNames","invariant","merge"],function(global, require, module, exports) {  'use strict';












var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');

var invariant=require('invariant');
var merge=require('merge');

function createStrictShapeTypeChecker(
shapeTypes)
{
function checkType(isRequired,props,propName,componentName,location){
if(!props[propName]){
if(isRequired){
invariant(
false,
'Required object `' + propName + '` was not specified in ' + ('`' + 
componentName + '`.'));}


return;}

var propValue=props[propName];
var propType=typeof propValue;
var locationName=
location && ReactPropTypeLocationNames[location] || '(unknown)';
if(propType !== 'object'){
invariant(
false,
'Invalid ' + locationName + ' `' + propName + '` of type `' + propType + '` ' + ('supplied to `' + 
componentName + '`, expected `object`.'));}




var allKeys=merge(props[propName],shapeTypes);
for(var key in allKeys) {
var checker=shapeTypes[key];
if(!checker){
invariant(
false,
'Invalid props.' + propName + ' key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + 
JSON.stringify(props[propName],null,'  ') + '\nValid keys: ' + 
JSON.stringify(Object.keys(shapeTypes),null,'  '));}


var error=checker(propValue,key,componentName,location);
if(error){
invariant(
false,
error.message + '\nBad object: ' + 
JSON.stringify(props[propName],null,'  '));}}}




function chainedCheckType(
props,
propName,
componentName,
location)
{
return checkType(false,props,propName,componentName,location);}

chainedCheckType.isRequired = checkType.bind(null,true);
return chainedCheckType;}


module.exports = createStrictShapeTypeChecker;
});
__d('requireNativeComponent',["verifyPropTypes","NativeModules","ReactNativeStyleAttributes","UnimplementedView","createReactNativeComponentClass","insetsDiffer","pointsDiffer","matricesDiffer","processColor","sizesDiffer","verifyPropTypes","warning"],function(global, require, module, exports) {  var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};










'use strict';

var RCTUIManager=require('NativeModules').UIManager;
var ReactNativeStyleAttributes=require('ReactNativeStyleAttributes');
var UnimplementedView=require('UnimplementedView');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var insetsDiffer=require('insetsDiffer');
var pointsDiffer=require('pointsDiffer');
var matricesDiffer=require('matricesDiffer');
var processColor=require('processColor');
var sizesDiffer=require('sizesDiffer');
var verifyPropTypes=require('verifyPropTypes');
var warning=require('warning');


















function requireNativeComponent(
viewName,
componentInterface,
extraConfig)
{
var viewConfig=RCTUIManager[viewName];
if(!viewConfig || !viewConfig.NativeProps){
warning(false,'Native component for "%s" does not exist',viewName);
return UnimplementedView;}

var nativeProps=_extends({},
RCTUIManager.RCTView.NativeProps,
viewConfig.NativeProps);

viewConfig.uiViewClassName = viewName;
viewConfig.validAttributes = {};
viewConfig.propTypes = componentInterface && componentInterface.propTypes;
for(var key in nativeProps) {
var useAttribute=false;
var attribute={};

var differ=TypeToDifferMap[nativeProps[key]];
if(differ){
attribute.diff = differ;
useAttribute = true;}


var processor=TypeToProcessorMap[nativeProps[key]];
if(processor){
attribute.process = processor;
useAttribute = true;}


viewConfig.validAttributes[key] = useAttribute?attribute:true;}







viewConfig.validAttributes.style = ReactNativeStyleAttributes;

if(__DEV__){
componentInterface && verifyPropTypes(
componentInterface,
viewConfig,
extraConfig && extraConfig.nativeOnly);}


return createReactNativeComponentClass(viewConfig);}


var TypeToDifferMap={

CATransform3D:matricesDiffer,
CGPoint:pointsDiffer,
CGSize:sizesDiffer,
UIEdgeInsets:insetsDiffer};




var TypeToProcessorMap={

CGColor:processColor,
CGColorArray:processColor,
UIColor:processColor,
UIColorArray:processColor,

Color:processColor};


module.exports = requireNativeComponent;
});
__d('verifyPropTypes',["ReactNativeStyleAttributes","View"],function(global, require, module, exports) {  'use strict';Object.defineProperty(exports,'__esModule',{value:true});












var ReactNativeStyleAttributes=require('ReactNativeStyleAttributes');
var View=require('View');







function verifyPropTypes(
componentInterface,
viewConfig,
nativePropsToIgnore)
{
if(!viewConfig){
return;}

var componentName=componentInterface.name || 
componentInterface.displayName || 
'unknown';
if(!componentInterface.propTypes){
throw new Error(
'`' + componentName + '` has no propTypes defined`');}



var nativeProps=viewConfig.NativeProps;
for(var prop in nativeProps) {
if(!componentInterface.propTypes[prop] && 
!View.propTypes[prop] && 
!ReactNativeStyleAttributes[prop] && (
!nativePropsToIgnore || !nativePropsToIgnore[prop])){
throw new Error(
'`' + componentName + '` has no propType for native prop `' + 
viewConfig.uiViewClassName + '.' + prop + '` of native type `' + 
nativeProps[prop] + '`');}}}





module.exports = verifyPropTypes;
});
__d('UnimplementedView',["React","StyleSheet","View"],function(global, require, module, exports) {  'use strict';








var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var UnimplementedView=React.createClass({displayName:'UnimplementedView',
setNativeProps:function(){},




render:function(){
return (
React.createElement(View,{style:[styles.unimplementedView,this.props.style]},
this.props.children));}});





var styles=StyleSheet.create({
unimplementedView:{
borderWidth:1,
borderColor:'red',
alignSelf:'flex-start'}});



module.exports = UnimplementedView;
});
__d('insetsDiffer',[],function(global, require, module, exports) {  'use strict';



















var dummyInsets={
top:undefined,
left:undefined,
right:undefined,
bottom:undefined};


var insetsDiffer=function(
one,
two)
{
one = one || dummyInsets;
two = two || dummyInsets;
return one !== two && (
one.top !== two.top || 
one.left !== two.left || 
one.right !== two.right || 
one.bottom !== two.bottom);};



module.exports = insetsDiffer;
});
__d('pointsDiffer',[],function(global, require, module, exports) {  'use strict';

















var dummyPoint={x:undefined,y:undefined};

var pointsDiffer=function(one,two){
one = one || dummyPoint;
two = two || dummyPoint;
return one !== two && (
one.x !== two.x || 
one.y !== two.y);};



module.exports = pointsDiffer;
});
__d('DatePickerIOS',["NativeMethodsMixin","ReactPropTypes","React","NativeModules","StyleSheet","View","requireNativeComponent"],function(global, require, module, exports) {  'use strict';














var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var RCTDatePickerIOSConsts=require('NativeModules').UIManager.RCTDatePicker.Constants;
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');

var DATEPICKER='datepicker';














var DatePickerIOS=React.createClass({displayName:'DatePickerIOS',
mixins:[NativeMethodsMixin],

propTypes:{



date:PropTypes.instanceOf(Date).isRequired,








onDateChange:PropTypes.func.isRequired,






maximumDate:PropTypes.instanceOf(Date),






minimumDate:PropTypes.instanceOf(Date),




mode:PropTypes.oneOf(['date','time','datetime']),




minuteInterval:PropTypes.oneOf([1,2,3,4,5,6,10,12,15,20,30]),








timeZoneOffsetInMinutes:PropTypes.number},


getDefaultProps:function(){
return {
mode:'datetime'};},



_onChange:function(event){
var nativeTimeStamp=event.nativeEvent.timestamp;
this.props.onDateChange && this.props.onDateChange(
new Date(nativeTimeStamp));

this.props.onChange && this.props.onChange(event);





var propsTimeStamp=this.props.date.getTime();
if(nativeTimeStamp !== propsTimeStamp){
this.refs[DATEPICKER].setNativeProps({
date:propsTimeStamp});}},




render:function(){
var props=this.props;
return (
React.createElement(View,{style:props.style},
React.createElement(RCTDatePickerIOS,{
ref:DATEPICKER,
style:styles.datePickerIOS,
date:props.date.getTime(),
maximumDate:
props.maximumDate?props.maximumDate.getTime():undefined,

minimumDate:
props.minimumDate?props.minimumDate.getTime():undefined,

mode:props.mode,
minuteInterval:props.minuteInterval,
timeZoneOffsetInMinutes:props.timeZoneOffsetInMinutes,
onChange:this._onChange})));}});






var styles=StyleSheet.create({
datePickerIOS:{
height:RCTDatePickerIOSConsts.ComponentHeight,
width:RCTDatePickerIOSConsts.ComponentWidth}});



var RCTDatePickerIOS=requireNativeComponent('RCTDatePicker',DatePickerIOS,{
nativeOnly:{onChange:true}});


module.exports = DatePickerIOS;
});
__d('DrawerLayoutAndroid',["UnimplementedView"],function(global, require, module, exports) {  'use strict';











module.exports = require('UnimplementedView');
});
__d('Image',["EdgeInsetsPropType","ImageResizeMode","ImageStylePropTypes","NativeMethodsMixin","NativeModules","ReactPropTypes","React","ReactNativeViewAttributes","View","StyleSheet","StyleSheetPropType","flattenStyle","invariant","requireNativeComponent","resolveAssetSource","warning"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var EdgeInsetsPropType=require('EdgeInsetsPropType');
var ImageResizeMode=require('ImageResizeMode');
var ImageStylePropTypes=require('ImageStylePropTypes');
var NativeMethodsMixin=require('NativeMethodsMixin');
var NativeModules=require('NativeModules');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var View=require('View');
var StyleSheet=require('StyleSheet');
var StyleSheetPropType=require('StyleSheetPropType');

var flattenStyle=require('flattenStyle');
var invariant=require('invariant');
var requireNativeComponent=require('requireNativeComponent');
var resolveAssetSource=require('resolveAssetSource');
var warning=require('warning');

























var Image=React.createClass({displayName:'Image',
propTypes:{
style:StyleSheetPropType(ImageStylePropTypes),





source:PropTypes.oneOfType([
PropTypes.shape({
uri:PropTypes.string}),


PropTypes.number]),






defaultSource:PropTypes.shape({
uri:PropTypes.string}),





accessible:PropTypes.bool,





accessibilityLabel:PropTypes.string,








capInsets:EdgeInsetsPropType,




resizeMode:PropTypes.oneOf(['cover','contain','stretch']),




testID:PropTypes.string,




onLayout:PropTypes.func,




onLoadStart:PropTypes.func,




onProgress:PropTypes.func,




onError:PropTypes.func,




onLoad:PropTypes.func,




onLoadEnd:PropTypes.func},


statics:{
resizeMode:ImageResizeMode},


mixins:[NativeMethodsMixin],





viewConfig:{
uiViewClassName:'UIView',
validAttributes:ReactNativeViewAttributes.UIView},


contextTypes:{
isInAParentText:React.PropTypes.bool},


render:function(){
for(var prop in cfg.nativeOnly) {
if(this.props[prop] !== undefined){
console.warn('Prop `' + prop + ' = ' + this.props[prop] + '` should ' + 
'not be set directly on Image.');}}


var source=resolveAssetSource(this.props.source) || {};
var defaultSource=this.props.defaultSource && resolveAssetSource(this.props.defaultSource) || {};var 

width=source.width;var height=source.height;
var style=flattenStyle([{width:width,height:height},styles.base,this.props.style]) || {};

if(source.uri === ''){
console.warn('source.uri should not be an empty string');
return React.createElement(View,_extends({},this.props,{style:style}));}


var isNetwork=source.uri && source.uri.match(/^https?:/);
var RawImage=isNetwork?RCTNetworkImageView:RCTImageView;
var resizeMode=this.props.resizeMode || (style || {}).resizeMode || 'cover';
var tintColor=(style || {}).tintColor;



if(isNetwork && tintColor){
RawImage = RCTImageView;}


if(this.context.isInAParentText){
return React.createElement(RCTVirtualImage,{source:source});}else 
{
return (
React.createElement(RawImage,_extends({},
this.props,{
style:style,
resizeMode:resizeMode,
tintColor:tintColor,
src:source.uri,
defaultImageSrc:defaultSource.uri})));}}});






var styles=StyleSheet.create({
base:{
overflow:'hidden'}});



var cfg={
nativeOnly:{
src:true,
defaultImageSrc:true,
imageTag:true,
progressHandlerRegistered:true}};


var RCTImageView=requireNativeComponent('RCTImageView',Image,cfg);
var RCTNetworkImageView=NativeModules.NetworkImageViewManager?requireNativeComponent('RCTNetworkImageView',Image,cfg):RCTImageView;
var RCTVirtualImage=requireNativeComponent('RCTVirtualImage',Image);

module.exports = Image;
});
__d('EdgeInsetsPropType',["ReactPropTypes","createStrictShapeTypeChecker"],function(global, require, module, exports) {  'use strict';












var PropTypes=require('ReactPropTypes');

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');

var EdgeInsetsPropType=createStrictShapeTypeChecker({
top:PropTypes.number,
left:PropTypes.number,
bottom:PropTypes.number,
right:PropTypes.number});


module.exports = EdgeInsetsPropType;
});
__d('resolveAssetSource',["AssetRegistry","PixelRatio","Platform","NativeModules"],function(global, require, module, exports) {  'use strict';













var AssetRegistry=require('AssetRegistry');
var PixelRatio=require('PixelRatio');
var Platform=require('Platform');
var SourceCode=require('NativeModules').SourceCode;

var _serverURL;

function getDevServerURL(){
if(!__DEV__){

return null;}

if(_serverURL === undefined){
var scriptURL=SourceCode.scriptURL;
var match=scriptURL && scriptURL.match(/^https?:\/\/.*?\//);
if(match){

_serverURL = match[0];}else 
{

_serverURL = null;}}



return _serverURL;}





function getPathInArchive(asset){
if(Platform.OS === 'android'){
var assetDir=getBasePath(asset);


return (assetDir + '/' + asset.name).
toLowerCase().
replace(/\//g,'_').
replace(/([^a-z0-9_])/g,'').
replace(/^assets_/,'');}else 
{

return getScaledAssetPath(asset);}}







function getPathOnDevserver(devServerUrl,asset){
return devServerUrl + getScaledAssetPath(asset) + '?platform=' + Platform.OS + 
'&hash=' + asset.hash;}





function getBasePath(asset){


var path=asset.httpServerLocation;
if(path[0] === '/'){
path = path.substr(1);}

return path;}





function getScaledAssetPath(asset){
var scale=pickScale(asset.scales,PixelRatio.get());
var scaleSuffix=scale === 1?'':'@' + scale + 'x';
var assetDir=getBasePath(asset);
return assetDir + '/' + asset.name + scaleSuffix + '.' + asset.type;}


function pickScale(scales,deviceScale){

for(var i=0;i < scales.length;i++) {
if(scales[i] >= deviceScale){
return scales[i];}}






return scales[scales.length - 1] || 1;}


function resolveAssetSource(source){
if(typeof source === 'object'){
return source;}


var asset=AssetRegistry.getAssetByID(source);
if(asset){
return assetToImageSource(asset);}


return null;}


function assetToImageSource(asset){
var devServerURL=getDevServerURL();
if(devServerURL){
return {
__packager_asset:true,
width:asset.width,
height:asset.height,
uri:getPathOnDevserver(devServerURL,asset),
isStatic:false,
scale:pickScale(asset.scales,PixelRatio.get())};}else 

{
return {
__packager_asset:true,
width:asset.width,
height:asset.height,
uri:getPathInArchive(asset),
isStatic:true};}}




module.exports = resolveAssetSource;
module.exports.pickScale = pickScale;
});
__d('AssetRegistry',[],function(global, require, module, exports) {  'use strict';Object.defineProperty(exports,'__esModule',{value:true});




















var assets=[];

function registerAsset(asset){


return assets.push(asset);}


function getAssetByID(assetId){
return assets[assetId - 1];}


module.exports = {registerAsset:registerAsset,getAssetByID:getAssetByID};
});
__d('PixelRatio',["Dimensions"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var Dimensions=require('Dimensions');var 
































PixelRatio=(function(){function PixelRatio(){_classCallCheck(this,PixelRatio);}_createClass(PixelRatio,null,[{key:'get',value:


















function get(){
return Dimensions.get('window').scale;}},{key:'getFontScale',value:













function getFontScale(){
return Dimensions.get('window').fontScale || PixelRatio.get();}},{key:'getPixelSizeForLayoutSize',value:







function getPixelSizeForLayoutSize(layoutSize){
return Math.round(layoutSize * PixelRatio.get());}},{key:'startDetecting',value:



function startDetecting(){}}]);return PixelRatio;})();


module.exports = PixelRatio;
});
__d('Dimensions',["NativeModules","invariant"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var NativeModules=require('NativeModules');

var invariant=require('invariant');

var dimensions=NativeModules.UIManager.Dimensions;




if(dimensions && dimensions.windowPhysicalPixels){

dimensions = JSON.parse(JSON.stringify(dimensions));

var windowPhysicalPixels=dimensions.windowPhysicalPixels;
dimensions.window = {
width:windowPhysicalPixels.width / windowPhysicalPixels.scale,
height:windowPhysicalPixels.height / windowPhysicalPixels.scale,
scale:windowPhysicalPixels.scale,
fontScale:windowPhysicalPixels.fontScale};



delete dimensions.windowPhysicalPixels;}var 


Dimensions=(function(){function Dimensions(){_classCallCheck(this,Dimensions);}_createClass(Dimensions,null,[{key:'set',value:





function set(dims){
Object.assign(dimensions,dims);
return true;}},{key:'get',value:















function get(dim){
invariant(dimensions[dim],'No dimension set for key ' + dim);
return dimensions[dim];}}]);return Dimensions;})();



module.exports = Dimensions;
});
__d('ListView',["ListViewDataSource","React","NativeModules","NativeModules","ScrollView","ScrollResponder","StaticRenderer","react-timer-mixin/TimerMixin.js","isEmpty","logError","merge"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};function _objectWithoutProperties(obj,keys){var target={};for(var i in obj) {if(keys.indexOf(i) >= 0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i] = obj[i];}return target;}



























var ListViewDataSource=require('ListViewDataSource');
var React=require('React');
var RCTUIManager=require('NativeModules').UIManager;
var RCTScrollViewManager=require('NativeModules').ScrollViewManager;
var ScrollView=require('ScrollView');
var ScrollResponder=require('ScrollResponder');
var StaticRenderer=require('StaticRenderer');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');

var isEmpty=require('isEmpty');
var logError=require('logError');
var merge=require('merge');

var PropTypes=React.PropTypes;

var DEFAULT_PAGE_SIZE=1;
var DEFAULT_INITIAL_ROWS=10;
var DEFAULT_SCROLL_RENDER_AHEAD=1000;
var DEFAULT_END_REACHED_THRESHOLD=1000;
var DEFAULT_SCROLL_CALLBACK_THROTTLE=50;
var SCROLLVIEW_REF='listviewscroll';


















































var ListView=React.createClass({displayName:'ListView',
mixins:[ScrollResponder.Mixin,TimerMixin],

statics:{
DataSource:ListViewDataSource},









propTypes:_extends({},
ScrollView.propTypes,{

dataSource:PropTypes.instanceOf(ListViewDataSource).isRequired,







renderSeparator:PropTypes.func,










renderRow:PropTypes.func.isRequired,





initialListSize:PropTypes.number,





onEndReached:PropTypes.func,



onEndReachedThreshold:PropTypes.number,



pageSize:PropTypes.number,








renderFooter:PropTypes.func,
renderHeader:PropTypes.func,









renderSectionHeader:PropTypes.func,






renderScrollComponent:React.PropTypes.func.isRequired,




scrollRenderAheadDistance:React.PropTypes.number,









onChangeVisibleRows:React.PropTypes.func,





removeClippedSubviews:React.PropTypes.bool}),





getMetrics:function(){
return {
contentLength:this.scrollProperties.contentLength,
totalRows:this.props.dataSource.getRowCount(),
renderedRows:this.state.curRenderedRowsCount,
visibleRows:Object.keys(this._visibleRows).length};},







getScrollResponder:function(){
return this.refs[SCROLLVIEW_REF] && 
this.refs[SCROLLVIEW_REF].getScrollResponder && 
this.refs[SCROLLVIEW_REF].getScrollResponder();},


setNativeProps:function(props){
this.refs[SCROLLVIEW_REF].setNativeProps(props);},






getDefaultProps:function(){
return {
initialListSize:DEFAULT_INITIAL_ROWS,
pageSize:DEFAULT_PAGE_SIZE,
renderScrollComponent:function(props){return React.createElement(ScrollView,props);},
scrollRenderAheadDistance:DEFAULT_SCROLL_RENDER_AHEAD,
onEndReachedThreshold:DEFAULT_END_REACHED_THRESHOLD};},



getInitialState:function(){
return {
curRenderedRowsCount:this.props.initialListSize,
prevRenderedRowsCount:0,
highlightedRow:{}};},



getInnerViewNode:function(){
return this.refs[SCROLLVIEW_REF].getInnerViewNode();},


componentWillMount:function(){

this.scrollProperties = {
visibleLength:null,
contentLength:null,
offset:0};

this._childFrames = [];
this._visibleRows = {};},


componentDidMount:function(){var _this=this;


this.requestAnimationFrame(function(){
_this._measureAndUpdateScrollProps();});},



componentWillReceiveProps:function(nextProps){
if(this.props.dataSource !== nextProps.dataSource){
this.setState(function(state,props){
var rowsToRender=Math.min(
state.curRenderedRowsCount + props.pageSize,
props.dataSource.getRowCount());

return {
prevRenderedRowsCount:0,
curRenderedRowsCount:rowsToRender};});}},





componentDidUpdate:function(){var _this2=this;
this.requestAnimationFrame(function(){
_this2._measureAndUpdateScrollProps();});},



onRowHighlighted:function(sectionID,rowID){
this.setState({highlightedRow:{sectionID:sectionID,rowID:rowID}});},


render:function(){
var bodyComponents=[];

var dataSource=this.props.dataSource;
var allRowIDs=dataSource.rowIdentities;
var rowCount=0;
var sectionHeaderIndices=[];

var header=this.props.renderHeader && this.props.renderHeader();
var footer=this.props.renderFooter && this.props.renderFooter();
var totalIndex=header?1:0;

for(var sectionIdx=0;sectionIdx < allRowIDs.length;sectionIdx++) {
var sectionID=dataSource.sectionIdentities[sectionIdx];
var rowIDs=allRowIDs[sectionIdx];
if(rowIDs.length === 0){
continue;}


if(this.props.renderSectionHeader){
var shouldUpdateHeader=rowCount >= this.state.prevRenderedRowsCount && 
dataSource.sectionHeaderShouldUpdate(sectionIdx);
bodyComponents.push(
React.createElement(StaticRenderer,{
key:'s_' + sectionID,
shouldUpdate:!!shouldUpdateHeader,
render:this.props.renderSectionHeader.bind(
null,
dataSource.getSectionHeaderData(sectionIdx),
sectionID)}));



sectionHeaderIndices.push(totalIndex++);}


for(var rowIdx=0;rowIdx < rowIDs.length;rowIdx++) {
var rowID=rowIDs[rowIdx];
var comboID=sectionID + rowID;
var shouldUpdateRow=rowCount >= this.state.prevRenderedRowsCount && 
dataSource.rowShouldUpdate(sectionIdx,rowIdx);
var row=
React.createElement(StaticRenderer,{
key:'r_' + comboID,
shouldUpdate:!!shouldUpdateRow,
render:this.props.renderRow.bind(
null,
dataSource.getRowData(sectionIdx,rowIdx),
sectionID,
rowID,
this.onRowHighlighted)});


bodyComponents.push(row);
totalIndex++;

if(this.props.renderSeparator && (
rowIdx !== rowIDs.length - 1 || sectionIdx === allRowIDs.length - 1)){
var adjacentRowHighlighted=
this.state.highlightedRow.sectionID === sectionID && (
this.state.highlightedRow.rowID === rowID || 
this.state.highlightedRow.rowID === rowIDs[rowIdx + 1]);

var separator=this.props.renderSeparator(
sectionID,
rowID,
adjacentRowHighlighted);

bodyComponents.push(separator);
totalIndex++;}

if(++rowCount === this.state.curRenderedRowsCount){
break;}}


if(rowCount >= this.state.curRenderedRowsCount){
break;}}var _props=






this.props;var renderScrollComponent=_props.renderScrollComponent;var props=_objectWithoutProperties(_props,['renderScrollComponent']);
if(!props.scrollEventThrottle){
props.scrollEventThrottle = DEFAULT_SCROLL_CALLBACK_THROTTLE;}

Object.assign(props,{
onScroll:this._onScroll,
stickyHeaderIndices:sectionHeaderIndices,



onKeyboardWillShow:undefined,
onKeyboardWillHide:undefined,
onKeyboardDidShow:undefined,
onKeyboardDidHide:undefined});




return React.cloneElement(renderScrollComponent(props),{
ref:SCROLLVIEW_REF},
header,bodyComponents,footer);},






_measureAndUpdateScrollProps:function(){
var scrollComponent=this.getScrollResponder();
if(!scrollComponent || !scrollComponent.getInnerViewNode){
return;}

RCTUIManager.measureLayout(
scrollComponent.getInnerViewNode(),
React.findNodeHandle(scrollComponent),
logError,
this._setScrollContentLength);

RCTUIManager.measureLayoutRelativeToParent(
React.findNodeHandle(scrollComponent),
logError,
this._setScrollVisibleLength);




RCTScrollViewManager && RCTScrollViewManager.calculateChildFrames && 
RCTScrollViewManager.calculateChildFrames(
React.findNodeHandle(scrollComponent),
this._updateChildFrames);},



_setScrollContentLength:function(left,top,width,height){
this.scrollProperties.contentLength = !this.props.horizontal?
height:width;},


_setScrollVisibleLength:function(left,top,width,height){
this.scrollProperties.visibleLength = !this.props.horizontal?
height:width;
this._updateVisibleRows();
this._renderMoreRowsIfNeeded();},


_updateChildFrames:function(childFrames){
this._updateVisibleRows(childFrames);},


_maybeCallOnEndReached:function(event){
if(this.props.onEndReached && 
this.scrollProperties.contentLength !== this._sentEndForContentLength && 
this._getDistanceFromEnd(this.scrollProperties) < this.props.onEndReachedThreshold && 
this.state.curRenderedRowsCount === this.props.dataSource.getRowCount()){
this._sentEndForContentLength = this.scrollProperties.contentLength;
this.props.onEndReached(event);
return true;}

return false;},


_renderMoreRowsIfNeeded:function(){
if(this.scrollProperties.contentLength === null || 
this.scrollProperties.visibleLength === null || 
this.state.curRenderedRowsCount === this.props.dataSource.getRowCount()){
this._maybeCallOnEndReached();
return;}


var distanceFromEnd=this._getDistanceFromEnd(this.scrollProperties);
if(distanceFromEnd < this.props.scrollRenderAheadDistance){
this._pageInNewRows();}},



_pageInNewRows:function(){var _this3=this;
this.setState(function(state,props){
var rowsToRender=Math.min(
state.curRenderedRowsCount + props.pageSize,
props.dataSource.getRowCount());

return {
prevRenderedRowsCount:state.curRenderedRowsCount,
curRenderedRowsCount:rowsToRender};},

function(){
_this3._measureAndUpdateScrollProps();
_this3.setState(function(state){return {
prevRenderedRowsCount:state.curRenderedRowsCount};});});},




_getDistanceFromEnd:function(scrollProperties){
return scrollProperties.contentLength - 
scrollProperties.visibleLength - 
scrollProperties.offset;},


_updateVisibleRows:function(updatedFrames){var _this4=this;
if(!this.props.onChangeVisibleRows){
return;}

if(updatedFrames){
updatedFrames.forEach(function(newFrame){
_this4._childFrames[newFrame.index] = merge(newFrame);});}


var isVertical=!this.props.horizontal;
var dataSource=this.props.dataSource;
var visibleMin=this.scrollProperties.offset;
var visibleMax=visibleMin + this.scrollProperties.visibleLength;
var allRowIDs=dataSource.rowIdentities;

var header=this.props.renderHeader && this.props.renderHeader();
var totalIndex=header?1:0;
var visibilityChanged=false;
var changedRows={};
for(var sectionIdx=0;sectionIdx < allRowIDs.length;sectionIdx++) {
var rowIDs=allRowIDs[sectionIdx];
if(rowIDs.length === 0){
continue;}

var sectionID=dataSource.sectionIdentities[sectionIdx];
if(this.props.renderSectionHeader){
totalIndex++;}

var visibleSection=this._visibleRows[sectionID];
if(!visibleSection){
visibleSection = {};}

for(var rowIdx=0;rowIdx < rowIDs.length;rowIdx++) {
var rowID=rowIDs[rowIdx];
var frame=this._childFrames[totalIndex];
totalIndex++;
if(!frame){
break;}

var rowVisible=visibleSection[rowID];
var min=isVertical?frame.y:frame.x;
var max=min + (isVertical?frame.height:frame.width);
if(min > visibleMax || max < visibleMin){
if(rowVisible){
visibilityChanged = true;
delete visibleSection[rowID];
if(!changedRows[sectionID]){
changedRows[sectionID] = {};}

changedRows[sectionID][rowID] = false;}}else 

if(!rowVisible){
visibilityChanged = true;
visibleSection[rowID] = true;
if(!changedRows[sectionID]){
changedRows[sectionID] = {};}

changedRows[sectionID][rowID] = true;}}


if(!isEmpty(visibleSection)){
this._visibleRows[sectionID] = visibleSection;}else 
if(this._visibleRows[sectionID]){
delete this._visibleRows[sectionID];}}


visibilityChanged && this.props.onChangeVisibleRows(this._visibleRows,changedRows);},


_onScroll:function(e){
var isVertical=!this.props.horizontal;
this.scrollProperties.visibleLength = e.nativeEvent.layoutMeasurement[
isVertical?'height':'width'];

this.scrollProperties.contentLength = e.nativeEvent.contentSize[
isVertical?'height':'width'];

this.scrollProperties.offset = e.nativeEvent.contentOffset[
isVertical?'y':'x'];

this._updateVisibleRows(e.nativeEvent.updatedChildFrames);
if(!this._maybeCallOnEndReached(e)){
this._renderMoreRowsIfNeeded();}


this.props.onScroll && this.props.onScroll(e);}});



module.exports = ListView;
});
__d('ListViewDataSource',["invariant","isEmpty","warning"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}





























var invariant=require('invariant');
var isEmpty=require('isEmpty');
var warning=require('warning');

function defaultGetRowData(
dataBlob,
sectionID,
rowID)
{
return dataBlob[sectionID][rowID];}


function defaultGetSectionHeaderData(
dataBlob,
sectionID)
{
return dataBlob[sectionID];}var 













































ListViewDataSource=(function(){


























function ListViewDataSource(params){_classCallCheck(this,ListViewDataSource);
invariant(
params && typeof params.rowHasChanged === 'function',
'Must provide a rowHasChanged function.');

this._rowHasChanged = params.rowHasChanged;
this._getRowData = params.getRowData || defaultGetRowData;
this._sectionHeaderHasChanged = params.sectionHeaderHasChanged;
this._getSectionHeaderData = 
params.getSectionHeaderData || defaultGetSectionHeaderData;

this._dataBlob = null;
this._dirtyRows = [];
this._dirtySections = [];
this._cachedRowCount = 0;



this.rowIdentities = [];
this.sectionIdentities = [];}_createClass(ListViewDataSource,[{key:'cloneWithRows',value:


















function cloneWithRows(
dataBlob,
rowIdentities)
{
var rowIds=rowIdentities?[rowIdentities]:null;
if(!this._sectionHeaderHasChanged){
this._sectionHeaderHasChanged = function(){return false;};}

return this.cloneWithRowsAndSections({s1:dataBlob},['s1'],rowIds);}},{key:'cloneWithRowsAndSections',value:













function cloneWithRowsAndSections(
dataBlob,
sectionIdentities,
rowIdentities)
{
invariant(
typeof this._sectionHeaderHasChanged === 'function',
'Must provide a sectionHeaderHasChanged function with section data.');

var newSource=new ListViewDataSource({
getRowData:this._getRowData,
getSectionHeaderData:this._getSectionHeaderData,
rowHasChanged:this._rowHasChanged,
sectionHeaderHasChanged:this._sectionHeaderHasChanged});

newSource._dataBlob = dataBlob;
if(sectionIdentities){
newSource.sectionIdentities = sectionIdentities;}else 
{
newSource.sectionIdentities = Object.keys(dataBlob);}

if(rowIdentities){
newSource.rowIdentities = rowIdentities;}else 
{
newSource.rowIdentities = [];
newSource.sectionIdentities.forEach(function(sectionID){
newSource.rowIdentities.push(Object.keys(dataBlob[sectionID]));});}


newSource._cachedRowCount = countRows(newSource.rowIdentities);

newSource._calculateDirtyArrays(
this._dataBlob,
this.sectionIdentities,
this.rowIdentities);


return newSource;}},{key:'getRowCount',value:


function getRowCount(){
return this._cachedRowCount;}},{key:'rowShouldUpdate',value:





function rowShouldUpdate(sectionIndex,rowIndex){
var needsUpdate=this._dirtyRows[sectionIndex][rowIndex];
warning(needsUpdate !== undefined,
'missing dirtyBit for section, row: ' + sectionIndex + ', ' + rowIndex);
return needsUpdate;}},{key:'getRowData',value:





function getRowData(sectionIndex,rowIndex){
var sectionID=this.sectionIdentities[sectionIndex];
var rowID=this.rowIdentities[sectionIndex][rowIndex];
warning(
sectionID !== undefined && rowID !== undefined,
'rendering invalid section, row: ' + sectionIndex + ', ' + rowIndex);

return this._getRowData(this._dataBlob,sectionID,rowID);}},{key:'getRowIDForFlatIndex',value:






function getRowIDForFlatIndex(index){
var accessIndex=index;
for(var ii=0;ii < this.sectionIdentities.length;ii++) {
if(accessIndex >= this.rowIdentities[ii].length){
accessIndex -= this.rowIdentities[ii].length;}else 
{
return this.rowIdentities[ii][accessIndex];}}


return null;}},{key:'getSectionIDForFlatIndex',value:






function getSectionIDForFlatIndex(index){
var accessIndex=index;
for(var ii=0;ii < this.sectionIdentities.length;ii++) {
if(accessIndex >= this.rowIdentities[ii].length){
accessIndex -= this.rowIdentities[ii].length;}else 
{
return this.sectionIdentities[ii];}}


return null;}},{key:'getSectionLengths',value:





function getSectionLengths(){
var results=[];
for(var ii=0;ii < this.sectionIdentities.length;ii++) {
results.push(this.rowIdentities[ii].length);}

return results;}},{key:'sectionHeaderShouldUpdate',value:





function sectionHeaderShouldUpdate(sectionIndex){
var needsUpdate=this._dirtySections[sectionIndex];
warning(needsUpdate !== undefined,
'missing dirtyBit for section: ' + sectionIndex);
return needsUpdate;}},{key:'getSectionHeaderData',value:





function getSectionHeaderData(sectionIndex){
if(!this._getSectionHeaderData){
return null;}

var sectionID=this.sectionIdentities[sectionIndex];
warning(sectionID !== undefined,
'renderSection called on invalid section: ' + sectionIndex);
return this._getSectionHeaderData(this._dataBlob,sectionID);}},{key:'_calculateDirtyArrays',value:





















function _calculateDirtyArrays(
prevDataBlob,
prevSectionIDs,
prevRowIDs)
{

var prevSectionsHash=keyedDictionaryFromArray(prevSectionIDs);
var prevRowsHash={};
for(var ii=0;ii < prevRowIDs.length;ii++) {
var sectionID=prevSectionIDs[ii];
warning(
!prevRowsHash[sectionID],
'SectionID appears more than once: ' + sectionID);

prevRowsHash[sectionID] = keyedDictionaryFromArray(prevRowIDs[ii]);}



this._dirtySections = [];
this._dirtyRows = [];

var dirty;
for(var sIndex=0;sIndex < this.sectionIdentities.length;sIndex++) {
var sectionID=this.sectionIdentities[sIndex];

dirty = !prevSectionsHash[sectionID];
var sectionHeaderHasChanged=this._sectionHeaderHasChanged;
if(!dirty && sectionHeaderHasChanged){
dirty = sectionHeaderHasChanged(
this._getSectionHeaderData(prevDataBlob,sectionID),
this._getSectionHeaderData(this._dataBlob,sectionID));}


this._dirtySections.push(!!dirty);

this._dirtyRows[sIndex] = [];
for(var rIndex=0;rIndex < this.rowIdentities[sIndex].length;rIndex++) {
var rowID=this.rowIdentities[sIndex][rIndex];

dirty = 
!prevSectionsHash[sectionID] || 
!prevRowsHash[sectionID][rowID] || 
this._rowHasChanged(
this._getRowData(prevDataBlob,sectionID,rowID),
this._getRowData(this._dataBlob,sectionID,rowID));

this._dirtyRows[sIndex].push(!!dirty);}}}}]);return ListViewDataSource;})();





function countRows(allRowIDs){
var totalRows=0;
for(var sectionIdx=0;sectionIdx < allRowIDs.length;sectionIdx++) {
var rowIDs=allRowIDs[sectionIdx];
totalRows += rowIDs.length;}

return totalRows;}


function keyedDictionaryFromArray(arr){
if(isEmpty(arr)){
return {};}

var result={};
for(var ii=0;ii < arr.length;ii++) {
var key=arr[ii];
warning(!result[key],'Value appears more than once in array: ' + key);
result[key] = true;}

return result;}



module.exports = ListViewDataSource;
});
__d('isEmpty',[],function(global, require, module, exports) {  function 



















isEmpty(obj){
if(Array.isArray(obj)){
return obj.length === 0;}else 
if(typeof obj === 'object'){
for(var i in obj) {
return false;}

return true;}else 
{
return !obj;}}



module.exports = isEmpty;
});
__d('ScrollView',["EdgeInsetsPropType","Platform","PointPropType","NativeModules","React","ReactNativeViewAttributes","NativeModules","ScrollResponder","StyleSheet","StyleSheetPropType","View","ViewStylePropTypes","createReactNativeComponentClass","deepDiffer","dismissKeyboard","flattenStyle","insetsDiffer","invariant","pointsDiffer","requireNativeComponent"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var EdgeInsetsPropType=require('EdgeInsetsPropType');
var Platform=require('Platform');
var PointPropType=require('PointPropType');
var RCTScrollView=require('NativeModules').UIManager.RCTScrollView;
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var RCTUIManager=require('NativeModules').UIManager;
var ScrollResponder=require('ScrollResponder');
var StyleSheet=require('StyleSheet');
var StyleSheetPropType=require('StyleSheetPropType');
var View=require('View');
var ViewStylePropTypes=require('ViewStylePropTypes');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var deepDiffer=require('deepDiffer');
var dismissKeyboard=require('dismissKeyboard');
var flattenStyle=require('flattenStyle');
var insetsDiffer=require('insetsDiffer');
var invariant=require('invariant');
var pointsDiffer=require('pointsDiffer');
var requireNativeComponent=require('requireNativeComponent');

var PropTypes=React.PropTypes;

var SCROLLVIEW='ScrollView';
var INNERVIEW='InnerScrollView';
















var ScrollView=React.createClass({displayName:'ScrollView',
propTypes:{






automaticallyAdjustContentInsets:PropTypes.bool,





contentInset:EdgeInsetsPropType,





contentOffset:PointPropType,







bounces:PropTypes.bool,






bouncesZoom:PropTypes.bool,






alwaysBounceHorizontal:PropTypes.bool,






alwaysBounceVertical:PropTypes.bool,







centerContent:PropTypes.bool,















contentContainerStyle:StyleSheetPropType(ViewStylePropTypes),







decelerationRate:PropTypes.number,




horizontal:PropTypes.bool,





directionalLockEnabled:PropTypes.bool,





canCancelContentTouches:PropTypes.bool,








keyboardDismissMode:PropTypes.oneOf([
'none',
'interactive',
'on-drag']),







keyboardShouldPersistTaps:PropTypes.bool,




maximumZoomScale:PropTypes.number,




minimumZoomScale:PropTypes.number,




onScroll:PropTypes.func,




onScrollAnimationEnd:PropTypes.func,






pagingEnabled:PropTypes.bool,





scrollEnabled:PropTypes.bool,









scrollEventThrottle:PropTypes.number,






scrollIndicatorInsets:EdgeInsetsPropType,





scrollsToTop:PropTypes.bool,



showsHorizontalScrollIndicator:PropTypes.bool,



showsVerticalScrollIndicator:PropTypes.bool,








stickyHeaderIndices:PropTypes.arrayOf(PropTypes.number),
style:StyleSheetPropType(ViewStylePropTypes),







snapToInterval:PropTypes.number,








snapToAlignment:PropTypes.oneOf([
'start',
'center',
'end']),







removeClippedSubviews:PropTypes.bool,




zoomScale:PropTypes.number},


mixins:[ScrollResponder.Mixin],

getInitialState:function(){
return this.scrollResponderMixinGetInitialState();},


setNativeProps:function(props){
this.refs[SCROLLVIEW].setNativeProps(props);},








getScrollResponder:function(){
return this;},


getInnerViewNode:function(){
return React.findNodeHandle(this.refs[INNERVIEW]);},


scrollTo:function(destY,destX){

this.getScrollResponder().scrollResponderScrollTo(destX || 0,destY || 0);},


scrollWithoutAnimationTo:function(destY,destX){

this.getScrollResponder().scrollResponderScrollWithouthAnimationTo(
destX || 0,
destY || 0);},



handleScroll:function(e){
if(__DEV__){
if(this.props.onScroll && !this.props.scrollEventThrottle){
console.log(
'You specified `onScroll` on a <ScrollView> but not ' + 
'`scrollEventThrottle`. You will only receive one event. ' + 
'Using `16` you get all the events but be aware that it may ' + 
'cause frame drops, use a bigger number if you don\'t need as ' + 
'much precision.');}}



if(Platform.OS === 'android'){
if(this.props.keyboardDismissMode === 'on-drag'){
dismissKeyboard();}}


this.scrollResponderHandleScroll(e);},


render:function(){
var contentContainerStyle=[
this.props.horizontal && styles.contentContainerHorizontal,
this.props.contentContainerStyle];

if(__DEV__ && this.props.style){
var style=flattenStyle(this.props.style);
var childLayoutProps=['alignItems','justifyContent'].
filter(function(prop){return style && style[prop] !== undefined;});
invariant(
childLayoutProps.length === 0,
'ScrollView child layout (' + JSON.stringify(childLayoutProps) + 
') must by applied through the contentContainerStyle prop.');}



var contentContainer=
React.createElement(View,{
ref:INNERVIEW,
style:contentContainerStyle,
removeClippedSubviews:this.props.removeClippedSubviews,
collapsable:false},
this.props.children);


var alwaysBounceHorizontal=
this.props.alwaysBounceHorizontal !== undefined?
this.props.alwaysBounceHorizontal:
this.props.horizontal;

var alwaysBounceVertical=
this.props.alwaysBounceVertical !== undefined?
this.props.alwaysBounceVertical:
!this.props.horizontal;

var props=_extends({},
this.props,{
alwaysBounceHorizontal:alwaysBounceHorizontal,
alwaysBounceVertical:alwaysBounceVertical,
style:[styles.base,this.props.style],
onTouchStart:this.scrollResponderHandleTouchStart,
onTouchMove:this.scrollResponderHandleTouchMove,
onTouchEnd:this.scrollResponderHandleTouchEnd,
onScrollBeginDrag:this.scrollResponderHandleScrollBeginDrag,
onScrollEndDrag:this.scrollResponderHandleScrollEndDrag,
onMomentumScrollBegin:this.scrollResponderHandleMomentumScrollBegin,
onMomentumScrollEnd:this.scrollResponderHandleMomentumScrollEnd,
onStartShouldSetResponder:this.scrollResponderHandleStartShouldSetResponder,
onStartShouldSetResponderCapture:this.scrollResponderHandleStartShouldSetResponderCapture,
onScrollShouldSetResponder:this.scrollResponderHandleScrollShouldSetResponder,
onScroll:this.handleScroll,
onResponderGrant:this.scrollResponderHandleResponderGrant,
onResponderTerminationRequest:this.scrollResponderHandleTerminationRequest,
onResponderTerminate:this.scrollResponderHandleTerminate,
onResponderRelease:this.scrollResponderHandleResponderRelease,
onResponderReject:this.scrollResponderHandleResponderReject});


var ScrollViewClass;
if(Platform.OS === 'ios'){
ScrollViewClass = RCTScrollView;}else 
if(Platform.OS === 'android'){
if(this.props.horizontal){
ScrollViewClass = AndroidHorizontalScrollView;}else 
{
ScrollViewClass = AndroidScrollView;}}


invariant(
ScrollViewClass !== undefined,
'ScrollViewClass must not be undefined');


return (
React.createElement(ScrollViewClass,_extends({},props,{ref:SCROLLVIEW}),
contentContainer));}});





var styles=StyleSheet.create({
base:{
flex:1},

contentContainerHorizontal:{
alignSelf:'flex-start',
flexDirection:'row'}});



var validAttributes=_extends({},
ReactNativeViewAttributes.UIView,{
alwaysBounceHorizontal:true,
alwaysBounceVertical:true,
automaticallyAdjustContentInsets:true,
bounces:true,
centerContent:true,
contentInset:{diff:insetsDiffer},
contentOffset:{diff:pointsDiffer},
decelerationRate:true,
horizontal:true,
keyboardDismissMode:true,
keyboardShouldPersistTaps:true,
maximumZoomScale:true,
minimumZoomScale:true,
pagingEnabled:true,
removeClippedSubviews:true,
scrollEnabled:true,
scrollIndicatorInsets:{diff:insetsDiffer},
scrollsToTop:true,
showsHorizontalScrollIndicator:true,
showsVerticalScrollIndicator:true,
snapToInterval:true,
snapToAlignment:true,
stickyHeaderIndices:{diff:deepDiffer},
scrollEventThrottle:true,
zoomScale:true});


if(Platform.OS === 'android'){
var AndroidScrollView=createReactNativeComponentClass({
validAttributes:validAttributes,
uiViewClassName:'RCTScrollView'});

var AndroidHorizontalScrollView=createReactNativeComponentClass({
validAttributes:validAttributes,
uiViewClassName:'AndroidHorizontalScrollView'});}else 

if(Platform.OS === 'ios'){
var RCTScrollView=requireNativeComponent('RCTScrollView',ScrollView);}


module.exports = ScrollView;
});
__d('PointPropType',["ReactPropTypes","createStrictShapeTypeChecker"],function(global, require, module, exports) {  'use strict';












var PropTypes=require('ReactPropTypes');

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');

var PointPropType=createStrictShapeTypeChecker({
x:PropTypes.number,
y:PropTypes.number});


module.exports = PointPropType;
});
__d('ScrollResponder',["NativeModules","Platform","RCTDeviceEventEmitter","React","Subscribable","TextInputState","warning"],function(global, require, module, exports) {  'use strict';












var NativeModules=require('NativeModules');
var Platform=require('Platform');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var React=require('React');
var Subscribable=require('Subscribable');
var TextInputState=require('TextInputState');

var RCTUIManager=NativeModules.UIManager;
var RCTScrollViewConsts=RCTUIManager.RCTScrollView.Constants;

var warning=require('warning');















































































var IS_ANIMATING_TOUCH_START_THRESHOLD_MS=16;










var ScrollResponderMixin={
mixins:[Subscribable.Mixin],
statics:RCTScrollViewConsts,
scrollResponderMixinGetInitialState:function(){
return {
isTouching:false,
lastMomentumScrollBeginTime:0,
lastMomentumScrollEndTime:0,






observedScrollSinceBecomingResponder:false,
becameResponderWhileAnimating:false};},






scrollResponderHandleScrollShouldSetResponder:function(){
return this.state.isTouching;},



























scrollResponderHandleStartShouldSetResponder:function(){
return false;},













scrollResponderHandleStartShouldSetResponderCapture:function(e){

var currentlyFocusedTextInput=TextInputState.currentlyFocusedField();
if(!this.props.keyboardShouldPersistTaps && 
currentlyFocusedTextInput != null && 
e.target !== currentlyFocusedTextInput){
return true;}

return this.scrollResponderIsAnimating();},












scrollResponderHandleResponderReject:function(){
warning(false,"ScrollView doesn't take rejection well - scrolls anyway");},

















scrollResponderHandleTerminationRequest:function(){
return !this.state.observedScrollSinceBecomingResponder;},








scrollResponderHandleTouchEnd:function(e){
var nativeEvent=e.nativeEvent;
this.state.isTouching = nativeEvent.touches.length !== 0;
this.props.onTouchEnd && this.props.onTouchEnd(e);},





scrollResponderHandleResponderRelease:function(e){
this.props.onResponderRelease && this.props.onResponderRelease(e);



var currentlyFocusedTextInput=TextInputState.currentlyFocusedField();
if(!this.props.keyboardShouldPersistTaps && 
currentlyFocusedTextInput != null && 
e.target !== currentlyFocusedTextInput && 
!this.state.observedScrollSinceBecomingResponder && 
!this.state.becameResponderWhileAnimating){
this.props.onScrollResponderKeyboardDismissed && 
this.props.onScrollResponderKeyboardDismissed(e);
TextInputState.blurTextInput(currentlyFocusedTextInput);}},



scrollResponderHandleScroll:function(e){
this.state.observedScrollSinceBecomingResponder = true;
this.props.onScroll && this.props.onScroll(e);},





scrollResponderHandleResponderGrant:function(e){
this.state.observedScrollSinceBecomingResponder = false;
this.props.onResponderGrant && this.props.onResponderGrant(e);
this.state.becameResponderWhileAnimating = this.scrollResponderIsAnimating();},









scrollResponderHandleScrollBeginDrag:function(e){
this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);},





scrollResponderHandleScrollEndDrag:function(e){
this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);},





scrollResponderHandleMomentumScrollBegin:function(e){
this.state.lastMomentumScrollBeginTime = Date.now();
this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);},





scrollResponderHandleMomentumScrollEnd:function(e){
this.state.lastMomentumScrollEndTime = Date.now();
this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);},













scrollResponderHandleTouchStart:function(e){
this.state.isTouching = true;
this.props.onTouchStart && this.props.onTouchStart(e);},













scrollResponderHandleTouchMove:function(e){
this.props.onTouchMove && this.props.onTouchMove(e);},







scrollResponderIsAnimating:function(){
var now=Date.now();
var timeSinceLastMomentumScrollEnd=now - this.state.lastMomentumScrollEndTime;
var isAnimating=timeSinceLastMomentumScrollEnd < IS_ANIMATING_TOUCH_START_THRESHOLD_MS || 
this.state.lastMomentumScrollEndTime < this.state.lastMomentumScrollBeginTime;
return isAnimating;},








scrollResponderScrollTo:function(offsetX,offsetY){
if(Platform.OS === 'android'){
RCTUIManager.dispatchViewManagerCommand(
React.findNodeHandle(this),
RCTUIManager.RCTScrollView.Commands.scrollTo,
[Math.round(offsetX),Math.round(offsetY)]);}else 

{
RCTUIManager.scrollTo(
React.findNodeHandle(this),
offsetX,
offsetY);}},








scrollResponderScrollWithouthAnimationTo:function(offsetX,offsetY){
if(Platform.OS === 'android'){
RCTUIManager.dispatchViewManagerCommand(
React.findNodeHandle(this),
RCTUIManager.RCTScrollView.Commands.scrollWithoutAnimationTo,
[offsetX,offsetY]);}else 

{
RCTUIManager.scrollWithoutAnimationTo(
React.findNodeHandle(this),
offsetX,
offsetY);}},








scrollResponderZoomTo:function(rect){
RCTUIManager.zoomToRect(React.findNodeHandle(this),rect);},












scrollResponderScrollNativeHandleToKeyboard:function(nodeHandle,additionalOffset,preventNegativeScrollOffset){
this.additionalScrollOffset = additionalOffset || 0;
this.preventNegativeScrollOffset = !!preventNegativeScrollOffset;
RCTUIManager.measureLayout(
nodeHandle,
React.findNodeHandle(this.getInnerViewNode()),
this.scrollResponderTextInputFocusError,
this.scrollResponderInputMeasureAndScrollToKeyboard);},













scrollResponderInputMeasureAndScrollToKeyboard:function(left,top,width,height){
if(this.keyboardWillOpenTo){
var scrollOffsetY=
top - this.keyboardWillOpenTo.endCoordinates.screenY + height + 
this.additionalScrollOffset;





if(this.preventNegativeScrollOffset){
scrollOffsetY = Math.max(0,scrollOffsetY);}

this.scrollResponderScrollTo(0,scrollOffsetY);}

this.additionalOffset = 0;
this.preventNegativeScrollOffset = false;},


scrollResponderTextInputFocusError:function(e){
console.error('Error measuring text field: ',e);},








componentWillMount:function(){
this.keyboardWillOpenTo = null;
this.additionalScrollOffset = 0;
this.addListenerOn(RCTDeviceEventEmitter,'keyboardWillShow',this.scrollResponderKeyboardWillShow);
this.addListenerOn(RCTDeviceEventEmitter,'keyboardWillHide',this.scrollResponderKeyboardWillHide);
this.addListenerOn(RCTDeviceEventEmitter,'keyboardDidShow',this.scrollResponderKeyboardDidShow);
this.addListenerOn(RCTDeviceEventEmitter,'keyboardDidHide',this.scrollResponderKeyboardDidHide);
warning(this.getInnerViewNode,'You need to implement getInnerViewNode in ' + 
this.constructor.displayName + ' to get full' + 
'functionality from ScrollResponder mixin. See example of ListView and' + 
' ScrollView.');},






























scrollResponderKeyboardWillShow:function(e){
this.keyboardWillOpenTo = e;
this.props.onKeyboardWillShow && this.props.onKeyboardWillShow(e);},


scrollResponderKeyboardWillHide:function(e){
this.keyboardWillOpenTo = null;
this.props.onKeyboardWillHide && this.props.onKeyboardWillHide(e);},


scrollResponderKeyboardDidShow:function(e){


if(e){
this.keyboardWillOpenTo = e;}

this.props.onKeyboardDidShow && this.props.onKeyboardDidShow(e);},


scrollResponderKeyboardDidHide:function(){
this.keyboardWillOpenTo = null;
this.props.onKeyboardDidHide && this.props.onKeyboardDidHide();}};




var ScrollResponder={
Mixin:ScrollResponderMixin};


module.exports = ScrollResponder;
});
__d('Subscribable',["EventEmitter"],function(global, require, module, exports) {  'use strict';






















var Subscribable={};

Subscribable.Mixin = {

componentWillMount:function(){
this._subscribableSubscriptions = [];},


componentWillUnmount:function(){
this._subscribableSubscriptions.forEach(
function(subscription){return subscription.remove();});

this._subscribableSubscriptions = null;},















addListenerOn:function(
eventEmitter,
eventType,
listener,
context)
{
this._subscribableSubscriptions.push(
eventEmitter.addListener(eventType,listener,context));}};




module.exports = Subscribable;
});
__d('dismissKeyboard',["TextInputState"],function(global, require, module, exports) {  'use strict';








var TextInputState=require('TextInputState');

function dismissKeyboard(){
TextInputState.blurTextInput(TextInputState.currentlyFocusedField());}


module.exports = dismissKeyboard;
});
__d('StaticRenderer',["React"],function(global, require, module, exports) {  'use strict';












var React=require('React');

var StaticRenderer=React.createClass({displayName:'StaticRenderer',
propTypes:{
shouldUpdate:React.PropTypes.bool.isRequired,
render:React.PropTypes.func.isRequired},


shouldComponentUpdate:function(nextProps){
return nextProps.shouldUpdate;},


render:function(){
return this.props.render();}});



module.exports = StaticRenderer;
});
__d('react-timer-mixin/TimerMixin.js',[],function(global, require, module, exports) {  'use strict';










var GLOBAL=typeof window === 'undefined'?global:window;

var setter=function(_setter,_clearer,array){
return function(callback,delta){
var id=_setter((function(){
_clearer.call(this,id);
callback.apply(this,arguments);}).
bind(this),delta);

if(!this[array]){
this[array] = [id];}else 
{
this[array].push(id);}

return id;};};



var clearer=function(_clearer,array){
return function(id){
if(this[array]){
var index=this[array].indexOf(id);
if(index !== -1){
this[array].splice(index,1);}}


_clearer(id);};};



var _timeouts='TimerMixin_timeouts';
var _clearTimeout=clearer(GLOBAL.clearTimeout,_timeouts);
var _setTimeout=setter(GLOBAL.setTimeout,_clearTimeout,_timeouts);

var _intervals='TimerMixin_intervals';
var _clearInterval=clearer(GLOBAL.clearInterval,_intervals);
var _setInterval=setter(GLOBAL.setInterval,function(){},_intervals);

var _immediates='TimerMixin_immediates';
var _clearImmediate=clearer(GLOBAL.clearImmediate,_immediates);
var _setImmediate=setter(GLOBAL.setImmediate,_clearImmediate,_immediates);

var _rafs='TimerMixin_rafs';
var _cancelAnimationFrame=clearer(GLOBAL.cancelAnimationFrame,_rafs);
var _requestAnimationFrame=setter(GLOBAL.requestAnimationFrame,_cancelAnimationFrame,_rafs);

var TimerMixin={
componentWillUnmount:function(){
this[_timeouts] && this[_timeouts].forEach(function(id){
GLOBAL.clearTimeout(id);});

this[_timeouts] = null;
this[_intervals] && this[_intervals].forEach(function(id){
GLOBAL.clearInterval(id);});

this[_intervals] = null;
this[_immediates] && this[_immediates].forEach(function(id){
GLOBAL.clearImmediate(id);});

this[_immediates] = null;
this[_rafs] && this[_rafs].forEach(function(id){
GLOBAL.cancelAnimationFrame(id);});

this[_rafs] = null;},


setTimeout:_setTimeout,
clearTimeout:_clearTimeout,

setInterval:_setInterval,
clearInterval:_clearInterval,

setImmediate:_setImmediate,
clearImmediate:_clearImmediate,

requestAnimationFrame:_requestAnimationFrame,
cancelAnimationFrame:_cancelAnimationFrame};


module.exports = TimerMixin;
});
__d('MapView',["EdgeInsetsPropType","NativeMethodsMixin","Platform","React","ReactNativeViewAttributes","View","createReactNativeComponentClass","deepDiffer","insetsDiffer","merge","requireNativeComponent"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var EdgeInsetsPropType=require('EdgeInsetsPropType');
var NativeMethodsMixin=require('NativeMethodsMixin');
var Platform=require('Platform');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var View=require('View');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var deepDiffer=require('deepDiffer');
var insetsDiffer=require('insetsDiffer');
var merge=require('merge');
var requireNativeComponent=require('requireNativeComponent');









var MapView=React.createClass({displayName:'MapView',
mixins:[NativeMethodsMixin],

checkAnnotationIds:function(annotations){

var newAnnotations=annotations.map(function(annotation){
if(!annotation.id){

annotation.id = encodeURIComponent(JSON.stringify(annotation));}


return annotation;});


this.setState({
annotations:newAnnotations});},



componentWillMount:function(){
if(this.props.annotations){
this.checkAnnotationIds(this.props.annotations);}},



componentWillReceiveProps:function(nextProps){
if(nextProps.annotations){
this.checkAnnotationIds(nextProps.annotations);}},



propTypes:{




style:View.propTypes.style,









showsUserLocation:React.PropTypes.bool,





zoomEnabled:React.PropTypes.bool,








rotateEnabled:React.PropTypes.bool,








pitchEnabled:React.PropTypes.bool,





scrollEnabled:React.PropTypes.bool,








mapType:React.PropTypes.oneOf([
'standard',
'satellite',
'hybrid']),








region:React.PropTypes.shape({



latitude:React.PropTypes.number.isRequired,
longitude:React.PropTypes.number.isRequired,





latitudeDelta:React.PropTypes.number.isRequired,
longitudeDelta:React.PropTypes.number.isRequired}),





annotations:React.PropTypes.arrayOf(React.PropTypes.shape({



latitude:React.PropTypes.number.isRequired,
longitude:React.PropTypes.number.isRequired,




animateDrop:React.PropTypes.bool,




title:React.PropTypes.string,
subtitle:React.PropTypes.string,




hasLeftCallout:React.PropTypes.bool,
hasRightCallout:React.PropTypes.bool,




onLeftCalloutPress:React.PropTypes.func,
onRightCalloutPress:React.PropTypes.func,




id:React.PropTypes.string})),






maxDelta:React.PropTypes.number,




minDelta:React.PropTypes.number,





legalLabelInsets:EdgeInsetsPropType,




onRegionChange:React.PropTypes.func,




onRegionChangeComplete:React.PropTypes.func,




onAnnotationPress:React.PropTypes.func},


_onChange:function(event){
if(event.nativeEvent.continuous){
this.props.onRegionChange && 
this.props.onRegionChange(event.nativeEvent.region);}else 
{
this.props.onRegionChangeComplete && 
this.props.onRegionChangeComplete(event.nativeEvent.region);}},



_onPress:function(event){
if(event.nativeEvent.action === 'annotation-click'){
this.props.onAnnotationPress && this.props.onAnnotationPress(event.nativeEvent.annotation);}


if(event.nativeEvent.action === 'callout-click'){
if(!this.props.annotations){
return;}



for(var i=0;i < this.props.annotations.length;i++) {
var annotation=this.props.annotations[i];
if(annotation.id === event.nativeEvent.annotationId){

if(event.nativeEvent.side === 'left'){
annotation.onLeftCalloutPress && annotation.onLeftCalloutPress(event.nativeEvent);}else 
if(event.nativeEvent.side === 'right'){
annotation.onRightCalloutPress && annotation.onRightCalloutPress(event.nativeEvent);}}}}},







render:function(){
return React.createElement(RCTMap,_extends({},this.props,{onPress:this._onPress,onChange:this._onChange}));}});



if(Platform.OS === 'android'){
var RCTMap=createReactNativeComponentClass({
validAttributes:merge(
ReactNativeViewAttributes.UIView,{
active:true,
showsUserLocation:true,
zoomEnabled:true,
rotateEnabled:true,
pitchEnabled:true,
scrollEnabled:true,
region:{diff:deepDiffer},
annotations:{diff:deepDiffer},
maxDelta:true,
minDelta:true,
legalLabelInsets:{diff:insetsDiffer}}),


uiViewClassName:'RCTMap'});}else 

{
var RCTMap=requireNativeComponent('RCTMap',MapView,{
nativeOnly:{onChange:true,onPress:true}});}



module.exports = MapView;
});
__d('Modal',["ReactPropTypes","React","StyleSheet","View","requireNativeComponent"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}












var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');
var RCTModalHostView=requireNativeComponent('RCTModalHostView',null);var 













Modal=(function(_React$Component){_inherits(Modal,_React$Component);function Modal(){_classCallCheck(this,Modal);_get(Object.getPrototypeOf(Modal.prototype),'constructor',this).apply(this,arguments);}_createClass(Modal,[{key:'render',value:
function render(){
if(this.props.visible === false){
return null;}


if(this.props.transparent){
var containerBackgroundColor={backgroundColor:'transparent'};}


return (
React.createElement(RCTModalHostView,{
animated:this.props.animated,
transparent:this.props.transparent,
onDismiss:this.props.onDismiss,
style:styles.modal},
React.createElement(View,{style:[styles.container,containerBackgroundColor]},
this.props.children)));}}]);return Modal;})(React.Component);






Modal.propTypes = {
animated:PropTypes.bool,
transparent:PropTypes.bool,
onDismiss:PropTypes.func};


var styles=StyleSheet.create({
modal:{
position:'absolute'},

container:{
left:0,
position:'absolute',
top:0}});



module.exports = Modal;
});
__d('Navigator',["NativeModules","Dimensions","InteractionMixin","Map","NavigationContext","NavigatorBreadcrumbNavigationBar","NavigatorNavigationBar","NavigatorSceneConfigs","PanResponder","React","StyleSheet","Subscribable","react-timer-mixin/TimerMixin.js","View","clamp","flattenStyle","invariant","rebound/rebound.js"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};




























var AnimationsDebugModule=require('NativeModules').AnimationsDebugModule;
var Dimensions=require('Dimensions');
var InteractionMixin=require('InteractionMixin');
var Map=require('Map');
var NavigationContext=require('NavigationContext');
var NavigatorBreadcrumbNavigationBar=require('NavigatorBreadcrumbNavigationBar');
var NavigatorNavigationBar=require('NavigatorNavigationBar');
var NavigatorSceneConfigs=require('NavigatorSceneConfigs');
var PanResponder=require('PanResponder');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Subscribable=require('Subscribable');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var View=require('View');

var clamp=require('clamp');
var flattenStyle=require('flattenStyle');
var invariant=require('invariant');
var rebound=require('rebound/rebound.js');

var PropTypes=React.PropTypes;




var SCREEN_WIDTH=Dimensions.get('window').width;
var SCREEN_HEIGHT=Dimensions.get('window').height;
var SCENE_DISABLED_NATIVE_PROPS={
pointerEvents:'none',
style:{
top:SCREEN_HEIGHT,
bottom:-SCREEN_HEIGHT,
opacity:0}};



var __uid=0;
function getuid(){
return __uid++;}


function getRouteID(route){
if(route === null || typeof route !== 'object'){
return String(route);}


var key='__navigatorRouteID';

if(!route.hasOwnProperty(key)){
Object.defineProperty(route,key,{
enumerable:false,
configurable:false,
writable:false,
value:getuid()});}


return route[key];}



var styles=StyleSheet.create({
container:{
flex:1,
overflow:'hidden'},

defaultSceneStyle:{
position:'absolute',
left:0,
right:0,
bottom:0,
top:0},

baseScene:{
position:'absolute',
overflow:'hidden',
left:0,
right:0,
bottom:0,
top:0},

disabledScene:{
top:SCREEN_HEIGHT,
bottom:-SCREEN_HEIGHT},

transitioner:{
flex:1,
backgroundColor:'transparent',
overflow:'hidden'}});



var GESTURE_ACTIONS=[
'pop',
'jumpBack',
'jumpForward'];





























































var Navigator=React.createClass({displayName:'Navigator',

propTypes:{









configureScene:PropTypes.func,










renderScene:PropTypes.func.isRequired,







initialRoute:PropTypes.object,






initialRouteStack:PropTypes.arrayOf(PropTypes.object),







onWillFocus:PropTypes.func,








onDidFocus:PropTypes.func,





navigationBar:PropTypes.node,




navigator:PropTypes.object,




sceneStyle:View.propTypes.style},


statics:{
BreadcrumbNavigationBar:NavigatorBreadcrumbNavigationBar,
NavigationBar:NavigatorNavigationBar,
SceneConfigs:NavigatorSceneConfigs},


mixins:[TimerMixin,InteractionMixin,Subscribable.Mixin],

getDefaultProps:function(){
return {
configureScene:function(){return NavigatorSceneConfigs.PushFromRight;},
sceneStyle:styles.defaultSceneStyle};},



getInitialState:function(){var _this=this;
this._renderedSceneMap = new Map();

var routeStack=this.props.initialRouteStack || [this.props.initialRoute];
invariant(
routeStack.length >= 1,
'Navigator requires props.initialRoute or props.initialRouteStack.');

var initialRouteIndex=routeStack.length - 1;
if(this.props.initialRoute){
initialRouteIndex = routeStack.indexOf(this.props.initialRoute);
invariant(
initialRouteIndex !== -1,
'initialRoute is not in initialRouteStack.');}


return {
sceneConfigStack:routeStack.map(
function(route){return _this.props.configureScene(route);}),

routeStack:routeStack,
presentedIndex:initialRouteIndex,
transitionFromIndex:null,
activeGesture:null,
pendingGestureProgress:null,
transitionQueue:[]};},



componentWillMount:function(){var _this2=this;

this.__defineGetter__('navigationContext',this._getNavigationContext);

this._subRouteFocus = [];
this.parentNavigator = this.props.navigator;
this._handlers = {};
this.springSystem = new rebound.SpringSystem();
this.spring = this.springSystem.createSpring();
this.spring.setRestSpeedThreshold(0.05);
this.spring.setCurrentValue(0).setAtRest();
this.spring.addListener({
onSpringEndStateChange:function(){
if(!_this2._interactionHandle){
_this2._interactionHandle = _this2.createInteractionHandle();}},


onSpringUpdate:function(){
_this2._handleSpringUpdate();},

onSpringAtRest:function(){
_this2._completeTransition();}});


this.panGesture = PanResponder.create({
onMoveShouldSetPanResponder:this._handleMoveShouldSetPanResponder,
onPanResponderGrant:this._handlePanResponderGrant,
onPanResponderRelease:this._handlePanResponderRelease,
onPanResponderMove:this._handlePanResponderMove,
onPanResponderTerminate:this._handlePanResponderTerminate});

this._interactionHandle = null;
this._emitWillFocus(this.state.routeStack[this.state.presentedIndex]);},


componentDidMount:function(){
this._handleSpringUpdate();
this._emitDidFocus(this.state.routeStack[this.state.presentedIndex]);},


componentWillUnmount:function(){
if(this._navigationContext){
this._navigationContext.dispose();
this._navigationContext = null;}},










immediatelyResetRouteStack:function(nextRouteStack){var _this3=this;
var destIndex=nextRouteStack.length - 1;
this.setState({
routeStack:nextRouteStack,
sceneConfigStack:nextRouteStack.map(
this.props.configureScene),

presentedIndex:destIndex,
activeGesture:null,
transitionFromIndex:null,
transitionQueue:[]},
function(){
_this3._handleSpringUpdate();});},



_transitionTo:function(destIndex,velocity,jumpSpringTo,cb){
if(destIndex === this.state.presentedIndex){
return;}

if(this.state.transitionFromIndex !== null){
this.state.transitionQueue.push({
destIndex:destIndex,
velocity:velocity,
cb:cb});

return;}

this.state.transitionFromIndex = this.state.presentedIndex;
this.state.presentedIndex = destIndex;
this.state.transitionCb = cb;
this._onAnimationStart();
if(AnimationsDebugModule){
AnimationsDebugModule.startRecordingFps();}

var sceneConfig=this.state.sceneConfigStack[this.state.transitionFromIndex] || 
this.state.sceneConfigStack[this.state.presentedIndex];
invariant(
sceneConfig,
'Cannot configure scene at index ' + this.state.transitionFromIndex);

if(jumpSpringTo != null){
this.spring.setCurrentValue(jumpSpringTo);}

this.spring.setOvershootClampingEnabled(true);
this.spring.getSpringConfig().friction = sceneConfig.springFriction;
this.spring.getSpringConfig().tension = sceneConfig.springTension;
this.spring.setVelocity(velocity || sceneConfig.defaultTransitionVelocity);
this.spring.setEndValue(1);},






_handleSpringUpdate:function(){

if(this.state.transitionFromIndex != null){
this._transitionBetween(
this.state.transitionFromIndex,
this.state.presentedIndex,
this.spring.getCurrentValue());}else 

if(this.state.activeGesture != null){
var presentedToIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._transitionBetween(
this.state.presentedIndex,
presentedToIndex,
this.spring.getCurrentValue());}},







_completeTransition:function(){
if(this.spring.getCurrentValue() !== 1 && this.spring.getCurrentValue() !== 0){


if(this.state.pendingGestureProgress){
this.state.pendingGestureProgress = null;}

return;}

this._onAnimationEnd();
var presentedIndex=this.state.presentedIndex;
var didFocusRoute=this._subRouteFocus[presentedIndex] || this.state.routeStack[presentedIndex];
this._emitDidFocus(didFocusRoute);
if(AnimationsDebugModule){
AnimationsDebugModule.stopRecordingFps(Date.now());}

this.state.transitionFromIndex = null;
this.spring.setCurrentValue(0).setAtRest();
this._hideScenes();
if(this.state.transitionCb){
this.state.transitionCb();
this.state.transitionCb = null;}

if(this._interactionHandle){
this.clearInteractionHandle(this._interactionHandle);
this._interactionHandle = null;}

if(this.state.pendingGestureProgress){


var gestureToIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._enableScene(gestureToIndex);
this.spring.setEndValue(this.state.pendingGestureProgress);
return;}

if(this.state.transitionQueue.length){
var queuedTransition=this.state.transitionQueue.shift();
this._enableScene(queuedTransition.destIndex);
this._emitWillFocus(this.state.routeStack[queuedTransition.destIndex]);
this._transitionTo(
queuedTransition.destIndex,
queuedTransition.velocity,
null,
queuedTransition.cb);}},




_emitDidFocus:function(route){
this.navigationContext.emit('didfocus',{route:route});

if(this.props.onDidFocus){
this.props.onDidFocus(route);}},



_emitWillFocus:function(route){
this.navigationContext.emit('willfocus',{route:route});

var navBar=this._navBar;
if(navBar && navBar.handleWillFocus){
navBar.handleWillFocus(route);}

if(this.props.onWillFocus){
this.props.onWillFocus(route);}},






_hideScenes:function(){
var gesturingToIndex=null;
if(this.state.activeGesture){
gesturingToIndex = this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);}

for(var i=0;i < this.state.routeStack.length;i++) {
if(i === this.state.presentedIndex || 
i === this.state.transitionFromIndex || 
i === gesturingToIndex){
continue;}

this._disableScene(i);}},






_disableScene:function(sceneIndex){
this.refs['scene_' + sceneIndex] && 
this.refs['scene_' + sceneIndex].setNativeProps(SCENE_DISABLED_NATIVE_PROPS);},





_enableScene:function(sceneIndex){

var sceneStyle=flattenStyle([styles.baseScene,this.props.sceneStyle]);

var enabledSceneNativeProps={
pointerEvents:'auto',
style:{
top:sceneStyle.top,
bottom:sceneStyle.bottom}};


if(sceneIndex !== this.state.transitionFromIndex && 
sceneIndex !== this.state.presentedIndex){


enabledSceneNativeProps.style.opacity = 0;}

this.refs['scene_' + sceneIndex] && 
this.refs['scene_' + sceneIndex].setNativeProps(enabledSceneNativeProps);},


_onAnimationStart:function(){
var fromIndex=this.state.presentedIndex;
var toIndex=this.state.presentedIndex;
if(this.state.transitionFromIndex != null){
fromIndex = this.state.transitionFromIndex;}else 
if(this.state.activeGesture){
toIndex = this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);}

this._setRenderSceneToHardwareTextureAndroid(fromIndex,true);
this._setRenderSceneToHardwareTextureAndroid(toIndex,true);
var navBar=this._navBar;
if(navBar && navBar.onAnimationStart){
navBar.onAnimationStart(fromIndex,toIndex);}},



_onAnimationEnd:function(){
var max=this.state.routeStack.length - 1;
for(var index=0;index <= max;index++) {
this._setRenderSceneToHardwareTextureAndroid(index,false);}


var navBar=this._navBar;
if(navBar && navBar.onAnimationEnd){
navBar.onAnimationEnd();}},



_setRenderSceneToHardwareTextureAndroid:function(sceneIndex,shouldRenderToHardwareTexture){
var viewAtIndex=this.refs['scene_' + sceneIndex];
if(viewAtIndex === null || viewAtIndex === undefined){
return;}

viewAtIndex.setNativeProps({renderToHardwareTextureAndroid:shouldRenderToHardwareTexture});},


_handleTouchStart:function(){
this._eligibleGestures = GESTURE_ACTIONS;},


_handleMoveShouldSetPanResponder:function(e,gestureState){
var sceneConfig=this.state.sceneConfigStack[this.state.presentedIndex];
this._expectingGestureGrant = this._matchGestureAction(this._eligibleGestures,sceneConfig.gestures,gestureState);
return !!this._expectingGestureGrant;},


_doesGestureOverswipe:function(gestureName){
var wouldOverswipeBack=this.state.presentedIndex <= 0 && (
gestureName === 'pop' || gestureName === 'jumpBack');
var wouldOverswipeForward=this.state.presentedIndex >= this.state.routeStack.length - 1 && 
gestureName === 'jumpForward';
return wouldOverswipeForward || wouldOverswipeBack;},


_handlePanResponderGrant:function(e,gestureState){
invariant(
this._expectingGestureGrant,
'Responder granted unexpectedly.');

this._attachGesture(this._expectingGestureGrant);
this._onAnimationStart();
this._expectingGestureGrant = null;},


_deltaForGestureAction:function(gestureAction){
switch(gestureAction){
case 'pop':
case 'jumpBack':
return -1;
case 'jumpForward':
return 1;
default:
invariant(false,'Unsupported gesture action ' + gestureAction);
return;}},



_handlePanResponderRelease:function(e,gestureState){var _this4=this;
var sceneConfig=this.state.sceneConfigStack[this.state.presentedIndex];
var releaseGestureAction=this.state.activeGesture;
if(!releaseGestureAction){

return;}

var releaseGesture=sceneConfig.gestures[releaseGestureAction];
var destIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
if(this.spring.getCurrentValue() === 0){

this.spring.setCurrentValue(0).setAtRest();
this._completeTransition();
return;}

var isTravelVertical=releaseGesture.direction === 'top-to-bottom' || releaseGesture.direction === 'bottom-to-top';
var isTravelInverted=releaseGesture.direction === 'right-to-left' || releaseGesture.direction === 'bottom-to-top';
var velocity,gestureDistance;
if(isTravelVertical){
velocity = isTravelInverted?-gestureState.vy:gestureState.vy;
gestureDistance = isTravelInverted?-gestureState.dy:gestureState.dy;}else 
{
velocity = isTravelInverted?-gestureState.vx:gestureState.vx;
gestureDistance = isTravelInverted?-gestureState.dx:gestureState.dx;}

var transitionVelocity=clamp(-10,velocity,10);
if(Math.abs(velocity) < releaseGesture.notMoving){

var hasGesturedEnoughToComplete=gestureDistance > releaseGesture.fullDistance * releaseGesture.stillCompletionRatio;
transitionVelocity = hasGesturedEnoughToComplete?releaseGesture.snapVelocity:-releaseGesture.snapVelocity;}

if(transitionVelocity < 0 || this._doesGestureOverswipe(releaseGestureAction)){


if(this.state.transitionFromIndex == null){

var transitionBackToPresentedIndex=this.state.presentedIndex;

this.state.presentedIndex = destIndex;
this._transitionTo(
transitionBackToPresentedIndex,
-transitionVelocity,
1 - this.spring.getCurrentValue());}}else 


{

this._emitWillFocus(this.state.routeStack[destIndex]);
this._transitionTo(
destIndex,
transitionVelocity,
null,
function(){
if(releaseGestureAction === 'pop'){
_this4._cleanScenesPastIndex(destIndex);}});}




this._detachGesture();},


_handlePanResponderTerminate:function(e,gestureState){
if(this.state.activeGesture == null){
return;}

var destIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._detachGesture();
var transitionBackToPresentedIndex=this.state.presentedIndex;

this.state.presentedIndex = destIndex;
this._transitionTo(
transitionBackToPresentedIndex,
null,
1 - this.spring.getCurrentValue());},



_attachGesture:function(gestureId){
this.state.activeGesture = gestureId;
var gesturingToIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._enableScene(gesturingToIndex);},


_detachGesture:function(){
this.state.activeGesture = null;
this.state.pendingGestureProgress = null;
this._hideScenes();},


_handlePanResponderMove:function(e,gestureState){
var sceneConfig=this.state.sceneConfigStack[this.state.presentedIndex];
if(this.state.activeGesture){
var gesture=sceneConfig.gestures[this.state.activeGesture];
return this._moveAttachedGesture(gesture,gestureState);}

var matchedGesture=this._matchGestureAction(GESTURE_ACTIONS,sceneConfig.gestures,gestureState);
if(matchedGesture){
this._attachGesture(matchedGesture);}},



_moveAttachedGesture:function(gesture,gestureState){
var isTravelVertical=gesture.direction === 'top-to-bottom' || gesture.direction === 'bottom-to-top';
var isTravelInverted=gesture.direction === 'right-to-left' || gesture.direction === 'bottom-to-top';
var distance=isTravelVertical?gestureState.dy:gestureState.dx;
distance = isTravelInverted?-distance:distance;
var gestureDetectMovement=gesture.gestureDetectMovement;
var nextProgress=(distance - gestureDetectMovement) / (
gesture.fullDistance - gestureDetectMovement);
if(nextProgress < 0 && gesture.isDetachable){
var gesturingToIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._transitionBetween(this.state.presentedIndex,gesturingToIndex,0);
this._detachGesture();
if(this.state.pendingGestureProgress != null){
this.spring.setCurrentValue(0);}

return;}

if(this._doesGestureOverswipe(this.state.activeGesture)){
var frictionConstant=gesture.overswipe.frictionConstant;
var frictionByDistance=gesture.overswipe.frictionByDistance;
var frictionRatio=1 / (frictionConstant + Math.abs(nextProgress) * frictionByDistance);
nextProgress *= frictionRatio;}

nextProgress = clamp(0,nextProgress,1);
if(this.state.transitionFromIndex != null){
this.state.pendingGestureProgress = nextProgress;}else 
if(this.state.pendingGestureProgress){
this.spring.setEndValue(nextProgress);}else 
{
this.spring.setCurrentValue(nextProgress);}},



_matchGestureAction:function(eligibleGestures,gestures,gestureState){var _this5=this;
if(!gestures){
return null;}

var matchedGesture=null;
eligibleGestures.some(function(gestureName,gestureIndex){
var gesture=gestures[gestureName];
if(!gesture){
return;}

if(gesture.overswipe == null && _this5._doesGestureOverswipe(gestureName)){

return false;}

var isTravelVertical=gesture.direction === 'top-to-bottom' || gesture.direction === 'bottom-to-top';
var isTravelInverted=gesture.direction === 'right-to-left' || gesture.direction === 'bottom-to-top';
var currentLoc=isTravelVertical?gestureState.moveY:gestureState.moveX;
var travelDist=isTravelVertical?gestureState.dy:gestureState.dx;
var oppositeAxisTravelDist=
isTravelVertical?gestureState.dx:gestureState.dy;
var edgeHitWidth=gesture.edgeHitWidth;
if(isTravelInverted){
currentLoc = -currentLoc;
travelDist = -travelDist;
oppositeAxisTravelDist = -oppositeAxisTravelDist;
edgeHitWidth = isTravelVertical?
-(SCREEN_HEIGHT - edgeHitWidth):
-(SCREEN_WIDTH - edgeHitWidth);}

var moveStartedInRegion=gesture.edgeHitWidth == null || 
currentLoc < edgeHitWidth;
if(!moveStartedInRegion){
return false;}

var moveTravelledFarEnough=travelDist >= gesture.gestureDetectMovement;
if(!moveTravelledFarEnough){
return false;}

var directionIsCorrect=Math.abs(travelDist) > Math.abs(oppositeAxisTravelDist) * gesture.directionRatio;
if(directionIsCorrect){
matchedGesture = gestureName;
return true;}else 
{
_this5._eligibleGestures = _this5._eligibleGestures.slice().splice(gestureIndex,1);}});


return matchedGesture;},


_transitionSceneStyle:function(fromIndex,toIndex,progress,index){
var viewAtIndex=this.refs['scene_' + index];
if(viewAtIndex === null || viewAtIndex === undefined){
return;}


var sceneConfigIndex=fromIndex < toIndex?toIndex:fromIndex;
var sceneConfig=this.state.sceneConfigStack[sceneConfigIndex];

if(!sceneConfig){
sceneConfig = this.state.sceneConfigStack[sceneConfigIndex - 1];}

var styleToUse={};
var useFn=index < fromIndex || index < toIndex?
sceneConfig.animationInterpolators.out:
sceneConfig.animationInterpolators.into;
var directionAdjustedProgress=fromIndex < toIndex?progress:1 - progress;
var didChange=useFn(styleToUse,directionAdjustedProgress);
if(didChange){
viewAtIndex.setNativeProps({style:styleToUse});}},



_transitionBetween:function(fromIndex,toIndex,progress){
this._transitionSceneStyle(fromIndex,toIndex,progress,fromIndex);
this._transitionSceneStyle(fromIndex,toIndex,progress,toIndex);
var navBar=this._navBar;
if(navBar && navBar.updateProgress && toIndex >= 0 && fromIndex >= 0){
navBar.updateProgress(progress,fromIndex,toIndex);}},



_handleResponderTerminationRequest:function(){
return false;},


_getDestIndexWithinBounds:function(n){
var currentIndex=this.state.presentedIndex;
var destIndex=currentIndex + n;
invariant(
destIndex >= 0,
'Cannot jump before the first route.');

var maxIndex=this.state.routeStack.length - 1;
invariant(
maxIndex >= destIndex,
'Cannot jump past the last route.');

return destIndex;},


_jumpN:function(n){
var destIndex=this._getDestIndexWithinBounds(n);
this._enableScene(destIndex);
this._emitWillFocus(this.state.routeStack[destIndex]);
this._transitionTo(destIndex);},


jumpTo:function(route){
var destIndex=this.state.routeStack.indexOf(route);
invariant(
destIndex !== -1,
'Cannot jump to route that is not in the route stack');

this._jumpN(destIndex - this.state.presentedIndex);},


jumpForward:function(){
this._jumpN(1);},


jumpBack:function(){
this._jumpN(-1);},


push:function(route){var _this6=this;
invariant(!!route,'Must supply route to push');
var activeLength=this.state.presentedIndex + 1;
var activeStack=this.state.routeStack.slice(0,activeLength);
var activeAnimationConfigStack=this.state.sceneConfigStack.slice(0,activeLength);
var nextStack=activeStack.concat([route]);
var destIndex=nextStack.length - 1;
var nextAnimationConfigStack=activeAnimationConfigStack.concat([
this.props.configureScene(route)]);

this._emitWillFocus(nextStack[destIndex]);
this.setState({
routeStack:nextStack,
sceneConfigStack:nextAnimationConfigStack},
function(){
_this6._enableScene(destIndex);
_this6._transitionTo(destIndex);});},



_popN:function(n){var _this7=this;
if(n === 0){
return;}

invariant(
this.state.presentedIndex - n >= 0,
'Cannot pop below zero');

var popIndex=this.state.presentedIndex - n;
this._enableScene(popIndex);
this._emitWillFocus(this.state.routeStack[popIndex]);
this._transitionTo(
popIndex,
null,
null,
function(){
_this7._cleanScenesPastIndex(popIndex);});},




pop:function(){
if(this.state.transitionQueue.length){






return;}


if(this.state.presentedIndex > 0){
this._popN(1);}},









replaceAtIndex:function(route,index,cb){var _this8=this;
invariant(!!route,'Must supply route to replace');
if(index < 0){
index += this.state.routeStack.length;}


if(this.state.routeStack.length <= index){
return;}


var nextRouteStack=this.state.routeStack.slice();
var nextAnimationModeStack=this.state.sceneConfigStack.slice();
nextRouteStack[index] = route;
nextAnimationModeStack[index] = this.props.configureScene(route);

if(index === this.state.presentedIndex){
this._emitWillFocus(route);}

this.setState({
routeStack:nextRouteStack,
sceneConfigStack:nextAnimationModeStack},
function(){
if(index === _this8.state.presentedIndex){
_this8._emitDidFocus(route);}

cb && cb();});},






replace:function(route){
this.replaceAtIndex(route,this.state.presentedIndex);},





replacePrevious:function(route){
this.replaceAtIndex(route,this.state.presentedIndex - 1);},


popToTop:function(){
this.popToRoute(this.state.routeStack[0]);},


popToRoute:function(route){
var indexOfRoute=this.state.routeStack.indexOf(route);
invariant(
indexOfRoute !== -1,
'Calling popToRoute for a route that doesn\'t exist!');

var numToPop=this.state.presentedIndex - indexOfRoute;
this._popN(numToPop);},


replacePreviousAndPop:function(route){
if(this.state.routeStack.length < 2){
return;}

this.replacePrevious(route);
this.pop();},


resetTo:function(route){var _this9=this;
invariant(!!route,'Must supply route to push');
this.replaceAtIndex(route,0,function(){


if(_this9.state.presentedIndex > 0){
_this9._popN(_this9.state.presentedIndex);}});},




getCurrentRoutes:function(){

return this.state.routeStack.slice();},


_cleanScenesPastIndex:function(index){
var newStackLength=index + 1;

if(newStackLength < this.state.routeStack.length){
this.setState({
sceneConfigStack:this.state.sceneConfigStack.slice(0,newStackLength),
routeStack:this.state.routeStack.slice(0,newStackLength)});}},




_renderScene:function(route,i){var _this10=this;
var disabledSceneStyle=null;
var disabledScenePointerEvents='auto';
if(i !== this.state.presentedIndex){
disabledSceneStyle = styles.disabledScene;
disabledScenePointerEvents = 'none';}

return (
React.createElement(View,{
key:'scene_' + getRouteID(route),
ref:'scene_' + i,
onStartShouldSetResponderCapture:function(){
return _this10.state.transitionFromIndex != null || _this10.state.transitionFromIndex != null;},

pointerEvents:disabledScenePointerEvents,
style:[styles.baseScene,this.props.sceneStyle,disabledSceneStyle]},
this.props.renderScene(
route,
this)));},





_renderNavigationBar:function(){var _this11=this;
if(!this.props.navigationBar){
return null;}

return React.cloneElement(this.props.navigationBar,{
ref:function(navBar){_this11._navBar = navBar;},
navigator:this,
navState:this.state});},



render:function(){var _this12=this;
var newRenderedSceneMap=new Map();
var scenes=this.state.routeStack.map(function(route,index){
var renderedScene;
if(_this12._renderedSceneMap.has(route) && 
index !== _this12.state.presentedIndex){
renderedScene = _this12._renderedSceneMap.get(route);}else 
{
renderedScene = _this12._renderScene(route,index);}

newRenderedSceneMap.set(route,renderedScene);
return renderedScene;});

this._renderedSceneMap = newRenderedSceneMap;
return (
React.createElement(View,{style:[styles.container,this.props.style]},
React.createElement(View,_extends({
style:styles.transitioner},
this.panGesture.panHandlers,{
onTouchStart:this._handleTouchStart,
onResponderTerminationRequest:
this._handleResponderTerminationRequest}),

scenes),

this._renderNavigationBar()));},




_getNavigationContext:function(){
if(!this._navigationContext){
this._navigationContext = new NavigationContext();}

return this._navigationContext;}});



module.exports = Navigator;
});
__d('InteractionMixin',["InteractionManager"],function(global, require, module, exports) {  'use strict';







var InteractionManager=require('InteractionManager');






var InteractionMixin={
componentWillUnmount:function(){
while(this._interactionMixinHandles.length) {
InteractionManager.clearInteractionHandle(
this._interactionMixinHandles.pop());}},




_interactionMixinHandles:[],

createInteractionHandle:function(){
var handle=InteractionManager.createInteractionHandle();
this._interactionMixinHandles.push(handle);
return handle;},


clearInteractionHandle:function(clearHandle){
InteractionManager.clearInteractionHandle(clearHandle);
this._interactionMixinHandles = this._interactionMixinHandles.filter(
function(handle){return handle !== clearHandle;});},








runAfterInteractions:function(callback){
InteractionManager.runAfterInteractions(callback);}};



module.exports = InteractionMixin;
});
__d('NavigationContext',["NavigationEvent","EventSubscription","NavigationEventEmitter","emptyFunction","invariant"],function(global, require, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}

























'use strict';

var NavigationEventEmitter=require('NavigationEventEmitter');

var emptyFunction=require('emptyFunction');
var invariant=require('invariant');var 







NavigationContext=(function(){



function NavigationContext(){_classCallCheck(this,NavigationContext);
this._eventEmitter = new NavigationEventEmitter(this);
this._currentRoute = null;
this.addListener('willfocus',this._onFocus,this);
this.addListener('didfocus',this._onFocus,this);}_createClass(NavigationContext,[{key:'addListener',value:








function addListener(
eventType,
listener,
context)
{
var emitter=this._eventEmitter;
if(emitter){
return emitter.addListener(eventType,listener,context);}else 
{
return {remove:emptyFunction};}}},{key:'emit',value:



function emit(eventType,data,didEmitCallback){
var emitter=this._eventEmitter;
if(emitter){
emitter.emit(eventType,data,didEmitCallback);}}},{key:'dispose',value:



function dispose(){
var emitter=this._eventEmitter;
if(emitter){

emitter.removeAllListeners();
this._eventEmitter = null;
this._currentRoute = null;}}},{key:'_onFocus',value:



function _onFocus(event){
invariant(
event.data && event.data.hasOwnProperty('route'),
'didfocus event should provide route');

this._currentRoute = event.data.route;}},{key:'currentRoute',get:function(){return this._currentRoute;}}]);return NavigationContext;})();



module.exports = NavigationContext;
});
__d('NavigationEvent',["invariant"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}




























var invariant=require('invariant');var 

NavigationEventPool=(function(){


function NavigationEventPool(){_classCallCheck(this,NavigationEventPool);
this._list = [];}_createClass(NavigationEventPool,[{key:'get',value:


function get(type,target,data){
var event;
if(this._list.length > 0){
event = this._list.pop();
event.constructor.call(event,type,target,data);}else 
{
event = new NavigationEvent(type,target,data);}

return event;}},{key:'put',value:


function put(event){
this._list.push(event);}}]);return NavigationEventPool;})();



var _navigationEventPool=new NavigationEventPool();var 

NavigationEvent=(function(){_createClass(NavigationEvent,null,[{key:'pool',value:







function pool(type,target,data){
return _navigationEventPool.get(type,target,data);}}]);


function NavigationEvent(type,target,data){_classCallCheck(this,NavigationEvent);
this._type = type;
this._target = target;
this._data = data;
this._defaultPrevented = false;
this._disposed = false;
this._propagationStopped = false;}_createClass(NavigationEvent,[{key:'preventDefault',value:






















function preventDefault(){
this._defaultPrevented = true;}},{key:'stopPropagation',value:


function stopPropagation(){
this._propagationStopped = true;}},{key:'stop',value:


function stop(){
this.preventDefault();
this.stopPropagation();}},{key:'isPropagationStopped',value:


function isPropagationStopped(){
return this._propagationStopped;}},{key:'dispose',value:







function dispose(){
invariant(!this._disposed,'NavigationEvent is already disposed');
this._disposed = true;


this._type = null;
this._target = null;
this._data = null;
this._defaultPrevented = false;


_navigationEventPool.put(this);}},{key:'type',get:function(){return this._type;}},{key:'target',get:function(){return this._target;}},{key:'data',get:function(){return this._data;}},{key:'defaultPrevented',get:function(){return this._defaultPrevented;}}]);return NavigationEvent;})();



module.exports = NavigationEvent;
});
__d('NavigationEventEmitter',["EventEmitter","NavigationEvent"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}




























var EventEmitter=require('EventEmitter');
var NavigationEvent=require('NavigationEvent');var 







NavigationEventEmitter=(function(_EventEmitter){_inherits(NavigationEventEmitter,_EventEmitter);




function NavigationEventEmitter(target){_classCallCheck(this,NavigationEventEmitter);
_get(Object.getPrototypeOf(NavigationEventEmitter.prototype),'constructor',this).call(this);
this._emitting = false;
this._emitQueue = [];
this._target = target;}_createClass(NavigationEventEmitter,[{key:'emit',value:


function emit(
eventType,
data,
didEmitCallback)
{
if(this._emitting){


this._emitQueue.push({eventType:eventType,data:data,didEmitCallback:didEmitCallback});
return;}


this._emitting = true;

var event=new NavigationEvent(eventType,this._target,data);



_get(Object.getPrototypeOf(NavigationEventEmitter.prototype),'emit',this).call(this,String(eventType),event);

if(typeof didEmitCallback === 'function'){
didEmitCallback.call(this._target,event);}

event.dispose();

this._emitting = false;

while(this._emitQueue.length) {
var arg=this._emitQueue.shift();
this.emit(arg.eventType,arg.data,arg.didEmitCallback);}}}]);return NavigationEventEmitter;})(EventEmitter);




module.exports = NavigationEventEmitter;
});
__d('NavigatorBreadcrumbNavigationBar',["NavigatorBreadcrumbNavigationBarStyles","NavigatorNavigationBarStylesAndroid","NavigatorNavigationBarStylesIOS","Platform","React","StyleSheet","View","immutable/dist/immutable.js","invariant"],function(global, require, module, exports) {  'use strict';



























var NavigatorBreadcrumbNavigationBarStyles=require('NavigatorBreadcrumbNavigationBarStyles');
var NavigatorNavigationBarStylesAndroid=require('NavigatorNavigationBarStylesAndroid');
var NavigatorNavigationBarStylesIOS=require('NavigatorNavigationBarStylesIOS');
var Platform=require('Platform');
var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');var _require=

require('immutable/dist/immutable.js');var Map=_require.Map;

var invariant=require('invariant');

var Interpolators=NavigatorBreadcrumbNavigationBarStyles.Interpolators;
var NavigatorNavigationBarStyles=Platform.OS === 'android'?
NavigatorNavigationBarStylesAndroid:NavigatorNavigationBarStylesIOS;
var PropTypes=React.PropTypes;




var CRUMB_PROPS=Interpolators.map(function(){return {style:{}};});
var ICON_PROPS=Interpolators.map(function(){return {style:{}};});
var SEPARATOR_PROPS=Interpolators.map(function(){return {style:{}};});
var TITLE_PROPS=Interpolators.map(function(){return {style:{}};});
var RIGHT_BUTTON_PROPS=Interpolators.map(function(){return {style:{}};});


var navStatePresentedIndex=function(navState){
if(navState.presentedIndex !== undefined){
return navState.presentedIndex;}


return navState.observedTopOfStack;};










var initStyle=function(index,presentedIndex){
return index === presentedIndex?NavigatorBreadcrumbNavigationBarStyles.Center[index]:
index < presentedIndex?NavigatorBreadcrumbNavigationBarStyles.Left[index]:
NavigatorBreadcrumbNavigationBarStyles.Right[index];};


var NavigatorBreadcrumbNavigationBar=React.createClass({displayName:'NavigatorBreadcrumbNavigationBar',
propTypes:{
navigator:PropTypes.shape({
push:PropTypes.func,
pop:PropTypes.func,
replace:PropTypes.func,
popToRoute:PropTypes.func,
popToTop:PropTypes.func}),

routeMapper:PropTypes.shape({
rightContentForRoute:PropTypes.func,
titleContentForRoute:PropTypes.func,
iconForRoute:PropTypes.func}),

navState:React.PropTypes.shape({
routeStack:React.PropTypes.arrayOf(React.PropTypes.object),
presentedIndex:React.PropTypes.number}),

style:View.propTypes.style},


statics:{
Styles:NavigatorBreadcrumbNavigationBarStyles},


_updateIndexProgress:function(progress,index,fromIndex,toIndex){
var amount=toIndex > fromIndex?progress:1 - progress;
var oldDistToCenter=index - fromIndex;
var newDistToCenter=index - toIndex;
var interpolate;
invariant(
Interpolators[index],
'Cannot find breadcrumb interpolators for ' + index);

if(oldDistToCenter > 0 && newDistToCenter === 0 || 
newDistToCenter > 0 && oldDistToCenter === 0){
interpolate = Interpolators[index].RightToCenter;}else 
if(oldDistToCenter < 0 && newDistToCenter === 0 || 
newDistToCenter < 0 && oldDistToCenter === 0){
interpolate = Interpolators[index].CenterToLeft;}else 
if(oldDistToCenter === newDistToCenter){
interpolate = Interpolators[index].RightToCenter;}else 
{
interpolate = Interpolators[index].RightToLeft;}


if(interpolate.Crumb(CRUMB_PROPS[index].style,amount)){
this._setPropsIfExists('crumb_' + index,CRUMB_PROPS[index]);}

if(interpolate.Icon(ICON_PROPS[index].style,amount)){
this._setPropsIfExists('icon_' + index,ICON_PROPS[index]);}

if(interpolate.Separator(SEPARATOR_PROPS[index].style,amount)){
this._setPropsIfExists('separator_' + index,SEPARATOR_PROPS[index]);}

if(interpolate.Title(TITLE_PROPS[index].style,amount)){
this._setPropsIfExists('title_' + index,TITLE_PROPS[index]);}

var right=this.refs['right_' + index];
if(right && 
interpolate.RightItem(RIGHT_BUTTON_PROPS[index].style,amount)){
right.setNativeProps(RIGHT_BUTTON_PROPS[index]);}},



updateProgress:function(progress,fromIndex,toIndex){
var max=Math.max(fromIndex,toIndex);
var min=Math.min(fromIndex,toIndex);
for(var index=min;index <= max;index++) {
this._updateIndexProgress(progress,index,fromIndex,toIndex);}},



onAnimationStart:function(fromIndex,toIndex){
var max=Math.max(fromIndex,toIndex);
var min=Math.min(fromIndex,toIndex);
for(var index=min;index <= max;index++) {
this._setRenderViewsToHardwareTextureAndroid(index,true);}},



onAnimationEnd:function(){
var max=this.props.navState.routeStack.length - 1;
for(var index=0;index <= max;index++) {
this._setRenderViewsToHardwareTextureAndroid(index,false);}},



_setRenderViewsToHardwareTextureAndroid:function(index,renderToHardwareTexture){
var props={
renderToHardwareTextureAndroid:renderToHardwareTexture};


this._setPropsIfExists('icon_' + index,props);
this._setPropsIfExists('separator_' + index,props);
this._setPropsIfExists('title_' + index,props);
this._setPropsIfExists('right_' + index,props);},


componentWillMount:function(){
this._descriptors = {
crumb:new Map(),
title:new Map(),
right:new Map()};},



render:function(){
var navState=this.props.navState;
var icons=navState && navState.routeStack.map(this._getBreadcrumb);
var titles=navState.routeStack.map(this._getTitle);
var buttons=navState.routeStack.map(this._getRightButton);
return (
React.createElement(View,{style:[styles.breadCrumbContainer,this.props.style]},
titles,
icons,
buttons));},




_getBreadcrumb:function(route,index){
if(this._descriptors.crumb.has(route)){
return this._descriptors.crumb.get(route);}


var navBarRouteMapper=this.props.routeMapper;
var firstStyles=initStyle(index,navStatePresentedIndex(this.props.navState));

var breadcrumbDescriptor=
React.createElement(View,{ref:'crumb_' + index,style:firstStyles.Crumb},
React.createElement(View,{ref:'icon_' + index,style:firstStyles.Icon},
navBarRouteMapper.iconForRoute(route,this.props.navigator)),

React.createElement(View,{ref:'separator_' + index,style:firstStyles.Separator},
navBarRouteMapper.separatorForRoute(route,this.props.navigator)));




this._descriptors.crumb = this._descriptors.crumb.set(route,breadcrumbDescriptor);
return breadcrumbDescriptor;},


_getTitle:function(route,index){
if(this._descriptors.title.has(route)){
return this._descriptors.title.get(route);}


var titleContent=this.props.routeMapper.titleContentForRoute(
this.props.navState.routeStack[index],
this.props.navigator);

var firstStyles=initStyle(index,navStatePresentedIndex(this.props.navState));

var titleDescriptor=
React.createElement(View,{ref:'title_' + index,style:firstStyles.Title},
titleContent);


this._descriptors.title = this._descriptors.title.set(route,titleDescriptor);
return titleDescriptor;},


_getRightButton:function(route,index){
if(this._descriptors.right.has(route)){
return this._descriptors.right.get(route);}

var rightContent=this.props.routeMapper.rightContentForRoute(
this.props.navState.routeStack[index],
this.props.navigator);

if(!rightContent){
this._descriptors.right = this._descriptors.right.set(route,null);
return null;}

var firstStyles=initStyle(index,navStatePresentedIndex(this.props.navState));
var rightButtonDescriptor=
React.createElement(View,{ref:'right_' + index,style:firstStyles.RightItem},
rightContent);


this._descriptors.right = this._descriptors.right.set(route,rightButtonDescriptor);
return rightButtonDescriptor;},


_setPropsIfExists:function(ref,props){
var ref=this.refs[ref];
ref && ref.setNativeProps(props);}});



var styles=StyleSheet.create({
breadCrumbContainer:{
overflow:'hidden',
position:'absolute',
height:NavigatorNavigationBarStyles.General.TotalNavHeight,
top:0,
left:0,
right:0}});



module.exports = NavigatorBreadcrumbNavigationBar;
});
__d('NavigatorBreadcrumbNavigationBarStyles',["Dimensions","NavigatorNavigationBarStylesIOS","buildStyleInterpolator","merge"],function(global, require, module, exports) {  'use strict';



























var Dimensions=require('Dimensions');
var NavigatorNavigationBarStylesIOS=require('NavigatorNavigationBarStylesIOS');

var buildStyleInterpolator=require('buildStyleInterpolator');
var merge=require('merge');

var SCREEN_WIDTH=Dimensions.get('window').width;
var STATUS_BAR_HEIGHT=NavigatorNavigationBarStylesIOS.General.StatusBarHeight;
var NAV_BAR_HEIGHT=NavigatorNavigationBarStylesIOS.General.NavBarHeight;

var SPACING=4;
var ICON_WIDTH=40;
var SEPARATOR_WIDTH=9;
var CRUMB_WIDTH=ICON_WIDTH + SEPARATOR_WIDTH;

var OPACITY_RATIO=100;
var ICON_INACTIVE_OPACITY=0.6;
var MAX_BREADCRUMBS=10;

var CRUMB_BASE={
position:'absolute',
flexDirection:'row',
top:STATUS_BAR_HEIGHT,
width:CRUMB_WIDTH,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'};


var ICON_BASE={
width:ICON_WIDTH,
height:NAV_BAR_HEIGHT};


var SEPARATOR_BASE={
width:SEPARATOR_WIDTH,
height:NAV_BAR_HEIGHT};


var TITLE_BASE={
position:'absolute',
top:STATUS_BAR_HEIGHT,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'};



var FIRST_TITLE_BASE=merge(TITLE_BASE,{
left:0,
right:0,
alignItems:'center',
height:NAV_BAR_HEIGHT});


var RIGHT_BUTTON_BASE={
position:'absolute',
top:STATUS_BAR_HEIGHT,
right:SPACING,
overflow:'hidden',
opacity:1,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'};






var LEFT=[];
var CENTER=[];
var RIGHT=[];
for(var i=0;i < MAX_BREADCRUMBS;i++) {
var crumbLeft=CRUMB_WIDTH * i + SPACING;
LEFT[i] = {
Crumb:merge(CRUMB_BASE,{left:crumbLeft}),
Icon:merge(ICON_BASE,{opacity:ICON_INACTIVE_OPACITY}),
Separator:merge(SEPARATOR_BASE,{opacity:1}),
Title:merge(TITLE_BASE,{left:crumbLeft,opacity:0}),
RightItem:merge(RIGHT_BUTTON_BASE,{opacity:0})};

CENTER[i] = {
Crumb:merge(CRUMB_BASE,{left:crumbLeft}),
Icon:merge(ICON_BASE,{opacity:1}),
Separator:merge(SEPARATOR_BASE,{opacity:0}),
Title:merge(TITLE_BASE,{
left:crumbLeft + ICON_WIDTH,
opacity:1}),

RightItem:merge(RIGHT_BUTTON_BASE,{opacity:1})};

var crumbRight=SCREEN_WIDTH - 100;
RIGHT[i] = {
Crumb:merge(CRUMB_BASE,{left:crumbRight}),
Icon:merge(ICON_BASE,{opacity:0}),
Separator:merge(SEPARATOR_BASE,{opacity:0}),
Title:merge(TITLE_BASE,{
left:crumbRight + ICON_WIDTH,
opacity:0}),

RightItem:merge(RIGHT_BUTTON_BASE,{opacity:0})};}




CENTER[0] = {
Crumb:merge(CRUMB_BASE,{left:SCREEN_WIDTH / 4}),
Icon:merge(ICON_BASE,{opacity:0}),
Separator:merge(SEPARATOR_BASE,{opacity:0}),
Title:merge(FIRST_TITLE_BASE,{opacity:1}),
RightItem:CENTER[0].RightItem};

LEFT[0].Title = merge(FIRST_TITLE_BASE,{left:-SCREEN_WIDTH / 4,opacity:0});
RIGHT[0].Title = merge(FIRST_TITLE_BASE,{opacity:0});


var buildIndexSceneInterpolator=function(startStyles,endStyles){
return {
Crumb:buildStyleInterpolator({
left:{
type:'linear',
from:startStyles.Crumb.left,
to:endStyles.Crumb.left,
min:0,
max:1,
extrapolate:true}}),


Icon:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.Icon.opacity,
to:endStyles.Icon.opacity,
min:0,
max:1}}),


Separator:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.Separator.opacity,
to:endStyles.Separator.opacity,
min:0,
max:1}}),


Title:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.Title.opacity,
to:endStyles.Title.opacity,
min:0,
max:1},

left:{
type:'linear',
from:startStyles.Title.left,
to:endStyles.Title.left,
min:0,
max:1,
extrapolate:true}}),


RightItem:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.RightItem.opacity,
to:endStyles.RightItem.opacity,
min:0,
max:1,
round:OPACITY_RATIO}})};};





var Interpolators=CENTER.map(function(_,ii){
return {

RightToCenter:buildIndexSceneInterpolator(RIGHT[ii],CENTER[ii]),

CenterToLeft:buildIndexSceneInterpolator(CENTER[ii],LEFT[ii]),

RightToLeft:buildIndexSceneInterpolator(RIGHT[ii],LEFT[ii])};});







module.exports = {
Interpolators:Interpolators,
Left:LEFT,
Center:CENTER,
Right:RIGHT,
IconWidth:ICON_WIDTH,
IconHeight:NAV_BAR_HEIGHT,
SeparatorWidth:SEPARATOR_WIDTH,
SeparatorHeight:NAV_BAR_HEIGHT};
});
__d('NavigatorNavigationBarStylesIOS',["Dimensions","buildStyleInterpolator","merge"],function(global, require, module, exports) {  'use strict';



























var Dimensions=require('Dimensions');

var buildStyleInterpolator=require('buildStyleInterpolator');
var merge=require('merge');

var SCREEN_WIDTH=Dimensions.get('window').width;
var NAV_BAR_HEIGHT=44;
var STATUS_BAR_HEIGHT=20;
var NAV_HEIGHT=NAV_BAR_HEIGHT + STATUS_BAR_HEIGHT;

var BASE_STYLES={
Title:{
position:'absolute',
top:STATUS_BAR_HEIGHT,
left:0,
right:0,
alignItems:'center',
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'},

LeftButton:{
position:'absolute',
top:STATUS_BAR_HEIGHT,
left:0,
overflow:'hidden',
opacity:1,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'},

RightButton:{
position:'absolute',
top:STATUS_BAR_HEIGHT,
right:0,
overflow:'hidden',
opacity:1,
alignItems:'flex-end',
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'}};










var Stages={
Left:{
Title:merge(BASE_STYLES.Title,{left:-SCREEN_WIDTH / 2,opacity:0}),
LeftButton:merge(BASE_STYLES.LeftButton,{left:-SCREEN_WIDTH / 3,opacity:1}),
RightButton:merge(BASE_STYLES.RightButton,{left:SCREEN_WIDTH / 3,opacity:0})},

Center:{
Title:merge(BASE_STYLES.Title,{left:0,opacity:1}),
LeftButton:merge(BASE_STYLES.LeftButton,{left:0,opacity:1}),
RightButton:merge(BASE_STYLES.RightButton,{left:2 * SCREEN_WIDTH / 3 - 0,opacity:1})},

Right:{
Title:merge(BASE_STYLES.Title,{left:SCREEN_WIDTH / 2,opacity:0}),
LeftButton:merge(BASE_STYLES.LeftButton,{left:0,opacity:0}),
RightButton:merge(BASE_STYLES.RightButton,{left:SCREEN_WIDTH,opacity:0})}};




var opacityRatio=100;

function buildSceneInterpolators(startStyles,endStyles){
return {
Title:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.Title.opacity,
to:endStyles.Title.opacity,
min:0,
max:1},

left:{
type:'linear',
from:startStyles.Title.left,
to:endStyles.Title.left,
min:0,
max:1,
extrapolate:true}}),


LeftButton:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.LeftButton.opacity,
to:endStyles.LeftButton.opacity,
min:0,
max:1,
round:opacityRatio},

left:{
type:'linear',
from:startStyles.LeftButton.left,
to:endStyles.LeftButton.left,
min:0,
max:1}}),


RightButton:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.RightButton.opacity,
to:endStyles.RightButton.opacity,
min:0,
max:1,
round:opacityRatio},

left:{
type:'linear',
from:startStyles.RightButton.left,
to:endStyles.RightButton.left,
min:0,
max:1,
extrapolate:true}})};}





var Interpolators={

RightToCenter:buildSceneInterpolators(Stages.Right,Stages.Center),

CenterToLeft:buildSceneInterpolators(Stages.Center,Stages.Left),

RightToLeft:buildSceneInterpolators(Stages.Right,Stages.Left)};



module.exports = {
General:{
NavBarHeight:NAV_BAR_HEIGHT,
StatusBarHeight:STATUS_BAR_HEIGHT,
TotalNavHeight:NAV_HEIGHT},

Interpolators:Interpolators,
Stages:Stages};
});
__d('buildStyleInterpolator',["keyOf"],function(global, require, module, exports) {  var 










keyOf=require('keyOf');

var X_DIM=keyOf({x:null});
var Y_DIM=keyOf({y:null});
var Z_DIM=keyOf({z:null});
var W_DIM=keyOf({w:null});

var TRANSFORM_ROTATE_NAME=keyOf({transformRotateRadians:null});

var ShouldAllocateReusableOperationVars={
transformRotateRadians:true,
transformScale:true,
transformTranslate:true};


var InitialOperationField={
transformRotateRadians:[0,0,0,1],
transformTranslate:[0,0,0],
transformScale:[1,1,1]};



























































var ARGUMENT_NAMES_RE=/([^\s,]+)/g;



















var inline=function(func,replaceWithArgs){
var fnStr=func.toString();
var parameterNames=fnStr.slice(fnStr.indexOf('(') + 1,fnStr.indexOf(')')).
match(ARGUMENT_NAMES_RE) || 
[];
var replaceRegexStr=parameterNames.map(function(paramName){
return '\\b' + paramName + '\\b';}).
join('|');
var replaceRegex=new RegExp(replaceRegexStr,'g');
var fnBody=fnStr.substring(fnStr.indexOf('{') + 1,fnStr.lastIndexOf('}'));
var newFnBody=fnBody.replace(replaceRegex,function(parameterName){
var indexInParameterNames=parameterNames.indexOf(parameterName);
var replacementName=replaceWithArgs[indexInParameterNames];
return replacementName;});

return newFnBody.split('\n');};






var MatrixOps={
unroll:function(matVar,m0,m1,m2,m3,m4,m5,m6,m7,m8,m9,m10,m11,m12,m13,m14,m15){
m0 = matVar[0];
m1 = matVar[1];
m2 = matVar[2];
m3 = matVar[3];
m4 = matVar[4];
m5 = matVar[5];
m6 = matVar[6];
m7 = matVar[7];
m8 = matVar[8];
m9 = matVar[9];
m10 = matVar[10];
m11 = matVar[11];
m12 = matVar[12];
m13 = matVar[13];
m14 = matVar[14];
m15 = matVar[15];},


matrixDiffers:function(retVar,matVar,m0,m1,m2,m3,m4,m5,m6,m7,m8,m9,m10,m11,m12,m13,m14,m15){
retVar = retVar || 
m0 !== matVar[0] || 
m1 !== matVar[1] || 
m2 !== matVar[2] || 
m3 !== matVar[3] || 
m4 !== matVar[4] || 
m5 !== matVar[5] || 
m6 !== matVar[6] || 
m7 !== matVar[7] || 
m8 !== matVar[8] || 
m9 !== matVar[9] || 
m10 !== matVar[10] || 
m11 !== matVar[11] || 
m12 !== matVar[12] || 
m13 !== matVar[13] || 
m14 !== matVar[14] || 
m15 !== matVar[15];},


transformScale:function(matVar,opVar){

var x=opVar[0];
var y=opVar[1];
var z=opVar[2];
matVar[0] = matVar[0] * x;
matVar[1] = matVar[1] * x;
matVar[2] = matVar[2] * x;
matVar[3] = matVar[3] * x;
matVar[4] = matVar[4] * y;
matVar[5] = matVar[5] * y;
matVar[6] = matVar[6] * y;
matVar[7] = matVar[7] * y;
matVar[8] = matVar[8] * z;
matVar[9] = matVar[9] * z;
matVar[10] = matVar[10] * z;
matVar[11] = matVar[11] * z;
matVar[12] = matVar[12];
matVar[13] = matVar[13];
matVar[14] = matVar[14];
matVar[15] = matVar[15];},






transformTranslate:function(matVar,opVar){

var x=opVar[0];
var y=opVar[1];
var z=opVar[2];
matVar[12] = matVar[0] * x + matVar[4] * y + matVar[8] * z + matVar[12];
matVar[13] = matVar[1] * x + matVar[5] * y + matVar[9] * z + matVar[13];
matVar[14] = matVar[2] * x + matVar[6] * y + matVar[10] * z + matVar[14];
matVar[15] = matVar[3] * x + matVar[7] * y + matVar[11] * z + matVar[15];},






transformRotateRadians:function(matVar,q){

var xQuat=q[0],yQuat=q[1],zQuat=q[2],wQuat=q[3];
var x2Quat=xQuat + xQuat;
var y2Quat=yQuat + yQuat;
var z2Quat=zQuat + zQuat;
var xxQuat=xQuat * x2Quat;
var xyQuat=xQuat * y2Quat;
var xzQuat=xQuat * z2Quat;
var yyQuat=yQuat * y2Quat;
var yzQuat=yQuat * z2Quat;
var zzQuat=zQuat * z2Quat;
var wxQuat=wQuat * x2Quat;
var wyQuat=wQuat * y2Quat;
var wzQuat=wQuat * z2Quat;

var quatMat0=1 - (yyQuat + zzQuat);
var quatMat1=xyQuat + wzQuat;
var quatMat2=xzQuat - wyQuat;
var quatMat4=xyQuat - wzQuat;
var quatMat5=1 - (xxQuat + zzQuat);
var quatMat6=yzQuat + wxQuat;
var quatMat8=xzQuat + wyQuat;
var quatMat9=yzQuat - wxQuat;
var quatMat10=1 - (xxQuat + yyQuat);



var a00=matVar[0];
var a01=matVar[1];
var a02=matVar[2];
var a03=matVar[3];
var a10=matVar[4];
var a11=matVar[5];
var a12=matVar[6];
var a13=matVar[7];
var a20=matVar[8];
var a21=matVar[9];
var a22=matVar[10];
var a23=matVar[11];

var b0=quatMat0,b1=quatMat1,b2=quatMat2;
matVar[0] = b0 * a00 + b1 * a10 + b2 * a20;
matVar[1] = b0 * a01 + b1 * a11 + b2 * a21;
matVar[2] = b0 * a02 + b1 * a12 + b2 * a22;
matVar[3] = b0 * a03 + b1 * a13 + b2 * a23;
b0 = quatMat4;b1 = quatMat5;b2 = quatMat6;
matVar[4] = b0 * a00 + b1 * a10 + b2 * a20;
matVar[5] = b0 * a01 + b1 * a11 + b2 * a21;
matVar[6] = b0 * a02 + b1 * a12 + b2 * a22;
matVar[7] = b0 * a03 + b1 * a13 + b2 * a23;
b0 = quatMat8;b1 = quatMat9;b2 = quatMat10;
matVar[8] = b0 * a00 + b1 * a10 + b2 * a20;
matVar[9] = b0 * a01 + b1 * a11 + b2 * a21;
matVar[10] = b0 * a02 + b1 * a12 + b2 * a22;
matVar[11] = b0 * a03 + b1 * a13 + b2 * a23;}};





var MatrixOpsInitial={
transformScale:function(matVar,opVar){

matVar[0] = opVar[0];
matVar[1] = 0;
matVar[2] = 0;
matVar[3] = 0;
matVar[4] = 0;
matVar[5] = opVar[1];
matVar[6] = 0;
matVar[7] = 0;
matVar[8] = 0;
matVar[9] = 0;
matVar[10] = opVar[2];
matVar[11] = 0;
matVar[12] = 0;
matVar[13] = 0;
matVar[14] = 0;
matVar[15] = 1;},


transformTranslate:function(matVar,opVar){

matVar[0] = 1;
matVar[1] = 0;
matVar[2] = 0;
matVar[3] = 0;
matVar[4] = 0;
matVar[5] = 1;
matVar[6] = 0;
matVar[7] = 0;
matVar[8] = 0;
matVar[9] = 0;
matVar[10] = 1;
matVar[11] = 0;
matVar[12] = opVar[0];
matVar[13] = opVar[1];
matVar[14] = opVar[2];
matVar[15] = 1;},







transformRotateRadians:function(matVar,q){


var xQuat=q[0],yQuat=q[1],zQuat=q[2],wQuat=q[3];
var x2Quat=xQuat + xQuat;
var y2Quat=yQuat + yQuat;
var z2Quat=zQuat + zQuat;
var xxQuat=xQuat * x2Quat;
var xyQuat=xQuat * y2Quat;
var xzQuat=xQuat * z2Quat;
var yyQuat=yQuat * y2Quat;
var yzQuat=yQuat * z2Quat;
var zzQuat=zQuat * z2Quat;
var wxQuat=wQuat * x2Quat;
var wyQuat=wQuat * y2Quat;
var wzQuat=wQuat * z2Quat;

var quatMat0=1 - (yyQuat + zzQuat);
var quatMat1=xyQuat + wzQuat;
var quatMat2=xzQuat - wyQuat;
var quatMat4=xyQuat - wzQuat;
var quatMat5=1 - (xxQuat + zzQuat);
var quatMat6=yzQuat + wxQuat;
var quatMat8=xzQuat + wyQuat;
var quatMat9=yzQuat - wxQuat;
var quatMat10=1 - (xxQuat + yyQuat);



var b0=quatMat0,b1=quatMat1,b2=quatMat2;
matVar[0] = b0;
matVar[1] = b1;
matVar[2] = b2;
matVar[3] = 0;
b0 = quatMat4;b1 = quatMat5;b2 = quatMat6;
matVar[4] = b0;
matVar[5] = b1;
matVar[6] = b2;
matVar[7] = 0;
b0 = quatMat8;b1 = quatMat9;b2 = quatMat10;
matVar[8] = b0;
matVar[9] = b1;
matVar[10] = b2;
matVar[11] = 0;
matVar[12] = 0;
matVar[13] = 0;
matVar[14] = 0;
matVar[15] = 1;}};




var setNextValAndDetectChange=function(name,tmpVarName){
return (
'  if (!didChange) {\n' + 
'    var prevVal = result.' + name + ';\n' + 
'    result.' + name + ' = ' + tmpVarName + ';\n' + 
'    didChange = didChange  || (' + tmpVarName + ' !== prevVal);\n' + 
'  } else {\n' + 
'    result.' + name + ' = ' + tmpVarName + ';\n' + 
'  }\n');};



var computeNextValLinear=function(anim,from,to,tmpVarName){
var hasRoundRatio=('round' in anim);
var roundRatio=anim.round;
var fn='  ratio = (value - ' + anim.min + ') / ' + (anim.max - anim.min) + ';\n';
if(!anim.extrapolate){
fn += '  ratio = ratio > 1 ? 1 : (ratio < 0 ? 0 : ratio);\n';}


var roundOpen=hasRoundRatio?'Math.round(' + roundRatio + ' * ':'';
var roundClose=hasRoundRatio?') / ' + roundRatio:'';
fn += 
'  ' + tmpVarName + ' = ' + 
roundOpen + 
'(' + from + ' * (1 - ratio) + ' + to + ' * ratio)' + 
roundClose + ';\n';
return fn;};


var computeNextValLinearScalar=function(anim){
return computeNextValLinear(anim,anim.from,anim.to,'nextScalarVal');};


var computeNextValConstant=function(anim){
var constantExpression=JSON.stringify(anim.value);
return '  nextScalarVal = ' + constantExpression + ';\n';};


var computeNextValStep=function(anim){
return (
'  nextScalarVal = value >= ' + (
anim.threshold + ' ? ' + anim.to + ' : ' + anim.from) + ';\n');};



var computeNextValIdentity=function(anim){
return '  nextScalarVal = value;\n';};


var operationVar=function(name){
return name + 'ReuseOp';};


var createReusableOperationVars=function(anims){
var ret='';
for(var name in anims) {
if(ShouldAllocateReusableOperationVars[name]){
ret += 'var ' + operationVar(name) + ' = [];\n';}}


return ret;};


var newlines=function(statements){
return '\n' + statements.join('\n') + '\n';};








var computeNextMatrixOperationField=function(anim,name,dimension,index){
var fieldAccess=operationVar(name) + '[' + index + ']';
if(anim.from[dimension] !== undefined && anim.to[dimension] !== undefined){
return '  ' + anim.from[dimension] !== anim.to[dimension]?
computeNextValLinear(anim,anim.from[dimension],anim.to[dimension],fieldAccess):
fieldAccess + ' = ' + anim.from[dimension] + ';';}else 
{
return '  ' + fieldAccess + ' = ' + InitialOperationField[name][index] + ';';}};



var unrolledVars=[];
for(var varIndex=0;varIndex < 16;varIndex++) {
unrolledVars.push('m' + varIndex);}

var setNextMatrixAndDetectChange=function(orderedMatrixOperations){
var fn=[
'  var transformMatrix = result.transformMatrix !== undefined ? ' + 
'result.transformMatrix : (result.transformMatrix = []);'];

fn.push.apply(
fn,
inline(MatrixOps.unroll,['transformMatrix'].concat(unrolledVars)));

for(var i=0;i < orderedMatrixOperations.length;i++) {
var opName=orderedMatrixOperations[i];
if(i === 0){
fn.push.apply(
fn,
inline(MatrixOpsInitial[opName],['transformMatrix',operationVar(opName)]));}else 

{
fn.push.apply(
fn,
inline(MatrixOps[opName],['transformMatrix',operationVar(opName)]));}}



fn.push.apply(
fn,
inline(MatrixOps.matrixDiffers,['didChange','transformMatrix'].concat(unrolledVars)));

return fn;};


var InterpolateMatrix={
transformTranslate:true,
transformRotateRadians:true,
transformScale:true};


var createFunctionString=function(anims){


var orderedMatrixOperations=[];



var fn='return (function() {\n';
fn += createReusableOperationVars(anims);
fn += 'return function(result, value) {\n';
fn += '  var didChange = false;\n';
fn += '  var nextScalarVal;\n';
fn += '  var ratio;\n';

for(var name in anims) {
var anim=anims[name];
if(anim.type === 'linear'){
if(InterpolateMatrix[name]){
orderedMatrixOperations.push(name);
var setOperations=[
computeNextMatrixOperationField(anim,name,X_DIM,0),
computeNextMatrixOperationField(anim,name,Y_DIM,1),
computeNextMatrixOperationField(anim,name,Z_DIM,2)];

if(name === TRANSFORM_ROTATE_NAME){
setOperations.push(computeNextMatrixOperationField(anim,name,W_DIM,3));}

fn += newlines(setOperations);}else 
{
fn += computeNextValLinearScalar(anim,'nextScalarVal');
fn += setNextValAndDetectChange(name,'nextScalarVal');}}else 

if(anim.type === 'constant'){
fn += computeNextValConstant(anim);
fn += setNextValAndDetectChange(name,'nextScalarVal');}else 
if(anim.type === 'step'){
fn += computeNextValStep(anim);
fn += setNextValAndDetectChange(name,'nextScalarVal');}else 
if(anim.type === 'identity'){
fn += computeNextValIdentity(anim);
fn += setNextValAndDetectChange(name,'nextScalarVal');}}


if(orderedMatrixOperations.length){
fn += newlines(setNextMatrixAndDetectChange(orderedMatrixOperations));}

fn += '  return didChange;\n';
fn += '};\n';
fn += '})()';
return fn;};







var buildStyleInterpolator=function(anims){
return Function(createFunctionString(anims))();};



module.exports = buildStyleInterpolator;
});
__d('NavigatorNavigationBarStylesAndroid',["buildStyleInterpolator","merge"],function(global, require, module, exports) {  'use strict';



























var buildStyleInterpolator=require('buildStyleInterpolator');
var merge=require('merge');


var NAV_BAR_HEIGHT=56;
var TITLE_LEFT=72;
var BUTTON_SIZE=24;
var TOUCH_TARGT_SIZE=48;
var BUTTON_HORIZONTAL_MARGIN=16;

var BUTTON_EFFECTIVE_MARGIN=BUTTON_HORIZONTAL_MARGIN - (TOUCH_TARGT_SIZE - BUTTON_SIZE) / 2;
var NAV_ELEMENT_HEIGHT=NAV_BAR_HEIGHT;

var BASE_STYLES={
Title:{
position:'absolute',
bottom:0,
left:0,
right:0,
alignItems:'flex-start',
height:NAV_ELEMENT_HEIGHT,
backgroundColor:'transparent',
marginLeft:TITLE_LEFT},

LeftButton:{
position:'absolute',
top:0,
left:BUTTON_EFFECTIVE_MARGIN,
overflow:'hidden',
height:NAV_ELEMENT_HEIGHT,
backgroundColor:'transparent'},

RightButton:{
position:'absolute',
top:0,
right:BUTTON_EFFECTIVE_MARGIN,
overflow:'hidden',
alignItems:'flex-end',
height:NAV_ELEMENT_HEIGHT,
backgroundColor:'transparent'}};










var Stages={
Left:{
Title:merge(BASE_STYLES.Title,{opacity:0}),
LeftButton:merge(BASE_STYLES.LeftButton,{opacity:0}),
RightButton:merge(BASE_STYLES.RightButton,{opacity:0})},

Center:{
Title:merge(BASE_STYLES.Title,{opacity:1}),
LeftButton:merge(BASE_STYLES.LeftButton,{opacity:1}),
RightButton:merge(BASE_STYLES.RightButton,{opacity:1})},

Right:{
Title:merge(BASE_STYLES.Title,{opacity:0}),
LeftButton:merge(BASE_STYLES.LeftButton,{opacity:0}),
RightButton:merge(BASE_STYLES.RightButton,{opacity:0})}};




var opacityRatio=100;

function buildSceneInterpolators(startStyles,endStyles){
return {
Title:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.Title.opacity,
to:endStyles.Title.opacity,
min:0,
max:1},

left:{
type:'linear',
from:startStyles.Title.left,
to:endStyles.Title.left,
min:0,
max:1,
extrapolate:true}}),


LeftButton:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.LeftButton.opacity,
to:endStyles.LeftButton.opacity,
min:0,
max:1,
round:opacityRatio},

left:{
type:'linear',
from:startStyles.LeftButton.left,
to:endStyles.LeftButton.left,
min:0,
max:1}}),


RightButton:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.RightButton.opacity,
to:endStyles.RightButton.opacity,
min:0,
max:1,
round:opacityRatio},

left:{
type:'linear',
from:startStyles.RightButton.left,
to:endStyles.RightButton.left,
min:0,
max:1,
extrapolate:true}})};}





var Interpolators={

RightToCenter:buildSceneInterpolators(Stages.Right,Stages.Center),

CenterToLeft:buildSceneInterpolators(Stages.Center,Stages.Left),

RightToLeft:buildSceneInterpolators(Stages.Right,Stages.Left)};



module.exports = {
General:{
NavBarHeight:NAV_BAR_HEIGHT,
StatusBarHeight:0,
TotalNavHeight:NAV_BAR_HEIGHT},

Interpolators:Interpolators,
Stages:Stages};
});
__d('immutable/dist/immutable.js',[],function(global, require, module, exports) {  (







function(global,factory){
typeof exports === 'object' && typeof module !== 'undefined'?module.exports = factory():
typeof define === 'function' && define.amd?define(factory):
global.Immutable = factory();})(
this,function(){'use strict';var SLICE$0=Array.prototype.slice;

function createClass(ctor,superClass){
if(superClass){
ctor.prototype = Object.create(superClass.prototype);}

ctor.prototype.constructor = ctor;}



var DELETE='delete';


var SHIFT=5;
var SIZE=1 << SHIFT;
var MASK=SIZE - 1;



var NOT_SET={};


var CHANGE_LENGTH={value:false};
var DID_ALTER={value:false};

function MakeRef(ref){
ref.value = false;
return ref;}


function SetRef(ref){
ref && (ref.value = true);}





function OwnerID(){}


function arrCopy(arr,offset){
offset = offset || 0;
var len=Math.max(0,arr.length - offset);
var newArr=new Array(len);
for(var ii=0;ii < len;ii++) {
newArr[ii] = arr[ii + offset];}

return newArr;}


function ensureSize(iter){
if(iter.size === undefined){
iter.size = iter.__iterate(returnTrue);}

return iter.size;}


function wrapIndex(iter,index){







if(typeof index !== 'number'){
var numIndex=+index;
if('' + numIndex !== index){
return NaN;}

index = numIndex;}

return index < 0?ensureSize(iter) + index:index;}


function returnTrue(){
return true;}


function wholeSlice(begin,end,size){
return (begin === 0 || size !== undefined && begin <= -size) && (
end === undefined || size !== undefined && end >= size);}


function resolveBegin(begin,size){
return resolveIndex(begin,size,0);}


function resolveEnd(end,size){
return resolveIndex(end,size,size);}


function resolveIndex(index,size,defaultIndex){
return index === undefined?
defaultIndex:
index < 0?
Math.max(0,size + index):
size === undefined?
index:
Math.min(size,index);}


function Iterable(value){
return isIterable(value)?value:Seq(value);}



createClass(KeyedIterable,Iterable);
function KeyedIterable(value){
return isKeyed(value)?value:KeyedSeq(value);}



createClass(IndexedIterable,Iterable);
function IndexedIterable(value){
return isIndexed(value)?value:IndexedSeq(value);}



createClass(SetIterable,Iterable);
function SetIterable(value){
return isIterable(value) && !isAssociative(value)?value:SetSeq(value);}




function isIterable(maybeIterable){
return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);}


function isKeyed(maybeKeyed){
return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);}


function isIndexed(maybeIndexed){
return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);}


function isAssociative(maybeAssociative){
return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);}


function isOrdered(maybeOrdered){
return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);}


Iterable.isIterable = isIterable;
Iterable.isKeyed = isKeyed;
Iterable.isIndexed = isIndexed;
Iterable.isAssociative = isAssociative;
Iterable.isOrdered = isOrdered;

Iterable.Keyed = KeyedIterable;
Iterable.Indexed = IndexedIterable;
Iterable.Set = SetIterable;


var IS_ITERABLE_SENTINEL='@@__IMMUTABLE_ITERABLE__@@';
var IS_KEYED_SENTINEL='@@__IMMUTABLE_KEYED__@@';
var IS_INDEXED_SENTINEL='@@__IMMUTABLE_INDEXED__@@';
var IS_ORDERED_SENTINEL='@@__IMMUTABLE_ORDERED__@@';



var ITERATE_KEYS=0;
var ITERATE_VALUES=1;
var ITERATE_ENTRIES=2;

var REAL_ITERATOR_SYMBOL=typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL='@@iterator';

var ITERATOR_SYMBOL=REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;


function src_Iterator__Iterator(next){
this.next = next;}


src_Iterator__Iterator.prototype.toString = function(){
return '[Iterator]';};



src_Iterator__Iterator.KEYS = ITERATE_KEYS;
src_Iterator__Iterator.VALUES = ITERATE_VALUES;
src_Iterator__Iterator.ENTRIES = ITERATE_ENTRIES;

src_Iterator__Iterator.prototype.inspect = 
src_Iterator__Iterator.prototype.toSource = function(){return this.toString();};
src_Iterator__Iterator.prototype[ITERATOR_SYMBOL] = function(){
return this;};



function iteratorValue(type,k,v,iteratorResult){
var value=type === 0?k:type === 1?v:[k,v];
iteratorResult?iteratorResult.value = value:iteratorResult = {
value:value,done:false};

return iteratorResult;}


function iteratorDone(){
return {value:undefined,done:true};}


function hasIterator(maybeIterable){
return !!getIteratorFn(maybeIterable);}


function isIterator(maybeIterator){
return maybeIterator && typeof maybeIterator.next === 'function';}


function getIterator(iterable){
var iteratorFn=getIteratorFn(iterable);
return iteratorFn && iteratorFn.call(iterable);}


function getIteratorFn(iterable){
var iteratorFn=iterable && (
REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL] || 
iterable[FAUX_ITERATOR_SYMBOL]);

if(typeof iteratorFn === 'function'){
return iteratorFn;}}



function isArrayLike(value){
return value && typeof value.length === 'number';}


createClass(Seq,Iterable);
function Seq(value){
return value === null || value === undefined?emptySequence():
isIterable(value)?value.toSeq():seqFromValue(value);}


Seq.of = function(){
return Seq(arguments);};


Seq.prototype.toSeq = function(){
return this;};


Seq.prototype.toString = function(){
return this.__toString('Seq {','}');};


Seq.prototype.cacheResult = function(){
if(!this._cache && this.__iterateUncached){
this._cache = this.entrySeq().toArray();
this.size = this._cache.length;}

return this;};




Seq.prototype.__iterate = function(fn,reverse){
return seqIterate(this,fn,reverse,true);};




Seq.prototype.__iterator = function(type,reverse){
return seqIterator(this,type,reverse,true);};




createClass(KeyedSeq,Seq);
function KeyedSeq(value){
return value === null || value === undefined?
emptySequence().toKeyedSeq():
isIterable(value)?
isKeyed(value)?value.toSeq():value.fromEntrySeq():
keyedSeqFromValue(value);}


KeyedSeq.prototype.toKeyedSeq = function(){
return this;};




createClass(IndexedSeq,Seq);
function IndexedSeq(value){
return value === null || value === undefined?emptySequence():
!isIterable(value)?indexedSeqFromValue(value):
isKeyed(value)?value.entrySeq():value.toIndexedSeq();}


IndexedSeq.of = function(){
return IndexedSeq(arguments);};


IndexedSeq.prototype.toIndexedSeq = function(){
return this;};


IndexedSeq.prototype.toString = function(){
return this.__toString('Seq [',']');};


IndexedSeq.prototype.__iterate = function(fn,reverse){
return seqIterate(this,fn,reverse,false);};


IndexedSeq.prototype.__iterator = function(type,reverse){
return seqIterator(this,type,reverse,false);};




createClass(SetSeq,Seq);
function SetSeq(value){
return (
value === null || value === undefined?emptySequence():
!isIterable(value)?indexedSeqFromValue(value):
isKeyed(value)?value.entrySeq():value).
toSetSeq();}


SetSeq.of = function(){
return SetSeq(arguments);};


SetSeq.prototype.toSetSeq = function(){
return this;};




Seq.isSeq = isSeq;
Seq.Keyed = KeyedSeq;
Seq.Set = SetSeq;
Seq.Indexed = IndexedSeq;

var IS_SEQ_SENTINEL='@@__IMMUTABLE_SEQ__@@';

Seq.prototype[IS_SEQ_SENTINEL] = true;





createClass(ArraySeq,IndexedSeq);
function ArraySeq(array){
this._array = array;
this.size = array.length;}


ArraySeq.prototype.get = function(index,notSetValue){
return this.has(index)?this._array[wrapIndex(this,index)]:notSetValue;};


ArraySeq.prototype.__iterate = function(fn,reverse){
var array=this._array;
var maxIndex=array.length - 1;
for(var ii=0;ii <= maxIndex;ii++) {
if(fn(array[reverse?maxIndex - ii:ii],ii,this) === false){
return ii + 1;}}


return ii;};


ArraySeq.prototype.__iterator = function(type,reverse){
var array=this._array;
var maxIndex=array.length - 1;
var ii=0;
return new src_Iterator__Iterator(function()
{return ii > maxIndex?
iteratorDone():
iteratorValue(type,ii,array[reverse?maxIndex - ii++:ii++]);});};





createClass(ObjectSeq,KeyedSeq);
function ObjectSeq(object){
var keys=Object.keys(object);
this._object = object;
this._keys = keys;
this.size = keys.length;}


ObjectSeq.prototype.get = function(key,notSetValue){
if(notSetValue !== undefined && !this.has(key)){
return notSetValue;}

return this._object[key];};


ObjectSeq.prototype.has = function(key){
return this._object.hasOwnProperty(key);};


ObjectSeq.prototype.__iterate = function(fn,reverse){
var object=this._object;
var keys=this._keys;
var maxIndex=keys.length - 1;
for(var ii=0;ii <= maxIndex;ii++) {
var key=keys[reverse?maxIndex - ii:ii];
if(fn(object[key],key,this) === false){
return ii + 1;}}


return ii;};


ObjectSeq.prototype.__iterator = function(type,reverse){
var object=this._object;
var keys=this._keys;
var maxIndex=keys.length - 1;
var ii=0;
return new src_Iterator__Iterator(function(){
var key=keys[reverse?maxIndex - ii:ii];
return ii++ > maxIndex?
iteratorDone():
iteratorValue(type,key,object[key]);});};



ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;


createClass(IterableSeq,IndexedSeq);
function IterableSeq(iterable){
this._iterable = iterable;
this.size = iterable.length || iterable.size;}


IterableSeq.prototype.__iterateUncached = function(fn,reverse){
if(reverse){
return this.cacheResult().__iterate(fn,reverse);}

var iterable=this._iterable;
var iterator=getIterator(iterable);
var iterations=0;
if(isIterator(iterator)){
var step;
while(!(step = iterator.next()).done) {
if(fn(step.value,iterations++,this) === false){
break;}}}



return iterations;};


IterableSeq.prototype.__iteratorUncached = function(type,reverse){
if(reverse){
return this.cacheResult().__iterator(type,reverse);}

var iterable=this._iterable;
var iterator=getIterator(iterable);
if(!isIterator(iterator)){
return new src_Iterator__Iterator(iteratorDone);}

var iterations=0;
return new src_Iterator__Iterator(function(){
var step=iterator.next();
return step.done?step:iteratorValue(type,iterations++,step.value);});};





createClass(IteratorSeq,IndexedSeq);
function IteratorSeq(iterator){
this._iterator = iterator;
this._iteratorCache = [];}


IteratorSeq.prototype.__iterateUncached = function(fn,reverse){
if(reverse){
return this.cacheResult().__iterate(fn,reverse);}

var iterator=this._iterator;
var cache=this._iteratorCache;
var iterations=0;
while(iterations < cache.length) {
if(fn(cache[iterations],iterations++,this) === false){
return iterations;}}


var step;
while(!(step = iterator.next()).done) {
var val=step.value;
cache[iterations] = val;
if(fn(val,iterations++,this) === false){
break;}}


return iterations;};


IteratorSeq.prototype.__iteratorUncached = function(type,reverse){
if(reverse){
return this.cacheResult().__iterator(type,reverse);}

var iterator=this._iterator;
var cache=this._iteratorCache;
var iterations=0;
return new src_Iterator__Iterator(function(){
if(iterations >= cache.length){
var step=iterator.next();
if(step.done){
return step;}

cache[iterations] = step.value;}

return iteratorValue(type,iterations,cache[iterations++]);});};








function isSeq(maybeSeq){
return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);}


var EMPTY_SEQ;

function emptySequence(){
return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));}


function keyedSeqFromValue(value){
var seq=
Array.isArray(value)?new ArraySeq(value).fromEntrySeq():
isIterator(value)?new IteratorSeq(value).fromEntrySeq():
hasIterator(value)?new IterableSeq(value).fromEntrySeq():
typeof value === 'object'?new ObjectSeq(value):
undefined;
if(!seq){
throw new TypeError(
'Expected Array or iterable object of [k, v] entries, ' + 
'or keyed object: ' + value);}


return seq;}


function indexedSeqFromValue(value){
var seq=maybeIndexedSeqFromValue(value);
if(!seq){
throw new TypeError(
'Expected Array or iterable object of values: ' + value);}


return seq;}


function seqFromValue(value){
var seq=maybeIndexedSeqFromValue(value) || 
typeof value === 'object' && new ObjectSeq(value);
if(!seq){
throw new TypeError(
'Expected Array or iterable object of values, or keyed object: ' + value);}


return seq;}


function maybeIndexedSeqFromValue(value){
return (
isArrayLike(value)?new ArraySeq(value):
isIterator(value)?new IteratorSeq(value):
hasIterator(value)?new IterableSeq(value):
undefined);}



function seqIterate(seq,fn,reverse,useKeys){
var cache=seq._cache;
if(cache){
var maxIndex=cache.length - 1;
for(var ii=0;ii <= maxIndex;ii++) {
var entry=cache[reverse?maxIndex - ii:ii];
if(fn(entry[1],useKeys?entry[0]:ii,seq) === false){
return ii + 1;}}


return ii;}

return seq.__iterateUncached(fn,reverse);}


function seqIterator(seq,type,reverse,useKeys){
var cache=seq._cache;
if(cache){
var maxIndex=cache.length - 1;
var ii=0;
return new src_Iterator__Iterator(function(){
var entry=cache[reverse?maxIndex - ii:ii];
return ii++ > maxIndex?
iteratorDone():
iteratorValue(type,useKeys?entry[0]:ii - 1,entry[1]);});}


return seq.__iteratorUncached(type,reverse);}


createClass(Collection,Iterable);
function Collection(){
throw TypeError('Abstract');}



createClass(KeyedCollection,Collection);function KeyedCollection(){}

createClass(IndexedCollection,Collection);function IndexedCollection(){}

createClass(SetCollection,Collection);function SetCollection(){}


Collection.Keyed = KeyedCollection;
Collection.Indexed = IndexedCollection;
Collection.Set = SetCollection;























































function is(valueA,valueB){
if(valueA === valueB || valueA !== valueA && valueB !== valueB){
return true;}

if(!valueA || !valueB){
return false;}

if(typeof valueA.valueOf === 'function' && 
typeof valueB.valueOf === 'function'){
valueA = valueA.valueOf();
valueB = valueB.valueOf();
if(valueA === valueB || valueA !== valueA && valueB !== valueB){
return true;}

if(!valueA || !valueB){
return false;}}


if(typeof valueA.equals === 'function' && 
typeof valueB.equals === 'function' && 
valueA.equals(valueB)){
return true;}

return false;}


function fromJS(json,converter){
return converter?
fromJSWith(converter,json,'',{'':json}):
fromJSDefault(json);}


function fromJSWith(converter,json,key,parentJSON){
if(Array.isArray(json)){
return converter.call(parentJSON,key,IndexedSeq(json).map(function(v,k){return fromJSWith(converter,v,k,json);}));}

if(isPlainObj(json)){
return converter.call(parentJSON,key,KeyedSeq(json).map(function(v,k){return fromJSWith(converter,v,k,json);}));}

return json;}


function fromJSDefault(json){
if(Array.isArray(json)){
return IndexedSeq(json).map(fromJSDefault).toList();}

if(isPlainObj(json)){
return KeyedSeq(json).map(fromJSDefault).toMap();}

return json;}


function isPlainObj(value){
return value && (value.constructor === Object || value.constructor === undefined);}


var src_Math__imul=
typeof Math.imul === 'function' && Math.imul(0xffffffff,2) === -2?
Math.imul:
function imul(a,b){
a = a | 0;
b = b | 0;
var c=a & 0xffff;
var d=b & 0xffff;

return c * d + ((a >>> 16) * d + c * (b >>> 16) << 16 >>> 0) | 0;};






function smi(i32){
return i32 >>> 1 & 0x40000000 | i32 & 0xBFFFFFFF;}


function hash(o){
if(o === false || o === null || o === undefined){
return 0;}

if(typeof o.valueOf === 'function'){
o = o.valueOf();
if(o === false || o === null || o === undefined){
return 0;}}


if(o === true){
return 1;}

var type=typeof o;
if(type === 'number'){
var h=o | 0;
if(h !== o){
h ^= o * 0xFFFFFFFF;}

while(o > 0xFFFFFFFF) {
o /= 0xFFFFFFFF;
h ^= o;}

return smi(h);}

if(type === 'string'){
return o.length > STRING_HASH_CACHE_MIN_STRLEN?cachedHashString(o):hashString(o);}

if(typeof o.hashCode === 'function'){
return o.hashCode();}

return hashJSObj(o);}


function cachedHashString(string){
var hash=stringHashCache[string];
if(hash === undefined){
hash = hashString(string);
if(STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE){
STRING_HASH_CACHE_SIZE = 0;
stringHashCache = {};}

STRING_HASH_CACHE_SIZE++;
stringHashCache[string] = hash;}

return hash;}



function hashString(string){






var hash=0;
for(var ii=0;ii < string.length;ii++) {
hash = 31 * hash + string.charCodeAt(ii) | 0;}

return smi(hash);}


function hashJSObj(obj){
var hash;
if(usingWeakMap){
hash = weakMap.get(obj);
if(hash !== undefined){
return hash;}}



hash = obj[UID_HASH_KEY];
if(hash !== undefined){
return hash;}


if(!canDefineProperty){
hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];
if(hash !== undefined){
return hash;}


hash = getIENodeHash(obj);
if(hash !== undefined){
return hash;}}



hash = ++objHashUID;
if(objHashUID & 0x40000000){
objHashUID = 0;}


if(usingWeakMap){
weakMap.set(obj,hash);}else 
if(isExtensible !== undefined && isExtensible(obj) === false){
throw new Error('Non-extensible objects are not allowed as keys.');}else 
if(canDefineProperty){
Object.defineProperty(obj,UID_HASH_KEY,{
'enumerable':false,
'configurable':false,
'writable':false,
'value':hash});}else 

if(obj.propertyIsEnumerable !== undefined && 
obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable){




obj.propertyIsEnumerable = function(){
return this.constructor.prototype.propertyIsEnumerable.apply(this,arguments);};

obj.propertyIsEnumerable[UID_HASH_KEY] = hash;}else 
if(obj.nodeType !== undefined){




obj[UID_HASH_KEY] = hash;}else 
{
throw new Error('Unable to set a non-enumerable property on object.');}


return hash;}



var isExtensible=Object.isExtensible;


var canDefineProperty=(function(){
try{
Object.defineProperty({},'@',{});
return true;}
catch(e) {
return false;}})();





function getIENodeHash(node){
if(node && node.nodeType > 0){
switch(node.nodeType){
case 1:
return node.uniqueID;
case 9:
return node.documentElement && node.documentElement.uniqueID;}}}





var usingWeakMap=typeof WeakMap === 'function';
var weakMap;
if(usingWeakMap){
weakMap = new WeakMap();}


var objHashUID=0;

var UID_HASH_KEY='__immutablehash__';
if(typeof Symbol === 'function'){
UID_HASH_KEY = Symbol(UID_HASH_KEY);}


var STRING_HASH_CACHE_MIN_STRLEN=16;
var STRING_HASH_CACHE_MAX_SIZE=255;
var STRING_HASH_CACHE_SIZE=0;
var stringHashCache={};

function invariant(condition,error){
if(!condition)throw new Error(error);}


function assertNotInfinite(size){
invariant(
size !== Infinity,
'Cannot perform this action with an infinite size.');}



createClass(ToKeyedSequence,KeyedSeq);
function ToKeyedSequence(indexed,useKeys){
this._iter = indexed;
this._useKeys = useKeys;
this.size = indexed.size;}


ToKeyedSequence.prototype.get = function(key,notSetValue){
return this._iter.get(key,notSetValue);};


ToKeyedSequence.prototype.has = function(key){
return this._iter.has(key);};


ToKeyedSequence.prototype.valueSeq = function(){
return this._iter.valueSeq();};


ToKeyedSequence.prototype.reverse = function(){var this$0=this;
var reversedSequence=reverseFactory(this,true);
if(!this._useKeys){
reversedSequence.valueSeq = function(){return this$0._iter.toSeq().reverse();};}

return reversedSequence;};


ToKeyedSequence.prototype.map = function(mapper,context){var this$0=this;
var mappedSequence=mapFactory(this,mapper,context);
if(!this._useKeys){
mappedSequence.valueSeq = function(){return this$0._iter.toSeq().map(mapper,context);};}

return mappedSequence;};


ToKeyedSequence.prototype.__iterate = function(fn,reverse){var this$0=this;
var ii;
return this._iter.__iterate(
this._useKeys?
function(v,k){return fn(v,k,this$0);}:(
ii = reverse?resolveSize(this):0,
function(v){return fn(v,reverse?--ii:ii++,this$0);}),
reverse);};



ToKeyedSequence.prototype.__iterator = function(type,reverse){
if(this._useKeys){
return this._iter.__iterator(type,reverse);}

var iterator=this._iter.__iterator(ITERATE_VALUES,reverse);
var ii=reverse?resolveSize(this):0;
return new src_Iterator__Iterator(function(){
var step=iterator.next();
return step.done?step:
iteratorValue(type,reverse?--ii:ii++,step.value,step);});};



ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;


createClass(ToIndexedSequence,IndexedSeq);
function ToIndexedSequence(iter){
this._iter = iter;
this.size = iter.size;}


ToIndexedSequence.prototype.includes = function(value){
return this._iter.includes(value);};


ToIndexedSequence.prototype.__iterate = function(fn,reverse){var this$0=this;
var iterations=0;
return this._iter.__iterate(function(v){return fn(v,iterations++,this$0);},reverse);};


ToIndexedSequence.prototype.__iterator = function(type,reverse){
var iterator=this._iter.__iterator(ITERATE_VALUES,reverse);
var iterations=0;
return new src_Iterator__Iterator(function(){
var step=iterator.next();
return step.done?step:
iteratorValue(type,iterations++,step.value,step);});};





createClass(ToSetSequence,SetSeq);
function ToSetSequence(iter){
this._iter = iter;
this.size = iter.size;}


ToSetSequence.prototype.has = function(key){
return this._iter.includes(key);};


ToSetSequence.prototype.__iterate = function(fn,reverse){var this$0=this;
return this._iter.__iterate(function(v){return fn(v,v,this$0);},reverse);};


ToSetSequence.prototype.__iterator = function(type,reverse){
var iterator=this._iter.__iterator(ITERATE_VALUES,reverse);
return new src_Iterator__Iterator(function(){
var step=iterator.next();
return step.done?step:
iteratorValue(type,step.value,step.value,step);});};





createClass(FromEntriesSequence,KeyedSeq);
function FromEntriesSequence(entries){
this._iter = entries;
this.size = entries.size;}


FromEntriesSequence.prototype.entrySeq = function(){
return this._iter.toSeq();};


FromEntriesSequence.prototype.__iterate = function(fn,reverse){var this$0=this;
return this._iter.__iterate(function(entry){


if(entry){
validateEntry(entry);
var indexedIterable=isIterable(entry);
return fn(
indexedIterable?entry.get(1):entry[1],
indexedIterable?entry.get(0):entry[0],
this$0);}},


reverse);};


FromEntriesSequence.prototype.__iterator = function(type,reverse){
var iterator=this._iter.__iterator(ITERATE_VALUES,reverse);
return new src_Iterator__Iterator(function(){
while(true) {
var step=iterator.next();
if(step.done){
return step;}

var entry=step.value;


if(entry){
validateEntry(entry);
var indexedIterable=isIterable(entry);
return iteratorValue(
type,
indexedIterable?entry.get(0):entry[0],
indexedIterable?entry.get(1):entry[1],
step);}}});};







ToIndexedSequence.prototype.cacheResult = 
ToKeyedSequence.prototype.cacheResult = 
ToSetSequence.prototype.cacheResult = 
FromEntriesSequence.prototype.cacheResult = 
cacheResultThrough;


function flipFactory(iterable){
var flipSequence=makeSequence(iterable);
flipSequence._iter = iterable;
flipSequence.size = iterable.size;
flipSequence.flip = function(){return iterable;};
flipSequence.reverse = function(){
var reversedSequence=iterable.reverse.apply(this);
reversedSequence.flip = function(){return iterable.reverse();};
return reversedSequence;};

flipSequence.has = function(key){return iterable.includes(key);};
flipSequence.includes = function(key){return iterable.has(key);};
flipSequence.cacheResult = cacheResultThrough;
flipSequence.__iterateUncached = function(fn,reverse){var this$0=this;
return iterable.__iterate(function(v,k){return fn(k,v,this$0) !== false;},reverse);};

flipSequence.__iteratorUncached = function(type,reverse){
if(type === ITERATE_ENTRIES){
var iterator=iterable.__iterator(type,reverse);
return new src_Iterator__Iterator(function(){
var step=iterator.next();
if(!step.done){
var k=step.value[0];
step.value[0] = step.value[1];
step.value[1] = k;}

return step;});}


return iterable.__iterator(
type === ITERATE_VALUES?ITERATE_KEYS:ITERATE_VALUES,
reverse);};


return flipSequence;}



function mapFactory(iterable,mapper,context){
var mappedSequence=makeSequence(iterable);
mappedSequence.size = iterable.size;
mappedSequence.has = function(key){return iterable.has(key);};
mappedSequence.get = function(key,notSetValue){
var v=iterable.get(key,NOT_SET);
return v === NOT_SET?
notSetValue:
mapper.call(context,v,key,iterable);};

mappedSequence.__iterateUncached = function(fn,reverse){var this$0=this;
return iterable.__iterate(
function(v,k,c){return fn(mapper.call(context,v,k,c),k,this$0) !== false;},
reverse);};


mappedSequence.__iteratorUncached = function(type,reverse){
var iterator=iterable.__iterator(ITERATE_ENTRIES,reverse);
return new src_Iterator__Iterator(function(){
var step=iterator.next();
if(step.done){
return step;}

var entry=step.value;
var key=entry[0];
return iteratorValue(
type,
key,
mapper.call(context,entry[1],key,iterable),
step);});};



return mappedSequence;}



function reverseFactory(iterable,useKeys){
var reversedSequence=makeSequence(iterable);
reversedSequence._iter = iterable;
reversedSequence.size = iterable.size;
reversedSequence.reverse = function(){return iterable;};
if(iterable.flip){
reversedSequence.flip = function(){
var flipSequence=flipFactory(iterable);
flipSequence.reverse = function(){return iterable.flip();};
return flipSequence;};}


reversedSequence.get = function(key,notSetValue)
{return iterable.get(useKeys?key:-1 - key,notSetValue);};
reversedSequence.has = function(key)
{return iterable.has(useKeys?key:-1 - key);};
reversedSequence.includes = function(value){return iterable.includes(value);};
reversedSequence.cacheResult = cacheResultThrough;
reversedSequence.__iterate = function(fn,reverse){var this$0=this;
return iterable.__iterate(function(v,k){return fn(v,k,this$0);},!reverse);};

reversedSequence.__iterator = 
function(type,reverse){return iterable.__iterator(type,!reverse);};
return reversedSequence;}



function filterFactory(iterable,predicate,context,useKeys){
var filterSequence=makeSequence(iterable);
if(useKeys){
filterSequence.has = function(key){
var v=iterable.get(key,NOT_SET);
return v !== NOT_SET && !!predicate.call(context,v,key,iterable);};

filterSequence.get = function(key,notSetValue){
var v=iterable.get(key,NOT_SET);
return v !== NOT_SET && predicate.call(context,v,key,iterable)?
v:notSetValue;};}


filterSequence.__iterateUncached = function(fn,reverse){var this$0=this;
var iterations=0;
iterable.__iterate(function(v,k,c){
if(predicate.call(context,v,k,c)){
iterations++;
return fn(v,useKeys?k:iterations - 1,this$0);}},

reverse);
return iterations;};

filterSequence.__iteratorUncached = function(type,reverse){
var iterator=iterable.__iterator(ITERATE_ENTRIES,reverse);
var iterations=0;
return new src_Iterator__Iterator(function(){
while(true) {
var step=iterator.next();
if(step.done){
return step;}

var entry=step.value;
var key=entry[0];
var value=entry[1];
if(predicate.call(context,value,key,iterable)){
return iteratorValue(type,useKeys?key:iterations++,value,step);}}});};




return filterSequence;}



function countByFactory(iterable,grouper,context){
var groups=src_Map__Map().asMutable();
iterable.__iterate(function(v,k){
groups.update(
grouper.call(context,v,k,iterable),
0,
function(a){return a + 1;});});


return groups.asImmutable();}



function groupByFactory(iterable,grouper,context){
var isKeyedIter=isKeyed(iterable);
var groups=(isOrdered(iterable)?OrderedMap():src_Map__Map()).asMutable();
iterable.__iterate(function(v,k){
groups.update(
grouper.call(context,v,k,iterable),
function(a){return (a = a || [],a.push(isKeyedIter?[k,v]:v),a);});});


var coerce=iterableClass(iterable);
return groups.map(function(arr){return reify(iterable,coerce(arr));});}



function sliceFactory(iterable,begin,end,useKeys){
var originalSize=iterable.size;



if(begin !== undefined){
begin = begin | 0;}

if(end !== undefined){
end = end | 0;}


if(wholeSlice(begin,end,originalSize)){
return iterable;}


var resolvedBegin=resolveBegin(begin,originalSize);
var resolvedEnd=resolveEnd(end,originalSize);




if(resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd){
return sliceFactory(iterable.toSeq().cacheResult(),begin,end,useKeys);}






var resolvedSize=resolvedEnd - resolvedBegin;
var sliceSize;
if(resolvedSize === resolvedSize){
sliceSize = resolvedSize < 0?0:resolvedSize;}


var sliceSeq=makeSequence(iterable);



sliceSeq.size = sliceSize === 0?sliceSize:iterable.size && sliceSize || undefined;

if(!useKeys && isSeq(iterable) && sliceSize >= 0){
sliceSeq.get = function(index,notSetValue){
index = wrapIndex(this,index);
return index >= 0 && index < sliceSize?
iterable.get(index + resolvedBegin,notSetValue):
notSetValue;};}



sliceSeq.__iterateUncached = function(fn,reverse){var this$0=this;
if(sliceSize === 0){
return 0;}

if(reverse){
return this.cacheResult().__iterate(fn,reverse);}

var skipped=0;
var isSkipping=true;
var iterations=0;
iterable.__iterate(function(v,k){
if(!(isSkipping && (isSkipping = skipped++ < resolvedBegin))){
iterations++;
return fn(v,useKeys?k:iterations - 1,this$0) !== false && 
iterations !== sliceSize;}});


return iterations;};


sliceSeq.__iteratorUncached = function(type,reverse){
if(sliceSize !== 0 && reverse){
return this.cacheResult().__iterator(type,reverse);}


var iterator=sliceSize !== 0 && iterable.__iterator(type,reverse);
var skipped=0;
var iterations=0;
return new src_Iterator__Iterator(function(){
while(skipped++ < resolvedBegin) {
iterator.next();}

if(++iterations > sliceSize){
return iteratorDone();}

var step=iterator.next();
if(useKeys || type === ITERATE_VALUES){
return step;}else 
if(type === ITERATE_KEYS){
return iteratorValue(type,iterations - 1,undefined,step);}else 
{
return iteratorValue(type,iterations - 1,step.value[1],step);}});};




return sliceSeq;}



function takeWhileFactory(iterable,predicate,context){
var takeSequence=makeSequence(iterable);
takeSequence.__iterateUncached = function(fn,reverse){var this$0=this;
if(reverse){
return this.cacheResult().__iterate(fn,reverse);}

var iterations=0;
iterable.__iterate(function(v,k,c)
{return predicate.call(context,v,k,c) && ++iterations && fn(v,k,this$0);});

return iterations;};

takeSequence.__iteratorUncached = function(type,reverse){var this$0=this;
if(reverse){
return this.cacheResult().__iterator(type,reverse);}

var iterator=iterable.__iterator(ITERATE_ENTRIES,reverse);
var iterating=true;
return new src_Iterator__Iterator(function(){
if(!iterating){
return iteratorDone();}

var step=iterator.next();
if(step.done){
return step;}

var entry=step.value;
var k=entry[0];
var v=entry[1];
if(!predicate.call(context,v,k,this$0)){
iterating = false;
return iteratorDone();}

return type === ITERATE_ENTRIES?step:
iteratorValue(type,k,v,step);});};


return takeSequence;}



function skipWhileFactory(iterable,predicate,context,useKeys){
var skipSequence=makeSequence(iterable);
skipSequence.__iterateUncached = function(fn,reverse){var this$0=this;
if(reverse){
return this.cacheResult().__iterate(fn,reverse);}

var isSkipping=true;
var iterations=0;
iterable.__iterate(function(v,k,c){
if(!(isSkipping && (isSkipping = predicate.call(context,v,k,c)))){
iterations++;
return fn(v,useKeys?k:iterations - 1,this$0);}});


return iterations;};

skipSequence.__iteratorUncached = function(type,reverse){var this$0=this;
if(reverse){
return this.cacheResult().__iterator(type,reverse);}

var iterator=iterable.__iterator(ITERATE_ENTRIES,reverse);
var skipping=true;
var iterations=0;
return new src_Iterator__Iterator(function(){
var step,k,v;
do {
step = iterator.next();
if(step.done){
if(useKeys || type === ITERATE_VALUES){
return step;}else 
if(type === ITERATE_KEYS){
return iteratorValue(type,iterations++,undefined,step);}else 
{
return iteratorValue(type,iterations++,step.value[1],step);}}


var entry=step.value;
k = entry[0];
v = entry[1];
skipping && (skipping = predicate.call(context,v,k,this$0));}while(
skipping);
return type === ITERATE_ENTRIES?step:
iteratorValue(type,k,v,step);});};


return skipSequence;}



function concatFactory(iterable,values){
var isKeyedIterable=isKeyed(iterable);
var iters=[iterable].concat(values).map(function(v){
if(!isIterable(v)){
v = isKeyedIterable?
keyedSeqFromValue(v):
indexedSeqFromValue(Array.isArray(v)?v:[v]);}else 
if(isKeyedIterable){
v = KeyedIterable(v);}

return v;}).
filter(function(v){return v.size !== 0;});

if(iters.length === 0){
return iterable;}


if(iters.length === 1){
var singleton=iters[0];
if(singleton === iterable || 
isKeyedIterable && isKeyed(singleton) || 
isIndexed(iterable) && isIndexed(singleton)){
return singleton;}}



var concatSeq=new ArraySeq(iters);
if(isKeyedIterable){
concatSeq = concatSeq.toKeyedSeq();}else 
if(!isIndexed(iterable)){
concatSeq = concatSeq.toSetSeq();}

concatSeq = concatSeq.flatten(true);
concatSeq.size = iters.reduce(
function(sum,seq){
if(sum !== undefined){
var size=seq.size;
if(size !== undefined){
return sum + size;}}},



0);

return concatSeq;}



function flattenFactory(iterable,depth,useKeys){
var flatSequence=makeSequence(iterable);
flatSequence.__iterateUncached = function(fn,reverse){
var iterations=0;
var stopped=false;
function flatDeep(iter,currentDepth){var this$0=this;
iter.__iterate(function(v,k){
if((!depth || currentDepth < depth) && isIterable(v)){
flatDeep(v,currentDepth + 1);}else 
if(fn(v,useKeys?k:iterations++,this$0) === false){
stopped = true;}

return !stopped;},
reverse);}

flatDeep(iterable,0);
return iterations;};

flatSequence.__iteratorUncached = function(type,reverse){
var iterator=iterable.__iterator(type,reverse);
var stack=[];
var iterations=0;
return new src_Iterator__Iterator(function(){
while(iterator) {
var step=iterator.next();
if(step.done !== false){
iterator = stack.pop();
continue;}

var v=step.value;
if(type === ITERATE_ENTRIES){
v = v[1];}

if((!depth || stack.length < depth) && isIterable(v)){
stack.push(iterator);
iterator = v.__iterator(type,reverse);}else 
{
return useKeys?step:iteratorValue(type,iterations++,v,step);}}


return iteratorDone();});};


return flatSequence;}



function flatMapFactory(iterable,mapper,context){
var coerce=iterableClass(iterable);
return iterable.toSeq().map(
function(v,k){return coerce(mapper.call(context,v,k,iterable));}).
flatten(true);}



function interposeFactory(iterable,separator){
var interposedSequence=makeSequence(iterable);
interposedSequence.size = iterable.size && iterable.size * 2 - 1;
interposedSequence.__iterateUncached = function(fn,reverse){var this$0=this;
var iterations=0;
iterable.__iterate(function(v,k)
{return (!iterations || fn(separator,iterations++,this$0) !== false) && 
fn(v,iterations++,this$0) !== false;},
reverse);

return iterations;};

interposedSequence.__iteratorUncached = function(type,reverse){
var iterator=iterable.__iterator(ITERATE_VALUES,reverse);
var iterations=0;
var step;
return new src_Iterator__Iterator(function(){
if(!step || iterations % 2){
step = iterator.next();
if(step.done){
return step;}}


return iterations % 2?
iteratorValue(type,iterations++,separator):
iteratorValue(type,iterations++,step.value,step);});};


return interposedSequence;}



function sortFactory(iterable,comparator,mapper){
if(!comparator){
comparator = defaultComparator;}

var isKeyedIterable=isKeyed(iterable);
var index=0;
var entries=iterable.toSeq().map(
function(v,k){return [k,v,index++,mapper?mapper(v,k,iterable):v];}).
toArray();
entries.sort(function(a,b){return comparator(a[3],b[3]) || a[2] - b[2];}).forEach(
isKeyedIterable?
function(v,i){entries[i].length = 2;}:
function(v,i){entries[i] = v[1];});

return isKeyedIterable?KeyedSeq(entries):
isIndexed(iterable)?IndexedSeq(entries):
SetSeq(entries);}



function maxFactory(iterable,comparator,mapper){
if(!comparator){
comparator = defaultComparator;}

if(mapper){
var entry=iterable.toSeq().
map(function(v,k){return [v,mapper(v,k,iterable)];}).
reduce(function(a,b){return maxCompare(comparator,a[1],b[1])?b:a;});
return entry && entry[0];}else 
{
return iterable.reduce(function(a,b){return maxCompare(comparator,a,b)?b:a;});}}



function maxCompare(comparator,a,b){
var comp=comparator(b,a);


return comp === 0 && b !== a && (b === undefined || b === null || b !== b) || comp > 0;}



function zipWithFactory(keyIter,zipper,iters){
var zipSequence=makeSequence(keyIter);
zipSequence.size = new ArraySeq(iters).map(function(i){return i.size;}).min();


zipSequence.__iterate = function(fn,reverse){













var iterator=this.__iterator(ITERATE_VALUES,reverse);
var step;
var iterations=0;
while(!(step = iterator.next()).done) {
if(fn(step.value,iterations++,this) === false){
break;}}


return iterations;};

zipSequence.__iteratorUncached = function(type,reverse){
var iterators=iters.map(function(i)
{return (i = Iterable(i),getIterator(reverse?i.reverse():i));});

var iterations=0;
var isDone=false;
return new src_Iterator__Iterator(function(){
var steps;
if(!isDone){
steps = iterators.map(function(i){return i.next();});
isDone = steps.some(function(s){return s.done;});}

if(isDone){
return iteratorDone();}

return iteratorValue(
type,
iterations++,
zipper.apply(null,steps.map(function(s){return s.value;})));});};



return zipSequence;}





function reify(iter,seq){
return isSeq(iter)?seq:iter.constructor(seq);}


function validateEntry(entry){
if(entry !== Object(entry)){
throw new TypeError('Expected [K, V] tuple: ' + entry);}}



function resolveSize(iter){
assertNotInfinite(iter.size);
return ensureSize(iter);}


function iterableClass(iterable){
return isKeyed(iterable)?KeyedIterable:
isIndexed(iterable)?IndexedIterable:
SetIterable;}


function makeSequence(iterable){
return Object.create(
(
isKeyed(iterable)?KeyedSeq:
isIndexed(iterable)?IndexedSeq:
SetSeq).
prototype);}



function cacheResultThrough(){
if(this._iter.cacheResult){
this._iter.cacheResult();
this.size = this._iter.size;
return this;}else 
{
return Seq.prototype.cacheResult.call(this);}}



function defaultComparator(a,b){
return a > b?1:a < b?-1:0;}


function forceIterator(keyPath){
var iter=getIterator(keyPath);
if(!iter){


if(!isArrayLike(keyPath)){
throw new TypeError('Expected iterable or array-like: ' + keyPath);}

iter = getIterator(Iterable(keyPath));}

return iter;}


createClass(src_Map__Map,KeyedCollection);



function src_Map__Map(value){
return value === null || value === undefined?emptyMap():
isMap(value) && !isOrdered(value)?value:
emptyMap().withMutations(function(map){
var iter=KeyedIterable(value);
assertNotInfinite(iter.size);
iter.forEach(function(v,k){return map.set(k,v);});});}



src_Map__Map.prototype.toString = function(){
return this.__toString('Map {','}');};




src_Map__Map.prototype.get = function(k,notSetValue){
return this._root?
this._root.get(0,undefined,k,notSetValue):
notSetValue;};




src_Map__Map.prototype.set = function(k,v){
return updateMap(this,k,v);};


src_Map__Map.prototype.setIn = function(keyPath,v){
return this.updateIn(keyPath,NOT_SET,function(){return v;});};


src_Map__Map.prototype.remove = function(k){
return updateMap(this,k,NOT_SET);};


src_Map__Map.prototype.deleteIn = function(keyPath){
return this.updateIn(keyPath,function(){return NOT_SET;});};


src_Map__Map.prototype.update = function(k,notSetValue,updater){
return arguments.length === 1?
k(this):
this.updateIn([k],notSetValue,updater);};


src_Map__Map.prototype.updateIn = function(keyPath,notSetValue,updater){
if(!updater){
updater = notSetValue;
notSetValue = undefined;}

var updatedValue=updateInDeepMap(
this,
forceIterator(keyPath),
notSetValue,
updater);

return updatedValue === NOT_SET?undefined:updatedValue;};


src_Map__Map.prototype.clear = function(){
if(this.size === 0){
return this;}

if(this.__ownerID){
this.size = 0;
this._root = null;
this.__hash = undefined;
this.__altered = true;
return this;}

return emptyMap();};




src_Map__Map.prototype.merge = function(){
return mergeIntoMapWith(this,undefined,arguments);};


src_Map__Map.prototype.mergeWith = function(merger){var iters=SLICE$0.call(arguments,1);
return mergeIntoMapWith(this,merger,iters);};


src_Map__Map.prototype.mergeIn = function(keyPath){var iters=SLICE$0.call(arguments,1);
return this.updateIn(
keyPath,
emptyMap(),
function(m){return typeof m.merge === 'function'?
m.merge.apply(m,iters):
iters[iters.length - 1];});};



src_Map__Map.prototype.mergeDeep = function(){
return mergeIntoMapWith(this,deepMerger(undefined),arguments);};


src_Map__Map.prototype.mergeDeepWith = function(merger){var iters=SLICE$0.call(arguments,1);
return mergeIntoMapWith(this,deepMerger(merger),iters);};


src_Map__Map.prototype.mergeDeepIn = function(keyPath){var iters=SLICE$0.call(arguments,1);
return this.updateIn(
keyPath,
emptyMap(),
function(m){return typeof m.mergeDeep === 'function'?
m.mergeDeep.apply(m,iters):
iters[iters.length - 1];});};



src_Map__Map.prototype.sort = function(comparator){

return OrderedMap(sortFactory(this,comparator));};


src_Map__Map.prototype.sortBy = function(mapper,comparator){

return OrderedMap(sortFactory(this,comparator,mapper));};




src_Map__Map.prototype.withMutations = function(fn){
var mutable=this.asMutable();
fn(mutable);
return mutable.wasAltered()?mutable.__ensureOwner(this.__ownerID):this;};


src_Map__Map.prototype.asMutable = function(){
return this.__ownerID?this:this.__ensureOwner(new OwnerID());};


src_Map__Map.prototype.asImmutable = function(){
return this.__ensureOwner();};


src_Map__Map.prototype.wasAltered = function(){
return this.__altered;};


src_Map__Map.prototype.__iterator = function(type,reverse){
return new MapIterator(this,type,reverse);};


src_Map__Map.prototype.__iterate = function(fn,reverse){var this$0=this;
var iterations=0;
this._root && this._root.iterate(function(entry){
iterations++;
return fn(entry[1],entry[0],this$0);},
reverse);
return iterations;};


src_Map__Map.prototype.__ensureOwner = function(ownerID){
if(ownerID === this.__ownerID){
return this;}

if(!ownerID){
this.__ownerID = ownerID;
this.__altered = false;
return this;}

return makeMap(this.size,this._root,ownerID,this.__hash);};



function isMap(maybeMap){
return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);}


src_Map__Map.isMap = isMap;

var IS_MAP_SENTINEL='@@__IMMUTABLE_MAP__@@';

var MapPrototype=src_Map__Map.prototype;
MapPrototype[IS_MAP_SENTINEL] = true;
MapPrototype[DELETE] = MapPrototype.remove;
MapPrototype.removeIn = MapPrototype.deleteIn;






function ArrayMapNode(ownerID,entries){
this.ownerID = ownerID;
this.entries = entries;}


ArrayMapNode.prototype.get = function(shift,keyHash,key,notSetValue){
var entries=this.entries;
for(var ii=0,len=entries.length;ii < len;ii++) {
if(is(key,entries[ii][0])){
return entries[ii][1];}}


return notSetValue;};


ArrayMapNode.prototype.update = function(ownerID,shift,keyHash,key,value,didChangeSize,didAlter){
var removed=value === NOT_SET;

var entries=this.entries;
var idx=0;
for(var len=entries.length;idx < len;idx++) {
if(is(key,entries[idx][0])){
break;}}


var exists=idx < len;

if(exists?entries[idx][1] === value:removed){
return this;}


SetRef(didAlter);
(removed || !exists) && SetRef(didChangeSize);

if(removed && entries.length === 1){
return;}


if(!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE){
return createNodes(ownerID,entries,key,value);}


var isEditable=ownerID && ownerID === this.ownerID;
var newEntries=isEditable?entries:arrCopy(entries);

if(exists){
if(removed){
idx === len - 1?newEntries.pop():newEntries[idx] = newEntries.pop();}else 
{
newEntries[idx] = [key,value];}}else 

{
newEntries.push([key,value]);}


if(isEditable){
this.entries = newEntries;
return this;}


return new ArrayMapNode(ownerID,newEntries);};





function BitmapIndexedNode(ownerID,bitmap,nodes){
this.ownerID = ownerID;
this.bitmap = bitmap;
this.nodes = nodes;}


BitmapIndexedNode.prototype.get = function(shift,keyHash,key,notSetValue){
if(keyHash === undefined){
keyHash = hash(key);}

var bit=1 << ((shift === 0?keyHash:keyHash >>> shift) & MASK);
var bitmap=this.bitmap;
return (bitmap & bit) === 0?notSetValue:
this.nodes[popCount(bitmap & bit - 1)].get(shift + SHIFT,keyHash,key,notSetValue);};


BitmapIndexedNode.prototype.update = function(ownerID,shift,keyHash,key,value,didChangeSize,didAlter){
if(keyHash === undefined){
keyHash = hash(key);}

var keyHashFrag=(shift === 0?keyHash:keyHash >>> shift) & MASK;
var bit=1 << keyHashFrag;
var bitmap=this.bitmap;
var exists=(bitmap & bit) !== 0;

if(!exists && value === NOT_SET){
return this;}


var idx=popCount(bitmap & bit - 1);
var nodes=this.nodes;
var node=exists?nodes[idx]:undefined;
var newNode=updateNode(node,ownerID,shift + SHIFT,keyHash,key,value,didChangeSize,didAlter);

if(newNode === node){
return this;}


if(!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE){
return expandNodes(ownerID,nodes,bitmap,keyHashFrag,newNode);}


if(exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])){
return nodes[idx ^ 1];}


if(exists && newNode && nodes.length === 1 && isLeafNode(newNode)){
return newNode;}


var isEditable=ownerID && ownerID === this.ownerID;
var newBitmap=exists?newNode?bitmap:bitmap ^ bit:bitmap | bit;
var newNodes=exists?newNode?
setIn(nodes,idx,newNode,isEditable):
spliceOut(nodes,idx,isEditable):
spliceIn(nodes,idx,newNode,isEditable);

if(isEditable){
this.bitmap = newBitmap;
this.nodes = newNodes;
return this;}


return new BitmapIndexedNode(ownerID,newBitmap,newNodes);};





function HashArrayMapNode(ownerID,count,nodes){
this.ownerID = ownerID;
this.count = count;
this.nodes = nodes;}


HashArrayMapNode.prototype.get = function(shift,keyHash,key,notSetValue){
if(keyHash === undefined){
keyHash = hash(key);}

var idx=(shift === 0?keyHash:keyHash >>> shift) & MASK;
var node=this.nodes[idx];
return node?node.get(shift + SHIFT,keyHash,key,notSetValue):notSetValue;};


HashArrayMapNode.prototype.update = function(ownerID,shift,keyHash,key,value,didChangeSize,didAlter){
if(keyHash === undefined){
keyHash = hash(key);}

var idx=(shift === 0?keyHash:keyHash >>> shift) & MASK;
var removed=value === NOT_SET;
var nodes=this.nodes;
var node=nodes[idx];

if(removed && !node){
return this;}


var newNode=updateNode(node,ownerID,shift + SHIFT,keyHash,key,value,didChangeSize,didAlter);
if(newNode === node){
return this;}


var newCount=this.count;
if(!node){
newCount++;}else 
if(!newNode){
newCount--;
if(newCount < MIN_HASH_ARRAY_MAP_SIZE){
return packNodes(ownerID,nodes,newCount,idx);}}



var isEditable=ownerID && ownerID === this.ownerID;
var newNodes=setIn(nodes,idx,newNode,isEditable);

if(isEditable){
this.count = newCount;
this.nodes = newNodes;
return this;}


return new HashArrayMapNode(ownerID,newCount,newNodes);};





function HashCollisionNode(ownerID,keyHash,entries){
this.ownerID = ownerID;
this.keyHash = keyHash;
this.entries = entries;}


HashCollisionNode.prototype.get = function(shift,keyHash,key,notSetValue){
var entries=this.entries;
for(var ii=0,len=entries.length;ii < len;ii++) {
if(is(key,entries[ii][0])){
return entries[ii][1];}}


return notSetValue;};


HashCollisionNode.prototype.update = function(ownerID,shift,keyHash,key,value,didChangeSize,didAlter){
if(keyHash === undefined){
keyHash = hash(key);}


var removed=value === NOT_SET;

if(keyHash !== this.keyHash){
if(removed){
return this;}

SetRef(didAlter);
SetRef(didChangeSize);
return mergeIntoNode(this,ownerID,shift,keyHash,[key,value]);}


var entries=this.entries;
var idx=0;
for(var len=entries.length;idx < len;idx++) {
if(is(key,entries[idx][0])){
break;}}


var exists=idx < len;

if(exists?entries[idx][1] === value:removed){
return this;}


SetRef(didAlter);
(removed || !exists) && SetRef(didChangeSize);

if(removed && len === 2){
return new ValueNode(ownerID,this.keyHash,entries[idx ^ 1]);}


var isEditable=ownerID && ownerID === this.ownerID;
var newEntries=isEditable?entries:arrCopy(entries);

if(exists){
if(removed){
idx === len - 1?newEntries.pop():newEntries[idx] = newEntries.pop();}else 
{
newEntries[idx] = [key,value];}}else 

{
newEntries.push([key,value]);}


if(isEditable){
this.entries = newEntries;
return this;}


return new HashCollisionNode(ownerID,this.keyHash,newEntries);};





function ValueNode(ownerID,keyHash,entry){
this.ownerID = ownerID;
this.keyHash = keyHash;
this.entry = entry;}


ValueNode.prototype.get = function(shift,keyHash,key,notSetValue){
return is(key,this.entry[0])?this.entry[1]:notSetValue;};


ValueNode.prototype.update = function(ownerID,shift,keyHash,key,value,didChangeSize,didAlter){
var removed=value === NOT_SET;
var keyMatch=is(key,this.entry[0]);
if(keyMatch?value === this.entry[1]:removed){
return this;}


SetRef(didAlter);

if(removed){
SetRef(didChangeSize);
return;}


if(keyMatch){
if(ownerID && ownerID === this.ownerID){
this.entry[1] = value;
return this;}

return new ValueNode(ownerID,this.keyHash,[key,value]);}


SetRef(didChangeSize);
return mergeIntoNode(this,ownerID,shift,hash(key),[key,value]);};






ArrayMapNode.prototype.iterate = 
HashCollisionNode.prototype.iterate = function(fn,reverse){
var entries=this.entries;
for(var ii=0,maxIndex=entries.length - 1;ii <= maxIndex;ii++) {
if(fn(entries[reverse?maxIndex - ii:ii]) === false){
return false;}}};




BitmapIndexedNode.prototype.iterate = 
HashArrayMapNode.prototype.iterate = function(fn,reverse){
var nodes=this.nodes;
for(var ii=0,maxIndex=nodes.length - 1;ii <= maxIndex;ii++) {
var node=nodes[reverse?maxIndex - ii:ii];
if(node && node.iterate(fn,reverse) === false){
return false;}}};




ValueNode.prototype.iterate = function(fn,reverse){
return fn(this.entry);};


createClass(MapIterator,src_Iterator__Iterator);

function MapIterator(map,type,reverse){
this._type = type;
this._reverse = reverse;
this._stack = map._root && mapIteratorFrame(map._root);}


MapIterator.prototype.next = function(){
var type=this._type;
var stack=this._stack;
while(stack) {
var node=stack.node;
var index=stack.index++;
var maxIndex;
if(node.entry){
if(index === 0){
return mapIteratorValue(type,node.entry);}}else 

if(node.entries){
maxIndex = node.entries.length - 1;
if(index <= maxIndex){
return mapIteratorValue(type,node.entries[this._reverse?maxIndex - index:index]);}}else 

{
maxIndex = node.nodes.length - 1;
if(index <= maxIndex){
var subNode=node.nodes[this._reverse?maxIndex - index:index];
if(subNode){
if(subNode.entry){
return mapIteratorValue(type,subNode.entry);}

stack = this._stack = mapIteratorFrame(subNode,stack);}

continue;}}


stack = this._stack = this._stack.__prev;}

return iteratorDone();};



function mapIteratorValue(type,entry){
return iteratorValue(type,entry[0],entry[1]);}


function mapIteratorFrame(node,prev){
return {
node:node,
index:0,
__prev:prev};}



function makeMap(size,root,ownerID,hash){
var map=Object.create(MapPrototype);
map.size = size;
map._root = root;
map.__ownerID = ownerID;
map.__hash = hash;
map.__altered = false;
return map;}


var EMPTY_MAP;
function emptyMap(){
return EMPTY_MAP || (EMPTY_MAP = makeMap(0));}


function updateMap(map,k,v){
var newRoot;
var newSize;
if(!map._root){
if(v === NOT_SET){
return map;}

newSize = 1;
newRoot = new ArrayMapNode(map.__ownerID,[[k,v]]);}else 
{
var didChangeSize=MakeRef(CHANGE_LENGTH);
var didAlter=MakeRef(DID_ALTER);
newRoot = updateNode(map._root,map.__ownerID,0,undefined,k,v,didChangeSize,didAlter);
if(!didAlter.value){
return map;}

newSize = map.size + (didChangeSize.value?v === NOT_SET?-1:1:0);}

if(map.__ownerID){
map.size = newSize;
map._root = newRoot;
map.__hash = undefined;
map.__altered = true;
return map;}

return newRoot?makeMap(newSize,newRoot):emptyMap();}


function updateNode(node,ownerID,shift,keyHash,key,value,didChangeSize,didAlter){
if(!node){
if(value === NOT_SET){
return node;}

SetRef(didAlter);
SetRef(didChangeSize);
return new ValueNode(ownerID,keyHash,[key,value]);}

return node.update(ownerID,shift,keyHash,key,value,didChangeSize,didAlter);}


function isLeafNode(node){
return node.constructor === ValueNode || node.constructor === HashCollisionNode;}


function mergeIntoNode(node,ownerID,shift,keyHash,entry){
if(node.keyHash === keyHash){
return new HashCollisionNode(ownerID,keyHash,[node.entry,entry]);}


var idx1=(shift === 0?node.keyHash:node.keyHash >>> shift) & MASK;
var idx2=(shift === 0?keyHash:keyHash >>> shift) & MASK;

var newNode;
var nodes=idx1 === idx2?
[mergeIntoNode(node,ownerID,shift + SHIFT,keyHash,entry)]:(
newNode = new ValueNode(ownerID,keyHash,entry),idx1 < idx2?[node,newNode]:[newNode,node]);

return new BitmapIndexedNode(ownerID,1 << idx1 | 1 << idx2,nodes);}


function createNodes(ownerID,entries,key,value){
if(!ownerID){
ownerID = new OwnerID();}

var node=new ValueNode(ownerID,hash(key),[key,value]);
for(var ii=0;ii < entries.length;ii++) {
var entry=entries[ii];
node = node.update(ownerID,0,undefined,entry[0],entry[1]);}

return node;}


function packNodes(ownerID,nodes,count,excluding){
var bitmap=0;
var packedII=0;
var packedNodes=new Array(count);
for(var ii=0,bit=1,len=nodes.length;ii < len;ii++,bit <<= 1) {
var node=nodes[ii];
if(node !== undefined && ii !== excluding){
bitmap |= bit;
packedNodes[packedII++] = node;}}


return new BitmapIndexedNode(ownerID,bitmap,packedNodes);}


function expandNodes(ownerID,nodes,bitmap,including,node){
var count=0;
var expandedNodes=new Array(SIZE);
for(var ii=0;bitmap !== 0;ii++,bitmap >>>= 1) {
expandedNodes[ii] = bitmap & 1?nodes[count++]:undefined;}

expandedNodes[including] = node;
return new HashArrayMapNode(ownerID,count + 1,expandedNodes);}


function mergeIntoMapWith(map,merger,iterables){
var iters=[];
for(var ii=0;ii < iterables.length;ii++) {
var value=iterables[ii];
var iter=KeyedIterable(value);
if(!isIterable(value)){
iter = iter.map(function(v){return fromJS(v);});}

iters.push(iter);}

return mergeIntoCollectionWith(map,merger,iters);}


function deepMerger(merger){
return function(existing,value,key)
{return existing && existing.mergeDeepWith && isIterable(value)?
existing.mergeDeepWith(merger,value):
merger?merger(existing,value,key):value;};}


function mergeIntoCollectionWith(collection,merger,iters){
iters = iters.filter(function(x){return x.size !== 0;});
if(iters.length === 0){
return collection;}

if(collection.size === 0 && !collection.__ownerID && iters.length === 1){
return collection.constructor(iters[0]);}

return collection.withMutations(function(collection){
var mergeIntoMap=merger?
function(value,key){
collection.update(key,NOT_SET,function(existing)
{return existing === NOT_SET?value:merger(existing,value,key);});}:


function(value,key){
collection.set(key,value);};

for(var ii=0;ii < iters.length;ii++) {
iters[ii].forEach(mergeIntoMap);}});}




function updateInDeepMap(existing,keyPathIter,notSetValue,updater){
var isNotSet=existing === NOT_SET;
var step=keyPathIter.next();
if(step.done){
var existingValue=isNotSet?notSetValue:existing;
var newValue=updater(existingValue);
return newValue === existingValue?existing:newValue;}

invariant(
isNotSet || existing && existing.set,
'invalid keyPath');

var key=step.value;
var nextExisting=isNotSet?NOT_SET:existing.get(key,NOT_SET);
var nextUpdated=updateInDeepMap(
nextExisting,
keyPathIter,
notSetValue,
updater);

return nextUpdated === nextExisting?existing:
nextUpdated === NOT_SET?existing.remove(key):
(isNotSet?emptyMap():existing).set(key,nextUpdated);}


function popCount(x){
x = x - (x >> 1 & 0x55555555);
x = (x & 0x33333333) + (x >> 2 & 0x33333333);
x = x + (x >> 4) & 0x0f0f0f0f;
x = x + (x >> 8);
x = x + (x >> 16);
return x & 0x7f;}


function setIn(array,idx,val,canEdit){
var newArray=canEdit?array:arrCopy(array);
newArray[idx] = val;
return newArray;}


function spliceIn(array,idx,val,canEdit){
var newLen=array.length + 1;
if(canEdit && idx + 1 === newLen){
array[idx] = val;
return array;}

var newArray=new Array(newLen);
var after=0;
for(var ii=0;ii < newLen;ii++) {
if(ii === idx){
newArray[ii] = val;
after = -1;}else 
{
newArray[ii] = array[ii + after];}}


return newArray;}


function spliceOut(array,idx,canEdit){
var newLen=array.length - 1;
if(canEdit && idx === newLen){
array.pop();
return array;}

var newArray=new Array(newLen);
var after=0;
for(var ii=0;ii < newLen;ii++) {
if(ii === idx){
after = 1;}

newArray[ii] = array[ii + after];}

return newArray;}


var MAX_ARRAY_MAP_SIZE=SIZE / 4;
var MAX_BITMAP_INDEXED_SIZE=SIZE / 2;
var MIN_HASH_ARRAY_MAP_SIZE=SIZE / 4;

createClass(List,IndexedCollection);



function List(value){
var empty=emptyList();
if(value === null || value === undefined){
return empty;}

if(isList(value)){
return value;}

var iter=IndexedIterable(value);
var size=iter.size;
if(size === 0){
return empty;}

assertNotInfinite(size);
if(size > 0 && size < SIZE){
return makeList(0,size,SHIFT,null,new VNode(iter.toArray()));}

return empty.withMutations(function(list){
list.setSize(size);
iter.forEach(function(v,i){return list.set(i,v);});});}



List.of = function(){
return this(arguments);};


List.prototype.toString = function(){
return this.__toString('List [',']');};




List.prototype.get = function(index,notSetValue){
index = wrapIndex(this,index);
if(index >= 0 && index < this.size){
index += this._origin;
var node=listNodeFor(this,index);
return node && node.array[index & MASK];}

return notSetValue;};




List.prototype.set = function(index,value){
return updateList(this,index,value);};


List.prototype.remove = function(index){
return !this.has(index)?this:
index === 0?this.shift():
index === this.size - 1?this.pop():
this.splice(index,1);};


List.prototype.clear = function(){
if(this.size === 0){
return this;}

if(this.__ownerID){
this.size = this._origin = this._capacity = 0;
this._level = SHIFT;
this._root = this._tail = null;
this.__hash = undefined;
this.__altered = true;
return this;}

return emptyList();};


List.prototype.push = function(){
var values=arguments;
var oldSize=this.size;
return this.withMutations(function(list){
setListBounds(list,0,oldSize + values.length);
for(var ii=0;ii < values.length;ii++) {
list.set(oldSize + ii,values[ii]);}});};




List.prototype.pop = function(){
return setListBounds(this,0,-1);};


List.prototype.unshift = function(){
var values=arguments;
return this.withMutations(function(list){
setListBounds(list,-values.length);
for(var ii=0;ii < values.length;ii++) {
list.set(ii,values[ii]);}});};




List.prototype.shift = function(){
return setListBounds(this,1);};




List.prototype.merge = function(){
return mergeIntoListWith(this,undefined,arguments);};


List.prototype.mergeWith = function(merger){var iters=SLICE$0.call(arguments,1);
return mergeIntoListWith(this,merger,iters);};


List.prototype.mergeDeep = function(){
return mergeIntoListWith(this,deepMerger(undefined),arguments);};


List.prototype.mergeDeepWith = function(merger){var iters=SLICE$0.call(arguments,1);
return mergeIntoListWith(this,deepMerger(merger),iters);};


List.prototype.setSize = function(size){
return setListBounds(this,0,size);};




List.prototype.slice = function(begin,end){
var size=this.size;
if(wholeSlice(begin,end,size)){
return this;}

return setListBounds(
this,
resolveBegin(begin,size),
resolveEnd(end,size));};



List.prototype.__iterator = function(type,reverse){
var index=0;
var values=iterateList(this,reverse);
return new src_Iterator__Iterator(function(){
var value=values();
return value === DONE?
iteratorDone():
iteratorValue(type,index++,value);});};



List.prototype.__iterate = function(fn,reverse){
var index=0;
var values=iterateList(this,reverse);
var value;
while((value = values()) !== DONE) {
if(fn(value,index++,this) === false){
break;}}


return index;};


List.prototype.__ensureOwner = function(ownerID){
if(ownerID === this.__ownerID){
return this;}

if(!ownerID){
this.__ownerID = ownerID;
return this;}

return makeList(this._origin,this._capacity,this._level,this._root,this._tail,ownerID,this.__hash);};



function isList(maybeList){
return !!(maybeList && maybeList[IS_LIST_SENTINEL]);}


List.isList = isList;

var IS_LIST_SENTINEL='@@__IMMUTABLE_LIST__@@';

var ListPrototype=List.prototype;
ListPrototype[IS_LIST_SENTINEL] = true;
ListPrototype[DELETE] = ListPrototype.remove;
ListPrototype.setIn = MapPrototype.setIn;
ListPrototype.deleteIn = 
ListPrototype.removeIn = MapPrototype.removeIn;
ListPrototype.update = MapPrototype.update;
ListPrototype.updateIn = MapPrototype.updateIn;
ListPrototype.mergeIn = MapPrototype.mergeIn;
ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
ListPrototype.withMutations = MapPrototype.withMutations;
ListPrototype.asMutable = MapPrototype.asMutable;
ListPrototype.asImmutable = MapPrototype.asImmutable;
ListPrototype.wasAltered = MapPrototype.wasAltered;



function VNode(array,ownerID){
this.array = array;
this.ownerID = ownerID;}




VNode.prototype.removeBefore = function(ownerID,level,index){
if(index === level?1 << level:0 || this.array.length === 0){
return this;}

var originIndex=index >>> level & MASK;
if(originIndex >= this.array.length){
return new VNode([],ownerID);}

var removingFirst=originIndex === 0;
var newChild;
if(level > 0){
var oldChild=this.array[originIndex];
newChild = oldChild && oldChild.removeBefore(ownerID,level - SHIFT,index);
if(newChild === oldChild && removingFirst){
return this;}}


if(removingFirst && !newChild){
return this;}

var editable=editableVNode(this,ownerID);
if(!removingFirst){
for(var ii=0;ii < originIndex;ii++) {
editable.array[ii] = undefined;}}


if(newChild){
editable.array[originIndex] = newChild;}

return editable;};


VNode.prototype.removeAfter = function(ownerID,level,index){
if(index === (level?1 << level:0) || this.array.length === 0){
return this;}

var sizeIndex=index - 1 >>> level & MASK;
if(sizeIndex >= this.array.length){
return this;}


var newChild;
if(level > 0){
var oldChild=this.array[sizeIndex];
newChild = oldChild && oldChild.removeAfter(ownerID,level - SHIFT,index);
if(newChild === oldChild && sizeIndex === this.array.length - 1){
return this;}}



var editable=editableVNode(this,ownerID);
editable.array.splice(sizeIndex + 1);
if(newChild){
editable.array[sizeIndex] = newChild;}

return editable;};




var DONE={};

function iterateList(list,reverse){
var left=list._origin;
var right=list._capacity;
var tailPos=getTailOffset(right);
var tail=list._tail;

return iterateNodeOrLeaf(list._root,list._level,0);

function iterateNodeOrLeaf(node,level,offset){
return level === 0?
iterateLeaf(node,offset):
iterateNode(node,level,offset);}


function iterateLeaf(node,offset){
var array=offset === tailPos?tail && tail.array:node && node.array;
var from=offset > left?0:left - offset;
var to=right - offset;
if(to > SIZE){
to = SIZE;}

return function(){
if(from === to){
return DONE;}

var idx=reverse?--to:from++;
return array && array[idx];};}



function iterateNode(node,level,offset){
var values;
var array=node && node.array;
var from=offset > left?0:left - offset >> level;
var to=(right - offset >> level) + 1;
if(to > SIZE){
to = SIZE;}

return function(){
do {
if(values){
var value=values();
if(value !== DONE){
return value;}

values = null;}

if(from === to){
return DONE;}

var idx=reverse?--to:from++;
values = iterateNodeOrLeaf(
array && array[idx],level - SHIFT,offset + (idx << level));}while(

true);};}}




function makeList(origin,capacity,level,root,tail,ownerID,hash){
var list=Object.create(ListPrototype);
list.size = capacity - origin;
list._origin = origin;
list._capacity = capacity;
list._level = level;
list._root = root;
list._tail = tail;
list.__ownerID = ownerID;
list.__hash = hash;
list.__altered = false;
return list;}


var EMPTY_LIST;
function emptyList(){
return EMPTY_LIST || (EMPTY_LIST = makeList(0,0,SHIFT));}


function updateList(list,index,value){
index = wrapIndex(list,index);

if(index !== index){
return list;}


if(index >= list.size || index < 0){
return list.withMutations(function(list){
index < 0?
setListBounds(list,index).set(0,value):
setListBounds(list,0,index + 1).set(index,value);});}



index += list._origin;

var newTail=list._tail;
var newRoot=list._root;
var didAlter=MakeRef(DID_ALTER);
if(index >= getTailOffset(list._capacity)){
newTail = updateVNode(newTail,list.__ownerID,0,index,value,didAlter);}else 
{
newRoot = updateVNode(newRoot,list.__ownerID,list._level,index,value,didAlter);}


if(!didAlter.value){
return list;}


if(list.__ownerID){
list._root = newRoot;
list._tail = newTail;
list.__hash = undefined;
list.__altered = true;
return list;}

return makeList(list._origin,list._capacity,list._level,newRoot,newTail);}


function updateVNode(node,ownerID,level,index,value,didAlter){
var idx=index >>> level & MASK;
var nodeHas=node && idx < node.array.length;
if(!nodeHas && value === undefined){
return node;}


var newNode;

if(level > 0){
var lowerNode=node && node.array[idx];
var newLowerNode=updateVNode(lowerNode,ownerID,level - SHIFT,index,value,didAlter);
if(newLowerNode === lowerNode){
return node;}

newNode = editableVNode(node,ownerID);
newNode.array[idx] = newLowerNode;
return newNode;}


if(nodeHas && node.array[idx] === value){
return node;}


SetRef(didAlter);

newNode = editableVNode(node,ownerID);
if(value === undefined && idx === newNode.array.length - 1){
newNode.array.pop();}else 
{
newNode.array[idx] = value;}

return newNode;}


function editableVNode(node,ownerID){
if(ownerID && node && ownerID === node.ownerID){
return node;}

return new VNode(node?node.array.slice():[],ownerID);}


function listNodeFor(list,rawIndex){
if(rawIndex >= getTailOffset(list._capacity)){
return list._tail;}

if(rawIndex < 1 << list._level + SHIFT){
var node=list._root;
var level=list._level;
while(node && level > 0) {
node = node.array[rawIndex >>> level & MASK];
level -= SHIFT;}

return node;}}



function setListBounds(list,begin,end){


if(begin !== undefined){
begin = begin | 0;}

if(end !== undefined){
end = end | 0;}

var owner=list.__ownerID || new OwnerID();
var oldOrigin=list._origin;
var oldCapacity=list._capacity;
var newOrigin=oldOrigin + begin;
var newCapacity=end === undefined?oldCapacity:end < 0?oldCapacity + end:oldOrigin + end;
if(newOrigin === oldOrigin && newCapacity === oldCapacity){
return list;}



if(newOrigin >= newCapacity){
return list.clear();}


var newLevel=list._level;
var newRoot=list._root;


var offsetShift=0;
while(newOrigin + offsetShift < 0) {
newRoot = new VNode(newRoot && newRoot.array.length?[undefined,newRoot]:[],owner);
newLevel += SHIFT;
offsetShift += 1 << newLevel;}

if(offsetShift){
newOrigin += offsetShift;
oldOrigin += offsetShift;
newCapacity += offsetShift;
oldCapacity += offsetShift;}


var oldTailOffset=getTailOffset(oldCapacity);
var newTailOffset=getTailOffset(newCapacity);


while(newTailOffset >= 1 << newLevel + SHIFT) {
newRoot = new VNode(newRoot && newRoot.array.length?[newRoot]:[],owner);
newLevel += SHIFT;}



var oldTail=list._tail;
var newTail=newTailOffset < oldTailOffset?
listNodeFor(list,newCapacity - 1):
newTailOffset > oldTailOffset?new VNode([],owner):oldTail;


if(oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length){
newRoot = editableVNode(newRoot,owner);
var node=newRoot;
for(var level=newLevel;level > SHIFT;level -= SHIFT) {
var idx=oldTailOffset >>> level & MASK;
node = node.array[idx] = editableVNode(node.array[idx],owner);}

node.array[oldTailOffset >>> SHIFT & MASK] = oldTail;}



if(newCapacity < oldCapacity){
newTail = newTail && newTail.removeAfter(owner,0,newCapacity);}



if(newOrigin >= newTailOffset){
newOrigin -= newTailOffset;
newCapacity -= newTailOffset;
newLevel = SHIFT;
newRoot = null;
newTail = newTail && newTail.removeBefore(owner,0,newOrigin);}else 


if(newOrigin > oldOrigin || newTailOffset < oldTailOffset){
offsetShift = 0;


while(newRoot) {
var beginIndex=newOrigin >>> newLevel & MASK;
if(beginIndex !== newTailOffset >>> newLevel & MASK){
break;}

if(beginIndex){
offsetShift += (1 << newLevel) * beginIndex;}

newLevel -= SHIFT;
newRoot = newRoot.array[beginIndex];}



if(newRoot && newOrigin > oldOrigin){
newRoot = newRoot.removeBefore(owner,newLevel,newOrigin - offsetShift);}

if(newRoot && newTailOffset < oldTailOffset){
newRoot = newRoot.removeAfter(owner,newLevel,newTailOffset - offsetShift);}

if(offsetShift){
newOrigin -= offsetShift;
newCapacity -= offsetShift;}}



if(list.__ownerID){
list.size = newCapacity - newOrigin;
list._origin = newOrigin;
list._capacity = newCapacity;
list._level = newLevel;
list._root = newRoot;
list._tail = newTail;
list.__hash = undefined;
list.__altered = true;
return list;}

return makeList(newOrigin,newCapacity,newLevel,newRoot,newTail);}


function mergeIntoListWith(list,merger,iterables){
var iters=[];
var maxSize=0;
for(var ii=0;ii < iterables.length;ii++) {
var value=iterables[ii];
var iter=IndexedIterable(value);
if(iter.size > maxSize){
maxSize = iter.size;}

if(!isIterable(value)){
iter = iter.map(function(v){return fromJS(v);});}

iters.push(iter);}

if(maxSize > list.size){
list = list.setSize(maxSize);}

return mergeIntoCollectionWith(list,merger,iters);}


function getTailOffset(size){
return size < SIZE?0:size - 1 >>> SHIFT << SHIFT;}


createClass(OrderedMap,src_Map__Map);



function OrderedMap(value){
return value === null || value === undefined?emptyOrderedMap():
isOrderedMap(value)?value:
emptyOrderedMap().withMutations(function(map){
var iter=KeyedIterable(value);
assertNotInfinite(iter.size);
iter.forEach(function(v,k){return map.set(k,v);});});}



OrderedMap.of = function(){
return this(arguments);};


OrderedMap.prototype.toString = function(){
return this.__toString('OrderedMap {','}');};




OrderedMap.prototype.get = function(k,notSetValue){
var index=this._map.get(k);
return index !== undefined?this._list.get(index)[1]:notSetValue;};




OrderedMap.prototype.clear = function(){
if(this.size === 0){
return this;}

if(this.__ownerID){
this.size = 0;
this._map.clear();
this._list.clear();
return this;}

return emptyOrderedMap();};


OrderedMap.prototype.set = function(k,v){
return updateOrderedMap(this,k,v);};


OrderedMap.prototype.remove = function(k){
return updateOrderedMap(this,k,NOT_SET);};


OrderedMap.prototype.wasAltered = function(){
return this._map.wasAltered() || this._list.wasAltered();};


OrderedMap.prototype.__iterate = function(fn,reverse){var this$0=this;
return this._list.__iterate(
function(entry){return entry && fn(entry[1],entry[0],this$0);},
reverse);};



OrderedMap.prototype.__iterator = function(type,reverse){
return this._list.fromEntrySeq().__iterator(type,reverse);};


OrderedMap.prototype.__ensureOwner = function(ownerID){
if(ownerID === this.__ownerID){
return this;}

var newMap=this._map.__ensureOwner(ownerID);
var newList=this._list.__ensureOwner(ownerID);
if(!ownerID){
this.__ownerID = ownerID;
this._map = newMap;
this._list = newList;
return this;}

return makeOrderedMap(newMap,newList,ownerID,this.__hash);};



function isOrderedMap(maybeOrderedMap){
return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);}


OrderedMap.isOrderedMap = isOrderedMap;

OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;
OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;



function makeOrderedMap(map,list,ownerID,hash){
var omap=Object.create(OrderedMap.prototype);
omap.size = map?map.size:0;
omap._map = map;
omap._list = list;
omap.__ownerID = ownerID;
omap.__hash = hash;
return omap;}


var EMPTY_ORDERED_MAP;
function emptyOrderedMap(){
return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(),emptyList()));}


function updateOrderedMap(omap,k,v){
var map=omap._map;
var list=omap._list;
var i=map.get(k);
var has=i !== undefined;
var newMap;
var newList;
if(v === NOT_SET){
if(!has){
return omap;}

if(list.size >= SIZE && list.size >= map.size * 2){
newList = list.filter(function(entry,idx){return entry !== undefined && i !== idx;});
newMap = newList.toKeyedSeq().map(function(entry){return entry[0];}).flip().toMap();
if(omap.__ownerID){
newMap.__ownerID = newList.__ownerID = omap.__ownerID;}}else 

{
newMap = map.remove(k);
newList = i === list.size - 1?list.pop():list.set(i,undefined);}}else 

{
if(has){
if(v === list.get(i)[1]){
return omap;}

newMap = map;
newList = list.set(i,[k,v]);}else 
{
newMap = map.set(k,list.size);
newList = list.set(list.size,[k,v]);}}


if(omap.__ownerID){
omap.size = newMap.size;
omap._map = newMap;
omap._list = newList;
omap.__hash = undefined;
return omap;}

return makeOrderedMap(newMap,newList);}


createClass(Stack,IndexedCollection);



function Stack(value){
return value === null || value === undefined?emptyStack():
isStack(value)?value:
emptyStack().unshiftAll(value);}


Stack.of = function(){
return this(arguments);};


Stack.prototype.toString = function(){
return this.__toString('Stack [',']');};




Stack.prototype.get = function(index,notSetValue){
var head=this._head;
index = wrapIndex(this,index);
while(head && index--) {
head = head.next;}

return head?head.value:notSetValue;};


Stack.prototype.peek = function(){
return this._head && this._head.value;};




Stack.prototype.push = function(){
if(arguments.length === 0){
return this;}

var newSize=this.size + arguments.length;
var head=this._head;
for(var ii=arguments.length - 1;ii >= 0;ii--) {
head = {
value:arguments[ii],
next:head};}


if(this.__ownerID){
this.size = newSize;
this._head = head;
this.__hash = undefined;
this.__altered = true;
return this;}

return makeStack(newSize,head);};


Stack.prototype.pushAll = function(iter){
iter = IndexedIterable(iter);
if(iter.size === 0){
return this;}

assertNotInfinite(iter.size);
var newSize=this.size;
var head=this._head;
iter.reverse().forEach(function(value){
newSize++;
head = {
value:value,
next:head};});


if(this.__ownerID){
this.size = newSize;
this._head = head;
this.__hash = undefined;
this.__altered = true;
return this;}

return makeStack(newSize,head);};


Stack.prototype.pop = function(){
return this.slice(1);};


Stack.prototype.unshift = function(){
return this.push.apply(this,arguments);};


Stack.prototype.unshiftAll = function(iter){
return this.pushAll(iter);};


Stack.prototype.shift = function(){
return this.pop.apply(this,arguments);};


Stack.prototype.clear = function(){
if(this.size === 0){
return this;}

if(this.__ownerID){
this.size = 0;
this._head = undefined;
this.__hash = undefined;
this.__altered = true;
return this;}

return emptyStack();};


Stack.prototype.slice = function(begin,end){
if(wholeSlice(begin,end,this.size)){
return this;}

var resolvedBegin=resolveBegin(begin,this.size);
var resolvedEnd=resolveEnd(end,this.size);
if(resolvedEnd !== this.size){

return IndexedCollection.prototype.slice.call(this,begin,end);}

var newSize=this.size - resolvedBegin;
var head=this._head;
while(resolvedBegin--) {
head = head.next;}

if(this.__ownerID){
this.size = newSize;
this._head = head;
this.__hash = undefined;
this.__altered = true;
return this;}

return makeStack(newSize,head);};




Stack.prototype.__ensureOwner = function(ownerID){
if(ownerID === this.__ownerID){
return this;}

if(!ownerID){
this.__ownerID = ownerID;
this.__altered = false;
return this;}

return makeStack(this.size,this._head,ownerID,this.__hash);};




Stack.prototype.__iterate = function(fn,reverse){
if(reverse){
return this.reverse().__iterate(fn);}

var iterations=0;
var node=this._head;
while(node) {
if(fn(node.value,iterations++,this) === false){
break;}

node = node.next;}

return iterations;};


Stack.prototype.__iterator = function(type,reverse){
if(reverse){
return this.reverse().__iterator(type);}

var iterations=0;
var node=this._head;
return new src_Iterator__Iterator(function(){
if(node){
var value=node.value;
node = node.next;
return iteratorValue(type,iterations++,value);}

return iteratorDone();});};




function isStack(maybeStack){
return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);}


Stack.isStack = isStack;

var IS_STACK_SENTINEL='@@__IMMUTABLE_STACK__@@';

var StackPrototype=Stack.prototype;
StackPrototype[IS_STACK_SENTINEL] = true;
StackPrototype.withMutations = MapPrototype.withMutations;
StackPrototype.asMutable = MapPrototype.asMutable;
StackPrototype.asImmutable = MapPrototype.asImmutable;
StackPrototype.wasAltered = MapPrototype.wasAltered;


function makeStack(size,head,ownerID,hash){
var map=Object.create(StackPrototype);
map.size = size;
map._head = head;
map.__ownerID = ownerID;
map.__hash = hash;
map.__altered = false;
return map;}


var EMPTY_STACK;
function emptyStack(){
return EMPTY_STACK || (EMPTY_STACK = makeStack(0));}


createClass(src_Set__Set,SetCollection);



function src_Set__Set(value){
return value === null || value === undefined?emptySet():
isSet(value) && !isOrdered(value)?value:
emptySet().withMutations(function(set){
var iter=SetIterable(value);
assertNotInfinite(iter.size);
iter.forEach(function(v){return set.add(v);});});}



src_Set__Set.of = function(){
return this(arguments);};


src_Set__Set.fromKeys = function(value){
return this(KeyedIterable(value).keySeq());};


src_Set__Set.prototype.toString = function(){
return this.__toString('Set {','}');};




src_Set__Set.prototype.has = function(value){
return this._map.has(value);};




src_Set__Set.prototype.add = function(value){
return updateSet(this,this._map.set(value,true));};


src_Set__Set.prototype.remove = function(value){
return updateSet(this,this._map.remove(value));};


src_Set__Set.prototype.clear = function(){
return updateSet(this,this._map.clear());};




src_Set__Set.prototype.union = function(){var iters=SLICE$0.call(arguments,0);
iters = iters.filter(function(x){return x.size !== 0;});
if(iters.length === 0){
return this;}

if(this.size === 0 && !this.__ownerID && iters.length === 1){
return this.constructor(iters[0]);}

return this.withMutations(function(set){
for(var ii=0;ii < iters.length;ii++) {
SetIterable(iters[ii]).forEach(function(value){return set.add(value);});}});};




src_Set__Set.prototype.intersect = function(){var iters=SLICE$0.call(arguments,0);
if(iters.length === 0){
return this;}

iters = iters.map(function(iter){return SetIterable(iter);});
var originalSet=this;
return this.withMutations(function(set){
originalSet.forEach(function(value){
if(!iters.every(function(iter){return iter.includes(value);})){
set.remove(value);}});});};





src_Set__Set.prototype.subtract = function(){var iters=SLICE$0.call(arguments,0);
if(iters.length === 0){
return this;}

iters = iters.map(function(iter){return SetIterable(iter);});
var originalSet=this;
return this.withMutations(function(set){
originalSet.forEach(function(value){
if(iters.some(function(iter){return iter.includes(value);})){
set.remove(value);}});});};





src_Set__Set.prototype.merge = function(){
return this.union.apply(this,arguments);};


src_Set__Set.prototype.mergeWith = function(merger){var iters=SLICE$0.call(arguments,1);
return this.union.apply(this,iters);};


src_Set__Set.prototype.sort = function(comparator){

return OrderedSet(sortFactory(this,comparator));};


src_Set__Set.prototype.sortBy = function(mapper,comparator){

return OrderedSet(sortFactory(this,comparator,mapper));};


src_Set__Set.prototype.wasAltered = function(){
return this._map.wasAltered();};


src_Set__Set.prototype.__iterate = function(fn,reverse){var this$0=this;
return this._map.__iterate(function(_,k){return fn(k,k,this$0);},reverse);};


src_Set__Set.prototype.__iterator = function(type,reverse){
return this._map.map(function(_,k){return k;}).__iterator(type,reverse);};


src_Set__Set.prototype.__ensureOwner = function(ownerID){
if(ownerID === this.__ownerID){
return this;}

var newMap=this._map.__ensureOwner(ownerID);
if(!ownerID){
this.__ownerID = ownerID;
this._map = newMap;
return this;}

return this.__make(newMap,ownerID);};



function isSet(maybeSet){
return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);}


src_Set__Set.isSet = isSet;

var IS_SET_SENTINEL='@@__IMMUTABLE_SET__@@';

var SetPrototype=src_Set__Set.prototype;
SetPrototype[IS_SET_SENTINEL] = true;
SetPrototype[DELETE] = SetPrototype.remove;
SetPrototype.mergeDeep = SetPrototype.merge;
SetPrototype.mergeDeepWith = SetPrototype.mergeWith;
SetPrototype.withMutations = MapPrototype.withMutations;
SetPrototype.asMutable = MapPrototype.asMutable;
SetPrototype.asImmutable = MapPrototype.asImmutable;

SetPrototype.__empty = emptySet;
SetPrototype.__make = makeSet;

function updateSet(set,newMap){
if(set.__ownerID){
set.size = newMap.size;
set._map = newMap;
return set;}

return newMap === set._map?set:
newMap.size === 0?set.__empty():
set.__make(newMap);}


function makeSet(map,ownerID){
var set=Object.create(SetPrototype);
set.size = map?map.size:0;
set._map = map;
set.__ownerID = ownerID;
return set;}


var EMPTY_SET;
function emptySet(){
return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));}


createClass(OrderedSet,src_Set__Set);



function OrderedSet(value){
return value === null || value === undefined?emptyOrderedSet():
isOrderedSet(value)?value:
emptyOrderedSet().withMutations(function(set){
var iter=SetIterable(value);
assertNotInfinite(iter.size);
iter.forEach(function(v){return set.add(v);});});}



OrderedSet.of = function(){
return this(arguments);};


OrderedSet.fromKeys = function(value){
return this(KeyedIterable(value).keySeq());};


OrderedSet.prototype.toString = function(){
return this.__toString('OrderedSet {','}');};



function isOrderedSet(maybeOrderedSet){
return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);}


OrderedSet.isOrderedSet = isOrderedSet;

var OrderedSetPrototype=OrderedSet.prototype;
OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;

OrderedSetPrototype.__empty = emptyOrderedSet;
OrderedSetPrototype.__make = makeOrderedSet;

function makeOrderedSet(map,ownerID){
var set=Object.create(OrderedSetPrototype);
set.size = map?map.size:0;
set._map = map;
set.__ownerID = ownerID;
return set;}


var EMPTY_ORDERED_SET;
function emptyOrderedSet(){
return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));}


createClass(Record,KeyedCollection);

function Record(defaultValues,name){
var hasInitialized;

var RecordType=function Record(values){
if(values instanceof RecordType){
return values;}

if(!(this instanceof RecordType)){
return new RecordType(values);}

if(!hasInitialized){
hasInitialized = true;
var keys=Object.keys(defaultValues);
setProps(RecordTypePrototype,keys);
RecordTypePrototype.size = keys.length;
RecordTypePrototype._name = name;
RecordTypePrototype._keys = keys;
RecordTypePrototype._defaultValues = defaultValues;}

this._map = src_Map__Map(values);};


var RecordTypePrototype=RecordType.prototype = Object.create(RecordPrototype);
RecordTypePrototype.constructor = RecordType;

return RecordType;}


Record.prototype.toString = function(){
return this.__toString(recordName(this) + ' {','}');};




Record.prototype.has = function(k){
return this._defaultValues.hasOwnProperty(k);};


Record.prototype.get = function(k,notSetValue){
if(!this.has(k)){
return notSetValue;}

var defaultVal=this._defaultValues[k];
return this._map?this._map.get(k,defaultVal):defaultVal;};




Record.prototype.clear = function(){
if(this.__ownerID){
this._map && this._map.clear();
return this;}

var RecordType=this.constructor;
return RecordType._empty || (RecordType._empty = makeRecord(this,emptyMap()));};


Record.prototype.set = function(k,v){
if(!this.has(k)){
throw new Error('Cannot set unknown key "' + k + '" on ' + recordName(this));}

var newMap=this._map && this._map.set(k,v);
if(this.__ownerID || newMap === this._map){
return this;}

return makeRecord(this,newMap);};


Record.prototype.remove = function(k){
if(!this.has(k)){
return this;}

var newMap=this._map && this._map.remove(k);
if(this.__ownerID || newMap === this._map){
return this;}

return makeRecord(this,newMap);};


Record.prototype.wasAltered = function(){
return this._map.wasAltered();};


Record.prototype.__iterator = function(type,reverse){var this$0=this;
return KeyedIterable(this._defaultValues).map(function(_,k){return this$0.get(k);}).__iterator(type,reverse);};


Record.prototype.__iterate = function(fn,reverse){var this$0=this;
return KeyedIterable(this._defaultValues).map(function(_,k){return this$0.get(k);}).__iterate(fn,reverse);};


Record.prototype.__ensureOwner = function(ownerID){
if(ownerID === this.__ownerID){
return this;}

var newMap=this._map && this._map.__ensureOwner(ownerID);
if(!ownerID){
this.__ownerID = ownerID;
this._map = newMap;
return this;}

return makeRecord(this,newMap,ownerID);};



var RecordPrototype=Record.prototype;
RecordPrototype[DELETE] = RecordPrototype.remove;
RecordPrototype.deleteIn = 
RecordPrototype.removeIn = MapPrototype.removeIn;
RecordPrototype.merge = MapPrototype.merge;
RecordPrototype.mergeWith = MapPrototype.mergeWith;
RecordPrototype.mergeIn = MapPrototype.mergeIn;
RecordPrototype.mergeDeep = MapPrototype.mergeDeep;
RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;
RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
RecordPrototype.setIn = MapPrototype.setIn;
RecordPrototype.update = MapPrototype.update;
RecordPrototype.updateIn = MapPrototype.updateIn;
RecordPrototype.withMutations = MapPrototype.withMutations;
RecordPrototype.asMutable = MapPrototype.asMutable;
RecordPrototype.asImmutable = MapPrototype.asImmutable;


function makeRecord(likeRecord,map,ownerID){
var record=Object.create(Object.getPrototypeOf(likeRecord));
record._map = map;
record.__ownerID = ownerID;
return record;}


function recordName(record){
return record._name || record.constructor.name || 'Record';}


function setProps(prototype,names){
try{
names.forEach(setProp.bind(undefined,prototype));}
catch(error) {}}




function setProp(prototype,name){
Object.defineProperty(prototype,name,{
get:function(){
return this.get(name);},

set:function(value){
invariant(this.__ownerID,'Cannot set on an immutable record.');
this.set(name,value);}});}




function deepEqual(a,b){
if(a === b){
return true;}


if(
!isIterable(b) || 
a.size !== undefined && b.size !== undefined && a.size !== b.size || 
a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash || 
isKeyed(a) !== isKeyed(b) || 
isIndexed(a) !== isIndexed(b) || 
isOrdered(a) !== isOrdered(b))
{
return false;}


if(a.size === 0 && b.size === 0){
return true;}


var notAssociative=!isAssociative(a);

if(isOrdered(a)){
var entries=a.entries();
return b.every(function(v,k){
var entry=entries.next().value;
return entry && is(entry[1],v) && (notAssociative || is(entry[0],k));}) && 
entries.next().done;}


var flipped=false;

if(a.size === undefined){
if(b.size === undefined){
if(typeof a.cacheResult === 'function'){
a.cacheResult();}}else 

{
flipped = true;
var _=a;
a = b;
b = _;}}



var allEqual=true;
var bSize=b.__iterate(function(v,k){
if(notAssociative?!a.has(v):
flipped?!is(v,a.get(k,NOT_SET)):!is(a.get(k,NOT_SET),v)){
allEqual = false;
return false;}});



return allEqual && a.size === bSize;}


createClass(Range,IndexedSeq);

function Range(start,end,step){
if(!(this instanceof Range)){
return new Range(start,end,step);}

invariant(step !== 0,'Cannot step a Range by 0');
start = start || 0;
if(end === undefined){
end = Infinity;}

step = step === undefined?1:Math.abs(step);
if(end < start){
step = -step;}

this._start = start;
this._end = end;
this._step = step;
this.size = Math.max(0,Math.ceil((end - start) / step - 1) + 1);
if(this.size === 0){
if(EMPTY_RANGE){
return EMPTY_RANGE;}

EMPTY_RANGE = this;}}



Range.prototype.toString = function(){
if(this.size === 0){
return 'Range []';}

return 'Range [ ' + 
this._start + '...' + this._end + (
this._step > 1?' by ' + this._step:'') + 
' ]';};


Range.prototype.get = function(index,notSetValue){
return this.has(index)?
this._start + wrapIndex(this,index) * this._step:
notSetValue;};


Range.prototype.includes = function(searchValue){
var possibleIndex=(searchValue - this._start) / this._step;
return possibleIndex >= 0 && 
possibleIndex < this.size && 
possibleIndex === Math.floor(possibleIndex);};


Range.prototype.slice = function(begin,end){
if(wholeSlice(begin,end,this.size)){
return this;}

begin = resolveBegin(begin,this.size);
end = resolveEnd(end,this.size);
if(end <= begin){
return new Range(0,0);}

return new Range(this.get(begin,this._end),this.get(end,this._end),this._step);};


Range.prototype.indexOf = function(searchValue){
var offsetValue=searchValue - this._start;
if(offsetValue % this._step === 0){
var index=offsetValue / this._step;
if(index >= 0 && index < this.size){
return index;}}


return -1;};


Range.prototype.lastIndexOf = function(searchValue){
return this.indexOf(searchValue);};


Range.prototype.__iterate = function(fn,reverse){
var maxIndex=this.size - 1;
var step=this._step;
var value=reverse?this._start + maxIndex * step:this._start;
for(var ii=0;ii <= maxIndex;ii++) {
if(fn(value,ii,this) === false){
return ii + 1;}

value += reverse?-step:step;}

return ii;};


Range.prototype.__iterator = function(type,reverse){
var maxIndex=this.size - 1;
var step=this._step;
var value=reverse?this._start + maxIndex * step:this._start;
var ii=0;
return new src_Iterator__Iterator(function(){
var v=value;
value += reverse?-step:step;
return ii > maxIndex?iteratorDone():iteratorValue(type,ii++,v);});};



Range.prototype.equals = function(other){
return other instanceof Range?
this._start === other._start && 
this._end === other._end && 
this._step === other._step:
deepEqual(this,other);};



var EMPTY_RANGE;

createClass(Repeat,IndexedSeq);

function Repeat(value,times){
if(!(this instanceof Repeat)){
return new Repeat(value,times);}

this._value = value;
this.size = times === undefined?Infinity:Math.max(0,times);
if(this.size === 0){
if(EMPTY_REPEAT){
return EMPTY_REPEAT;}

EMPTY_REPEAT = this;}}



Repeat.prototype.toString = function(){
if(this.size === 0){
return 'Repeat []';}

return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';};


Repeat.prototype.get = function(index,notSetValue){
return this.has(index)?this._value:notSetValue;};


Repeat.prototype.includes = function(searchValue){
return is(this._value,searchValue);};


Repeat.prototype.slice = function(begin,end){
var size=this.size;
return wholeSlice(begin,end,size)?this:
new Repeat(this._value,resolveEnd(end,size) - resolveBegin(begin,size));};


Repeat.prototype.reverse = function(){
return this;};


Repeat.prototype.indexOf = function(searchValue){
if(is(this._value,searchValue)){
return 0;}

return -1;};


Repeat.prototype.lastIndexOf = function(searchValue){
if(is(this._value,searchValue)){
return this.size;}

return -1;};


Repeat.prototype.__iterate = function(fn,reverse){
for(var ii=0;ii < this.size;ii++) {
if(fn(this._value,ii,this) === false){
return ii + 1;}}


return ii;};


Repeat.prototype.__iterator = function(type,reverse){var this$0=this;
var ii=0;
return new src_Iterator__Iterator(function()
{return ii < this$0.size?iteratorValue(type,ii++,this$0._value):iteratorDone();});};



Repeat.prototype.equals = function(other){
return other instanceof Repeat?
is(this._value,other._value):
deepEqual(other);};



var EMPTY_REPEAT;




function mixin(ctor,methods){
var keyCopier=function(key){ctor.prototype[key] = methods[key];};
Object.keys(methods).forEach(keyCopier);
Object.getOwnPropertySymbols && 
Object.getOwnPropertySymbols(methods).forEach(keyCopier);
return ctor;}


Iterable.Iterator = src_Iterator__Iterator;

mixin(Iterable,{



toArray:function(){
assertNotInfinite(this.size);
var array=new Array(this.size || 0);
this.valueSeq().__iterate(function(v,i){array[i] = v;});
return array;},


toIndexedSeq:function(){
return new ToIndexedSequence(this);},


toJS:function(){
return this.toSeq().map(
function(value){return value && typeof value.toJS === 'function'?value.toJS():value;}).
__toJS();},


toJSON:function(){
return this.toSeq().map(
function(value){return value && typeof value.toJSON === 'function'?value.toJSON():value;}).
__toJS();},


toKeyedSeq:function(){
return new ToKeyedSequence(this,true);},


toMap:function(){

return src_Map__Map(this.toKeyedSeq());},


toObject:function(){
assertNotInfinite(this.size);
var object={};
this.__iterate(function(v,k){object[k] = v;});
return object;},


toOrderedMap:function(){

return OrderedMap(this.toKeyedSeq());},


toOrderedSet:function(){

return OrderedSet(isKeyed(this)?this.valueSeq():this);},


toSet:function(){

return src_Set__Set(isKeyed(this)?this.valueSeq():this);},


toSetSeq:function(){
return new ToSetSequence(this);},


toSeq:function(){
return isIndexed(this)?this.toIndexedSeq():
isKeyed(this)?this.toKeyedSeq():
this.toSetSeq();},


toStack:function(){

return Stack(isKeyed(this)?this.valueSeq():this);},


toList:function(){

return List(isKeyed(this)?this.valueSeq():this);},





toString:function(){
return '[Iterable]';},


__toString:function(head,tail){
if(this.size === 0){
return head + tail;}

return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;},





concat:function(){var values=SLICE$0.call(arguments,0);
return reify(this,concatFactory(this,values));},


includes:function(searchValue){
return this.some(function(value){return is(value,searchValue);});},


entries:function(){
return this.__iterator(ITERATE_ENTRIES);},


every:function(predicate,context){
assertNotInfinite(this.size);
var returnValue=true;
this.__iterate(function(v,k,c){
if(!predicate.call(context,v,k,c)){
returnValue = false;
return false;}});


return returnValue;},


filter:function(predicate,context){
return reify(this,filterFactory(this,predicate,context,true));},


find:function(predicate,context,notSetValue){
var entry=this.findEntry(predicate,context);
return entry?entry[1]:notSetValue;},


findEntry:function(predicate,context){
var found;
this.__iterate(function(v,k,c){
if(predicate.call(context,v,k,c)){
found = [k,v];
return false;}});


return found;},


findLastEntry:function(predicate,context){
return this.toSeq().reverse().findEntry(predicate,context);},


forEach:function(sideEffect,context){
assertNotInfinite(this.size);
return this.__iterate(context?sideEffect.bind(context):sideEffect);},


join:function(separator){
assertNotInfinite(this.size);
separator = separator !== undefined?'' + separator:',';
var joined='';
var isFirst=true;
this.__iterate(function(v){
isFirst?isFirst = false:joined += separator;
joined += v !== null && v !== undefined?v.toString():'';});

return joined;},


keys:function(){
return this.__iterator(ITERATE_KEYS);},


map:function(mapper,context){
return reify(this,mapFactory(this,mapper,context));},


reduce:function(reducer,initialReduction,context){
assertNotInfinite(this.size);
var reduction;
var useFirst;
if(arguments.length < 2){
useFirst = true;}else 
{
reduction = initialReduction;}

this.__iterate(function(v,k,c){
if(useFirst){
useFirst = false;
reduction = v;}else 
{
reduction = reducer.call(context,reduction,v,k,c);}});


return reduction;},


reduceRight:function(reducer,initialReduction,context){
var reversed=this.toKeyedSeq().reverse();
return reversed.reduce.apply(reversed,arguments);},


reverse:function(){
return reify(this,reverseFactory(this,true));},


slice:function(begin,end){
return reify(this,sliceFactory(this,begin,end,true));},


some:function(predicate,context){
return !this.every(not(predicate),context);},


sort:function(comparator){
return reify(this,sortFactory(this,comparator));},


values:function(){
return this.__iterator(ITERATE_VALUES);},





butLast:function(){
return this.slice(0,-1);},


isEmpty:function(){
return this.size !== undefined?this.size === 0:!this.some(function(){return true;});},


count:function(predicate,context){
return ensureSize(
predicate?this.toSeq().filter(predicate,context):this);},



countBy:function(grouper,context){
return countByFactory(this,grouper,context);},


equals:function(other){
return deepEqual(this,other);},


entrySeq:function(){
var iterable=this;
if(iterable._cache){

return new ArraySeq(iterable._cache);}

var entriesSequence=iterable.toSeq().map(entryMapper).toIndexedSeq();
entriesSequence.fromEntrySeq = function(){return iterable.toSeq();};
return entriesSequence;},


filterNot:function(predicate,context){
return this.filter(not(predicate),context);},


findLast:function(predicate,context,notSetValue){
return this.toKeyedSeq().reverse().find(predicate,context,notSetValue);},


first:function(){
return this.find(returnTrue);},


flatMap:function(mapper,context){
return reify(this,flatMapFactory(this,mapper,context));},


flatten:function(depth){
return reify(this,flattenFactory(this,depth,true));},


fromEntrySeq:function(){
return new FromEntriesSequence(this);},


get:function(searchKey,notSetValue){
return this.find(function(_,key){return is(key,searchKey);},undefined,notSetValue);},


getIn:function(searchKeyPath,notSetValue){
var nested=this;


var iter=forceIterator(searchKeyPath);
var step;
while(!(step = iter.next()).done) {
var key=step.value;
nested = nested && nested.get?nested.get(key,NOT_SET):NOT_SET;
if(nested === NOT_SET){
return notSetValue;}}


return nested;},


groupBy:function(grouper,context){
return groupByFactory(this,grouper,context);},


has:function(searchKey){
return this.get(searchKey,NOT_SET) !== NOT_SET;},


hasIn:function(searchKeyPath){
return this.getIn(searchKeyPath,NOT_SET) !== NOT_SET;},


isSubset:function(iter){
iter = typeof iter.includes === 'function'?iter:Iterable(iter);
return this.every(function(value){return iter.includes(value);});},


isSuperset:function(iter){
iter = typeof iter.isSubset === 'function'?iter:Iterable(iter);
return iter.isSubset(this);},


keySeq:function(){
return this.toSeq().map(keyMapper).toIndexedSeq();},


last:function(){
return this.toSeq().reverse().first();},


max:function(comparator){
return maxFactory(this,comparator);},


maxBy:function(mapper,comparator){
return maxFactory(this,comparator,mapper);},


min:function(comparator){
return maxFactory(this,comparator?neg(comparator):defaultNegComparator);},


minBy:function(mapper,comparator){
return maxFactory(this,comparator?neg(comparator):defaultNegComparator,mapper);},


rest:function(){
return this.slice(1);},


skip:function(amount){
return this.slice(Math.max(0,amount));},


skipLast:function(amount){
return reify(this,this.toSeq().reverse().skip(amount).reverse());},


skipWhile:function(predicate,context){
return reify(this,skipWhileFactory(this,predicate,context,true));},


skipUntil:function(predicate,context){
return this.skipWhile(not(predicate),context);},


sortBy:function(mapper,comparator){
return reify(this,sortFactory(this,comparator,mapper));},


take:function(amount){
return this.slice(0,Math.max(0,amount));},


takeLast:function(amount){
return reify(this,this.toSeq().reverse().take(amount).reverse());},


takeWhile:function(predicate,context){
return reify(this,takeWhileFactory(this,predicate,context));},


takeUntil:function(predicate,context){
return this.takeWhile(not(predicate),context);},


valueSeq:function(){
return this.toIndexedSeq();},





hashCode:function(){
return this.__hash || (this.__hash = hashIterable(this));}});















var IterablePrototype=Iterable.prototype;
IterablePrototype[IS_ITERABLE_SENTINEL] = true;
IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;
IterablePrototype.__toJS = IterablePrototype.toArray;
IterablePrototype.__toStringMapper = quoteString;
IterablePrototype.inspect = 
IterablePrototype.toSource = function(){return this.toString();};
IterablePrototype.chain = IterablePrototype.flatMap;
IterablePrototype.contains = IterablePrototype.includes;


(function(){
try{
Object.defineProperty(IterablePrototype,'length',{
get:function(){
if(!Iterable.noLengthWarning){
var stack;
try{
throw new Error();}
catch(error) {
stack = error.stack;}

if(stack.indexOf('_wrapObject') === -1){
console && console.warn && console.warn(
'iterable.length has been deprecated, ' + 
'use iterable.size or iterable.count(). ' + 
'This warning will become a silent error in a future version. ' + 
stack);

return this.size;}}}});}




catch(e) {}})();




mixin(KeyedIterable,{



flip:function(){
return reify(this,flipFactory(this));},


findKey:function(predicate,context){
var entry=this.findEntry(predicate,context);
return entry && entry[0];},


findLastKey:function(predicate,context){
return this.toSeq().reverse().findKey(predicate,context);},


keyOf:function(searchValue){
return this.findKey(function(value){return is(value,searchValue);});},


lastKeyOf:function(searchValue){
return this.findLastKey(function(value){return is(value,searchValue);});},


mapEntries:function(mapper,context){var this$0=this;
var iterations=0;
return reify(this,
this.toSeq().map(
function(v,k){return mapper.call(context,[k,v],iterations++,this$0);}).
fromEntrySeq());},



mapKeys:function(mapper,context){var this$0=this;
return reify(this,
this.toSeq().flip().map(
function(k,v){return mapper.call(context,k,v,this$0);}).
flip());}});





var KeyedIterablePrototype=KeyedIterable.prototype;
KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;
KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;
KeyedIterablePrototype.__toJS = IterablePrototype.toObject;
KeyedIterablePrototype.__toStringMapper = function(v,k){return JSON.stringify(k) + ': ' + quoteString(v);};



mixin(IndexedIterable,{



toKeyedSeq:function(){
return new ToKeyedSequence(this,false);},





filter:function(predicate,context){
return reify(this,filterFactory(this,predicate,context,false));},


findIndex:function(predicate,context){
var entry=this.findEntry(predicate,context);
return entry?entry[0]:-1;},


indexOf:function(searchValue){
var key=this.toKeyedSeq().keyOf(searchValue);
return key === undefined?-1:key;},


lastIndexOf:function(searchValue){
return this.toSeq().reverse().indexOf(searchValue);},


reverse:function(){
return reify(this,reverseFactory(this,false));},


slice:function(begin,end){
return reify(this,sliceFactory(this,begin,end,false));},


splice:function(index,removeNum){
var numArgs=arguments.length;
removeNum = Math.max(removeNum | 0,0);
if(numArgs === 0 || numArgs === 2 && !removeNum){
return this;}




index = resolveBegin(index,index < 0?this.count():this.size);
var spliced=this.slice(0,index);
return reify(
this,
numArgs === 1?
spliced:
spliced.concat(arrCopy(arguments,2),this.slice(index + removeNum)));},






findLastIndex:function(predicate,context){
var key=this.toKeyedSeq().findLastKey(predicate,context);
return key === undefined?-1:key;},


first:function(){
return this.get(0);},


flatten:function(depth){
return reify(this,flattenFactory(this,depth,false));},


get:function(index,notSetValue){
index = wrapIndex(this,index);
return index < 0 || (this.size === Infinity || 
this.size !== undefined && index > this.size)?
notSetValue:
this.find(function(_,key){return key === index;},undefined,notSetValue);},


has:function(index){
index = wrapIndex(this,index);
return index >= 0 && (this.size !== undefined?
this.size === Infinity || index < this.size:
this.indexOf(index) !== -1);},



interpose:function(separator){
return reify(this,interposeFactory(this,separator));},


interleave:function(){
var iterables=[this].concat(arrCopy(arguments));
var zipped=zipWithFactory(this.toSeq(),IndexedSeq.of,iterables);
var interleaved=zipped.flatten(true);
if(zipped.size){
interleaved.size = zipped.size * iterables.length;}

return reify(this,interleaved);},


last:function(){
return this.get(-1);},


skipWhile:function(predicate,context){
return reify(this,skipWhileFactory(this,predicate,context,false));},


zip:function(){
var iterables=[this].concat(arrCopy(arguments));
return reify(this,zipWithFactory(this,defaultZipper,iterables));},


zipWith:function(zipper){
var iterables=arrCopy(arguments);
iterables[0] = this;
return reify(this,zipWithFactory(this,zipper,iterables));}});




IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;
IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;



mixin(SetIterable,{



get:function(value,notSetValue){
return this.has(value)?value:notSetValue;},


includes:function(value){
return this.has(value);},





keySeq:function(){
return this.valueSeq();}});




SetIterable.prototype.has = IterablePrototype.includes;




mixin(KeyedSeq,KeyedIterable.prototype);
mixin(IndexedSeq,IndexedIterable.prototype);
mixin(SetSeq,SetIterable.prototype);

mixin(KeyedCollection,KeyedIterable.prototype);
mixin(IndexedCollection,IndexedIterable.prototype);
mixin(SetCollection,SetIterable.prototype);




function keyMapper(v,k){
return k;}


function entryMapper(v,k){
return [k,v];}


function not(predicate){
return function(){
return !predicate.apply(this,arguments);};}



function neg(predicate){
return function(){
return -predicate.apply(this,arguments);};}



function quoteString(value){
return typeof value === 'string'?JSON.stringify(value):value;}


function defaultZipper(){
return arrCopy(arguments);}


function defaultNegComparator(a,b){
return a < b?1:a > b?-1:0;}


function hashIterable(iterable){
if(iterable.size === Infinity){
return 0;}

var ordered=isOrdered(iterable);
var keyed=isKeyed(iterable);
var h=ordered?1:0;
var size=iterable.__iterate(
keyed?
ordered?
function(v,k){h = 31 * h + hashMerge(hash(v),hash(k)) | 0;}:
function(v,k){h = h + hashMerge(hash(v),hash(k)) | 0;}:
ordered?
function(v){h = 31 * h + hash(v) | 0;}:
function(v){h = h + hash(v) | 0;});

return murmurHashOfSize(size,h);}


function murmurHashOfSize(size,h){
h = src_Math__imul(h,0xCC9E2D51);
h = src_Math__imul(h << 15 | h >>> -15,0x1B873593);
h = src_Math__imul(h << 13 | h >>> -13,5);
h = (h + 0xE6546B64 | 0) ^ size;
h = src_Math__imul(h ^ h >>> 16,0x85EBCA6B);
h = src_Math__imul(h ^ h >>> 13,0xC2B2AE35);
h = smi(h ^ h >>> 16);
return h;}


function hashMerge(a,b){
return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0;}


var Immutable={

Iterable:Iterable,

Seq:Seq,
Collection:Collection,
Map:src_Map__Map,
OrderedMap:OrderedMap,
List:List,
Stack:Stack,
Set:src_Set__Set,
OrderedSet:OrderedSet,

Record:Record,
Range:Range,
Repeat:Repeat,

is:is,
fromJS:fromJS};



return Immutable;});
});
__d('NavigatorNavigationBar',["React","NavigatorNavigationBarStylesAndroid","NavigatorNavigationBarStylesIOS","Platform","StaticContainer.react","StyleSheet","View","immutable/dist/immutable.js"],function(global, require, module, exports) {  'use strict';



























var React=require('React');
var NavigatorNavigationBarStylesAndroid=require('NavigatorNavigationBarStylesAndroid');
var NavigatorNavigationBarStylesIOS=require('NavigatorNavigationBarStylesIOS');
var Platform=require('Platform');
var StaticContainer=require('StaticContainer.react');
var StyleSheet=require('StyleSheet');
var View=require('View');var _require=

require('immutable/dist/immutable.js');var Map=_require.Map;

var COMPONENT_NAMES=['Title','LeftButton','RightButton'];

var NavigatorNavigationBarStyles=Platform.OS === 'android'?
NavigatorNavigationBarStylesAndroid:NavigatorNavigationBarStylesIOS;

var navStatePresentedIndex=function(navState){
if(navState.presentedIndex !== undefined){
return navState.presentedIndex;}


return navState.observedTopOfStack;};


var NavigatorNavigationBar=React.createClass({displayName:'NavigatorNavigationBar',

propTypes:{
navigator:React.PropTypes.object,
routeMapper:React.PropTypes.shape({
Title:React.PropTypes.func.isRequired,
LeftButton:React.PropTypes.func.isRequired,
RightButton:React.PropTypes.func.isRequired}).
isRequired,
navState:React.PropTypes.shape({
routeStack:React.PropTypes.arrayOf(React.PropTypes.object),
presentedIndex:React.PropTypes.number}),

navigationStyles:React.PropTypes.object,
style:View.propTypes.style},


statics:{
Styles:NavigatorNavigationBarStyles,
StylesAndroid:NavigatorNavigationBarStylesAndroid,
StylesIOS:NavigatorNavigationBarStylesIOS},


getDefaultProps:function(){
return {
navigationStyles:NavigatorNavigationBarStyles};},



componentWillMount:function(){var _this=this;
this._components = {};
this._descriptors = {};

COMPONENT_NAMES.forEach(function(componentName){
_this._components[componentName] = new Map();
_this._descriptors[componentName] = new Map();});},



_getReusableProps:function(
componentName,
index)
{
if(!this._reusableProps){
this._reusableProps = {};}

var propStack=this._reusableProps[componentName];
if(!propStack){
propStack = this._reusableProps[componentName] = [];}

var props=propStack[index];
if(!props){
props = propStack[index] = {style:{}};}

return props;},


_updateIndexProgress:function(
progress,
index,
fromIndex,
toIndex)
{
var amount=toIndex > fromIndex?progress:1 - progress;
var oldDistToCenter=index - fromIndex;
var newDistToCenter=index - toIndex;
var interpolate;
if(oldDistToCenter > 0 && newDistToCenter === 0 || 
newDistToCenter > 0 && oldDistToCenter === 0){
interpolate = this.props.navigationStyles.Interpolators.RightToCenter;}else 
if(oldDistToCenter < 0 && newDistToCenter === 0 || 
newDistToCenter < 0 && oldDistToCenter === 0){
interpolate = this.props.navigationStyles.Interpolators.CenterToLeft;}else 
if(oldDistToCenter === newDistToCenter){
interpolate = this.props.navigationStyles.Interpolators.RightToCenter;}else 
{
interpolate = this.props.navigationStyles.Interpolators.RightToLeft;}


COMPONENT_NAMES.forEach(function(componentName){
var component=this._components[componentName].get(this.props.navState.routeStack[index]);
var props=this._getReusableProps(componentName,index);
if(component && interpolate[componentName](props.style,amount)){
component.setNativeProps(props);}},

this);},


updateProgress:function(
progress,
fromIndex,
toIndex)
{
var max=Math.max(fromIndex,toIndex);
var min=Math.min(fromIndex,toIndex);
for(var index=min;index <= max;index++) {
this._updateIndexProgress(progress,index,fromIndex,toIndex);}},



render:function(){
var navBarStyle={
height:this.props.navigationStyles.General.TotalNavHeight};

var navState=this.props.navState;
var components=COMPONENT_NAMES.map(function(componentName){
return navState.routeStack.map(
this._getComponent.bind(this,componentName));},

this);

return (
React.createElement(View,{style:[styles.navBarContainer,navBarStyle,this.props.style]},
components));},




_getComponent:function(
componentName,
route,
index)
{var _this2=this;
if(this._descriptors[componentName].includes(route)){
return this._descriptors[componentName].get(route);}


var rendered=null;

var content=this.props.routeMapper[componentName](
this.props.navState.routeStack[index],
this.props.navigator,
index,
this.props.navState);

if(!content){
return null;}


var initialStage=index === navStatePresentedIndex(this.props.navState)?
this.props.navigationStyles.Stages.Center:
this.props.navigationStyles.Stages.Left;
rendered = 
React.createElement(View,{
ref:function(ref){
_this2._components[componentName] = _this2._components[componentName].set(route,ref);},

style:initialStage[componentName]},
content);



this._descriptors[componentName] = this._descriptors[componentName].set(route,rendered);
return rendered;}});





var styles=StyleSheet.create({
navBarContainer:{
position:'absolute',
top:0,
left:0,
right:0,
backgroundColor:'transparent'}});



module.exports = NavigatorNavigationBar;
});
__d('StaticContainer.react',["React","onlyChild"],function(global, require, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}




















var React=require('React');

var onlyChild=require('onlyChild');var 
















StaticContainer=(function(_React$Component){_inherits(StaticContainer,_React$Component);function StaticContainer(){_classCallCheck(this,StaticContainer);_get(Object.getPrototypeOf(StaticContainer.prototype),'constructor',this).apply(this,arguments);}_createClass(StaticContainer,[{key:'shouldComponentUpdate',value:

function shouldComponentUpdate(nextProps){
return !!nextProps.shouldUpdate;}},{key:'render',value:


function render(){
var child=this.props.children;
return child === null || child === false?null:onlyChild(child);}}]);return StaticContainer;})(React.Component);




module.exports = StaticContainer;
});
__d('NavigatorSceneConfigs',["Dimensions","PixelRatio","buildStyleInterpolator"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};



























var Dimensions=require('Dimensions');
var PixelRatio=require('PixelRatio');

var buildStyleInterpolator=require('buildStyleInterpolator');

var SCREEN_WIDTH=Dimensions.get('window').width;
var SCREEN_HEIGHT=Dimensions.get('window').height;

var FadeToTheLeft={


transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:-Math.round(Dimensions.get('window').width * 0.3),y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},












transformScale:{
from:{x:1,y:1,z:1},
to:{x:0.95,y:0.95,z:1},
min:0,
max:1,
type:'linear',
extrapolate:true},

opacity:{
from:1,
to:0.3,
min:0,
max:1,
type:'linear',
extrapolate:false,
round:100},

translateX:{
from:0,
to:-Math.round(Dimensions.get('window').width * 0.3),
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

scaleX:{
from:1,
to:0.95,
min:0,
max:1,
type:'linear',
extrapolate:true},

scaleY:{
from:1,
to:0.95,
min:0,
max:1,
type:'linear',
extrapolate:true}};



var FadeToTheRight=_extends({},
FadeToTheLeft,{
transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:Math.round(SCREEN_WIDTH * 0.3),y:0,z:0}},

translateX:{
from:0,
to:Math.round(SCREEN_WIDTH * 0.3)}});



var FadeIn={
opacity:{
from:0,
to:1,
min:0.5,
max:1,
type:'linear',
extrapolate:false,
round:100}};



var FadeOut={
opacity:{
from:1,
to:0,
min:0,
max:0.5,
type:'linear',
extrapolate:false,
round:100}};



var ToTheLeft={
transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:-Dimensions.get('window').width,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

opacity:{
value:1.0,
type:'constant'},


translateX:{
from:0,
to:-Dimensions.get('window').width,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}};



var ToTheUp={
transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:0,y:-Dimensions.get('window').height,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

opacity:{
value:1.0,
type:'constant'},

translateY:{
from:0,
to:-Dimensions.get('window').height,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}};



var ToTheDown={
transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:0,y:Dimensions.get('window').height,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

opacity:{
value:1.0,
type:'constant'},

translateY:{
from:0,
to:Dimensions.get('window').height,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}};



var FromTheRight={
opacity:{
value:1.0,
type:'constant'},


transformTranslate:{
from:{x:Dimensions.get('window').width,y:0,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},


translateX:{
from:Dimensions.get('window').width,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},


scaleX:{
value:1,
type:'constant'},

scaleY:{
value:1,
type:'constant'}};



var FromTheLeft=_extends({},
FromTheRight,{
transformTranslate:{
from:{x:-SCREEN_WIDTH,y:0,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

translateX:{
from:-SCREEN_WIDTH,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}});



var FromTheDown=_extends({},
FromTheRight,{
transformTranslate:{
from:{y:SCREEN_HEIGHT,x:0,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

translateY:{
from:SCREEN_HEIGHT,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}});



var FromTheTop=_extends({},
FromTheRight,{
transformTranslate:{
from:{y:-SCREEN_HEIGHT,x:0,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

translateY:{
from:-SCREEN_HEIGHT,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}});



var ToTheBack={


transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

transformScale:{
from:{x:1,y:1,z:1},
to:{x:0.95,y:0.95,z:1},
min:0,
max:1,
type:'linear',
extrapolate:true},

opacity:{
from:1,
to:0.3,
min:0,
max:1,
type:'linear',
extrapolate:false,
round:100},

scaleX:{
from:1,
to:0.95,
min:0,
max:1,
type:'linear',
extrapolate:true},

scaleY:{
from:1,
to:0.95,
min:0,
max:1,
type:'linear',
extrapolate:true}};



var FromTheFront={
opacity:{
value:1.0,
type:'constant'},


transformTranslate:{
from:{x:0,y:Dimensions.get('window').height,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

translateY:{
from:Dimensions.get('window').height,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

scaleX:{
value:1,
type:'constant'},

scaleY:{
value:1,
type:'constant'}};



var ToTheBackAndroid={
opacity:{
value:1,
type:'constant'}};



var FromTheFrontAndroid={
opacity:{
from:0,
to:1,
min:0.5,
max:1,
type:'linear',
extrapolate:false,
round:100},

transformTranslate:{
from:{x:0,y:100,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

translateY:{
from:100,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}};



var BaseOverswipeConfig={
frictionConstant:1,
frictionByDistance:1.5};


var BaseLeftToRightGesture={


isDetachable:false,


gestureDetectMovement:2,


notMoving:0.3,


directionRatio:0.66,


snapVelocity:2,


edgeHitWidth:30,


stillCompletionRatio:3 / 5,

fullDistance:SCREEN_WIDTH,

direction:'left-to-right'};



var BaseRightToLeftGesture=_extends({},
BaseLeftToRightGesture,{
direction:'right-to-left'});


var BaseDownUpGesture=_extends({},
BaseLeftToRightGesture,{
fullDistance:SCREEN_HEIGHT,
direction:'down-to-up'});


var BaseUpDownGesture=_extends({},
BaseLeftToRightGesture,{
fullDistance:SCREEN_HEIGHT,
direction:'up-to-down'});


var BaseConfig={

gestures:{
pop:BaseLeftToRightGesture},



springFriction:26,
springTension:200,


defaultTransitionVelocity:1.5,


animationInterpolators:{
into:buildStyleInterpolator(FromTheRight),
out:buildStyleInterpolator(FadeToTheLeft)}};



var NavigatorSceneConfigs={
PushFromRight:_extends({},
BaseConfig),


FloatFromRight:_extends({},
BaseConfig),


FloatFromLeft:_extends({},
BaseConfig,{
animationInterpolators:{
into:buildStyleInterpolator(FromTheLeft),
out:buildStyleInterpolator(FadeToTheRight)}}),


FloatFromBottom:_extends({},
BaseConfig,{
gestures:{
pop:_extends({},
BaseLeftToRightGesture,{
edgeHitWidth:150,
direction:'top-to-bottom',
fullDistance:SCREEN_HEIGHT})},


animationInterpolators:{
into:buildStyleInterpolator(FromTheFront),
out:buildStyleInterpolator(ToTheBack)}}),


FloatFromBottomAndroid:_extends({},
BaseConfig,{
gestures:null,
defaultTransitionVelocity:3,
springFriction:20,
animationInterpolators:{
into:buildStyleInterpolator(FromTheFrontAndroid),
out:buildStyleInterpolator(ToTheBackAndroid)}}),


FadeAndroid:_extends({},
BaseConfig,{
gestures:null,
animationInterpolators:{
into:buildStyleInterpolator(FadeIn),
out:buildStyleInterpolator(FadeOut)}}),


HorizontalSwipeJump:_extends({},
BaseConfig,{
gestures:{
jumpBack:_extends({},
BaseLeftToRightGesture,{
overswipe:BaseOverswipeConfig,
edgeHitWidth:null,
isDetachable:true}),

jumpForward:_extends({},
BaseRightToLeftGesture,{
overswipe:BaseOverswipeConfig,
edgeHitWidth:null,
isDetachable:true})},


animationInterpolators:{
into:buildStyleInterpolator(FromTheRight),
out:buildStyleInterpolator(ToTheLeft)}}),


VerticalUpSwipeJump:_extends({},
BaseConfig,{
gestures:{
jumpBack:_extends({},
BaseDownUpGesture,{
overswipe:BaseOverswipeConfig,
edgeHitWidth:null,
isDetachable:true}),

jumpForward:_extends({},
BaseDownUpGesture,{
overswipe:BaseOverswipeConfig,
edgeHitWidth:null,
isDetachable:true})},


animationInterpolators:{
into:buildStyleInterpolator(FromTheDown),
out:buildStyleInterpolator(ToTheUp)}}),


VerticalDownSwipeJump:_extends({},
BaseConfig,{
gestures:{
jumpBack:_extends({},
BaseUpDownGesture,{
overswipe:BaseOverswipeConfig,
edgeHitWidth:null,
isDetachable:true}),

jumpForward:_extends({},
BaseUpDownGesture,{
overswipe:BaseOverswipeConfig,
edgeHitWidth:null,
isDetachable:true})},


animationInterpolators:{
into:buildStyleInterpolator(FromTheTop),
out:buildStyleInterpolator(ToTheDown)}})};




module.exports = NavigatorSceneConfigs;
});
__d('PanResponder',["TouchHistoryMath"],function(global, require, module, exports) {  "use strict";





var TouchHistoryMath=require('TouchHistoryMath');

var currentCentroidXOfTouchesChangedAfter=
TouchHistoryMath.currentCentroidXOfTouchesChangedAfter;
var currentCentroidYOfTouchesChangedAfter=
TouchHistoryMath.currentCentroidYOfTouchesChangedAfter;
var previousCentroidXOfTouchesChangedAfter=
TouchHistoryMath.previousCentroidXOfTouchesChangedAfter;
var previousCentroidYOfTouchesChangedAfter=
TouchHistoryMath.previousCentroidYOfTouchesChangedAfter;
var currentCentroidX=TouchHistoryMath.currentCentroidX;
var currentCentroidY=TouchHistoryMath.currentCentroidY;















































































var PanResponder={
































































_initializeGestureState:function(gestureState){
gestureState.moveX = 0;
gestureState.moveY = 0;
gestureState.x0 = 0;
gestureState.y0 = 0;
gestureState.dx = 0;
gestureState.dy = 0;
gestureState.vx = 0;
gestureState.vy = 0;
gestureState.numberActiveTouches = 0;

gestureState._accountsForMovesUpTo = 0;},


























_updateGestureStateOnMove:function(gestureState,touchHistory){
gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
gestureState.moveX = currentCentroidXOfTouchesChangedAfter(
touchHistory,
gestureState._accountsForMovesUpTo);

gestureState.moveY = currentCentroidYOfTouchesChangedAfter(
touchHistory,
gestureState._accountsForMovesUpTo);

var movedAfter=gestureState._accountsForMovesUpTo;
var prevX=previousCentroidXOfTouchesChangedAfter(touchHistory,movedAfter);
var x=currentCentroidXOfTouchesChangedAfter(touchHistory,movedAfter);
var prevY=previousCentroidYOfTouchesChangedAfter(touchHistory,movedAfter);
var y=currentCentroidYOfTouchesChangedAfter(touchHistory,movedAfter);
var nextDX=gestureState.dx + (x - prevX);
var nextDY=gestureState.dy + (y - prevY);


var dt=
touchHistory.mostRecentTimeStamp - gestureState._accountsForMovesUpTo;
gestureState.vx = (nextDX - gestureState.dx) / dt;
gestureState.vy = (nextDY - gestureState.dy) / dt;

gestureState.dx = nextDX;
gestureState.dy = nextDY;
gestureState._accountsForMovesUpTo = touchHistory.mostRecentTimeStamp;},


































create:function(config){
var gestureState={

stateID:Math.random()};

PanResponder._initializeGestureState(gestureState);
var panHandlers={
onStartShouldSetResponder:function(e){
return config.onStartShouldSetPanResponder === undefined?false:
config.onStartShouldSetPanResponder(e,gestureState);},

onMoveShouldSetResponder:function(e){
return config.onMoveShouldSetPanResponder === undefined?false:
config.onMoveShouldSetPanResponder(e,gestureState);},

onStartShouldSetResponderCapture:function(e){


if(e.nativeEvent.touches.length === 1){
PanResponder._initializeGestureState(gestureState);}

gestureState.numberActiveTouches = e.touchHistory.numberActiveTouches;
return config.onStartShouldSetPanResponderCapture !== undefined?
config.onStartShouldSetPanResponderCapture(e,gestureState):false;},


onMoveShouldSetResponderCapture:function(e){
var touchHistory=e.touchHistory;



if(gestureState._accountsForMovesUpTo === touchHistory.mostRecentTimeStamp){
return false;}

PanResponder._updateGestureStateOnMove(gestureState,touchHistory);
return config.onMoveShouldSetPanResponderCapture?
config.onMoveShouldSetPanResponderCapture(e,gestureState):false;},


onResponderGrant:function(e){
gestureState.x0 = currentCentroidX(e.touchHistory);
gestureState.y0 = currentCentroidY(e.touchHistory);
gestureState.dx = 0;
gestureState.dy = 0;
config.onPanResponderGrant && config.onPanResponderGrant(e,gestureState);

return config.onShouldBlockNativeResponder === undefined?true:
config.onShouldBlockNativeResponder();},


onResponderReject:function(e){
config.onPanResponderReject && config.onPanResponderReject(e,gestureState);},


onResponderRelease:function(e){
config.onPanResponderRelease && config.onPanResponderRelease(e,gestureState);
PanResponder._initializeGestureState(gestureState);},


onResponderStart:function(e){
var touchHistory=e.touchHistory;
gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
config.onPanResponderStart && config.onPanResponderStart(e,gestureState);},


onResponderMove:function(e){
var touchHistory=e.touchHistory;


if(gestureState._accountsForMovesUpTo === touchHistory.mostRecentTimeStamp){
return;}



PanResponder._updateGestureStateOnMove(gestureState,touchHistory);
config.onPanResponderMove && config.onPanResponderMove(e,gestureState);},


onResponderEnd:function(e){
var touchHistory=e.touchHistory;
gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
config.onPanResponderEnd && config.onPanResponderEnd(e,gestureState);},


onResponderTerminate:function(e){
config.onPanResponderTerminate && 
config.onPanResponderTerminate(e,gestureState);
PanResponder._initializeGestureState(gestureState);},


onResponderTerminationRequest:function(e){
return config.onPanResponderTerminationRequest === undefined?true:
config.onPanResponderTerminationRequest(e,gestureState);}};


return {panHandlers:panHandlers};}};



module.exports = PanResponder;
});
__d('TouchHistoryMath',[],function(global, require, module, exports) {  "use strict";





var TouchHistoryMath={
















centroidDimension:function(touchHistory,touchesChangedAfter,isXAxis,ofCurrent){
var touchBank=touchHistory.touchBank;
var total=0;
var count=0;

var oneTouchData=touchHistory.numberActiveTouches === 1?
touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch]:null;

if(oneTouchData !== null){
if(oneTouchData.touchActive && oneTouchData.currentTimeStamp > touchesChangedAfter){
total += ofCurrent && isXAxis?oneTouchData.currentPageX:
ofCurrent && !isXAxis?oneTouchData.currentPageY:
!ofCurrent && isXAxis?oneTouchData.previousPageX:
oneTouchData.previousPageY;
count = 1;}}else 

{
for(var i=0;i < touchBank.length;i++) {
var touchTrack=touchBank[i];
if(touchTrack !== null && 
touchTrack !== undefined && 
touchTrack.touchActive && 
touchTrack.currentTimeStamp >= touchesChangedAfter){
var toAdd;
if(ofCurrent && isXAxis){
toAdd = touchTrack.currentPageX;}else 
if(ofCurrent && !isXAxis){
toAdd = touchTrack.currentPageY;}else 
if(!ofCurrent && isXAxis){
toAdd = touchTrack.previousPageX;}else 
{
toAdd = touchTrack.previousPageY;}

total += toAdd;
count++;}}}



return count > 0?total / count:TouchHistoryMath.noCentroid;},


currentCentroidXOfTouchesChangedAfter:function(touchHistory,touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory,
touchesChangedAfter,
true,
true);},



currentCentroidYOfTouchesChangedAfter:function(touchHistory,touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory,
touchesChangedAfter,
false,
true);},



previousCentroidXOfTouchesChangedAfter:function(touchHistory,touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory,
touchesChangedAfter,
true,
false);},



previousCentroidYOfTouchesChangedAfter:function(touchHistory,touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory,
touchesChangedAfter,
false,
false);},



currentCentroidX:function(touchHistory){
return TouchHistoryMath.centroidDimension(
touchHistory,
0,
true,
true);},



currentCentroidY:function(touchHistory){
return TouchHistoryMath.centroidDimension(
touchHistory,
0,
false,
true);},



noCentroid:-1};


module.exports = TouchHistoryMath;
});
__d('clamp',[],function(global, require, module, exports) {  function 























clamp(min,value,max){
if(value < min){
return min;}

if(value > max){
return max;}

return value;}


module.exports = clamp;
});
__d('rebound/rebound.js',[],function(global, require, module, exports) {  (


























































































































function(){
var rebound={};
var util=rebound.util = {};
var concat=Array.prototype.concat;
var slice=Array.prototype.slice;


util.bind = function bind(func,context){
var args=slice.call(arguments,2);
return function(){
func.apply(context,concat.call(args,slice.call(arguments)));};};




util.extend = function extend(target,source){
for(var key in source) {
if(source.hasOwnProperty(key)){
target[key] = source[key];}}};









var SpringSystem=rebound.SpringSystem = function SpringSystem(looper){
this._springRegistry = {};
this._activeSprings = [];
this.listeners = [];
this._idleSpringIndices = [];
this.looper = looper || new AnimationLooper();
this.looper.springSystem = this;};


util.extend(SpringSystem.prototype,{

_springRegistry:null,

_isIdle:true,

_lastTimeMillis:-1,

_activeSprings:null,

listeners:null,

_idleSpringIndices:null,






setLooper:function(looper){
this.looper = looper;
looper.springSystem = this;},






createSpring:function(tension,friction){
var springConfig;
if(tension === undefined || friction === undefined){
springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;}else 
{
springConfig = 
SpringConfig.fromOrigamiTensionAndFriction(tension,friction);}

return this.createSpringWithConfig(springConfig);},





createSpringWithBouncinessAndSpeed:function(bounciness,speed){
var springConfig;
if(bounciness === undefined || speed === undefined){
springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;}else 
{
springConfig = 
SpringConfig.fromBouncinessAndSpeed(bounciness,speed);}

return this.createSpringWithConfig(springConfig);},



createSpringWithConfig:function(springConfig){
var spring=new Spring(this);
this.registerSpring(spring);
spring.setSpringConfig(springConfig);
return spring;},






getIsIdle:function(){
return this._isIdle;},





getSpringById:function(id){
return this._springRegistry[id];},




getAllSprings:function(){
var vals=[];
for(var id in this._springRegistry) {
if(this._springRegistry.hasOwnProperty(id)){
vals.push(this._springRegistry[id]);}}


return vals;},






registerSpring:function(spring){
this._springRegistry[spring.getId()] = spring;},






deregisterSpring:function(spring){
removeFirst(this._activeSprings,spring);
delete this._springRegistry[spring.getId()];},


advance:function(time,deltaTime){
while(this._idleSpringIndices.length > 0) this._idleSpringIndices.pop();
for(var i=0,len=this._activeSprings.length;i < len;i++) {
var spring=this._activeSprings[i];
if(spring.systemShouldAdvance()){
spring.advance(time / 1000.0,deltaTime / 1000.0);}else 
{
this._idleSpringIndices.push(this._activeSprings.indexOf(spring));}}


while(this._idleSpringIndices.length > 0) {
var idx=this._idleSpringIndices.pop();
idx >= 0 && this._activeSprings.splice(idx,1);}},
















loop:function(currentTimeMillis){
var listener;
if(this._lastTimeMillis === -1){
this._lastTimeMillis = currentTimeMillis - 1;}

var ellapsedMillis=currentTimeMillis - this._lastTimeMillis;
this._lastTimeMillis = currentTimeMillis;

var i=0,len=this.listeners.length;
for(i = 0;i < len;i++) {
listener = this.listeners[i];
listener.onBeforeIntegrate && listener.onBeforeIntegrate(this);}


this.advance(currentTimeMillis,ellapsedMillis);
if(this._activeSprings.length === 0){
this._isIdle = true;
this._lastTimeMillis = -1;}


for(i = 0;i < len;i++) {
listener = this.listeners[i];
listener.onAfterIntegrate && listener.onAfterIntegrate(this);}


if(!this._isIdle){
this.looper.run();}},






activateSpring:function(springId){
var spring=this._springRegistry[springId];
if(this._activeSprings.indexOf(spring) == -1){
this._activeSprings.push(spring);}

if(this.getIsIdle()){
this._isIdle = false;
this.looper.run();}},






addListener:function(listener){
this.listeners.push(listener);},



removeListener:function(listener){
removeFirst(this.listeners,listener);},



removeAllListeners:function(){
this.listeners = [];}});


















var Spring=rebound.Spring = function Spring(springSystem){
this._id = 's' + Spring._ID++;
this._springSystem = springSystem;
this.listeners = [];
this._currentState = new PhysicsState();
this._previousState = new PhysicsState();
this._tempState = new PhysicsState();};


util.extend(Spring,{
_ID:0,

MAX_DELTA_TIME_SEC:0.064,

SOLVER_TIMESTEP_SEC:0.001});



util.extend(Spring.prototype,{

_id:0,

_springConfig:null,

_overshootClampingEnabled:false,

_currentState:null,

_previousState:null,

_tempState:null,

_startValue:0,

_endValue:0,

_wasAtRest:true,

_restSpeedThreshold:0.001,

_displacementFromRestThreshold:0.001,

listeners:null,

_timeAccumulator:0,

_springSystem:null,


destroy:function(){
this.listeners = [];
this.frames = [];
this._springSystem.deregisterSpring(this);},




getId:function(){
return this._id;},





setSpringConfig:function(springConfig){
this._springConfig = springConfig;
return this;},



getSpringConfig:function(){
return this._springConfig;},





























setCurrentValue:function(currentValue,skipSetAtRest){
this._startValue = currentValue;
this._currentState.position = currentValue;
if(!skipSetAtRest){
this.setAtRest();}

this.notifyPositionUpdated(false,false);
return this;},





getStartValue:function(){
return this._startValue;},



getCurrentValue:function(){
return this._currentState.position;},




getCurrentDisplacementDistance:function(){
return this.getDisplacementDistanceForState(this._currentState);},


getDisplacementDistanceForState:function(state){
return Math.abs(this._endValue - state.position);},








setEndValue:function(endValue){
if(this._endValue == endValue && this.isAtRest()){
return this;}

this._startValue = this.getCurrentValue();
this._endValue = endValue;
this._springSystem.activateSpring(this.getId());
for(var i=0,len=this.listeners.length;i < len;i++) {
var listener=this.listeners[i];
var onChange=listener.onSpringEndStateChange;
onChange && onChange(this);}

return this;},



getEndValue:function(){
return this._endValue;},









setVelocity:function(velocity){
if(velocity === this._currentState.velocity){
return this;}

this._currentState.velocity = velocity;
this._springSystem.activateSpring(this.getId());
return this;},



getVelocity:function(){
return this._currentState.velocity;},




setRestSpeedThreshold:function(restSpeedThreshold){
this._restSpeedThreshold = restSpeedThreshold;
return this;},



getRestSpeedThreshold:function(){
return this._restSpeedThreshold;},





setRestDisplacementThreshold:function(displacementFromRestThreshold){
this._displacementFromRestThreshold = displacementFromRestThreshold;},



getRestDisplacementThreshold:function(){
return this._displacementFromRestThreshold;},







setOvershootClampingEnabled:function(enabled){
this._overshootClampingEnabled = enabled;
return this;},



isOvershootClampingEnabled:function(){
return this._overshootClampingEnabled;},





isOvershooting:function(){
var start=this._startValue;
var end=this._endValue;
return this._springConfig.tension > 0 && (
start < end && this.getCurrentValue() > end || 
start > end && this.getCurrentValue() < end);},







advance:function(time,realDeltaTime){
var isAtRest=this.isAtRest();

if(isAtRest && this._wasAtRest){
return;}


var adjustedDeltaTime=realDeltaTime;
if(realDeltaTime > Spring.MAX_DELTA_TIME_SEC){
adjustedDeltaTime = Spring.MAX_DELTA_TIME_SEC;}


this._timeAccumulator += adjustedDeltaTime;

var tension=this._springConfig.tension,
friction=this._springConfig.friction,

position=this._currentState.position,
velocity=this._currentState.velocity,
tempPosition=this._tempState.position,
tempVelocity=this._tempState.velocity,

aVelocity,aAcceleration,
bVelocity,bAcceleration,
cVelocity,cAcceleration,
dVelocity,dAcceleration,

dxdt,dvdt;

while(this._timeAccumulator >= Spring.SOLVER_TIMESTEP_SEC) {

this._timeAccumulator -= Spring.SOLVER_TIMESTEP_SEC;

if(this._timeAccumulator < Spring.SOLVER_TIMESTEP_SEC){
this._previousState.position = position;
this._previousState.velocity = velocity;}


aVelocity = velocity;
aAcceleration = 
tension * (this._endValue - tempPosition) - friction * velocity;

tempPosition = position + aVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
tempVelocity = 
velocity + aAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
bVelocity = tempVelocity;
bAcceleration = 
tension * (this._endValue - tempPosition) - friction * tempVelocity;

tempPosition = position + bVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
tempVelocity = 
velocity + bAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
cVelocity = tempVelocity;
cAcceleration = 
tension * (this._endValue - tempPosition) - friction * tempVelocity;

tempPosition = position + cVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
tempVelocity = 
velocity + cAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
dVelocity = tempVelocity;
dAcceleration = 
tension * (this._endValue - tempPosition) - friction * tempVelocity;

dxdt = 
1.0 / 6.0 * (aVelocity + 2.0 * (bVelocity + cVelocity) + dVelocity);
dvdt = 1.0 / 6.0 * (
aAcceleration + 2.0 * (bAcceleration + cAcceleration) + dAcceleration);


position += dxdt * Spring.SOLVER_TIMESTEP_SEC;
velocity += dvdt * Spring.SOLVER_TIMESTEP_SEC;}


this._tempState.position = tempPosition;
this._tempState.velocity = tempVelocity;

this._currentState.position = position;
this._currentState.velocity = velocity;

if(this._timeAccumulator > 0){
this._interpolate(this._timeAccumulator / Spring.SOLVER_TIMESTEP_SEC);}


if(this.isAtRest() || 
this._overshootClampingEnabled && this.isOvershooting()){

if(this._springConfig.tension > 0){
this._startValue = this._endValue;
this._currentState.position = this._endValue;}else 
{
this._endValue = this._currentState.position;
this._startValue = this._endValue;}

this.setVelocity(0);
isAtRest = true;}


var notifyActivate=false;
if(this._wasAtRest){
this._wasAtRest = false;
notifyActivate = true;}


var notifyAtRest=false;
if(isAtRest){
this._wasAtRest = true;
notifyAtRest = true;}


this.notifyPositionUpdated(notifyActivate,notifyAtRest);},


notifyPositionUpdated:function(notifyActivate,notifyAtRest){
for(var i=0,len=this.listeners.length;i < len;i++) {
var listener=this.listeners[i];
if(notifyActivate && listener.onSpringActivate){
listener.onSpringActivate(this);}


if(listener.onSpringUpdate){
listener.onSpringUpdate(this);}


if(notifyAtRest && listener.onSpringAtRest){
listener.onSpringAtRest(this);}}},









systemShouldAdvance:function(){
return !this.isAtRest() || !this.wasAtRest();},


wasAtRest:function(){
return this._wasAtRest;},








isAtRest:function(){
return Math.abs(this._currentState.velocity) < this._restSpeedThreshold && (
this.getDisplacementDistanceForState(this._currentState) <= 
this._displacementFromRestThreshold || 
this._springConfig.tension === 0);},






setAtRest:function(){
this._endValue = this._currentState.position;
this._tempState.position = this._currentState.position;
this._currentState.velocity = 0;
return this;},


_interpolate:function(alpha){
this._currentState.position = this._currentState.position * 
alpha + this._previousState.position * (1 - alpha);
this._currentState.velocity = this._currentState.velocity * 
alpha + this._previousState.velocity * (1 - alpha);},


getListeners:function(){
return this.listeners;},


addListener:function(newListener){
this.listeners.push(newListener);
return this;},


removeListener:function(listenerToRemove){
removeFirst(this.listeners,listenerToRemove);
return this;},


removeAllListeners:function(){
this.listeners = [];
return this;},


currentValueIsApproximately:function(value){
return Math.abs(this.getCurrentValue() - value) <= 
this.getRestDisplacementThreshold();}});









var PhysicsState=function PhysicsState(){};

util.extend(PhysicsState.prototype,{
position:0,
velocity:0});








var SpringConfig=rebound.SpringConfig = 
function SpringConfig(tension,friction){
this.tension = tension;
this.friction = friction;};







var AnimationLooper=rebound.AnimationLooper = function AnimationLooper(){
this.springSystem = null;
var _this=this;
var _run=function(){
_this.springSystem.loop(Date.now());};


this.run = function(){
util.onFrame(_run);};};









rebound.SimulationLooper = function SimulationLooper(timestep){
this.springSystem = null;
var time=0;
var running=false;
timestep = timestep || 16.667;

this.run = function(){
if(running){
return;}

running = true;
while(!this.springSystem.getIsIdle()) {
this.springSystem.loop(time += timestep);}

running = false;};};








rebound.SteppingSimulationLooper = function(timestep){
this.springSystem = null;
var time=0;



this.run = function(){};


this.step = function(timestep){
this.springSystem.loop(time += timestep);};};








var OrigamiValueConverter=rebound.OrigamiValueConverter = {
tensionFromOrigamiValue:function(oValue){
return (oValue - 30.0) * 3.62 + 194.0;},


origamiValueFromTension:function(tension){
return (tension - 194.0) / 3.62 + 30.0;},


frictionFromOrigamiValue:function(oValue){
return (oValue - 8.0) * 3.0 + 25.0;},


origamiFromFriction:function(friction){
return (friction - 25.0) / 3.0 + 8.0;}};










var BouncyConversion=rebound.BouncyConversion = function(bounciness,speed){
this.bounciness = bounciness;
this.speed = speed;
var b=this.normalize(bounciness / 1.7,0,20.0);
b = this.projectNormal(b,0.0,0.8);
var s=this.normalize(speed / 1.7,0,20.0);
this.bouncyTension = this.projectNormal(s,0.5,200);
this.bouncyFriction = this.quadraticOutInterpolation(
b,
this.b3Nobounce(this.bouncyTension),
0.01);};


util.extend(BouncyConversion.prototype,{

normalize:function(value,startValue,endValue){
return (value - startValue) / (endValue - startValue);},


projectNormal:function(n,start,end){
return start + n * (end - start);},


linearInterpolation:function(t,start,end){
return t * end + (1.0 - t) * start;},


quadraticOutInterpolation:function(t,start,end){
return this.linearInterpolation(2 * t - t * t,start,end);},


b3Friction1:function(x){
return 0.0007 * Math.pow(x,3) - 
0.031 * Math.pow(x,2) + 0.64 * x + 1.28;},


b3Friction2:function(x){
return 0.000044 * Math.pow(x,3) - 
0.006 * Math.pow(x,2) + 0.36 * x + 2.;},


b3Friction3:function(x){
return 0.00000045 * Math.pow(x,3) - 
0.000332 * Math.pow(x,2) + 0.1078 * x + 5.84;},


b3Nobounce:function(tension){
var friction=0;
if(tension <= 18){
friction = this.b3Friction1(tension);}else 
if(tension > 18 && tension <= 44){
friction = this.b3Friction2(tension);}else 
{
friction = this.b3Friction3(tension);}

return friction;}});



util.extend(SpringConfig,{




fromOrigamiTensionAndFriction:function(tension,friction){
return new SpringConfig(
OrigamiValueConverter.tensionFromOrigamiValue(tension),
OrigamiValueConverter.frictionFromOrigamiValue(friction));},





fromBouncinessAndSpeed:function(bounciness,speed){
var bouncyConversion=new rebound.BouncyConversion(bounciness,speed);
return this.fromOrigamiTensionAndFriction(
bouncyConversion.bouncyTension,
bouncyConversion.bouncyFriction);},




coastingConfigWithOrigamiFriction:function(friction){
return new SpringConfig(
0,
OrigamiValueConverter.frictionFromOrigamiValue(friction));}});




SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG = 
SpringConfig.fromOrigamiTensionAndFriction(40,7);

util.extend(SpringConfig.prototype,{friction:0,tension:0});




var colorCache={};
util.hexToRGB = function(color){
if(colorCache[color]){
return colorCache[color];}

color = color.replace('#','');
if(color.length === 3){
color = color[0] + color[0] + color[1] + color[1] + color[2] + color[2];}

var parts=color.match(/.{2}/g);

var ret={
r:parseInt(parts[0],16),
g:parseInt(parts[1],16),
b:parseInt(parts[2],16)};


colorCache[color] = ret;
return ret;};


util.rgbToHex = function(r,g,b){
r = r.toString(16);
g = g.toString(16);
b = b.toString(16);
r = r.length < 2?'0' + r:r;
g = g.length < 2?'0' + g:g;
b = b.length < 2?'0' + b:b;
return '#' + r + g + b;};


var MathUtil=rebound.MathUtil = {








mapValueInRange:function(value,fromLow,fromHigh,toLow,toHigh){
var fromRangeSize=fromHigh - fromLow;
var toRangeSize=toHigh - toLow;
var valueScale=(value - fromLow) / fromRangeSize;
return toLow + valueScale * toRangeSize;},





interpolateColor:
function(val,startColor,endColor,fromLow,fromHigh,asRGB){
fromLow = fromLow === undefined?0:fromLow;
fromHigh = fromHigh === undefined?1:fromHigh;
startColor = util.hexToRGB(startColor);
endColor = util.hexToRGB(endColor);
var r=Math.floor(
util.mapValueInRange(val,fromLow,fromHigh,startColor.r,endColor.r));

var g=Math.floor(
util.mapValueInRange(val,fromLow,fromHigh,startColor.g,endColor.g));

var b=Math.floor(
util.mapValueInRange(val,fromLow,fromHigh,startColor.b,endColor.b));

if(asRGB){
return 'rgb(' + r + ',' + g + ',' + b + ')';}else 
{
return util.rgbToHex(r,g,b);}},



degreesToRadians:function(deg){
return deg * Math.PI / 180;},


radiansToDegrees:function(rad){
return rad * 180 / Math.PI;}};




util.extend(util,MathUtil);







function removeFirst(array,item){
var idx=array.indexOf(item);
idx != -1 && array.splice(idx,1);}


var _onFrame;
if(typeof window !== 'undefined'){
_onFrame = window.requestAnimationFrame || 
window.webkitRequestAnimationFrame || 
window.mozRequestAnimationFrame || 
window.msRequestAnimationFrame || 
window.oRequestAnimationFrame || 
function(callback){
window.setTimeout(callback,1000 / 60);};}


if(!_onFrame && typeof process !== 'undefined' && process.title === 'node'){
_onFrame = setImmediate;}



util.onFrame = function onFrame(func){
return _onFrame(func);};




if(typeof exports != 'undefined'){
util.extend(exports,rebound);}else 
if(typeof window != 'undefined'){
window.rebound = rebound;}})();
});
__d('NavigatorIOS',["EventEmitter","Image","NavigationContext","NativeModules","React","StaticContainer.react","StyleSheet","View","invariant","logError","requireNativeComponent","resolveAssetSource"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var EventEmitter=require('EventEmitter');
var Image=require('Image');
var NavigationContext=require('NavigationContext');
var RCTNavigatorManager=require('NativeModules').NavigatorManager;
var React=require('React');
var StaticContainer=require('StaticContainer.react');
var StyleSheet=require('StyleSheet');
var View=require('View');

var invariant=require('invariant');
var logError=require('logError');
var requireNativeComponent=require('requireNativeComponent');
var resolveAssetSource=require('resolveAssetSource');

var TRANSITIONER_REF='transitionerRef';

var PropTypes=React.PropTypes;

var __uid=0;
function getuid(){
return __uid++;}


var NavigatorTransitionerIOS=React.createClass({displayName:'NavigatorTransitionerIOS',
requestSchedulingNavigation:function(cb){
RCTNavigatorManager.requestSchedulingJavaScriptNavigation(
React.findNodeHandle(this),
logError,
cb);},



render:function(){
return (
React.createElement(RCTNavigator,this.props));}});

























































































































var NavigatorIOS=React.createClass({displayName:'NavigatorIOS',

propTypes:{






initialRoute:PropTypes.shape({



component:PropTypes.func.isRequired,




title:PropTypes.string.isRequired,





passProps:PropTypes.object,






backButtonIcon:Image.propTypes.source,






backButtonTitle:PropTypes.string,




leftButtonIcon:Image.propTypes.source,




leftButtonTitle:PropTypes.string,




onLeftButtonPress:PropTypes.func,




rightButtonIcon:Image.propTypes.source,




rightButtonTitle:PropTypes.string,




onRightButtonPress:PropTypes.func,




wrapperStyle:View.propTypes.style}).

isRequired,




navigationBarHidden:PropTypes.bool,




shadowHidden:PropTypes.bool,





itemWrapperStyle:View.propTypes.style,




tintColor:PropTypes.string,




barTintColor:PropTypes.string,




titleTextColor:PropTypes.string,




translucent:PropTypes.bool},



navigator:undefined,
navigationContext:new NavigationContext(),

componentWillMount:function(){


this.navigator = {
push:this.push,
pop:this.pop,
popN:this.popN,
replace:this.replace,
replacePrevious:this.replacePrevious,
replacePreviousAndPop:this.replacePreviousAndPop,
resetTo:this.resetTo,
popToRoute:this.popToRoute,
popToTop:this.popToTop,
navigationContext:this.navigationContext};

this._emitWillFocus(this.state.routeStack[this.state.observedTopOfStack]);},


componentDidMount:function(){
this._emitDidFocus(this.state.routeStack[this.state.observedTopOfStack]);},


componentWillUnmount:function(){
this.navigationContext.dispose();
this.navigationContext = new NavigationContext();},


getInitialState:function(){
return {
idStack:[getuid()],
routeStack:[this.props.initialRoute],

requestedTopOfStack:0,






observedTopOfStack:0,
progress:1,
fromIndex:0,
toIndex:0,


makingNavigatorRequest:false,



updatingAllIndicesAtOrBeyond:0};},



_toFocusOnNavigationComplete:undefined,

_handleFocusRequest:function(item){
if(this.state.makingNavigatorRequest){
this._toFocusOnNavigationComplete = item;}else 
{
this._getFocusEmitter().emit('focus',item);}},



_focusEmitter:undefined,

_getFocusEmitter:function(){

var focusEmitter=this._focusEmitter;
if(!focusEmitter){
focusEmitter = new EventEmitter();
this._focusEmitter = focusEmitter;}

return focusEmitter;},


getChildContext:function()


{
return {
onFocusRequested:this._handleFocusRequest,
focusEmitter:this._getFocusEmitter()};},



childContextTypes:{
onFocusRequested:React.PropTypes.func,
focusEmitter:React.PropTypes.instanceOf(EventEmitter)},


_tryLockNavigator:function(cb){
this.refs[TRANSITIONER_REF].requestSchedulingNavigation(
function(acquiredLock){return acquiredLock && cb();});},



_handleNavigatorStackChanged:function(e){
var newObservedTopOfStack=e.nativeEvent.stackLength - 1;
this._emitDidFocus(this.state.routeStack[newObservedTopOfStack]);

invariant(
newObservedTopOfStack <= this.state.requestedTopOfStack,
'No navigator item should be pushed without JS knowing about it %s %s',newObservedTopOfStack,this.state.requestedTopOfStack);

var wasWaitingForConfirmation=
this.state.requestedTopOfStack !== this.state.observedTopOfStack;
if(wasWaitingForConfirmation){
invariant(
newObservedTopOfStack === this.state.requestedTopOfStack,
'If waiting for observedTopOfStack to reach requestedTopOfStack, ' + 
'the only valid observedTopOfStack should be requestedTopOfStack.');}











var nextState={
observedTopOfStack:newObservedTopOfStack,
makingNavigatorRequest:false,
updatingAllIndicesAtOrBeyond:null,
progress:1,
toIndex:newObservedTopOfStack,
fromIndex:newObservedTopOfStack};

this.setState(nextState,this._eliminateUnneededChildren);},


_eliminateUnneededChildren:function(){



var updatingAllIndicesAtOrBeyond=
this.state.routeStack.length > this.state.observedTopOfStack + 1?
this.state.observedTopOfStack + 1:
null;
this.setState({
idStack:this.state.idStack.slice(0,this.state.observedTopOfStack + 1),
routeStack:this.state.routeStack.slice(0,this.state.observedTopOfStack + 1),

requestedTopOfStack:this.state.observedTopOfStack,
makingNavigatorRequest:true,
updatingAllIndicesAtOrBeyond:updatingAllIndicesAtOrBeyond});},



_emitDidFocus:function(route){
this.navigationContext.emit('didfocus',{route:route});},


_emitWillFocus:function(route){
this.navigationContext.emit('willfocus',{route:route});},


push:function(route){var _this=this;
invariant(!!route,'Must supply route to push');

if(this.state.requestedTopOfStack === this.state.observedTopOfStack){
this._tryLockNavigator(function(){
_this._emitWillFocus(route);

var nextStack=_this.state.routeStack.concat([route]);
var nextIDStack=_this.state.idStack.concat([getuid()]);
_this.setState({


idStack:nextIDStack,
routeStack:nextStack,
requestedTopOfStack:nextStack.length - 1,
makingNavigatorRequest:true,
updatingAllIndicesAtOrBeyond:nextStack.length - 1});});}},





popN:function(n){var _this2=this;
if(n === 0){
return;}


if(this.state.requestedTopOfStack === this.state.observedTopOfStack){
if(this.state.requestedTopOfStack > 0){
this._tryLockNavigator(function(){
var newRequestedTopOfStack=_this2.state.requestedTopOfStack - n;
invariant(newRequestedTopOfStack >= 0,'Cannot pop below 0');
_this2._emitWillFocus(_this2.state.routeStack[newRequestedTopOfStack]);
_this2.setState({
requestedTopOfStack:newRequestedTopOfStack,
makingNavigatorRequest:true,


updatingAllIndicesAtOrBeyond:null});});}}},






pop:function(){
this.popN(1);},








replaceAtIndex:function(route,index){
invariant(!!route,'Must supply route to replace');
if(index < 0){
index += this.state.routeStack.length;}


if(this.state.routeStack.length <= index){
return;}




var nextIDStack=this.state.idStack.slice();
var nextRouteStack=this.state.routeStack.slice();
nextIDStack[index] = getuid();
nextRouteStack[index] = route;

this.setState({
idStack:nextIDStack,
routeStack:nextRouteStack,
makingNavigatorRequest:false,
updatingAllIndicesAtOrBeyond:index});


this._emitWillFocus(route);
this._emitDidFocus(route);},





replace:function(route){
this.replaceAtIndex(route,-1);},





replacePrevious:function(route){
this.replaceAtIndex(route,-2);},


popToTop:function(){
this.popToRoute(this.state.routeStack[0]);},


popToRoute:function(route){
var indexOfRoute=this.state.routeStack.indexOf(route);
invariant(
indexOfRoute !== -1,
'Calling pop to route for a route that doesn\'t exist!');

var numToPop=this.state.routeStack.length - indexOfRoute - 1;
this.popN(numToPop);},


replacePreviousAndPop:function(route){var _this3=this;

if(this.state.requestedTopOfStack !== this.state.observedTopOfStack){
return;}

if(this.state.routeStack.length < 2){
return;}

this._tryLockNavigator(function(){
_this3.replacePrevious(route);
_this3.setState({
requestedTopOfStack:_this3.state.requestedTopOfStack - 1,
makingNavigatorRequest:true});});},




resetTo:function(route){
invariant(!!route,'Must supply route to push');

if(this.state.requestedTopOfStack !== this.state.observedTopOfStack){
return;}

this.replaceAtIndex(route,0);
this.popToRoute(route);},


handleNavigationComplete:function(e){
if(this._toFocusOnNavigationComplete){
this._getFocusEmitter().emit('focus',this._toFocusOnNavigationComplete);
this._toFocusOnNavigationComplete = null;}

this._handleNavigatorStackChanged(e);},


_routeToStackItem:function(route,i){
var Component=route.component;
var shouldUpdateChild=this.state.updatingAllIndicesAtOrBeyond !== null && 
this.state.updatingAllIndicesAtOrBeyond >= i;

return (
React.createElement(StaticContainer,{key:'nav' + i,shouldUpdate:shouldUpdateChild},
React.createElement(RCTNavigatorItem,{
title:route.title,
style:[
styles.stackItem,
this.props.itemWrapperStyle,
route.wrapperStyle],

backButtonIcon:resolveAssetSource(route.backButtonIcon),
backButtonTitle:route.backButtonTitle,
leftButtonIcon:resolveAssetSource(route.leftButtonIcon),
leftButtonTitle:route.leftButtonTitle,
onNavLeftButtonTap:route.onLeftButtonPress,
rightButtonIcon:resolveAssetSource(route.rightButtonIcon),
rightButtonTitle:route.rightButtonTitle,
onNavRightButtonTap:route.onRightButtonPress,
navigationBarHidden:this.props.navigationBarHidden,
shadowHidden:this.props.shadowHidden,
tintColor:this.props.tintColor,
barTintColor:this.props.barTintColor,
translucent:this.props.translucent !== false,
titleTextColor:this.props.titleTextColor},
React.createElement(Component,_extends({
navigator:this.navigator,
route:route},
route.passProps)))));},






renderNavigationStackItems:function(){
var shouldRecurseToNavigator=
this.state.makingNavigatorRequest || 
this.state.updatingAllIndicesAtOrBeyond !== null;


var items=shouldRecurseToNavigator?
this.state.routeStack.map(this._routeToStackItem):null;
return (
React.createElement(StaticContainer,{shouldUpdate:shouldRecurseToNavigator},
React.createElement(NavigatorTransitionerIOS,{
ref:TRANSITIONER_REF,
style:styles.transitioner,
vertical:this.props.vertical,
requestedTopOfStack:this.state.requestedTopOfStack,
onNavigationComplete:this.handleNavigationComplete},
items)));},





render:function(){
return (
React.createElement(View,{style:this.props.style},
this.renderNavigationStackItems()));}});





var styles=StyleSheet.create({
stackItem:{
backgroundColor:'white',
overflow:'hidden',
position:'absolute',
top:0,
left:0,
right:0,
bottom:0},

transitioner:{
flex:1}});



var RCTNavigator=requireNativeComponent('RCTNavigator');
var RCTNavigatorItem=requireNativeComponent('RCTNavItem');

module.exports = NavigatorIOS;
});
__d('PickerIOS',["NativeMethodsMixin","React","ReactChildren","ReactNativeViewAttributes","NativeModules","StyleSheet","View","requireNativeComponent","merge"],function(global, require, module, exports) {  'use strict';













var NativeMethodsMixin=require('NativeMethodsMixin');
var React=require('React');
var ReactChildren=require('ReactChildren');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var RCTPickerIOSConsts=require('NativeModules').UIManager.RCTPicker.Constants;
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');
var merge=require('merge');

var PICKER='picker';

var PickerIOS=React.createClass({displayName:'PickerIOS',
mixins:[NativeMethodsMixin],

propTypes:{
onValueChange:React.PropTypes.func,
selectedValue:React.PropTypes.any},


getInitialState:function(){
return this._stateFromProps(this.props);},


componentWillReceiveProps:function(nextProps){
this.setState(this._stateFromProps(nextProps));},



_stateFromProps:function(props){
var selectedIndex=0;
var items=[];
ReactChildren.forEach(props.children,function(child,index){
if(child.props.value === props.selectedValue){
selectedIndex = index;}

items.push({value:child.props.value,label:child.props.label});});

return {selectedIndex:selectedIndex,items:items};},


render:function(){
return (
React.createElement(View,{style:this.props.style},
React.createElement(RCTPickerIOS,{
ref:PICKER,
style:styles.pickerIOS,
items:this.state.items,
selectedIndex:this.state.selectedIndex,
onChange:this._onChange})));},





_onChange:function(event){
if(this.props.onChange){
this.props.onChange(event);}

if(this.props.onValueChange){
this.props.onValueChange(event.nativeEvent.newValue);}








if(this.state.selectedIndex !== event.nativeEvent.newIndex){
this.refs[PICKER].setNativeProps({
selectedIndex:this.state.selectedIndex});}}});





PickerIOS.Item = React.createClass({displayName:'Item',
propTypes:{
value:React.PropTypes.any,
label:React.PropTypes.string},


render:function(){

return null;}});



var styles=StyleSheet.create({
pickerIOS:{



height:RCTPickerIOSConsts.ComponentHeight}});



var RCTPickerIOS=requireNativeComponent('RCTPicker',PickerIOS,{
nativeOnly:{
items:true,
onChange:true,
selectedIndex:true}});



module.exports = PickerIOS;
});
__d('ProgressBarAndroid',["UnimplementedView"],function(global, require, module, exports) {  'use strict';











module.exports = require('UnimplementedView');
});
__d('ProgressViewIOS',["Image","NativeMethodsMixin","NativeModules","ReactPropTypes","React","StyleSheet","requireNativeComponent"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var Image=require('Image');
var NativeMethodsMixin=require('NativeMethodsMixin');
var NativeModules=require('NativeModules');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');

var requireNativeComponent=require('requireNativeComponent');




var ProgressViewIOS=React.createClass({displayName:'ProgressViewIOS',
mixins:[NativeMethodsMixin],

propTypes:{



progressViewStyle:PropTypes.oneOf(['default','bar']),




progress:PropTypes.number,




progressTintColor:PropTypes.string,




trackTintColor:PropTypes.string,




progressImage:Image.propTypes.source,




trackImage:Image.propTypes.source},


render:function(){
return (
React.createElement(RCTProgressView,_extends({},
this.props,{
style:[styles.progressView,this.props.style]})));}});





var styles=StyleSheet.create({
progressView:{
height:NativeModules.ProgressViewManager.ComponentHeight}});



var RCTProgressView=requireNativeComponent(
'RCTProgressView',
ProgressViewIOS);


module.exports = ProgressViewIOS;
});
__d('SegmentedControlIOS',["NativeMethodsMixin","NativeModules","ReactPropTypes","React","StyleSheet","requireNativeComponent"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var NativeMethodsMixin=require('NativeMethodsMixin');
var NativeModules=require('NativeModules');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');

var requireNativeComponent=require('requireNativeComponent');






var SEGMENTED_CONTROL_REFERENCE='segmentedcontrol';






var SegmentedControlIOS=React.createClass({displayName:'SegmentedControlIOS',
mixins:[NativeMethodsMixin],

propTypes:{



values:PropTypes.arrayOf(PropTypes.string),




selectedIndex:PropTypes.number,





onValueChange:PropTypes.func,





onChange:PropTypes.func,





enabled:PropTypes.bool,




tintColor:PropTypes.string,





momentary:PropTypes.bool},


getDefaultProps:function(){
return {
values:[],
enabled:true};},



_onChange:function(event){
this.props.onChange && this.props.onChange(event);
this.props.onValueChange && this.props.onValueChange(event.nativeEvent.value);},


render:function(){
return (
React.createElement(RCTSegmentedControl,_extends({},
this.props,{
ref:SEGMENTED_CONTROL_REFERENCE,
style:[styles.segmentedControl,this.props.style],
onChange:this._onChange})));}});





var styles=StyleSheet.create({
segmentedControl:{
height:NativeModules.SegmentedControlManager.ComponentHeight}});



var RCTSegmentedControl=requireNativeComponent(
'RCTSegmentedControl',
SegmentedControlIOS);


module.exports = SegmentedControlIOS;
});
__d('SliderIOS',["NativeMethodsMixin","ReactPropTypes","React","StyleSheet","View","requireNativeComponent"],function(global, require, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');



var SliderIOS=React.createClass({displayName:'SliderIOS',
mixins:[NativeMethodsMixin],

propTypes:{




style:View.propTypes.style,









value:PropTypes.number,




minimumValue:PropTypes.number,




maximumValue:PropTypes.number,





minimumTrackTintColor:PropTypes.string,





maximumTrackTintColor:PropTypes.string,




onValueChange:PropTypes.func,





onSlidingComplete:PropTypes.func},


_onValueChange:function(event){
this.props.onChange && this.props.onChange(event);
if(event.nativeEvent.continuous){
this.props.onValueChange && 
this.props.onValueChange(event.nativeEvent.value);}else 
{
this.props.onSlidingComplete && event.nativeEvent.value !== undefined && 
this.props.onSlidingComplete(event.nativeEvent.value);}},



render:function(){
return (
React.createElement(RCTSlider,{
style:[styles.slider,this.props.style],
value:this.props.value,
maximumValue:this.props.maximumValue,
minimumValue:this.props.minimumValue,
minimumTrackTintColor:this.props.minimumTrackTintColor,
maximumTrackTintColor:this.props.maximumTrackTintColor,
onChange:this._onValueChange}));}});





var styles=StyleSheet.create({
slider:{
height:40}});



var RCTSlider=requireNativeComponent('RCTSlider',SliderIOS,{
nativeOnly:{onChange:true}});


module.exports = SliderIOS;
});
__d('SnapshotView',["Platform","React","StyleSheet","NativeModules","View","requireNativeComponent"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var Platform=require('Platform');
var React=require('React');
var StyleSheet=require('StyleSheet');var _require=
require('NativeModules');var TestModule=_require.TestModule;
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');

var SnapshotView=React.createClass({displayName:'SnapshotView',
onDefaultAction:function(event){
TestModule.verifySnapshot(TestModule.markTestPassed);},


render:function(){
var testIdentifier=this.props.testIdentifier || 'test';
var onSnapshotReady=this.props.onSnapshotReady || this.onDefaultAction;
return (
React.createElement(RCTSnapshot,_extends({
style:style.snapshot},
this.props,{
onSnapshotReady:onSnapshotReady,
testIdentifier:testIdentifier})));},




propTypes:{

onSnapshotReady:React.PropTypes.func,

testIdentifier:React.PropTypes.string}});



var style=StyleSheet.create({
snapshot:{
flex:1}});



var RCTSnapshot=Platform.OS === 'ios'?
requireNativeComponent('RCTSnapshot',SnapshotView):
View;

module.exports = SnapshotView;
});
__d('Switch',["Platform","NativeMethodsMixin","React","StyleSheet","requireNativeComponent"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};







var Platform=require('Platform');
var NativeMethodsMixin=require('NativeMethodsMixin');
var React=require('React');
var StyleSheet=require('StyleSheet');

var requireNativeComponent=require('requireNativeComponent');









var Switch=React.createClass({displayName:'Switch',
propTypes:{




value:React.PropTypes.bool,




disabled:React.PropTypes.bool,



onValueChange:React.PropTypes.func,



testID:React.PropTypes.string,





tintColor:React.PropTypes.string,




onTintColor:React.PropTypes.string,




thumbTintColor:React.PropTypes.string},


getDefaultProps:function(){
return {
value:false,
disabled:false};},



mixins:[NativeMethodsMixin],

_rctSwitch:{},
_onChange:function(event){
this.props.onChange && this.props.onChange(event);
this.props.onValueChange && this.props.onValueChange(event.nativeEvent.value);



if(Platform.OS === 'android'){
this._rctSwitch.setNativeProps({on:this.props.value});}else 
{
this._rctSwitch.setNativeProps({value:this.props.value});}},



render:function(){var _this=this;
var props=_extends({},this.props);
props.onStartShouldSetResponder = function(){return true;};
props.onResponderTerminationRequest = function(){return false;};
if(Platform.OS === 'android'){
props.enabled = !this.props.disabled;
props.on = this.props.value;
props.style = [styles.rctSwitchAndroid,this.props.style];}else 
if(Platform.OS === 'ios'){
props.style = [styles.rctSwitchIOS,this.props.style];}

return (
React.createElement(RCTSwitch,_extends({},
props,{
ref:function(ref){_this._rctSwitch = ref;},
onChange:this._onChange})));}});





var styles=StyleSheet.create({
rctSwitchIOS:{
height:31,
width:51},

rctSwitchAndroid:{
height:27,
width:40}});



if(Platform.OS === 'android'){
var RCTSwitch=requireNativeComponent('AndroidSwitch',null,{
nativeOnly:{onChange:true,on:true,enabled:true}});}else 

{
var RCTSwitch=requireNativeComponent('RCTSwitch',Switch,{
nativeOnly:{onChange:true}});}



module.exports = Switch;
});
__d('SwitchAndroid',["UnimplementedView"],function(global, require, module, exports) {  'use strict';











module.exports = require('UnimplementedView');
});
__d('SwitchIOS',["NativeMethodsMixin","ReactPropTypes","React","StyleSheet","requireNativeComponent"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};














var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');

var requireNativeComponent=require('requireNativeComponent');

var SWITCH='switch';















var SwitchIOS=React.createClass({displayName:'SwitchIOS',
mixins:[NativeMethodsMixin],

propTypes:{




value:PropTypes.bool,





disabled:PropTypes.bool,




onValueChange:PropTypes.func,




onTintColor:PropTypes.string,




thumbTintColor:PropTypes.string,




tintColor:PropTypes.string},


getDefaultProps:function(){
return {
value:false,
disabled:false};},



_onChange:function(event){


this.refs[SWITCH].setNativeProps({value:this.props.value});

if(this.props.value === event.nativeEvent.value || this.props.disabled){
return;}


this.props.onChange && this.props.onChange(event);
this.props.onValueChange && this.props.onValueChange(event.nativeEvent.value);},


render:function(){
return (
React.createElement(RCTSwitch,_extends({},
this.props,{
ref:SWITCH,
onChange:this._onChange,
style:[styles.rkSwitch,this.props.style]})));}});





var styles=StyleSheet.create({
rkSwitch:{
height:31,
width:51}});



var RCTSwitch=requireNativeComponent('RCTSwitch',SwitchIOS,{
nativeOnly:{onChange:true}});


module.exports = SwitchIOS;
});
__d('TabBarIOS',["React","StyleSheet","TabBarItemIOS","View","requireNativeComponent"],function(global, require, module, exports) {  'use strict';












var React=require('React');
var StyleSheet=require('StyleSheet');
var TabBarItemIOS=require('TabBarItemIOS');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');

var TabBarIOS=React.createClass({displayName:'TabBarIOS',
statics:{
Item:TabBarItemIOS},


propTypes:{
style:View.propTypes.style,



tintColor:React.PropTypes.string,



barTintColor:React.PropTypes.string,



translucent:React.PropTypes.bool},


render:function(){
return (
React.createElement(RCTTabBar,{
style:[styles.tabGroup,this.props.style],
tintColor:this.props.tintColor,
barTintColor:this.props.barTintColor,
translucent:this.props.translucent !== false},
this.props.children));}});





var styles=StyleSheet.create({
tabGroup:{
flex:1}});



var RCTTabBar=requireNativeComponent('RCTTabBar',TabBarIOS);

module.exports = TabBarIOS;
});
__d('TabBarItemIOS',["Image","React","StaticContainer.react","StyleSheet","View","resolveAssetSource","requireNativeComponent"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};











var Image=require('Image');
var React=require('React');
var StaticContainer=require('StaticContainer.react');
var StyleSheet=require('StyleSheet');
var View=require('View');
var resolveAssetSource=require('resolveAssetSource');

var requireNativeComponent=require('requireNativeComponent');

var TabBarItemIOS=React.createClass({displayName:'TabBarItemIOS',
propTypes:{



badge:React.PropTypes.oneOfType([
React.PropTypes.string,
React.PropTypes.number]),






systemIcon:React.PropTypes.oneOf([
'bookmarks',
'contacts',
'downloads',
'favorites',
'featured',
'history',
'more',
'most-recent',
'most-viewed',
'recents',
'search',
'top-rated']),




icon:Image.propTypes.source,




selectedIcon:Image.propTypes.source,




onPress:React.PropTypes.func,




selected:React.PropTypes.bool,



style:View.propTypes.style,




title:React.PropTypes.string},


getInitialState:function(){
return {
hasBeenSelected:false};},



componentWillMount:function(){
if(this.props.selected){
this.setState({hasBeenSelected:true});}},



componentWillReceiveProps:function(nextProps){
if(this.state.hasBeenSelected || nextProps.selected){
this.setState({hasBeenSelected:true});}},



render:function(){
var tabContents=null;


if(this.state.hasBeenSelected){
tabContents = 
React.createElement(StaticContainer,{shouldUpdate:this.props.selected},
this.props.children);}else 

{
tabContents = React.createElement(View,null);}


var badge=typeof this.props.badge === 'number'?
'' + this.props.badge:
this.props.badge;

return (
React.createElement(RCTTabBarItem,_extends({},
this.props,{
icon:this.props.systemIcon || resolveAssetSource(this.props.icon),
selectedIcon:resolveAssetSource(this.props.selectedIcon),
badge:badge,
style:[styles.tab,this.props.style]}),
tabContents));}});





var styles=StyleSheet.create({
tab:{
position:'absolute',
top:0,
right:0,
bottom:0,
left:0}});



var RCTTabBarItem=requireNativeComponent('RCTTabBarItem',TabBarItemIOS);

module.exports = TabBarItemIOS;
});
__d('Text',["NativeMethodsMixin","Platform","React","ReactInstanceMap","ReactNativeViewAttributes","StyleSheetPropType","TextStylePropTypes","Touchable","createReactNativeComponentClass","merge"],function(global, require, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var Platform=require('Platform');
var React=require('React');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheetPropType=require('StyleSheetPropType');
var TextStylePropTypes=require('TextStylePropTypes');
var Touchable=require('Touchable');

var createReactNativeComponentClass=
require('createReactNativeComponentClass');
var merge=require('merge');

var stylePropType=StyleSheetPropType(TextStylePropTypes);

var viewConfig={
validAttributes:merge(ReactNativeViewAttributes.UIView,{
isHighlighted:true,
numberOfLines:true,
allowFontScaling:true}),

uiViewClassName:'RCTText'};



































var Text=React.createClass({displayName:'Text',

mixins:[Touchable.Mixin,NativeMethodsMixin],

propTypes:{





numberOfLines:React.PropTypes.number,





onLayout:React.PropTypes.func,



onPress:React.PropTypes.func,





suppressHighlighting:React.PropTypes.bool,
style:stylePropType,



testID:React.PropTypes.string,



allowFontScaling:React.PropTypes.bool},


viewConfig:viewConfig,

getInitialState:function(){
return merge(this.touchableGetInitialState(),{
isHighlighted:false});},



getDefaultProps:function(){
return {
allowFontScaling:true};},



onStartShouldSetResponder:function(){
var shouldSetFromProps=this.props.onStartShouldSetResponder && 
this.props.onStartShouldSetResponder();
return shouldSetFromProps || !!this.props.onPress;},





handleResponderTerminationRequest:function(){


var allowTermination=this.touchableHandleResponderTerminationRequest();
if(allowTermination && this.props.onResponderTerminationRequest){
allowTermination = this.props.onResponderTerminationRequest();}

return allowTermination;},


handleResponderGrant:function(e,dispatchID){
this.touchableHandleResponderGrant(e,dispatchID);
this.props.onResponderGrant && 
this.props.onResponderGrant.apply(this,arguments);},


handleResponderMove:function(e){
this.touchableHandleResponderMove(e);
this.props.onResponderMove && 
this.props.onResponderMove.apply(this,arguments);},


handleResponderRelease:function(e){
this.touchableHandleResponderRelease(e);
this.props.onResponderRelease && 
this.props.onResponderRelease.apply(this,arguments);},


handleResponderTerminate:function(e){
this.touchableHandleResponderTerminate(e);
this.props.onResponderTerminate && 
this.props.onResponderTerminate.apply(this,arguments);},


touchableHandleActivePressIn:function(){
if(this.props.suppressHighlighting || !this.props.onPress){
return;}

this.setState({
isHighlighted:true});},



touchableHandleActivePressOut:function(){
if(this.props.suppressHighlighting || !this.props.onPress){
return;}

this.setState({
isHighlighted:false});},



touchableHandlePress:function(){
this.props.onPress && this.props.onPress();},


touchableGetPressRectOffset:function(){
return PRESS_RECT_OFFSET;},


getChildContext:function(){
return {isInAParentText:true};},


childContextTypes:{
isInAParentText:React.PropTypes.bool},


render:function(){
var props={};
for(var key in this.props) {
props[key] = this.props[key];}


if(props.accessible !== false){
props.accessible = true;}

props.isHighlighted = this.state.isHighlighted;
props.onStartShouldSetResponder = this.onStartShouldSetResponder;
props.onResponderTerminationRequest = 
this.handleResponderTerminationRequest;
props.onResponderGrant = this.handleResponderGrant;
props.onResponderMove = this.handleResponderMove;
props.onResponderRelease = this.handleResponderRelease;
props.onResponderTerminate = this.handleResponderTerminate;


var context=ReactInstanceMap.get(this)._context;
if(context.isInAParentText){
return React.createElement(RCTVirtualText,props);}else 
{
return React.createElement(RCTText,props);}}});











var PRESS_RECT_OFFSET={top:20,left:20,right:20,bottom:30};

var RCTText=createReactNativeComponentClass(viewConfig);
var RCTVirtualText=RCTText;

if(Platform.OS === 'android'){
RCTVirtualText = createReactNativeComponentClass({
validAttributes:merge(ReactNativeViewAttributes.UIView,{
isHighlighted:true}),

uiViewClassName:'RCTVirtualText'});}



module.exports = Text;
});
__d('Touchable',["BoundingDimensions","Position","TouchEventUtils","keyMirror","queryLayoutByID"],function(global, require, module, exports) {  'use strict';





var BoundingDimensions=require('BoundingDimensions');
var Position=require('Position');
var TouchEventUtils=require('TouchEventUtils');

var keyMirror=require('keyMirror');
var queryLayoutByID=require('queryLayoutByID');

























































































var States=keyMirror({
NOT_RESPONDER:null,
RESPONDER_INACTIVE_PRESS_IN:null,
RESPONDER_INACTIVE_PRESS_OUT:null,
RESPONDER_ACTIVE_PRESS_IN:null,
RESPONDER_ACTIVE_PRESS_OUT:null,
RESPONDER_ACTIVE_LONG_PRESS_IN:null,
RESPONDER_ACTIVE_LONG_PRESS_OUT:null,
ERROR:null});





var IsActive={
RESPONDER_ACTIVE_PRESS_OUT:true,
RESPONDER_ACTIVE_PRESS_IN:true};






var IsPressingIn={
RESPONDER_INACTIVE_PRESS_IN:true,
RESPONDER_ACTIVE_PRESS_IN:true,
RESPONDER_ACTIVE_LONG_PRESS_IN:true};


var IsLongPressingIn={
RESPONDER_ACTIVE_LONG_PRESS_IN:true};





var Signals=keyMirror({
DELAY:null,
RESPONDER_GRANT:null,
RESPONDER_RELEASE:null,
RESPONDER_TERMINATED:null,
ENTER_PRESS_RECT:null,
LEAVE_PRESS_RECT:null,
LONG_PRESS_DETECTED:null});





var Transitions={
NOT_RESPONDER:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.RESPONDER_INACTIVE_PRESS_IN,
RESPONDER_RELEASE:States.ERROR,
RESPONDER_TERMINATED:States.ERROR,
ENTER_PRESS_RECT:States.ERROR,
LEAVE_PRESS_RECT:States.ERROR,
LONG_PRESS_DETECTED:States.ERROR},

RESPONDER_INACTIVE_PRESS_IN:{
DELAY:States.RESPONDER_ACTIVE_PRESS_IN,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_OUT,
LONG_PRESS_DETECTED:States.ERROR},

RESPONDER_INACTIVE_PRESS_OUT:{
DELAY:States.RESPONDER_ACTIVE_PRESS_OUT,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_OUT,
LONG_PRESS_DETECTED:States.ERROR},

RESPONDER_ACTIVE_PRESS_IN:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_OUT,
LONG_PRESS_DETECTED:States.RESPONDER_ACTIVE_LONG_PRESS_IN},

RESPONDER_ACTIVE_PRESS_OUT:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_OUT,
LONG_PRESS_DETECTED:States.ERROR},

RESPONDER_ACTIVE_LONG_PRESS_IN:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_OUT,
LONG_PRESS_DETECTED:States.RESPONDER_ACTIVE_LONG_PRESS_IN},

RESPONDER_ACTIVE_LONG_PRESS_OUT:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_OUT,
LONG_PRESS_DETECTED:States.ERROR},

error:{
DELAY:States.NOT_RESPONDER,
RESPONDER_GRANT:States.RESPONDER_INACTIVE_PRESS_IN,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.NOT_RESPONDER,
LEAVE_PRESS_RECT:States.NOT_RESPONDER,
LONG_PRESS_DETECTED:States.NOT_RESPONDER}};






var HIGHLIGHT_DELAY_MS=130;

var PRESS_EXPAND_PX=20;

var LONG_PRESS_THRESHOLD=500;

var LONG_PRESS_DELAY_MS=LONG_PRESS_THRESHOLD - HIGHLIGHT_DELAY_MS;

var LONG_PRESS_ALLOWED_MOVEMENT=10;



































































var TouchableMixin={



componentWillUnmount:function(){
this.touchableDelayTimeout && clearTimeout(this.touchableDelayTimeout);
this.longPressDelayTimeout && clearTimeout(this.longPressDelayTimeout);
this.pressOutDelayTimeout && clearTimeout(this.pressOutDelayTimeout);},









touchableGetInitialState:function(){
return {
touchable:{touchState:undefined,responderID:null}};},







touchableHandleResponderTerminationRequest:function(){
return !this.props.rejectResponderTermination;},





touchableHandleStartShouldSetResponder:function(){
return true;},





touchableLongPressCancelsPress:function(){
return true;},








touchableHandleResponderGrant:function(e,dispatchID){



e.persist();

this.pressOutDelayTimeout && clearTimeout(this.pressOutDelayTimeout);
this.pressOutDelayTimeout = null;

this.state.touchable.touchState = States.NOT_RESPONDER;
this.state.touchable.responderID = dispatchID;
this._receiveSignal(Signals.RESPONDER_GRANT,e);
var delayMS=
this.touchableGetHighlightDelayMS !== undefined?
Math.max(this.touchableGetHighlightDelayMS(),0):HIGHLIGHT_DELAY_MS;
delayMS = isNaN(delayMS)?HIGHLIGHT_DELAY_MS:delayMS;
if(delayMS !== 0){
this.touchableDelayTimeout = setTimeout(
this._handleDelay.bind(this,e),
delayMS);}else 

{
this._handleDelay(e);}


var longDelayMS=
this.touchableGetLongPressDelayMS !== undefined?
Math.max(this.touchableGetLongPressDelayMS(),10):LONG_PRESS_DELAY_MS;
longDelayMS = isNaN(longDelayMS)?LONG_PRESS_DELAY_MS:longDelayMS;
this.longPressDelayTimeout = setTimeout(
this._handleLongDelay.bind(this,e),
longDelayMS + delayMS);},






touchableHandleResponderRelease:function(e){
this._receiveSignal(Signals.RESPONDER_RELEASE,e);},





touchableHandleResponderTerminate:function(e){
this._receiveSignal(Signals.RESPONDER_TERMINATED,e);},





touchableHandleResponderMove:function(e){


if(this.state.touchable.touchState === States.RESPONDER_INACTIVE_PRESS_IN){
return;}



if(!this.state.touchable.positionOnActivate){
return;}


var positionOnActivate=this.state.touchable.positionOnActivate;
var dimensionsOnActivate=this.state.touchable.dimensionsOnActivate;
var pressRectOffset=this.touchableGetPressRectOffset?
this.touchableGetPressRectOffset():null;
var pressExpandLeft=
pressRectOffset.left != null?pressRectOffset.left:PRESS_EXPAND_PX;
var pressExpandTop=
pressRectOffset.top != null?pressRectOffset.top:PRESS_EXPAND_PX;
var pressExpandRight=
pressRectOffset.right != null?pressRectOffset.right:PRESS_EXPAND_PX;
var pressExpandBottom=
pressRectOffset.bottom != null?pressRectOffset.bottom:PRESS_EXPAND_PX;

var touch=TouchEventUtils.extractSingleTouch(e.nativeEvent);
var pageX=touch && touch.pageX;
var pageY=touch && touch.pageY;

if(this.pressInLocation){
var movedDistance=this._getDistanceBetweenPoints(pageX,pageY,this.pressInLocation.pageX,this.pressInLocation.pageY);
if(movedDistance > LONG_PRESS_ALLOWED_MOVEMENT){
this._cancelLongPressDelayTimeout();}}



var isTouchWithinActive=
pageX > positionOnActivate.left - pressExpandLeft && 
pageY > positionOnActivate.top - pressExpandTop && 
pageX < 
positionOnActivate.left + 
dimensionsOnActivate.width + 
pressExpandRight && 
pageY < 
positionOnActivate.top + 
dimensionsOnActivate.height + 
pressExpandBottom;
if(isTouchWithinActive){
this._receiveSignal(Signals.ENTER_PRESS_RECT,e);}else 
{
this._cancelLongPressDelayTimeout();
this._receiveSignal(Signals.LEAVE_PRESS_RECT,e);}},

















































































_remeasureMetricsOnActivation:function(){
queryLayoutByID(
this.state.touchable.responderID,
null,
this._handleQueryLayout);},



_handleQueryLayout:function(l,t,w,h,globalX,globalY){
this.state.touchable.positionOnActivate && 
Position.release(this.state.touchable.positionOnActivate);
this.state.touchable.dimensionsOnActivate && 
BoundingDimensions.release(this.state.touchable.dimensionsOnActivate);
this.state.touchable.positionOnActivate = Position.getPooled(globalX,globalY);
this.state.touchable.dimensionsOnActivate = BoundingDimensions.getPooled(w,h);},


_handleDelay:function(e){
this.touchableDelayTimeout = null;
this._receiveSignal(Signals.DELAY,e);},


_handleLongDelay:function(e){
this.longPressDelayTimeout = null;
this._receiveSignal(Signals.LONG_PRESS_DETECTED,e);},










_receiveSignal:function(signal,e){
var curState=this.state.touchable.touchState;
if(!(Transitions[curState] && Transitions[curState][signal])){
throw new Error(
'Unrecognized signal `' + signal + '` or state `' + curState + 
'` for Touchable responder `' + this.state.touchable.responderID + '`');}


var nextState=Transitions[curState][signal];
if(nextState === States.ERROR){
throw new Error(
'Touchable cannot transition from `' + curState + '` to `' + signal + 
'` for responder `' + this.state.touchable.responderID + '`');}


if(curState !== nextState){
this._performSideEffectsForTransition(curState,nextState,signal,e);
this.state.touchable.touchState = nextState;}},



_cancelLongPressDelayTimeout:function(){
this.longPressDelayTimeout && clearTimeout(this.longPressDelayTimeout);
this.longPressDelayTimeout = null;},


_isHighlight:function(state){
return state === States.RESPONDER_ACTIVE_PRESS_IN || 
state === States.RESPONDER_ACTIVE_LONG_PRESS_IN;},


_savePressInLocation:function(e){
var touch=TouchEventUtils.extractSingleTouch(e.nativeEvent);
var pageX=touch && touch.pageX;
var pageY=touch && touch.pageY;
this.pressInLocation = {pageX:pageX,pageY:pageY};},


_getDistanceBetweenPoints:function(aX,aY,bX,bY){
var deltaX=aX - bX;
var deltaY=aY - bY;
return Math.sqrt(deltaX * deltaX + deltaY * deltaY);},













_performSideEffectsForTransition:function(curState,nextState,signal,e){
var curIsHighlight=this._isHighlight(curState);
var newIsHighlight=this._isHighlight(nextState);

var isFinalSignal=
signal === Signals.RESPONDER_TERMINATED || 
signal === Signals.RESPONDER_RELEASE;

if(isFinalSignal){
this._cancelLongPressDelayTimeout();}


if(!IsActive[curState] && IsActive[nextState]){
this._remeasureMetricsOnActivation();}


if(IsPressingIn[curState] && signal === Signals.LONG_PRESS_DETECTED){
this.touchableHandleLongPress && this.touchableHandleLongPress(e);}


if(newIsHighlight && !curIsHighlight){
this._savePressInLocation(e);
this.touchableHandleActivePressIn && this.touchableHandleActivePressIn(e);}else 
if(!newIsHighlight && curIsHighlight && this.touchableHandleActivePressOut){
if(this.touchableGetPressOutDelayMS && this.touchableGetPressOutDelayMS()){
this.pressOutDelayTimeout = this.setTimeout(function(){
this.touchableHandleActivePressOut(e);},
this.touchableGetPressOutDelayMS());}else 
{
this.touchableHandleActivePressOut(e);}}



if(IsPressingIn[curState] && signal === Signals.RESPONDER_RELEASE){
var hasLongPressHandler=!!this.props.onLongPress;
var pressIsLongButStillCallOnPress=
IsLongPressingIn[curState] && (
!hasLongPressHandler || 
!this.touchableLongPressCancelsPress());


var shouldInvokePress=!IsLongPressingIn[curState] || pressIsLongButStillCallOnPress;
if(shouldInvokePress && this.touchableHandlePress){
this.touchableHandlePress(e);}}



this.touchableDelayTimeout && clearTimeout(this.touchableDelayTimeout);
this.touchableDelayTimeout = null;}};




var Touchable={
Mixin:TouchableMixin};


module.exports = Touchable;
});
__d('BoundingDimensions',["PooledClass"],function(global, require, module, exports) {  "use strict";





var PooledClass=require('PooledClass');

var twoArgumentPooler=PooledClass.twoArgumentPooler;








function BoundingDimensions(width,height){
this.width = width;
this.height = height;}






BoundingDimensions.getPooledFromElement = function(element){
return BoundingDimensions.getPooled(
element.offsetWidth,
element.offsetHeight);};



PooledClass.addPoolingTo(BoundingDimensions,twoArgumentPooler);

module.exports = BoundingDimensions;
});
__d('Position',["PooledClass"],function(global, require, module, exports) {  "use strict";





var PooledClass=require('PooledClass');

var twoArgumentPooler=PooledClass.twoArgumentPooler;









function Position(left,top){
this.left = left;
this.top = top;}


PooledClass.addPoolingTo(Position,twoArgumentPooler);

module.exports = Position;
});
__d('TouchEventUtils',[],function(global, require, module, exports) {  var 










TouchEventUtils={










extractSingleTouch:function(nativeEvent){
var touches=nativeEvent.touches;
var changedTouches=nativeEvent.changedTouches;
var hasTouches=touches && touches.length > 0;
var hasChangedTouches=changedTouches && changedTouches.length > 0;

return !hasTouches && hasChangedTouches?changedTouches[0]:
hasTouches?touches[0]:
nativeEvent;}};



module.exports = TouchEventUtils;
});
__d('queryLayoutByID',["ReactNativeTagHandles","NativeModules"],function(global, require, module, exports) {  'use strict';












var ReactNativeTagHandles=require('ReactNativeTagHandles');
var RCTUIManager=require('NativeModules').UIManager;
































var queryLayoutByID=function(
rootNodeID,
onError,
onSuccess)
{

RCTUIManager.measure(
ReactNativeTagHandles.rootNodeIDToTag[rootNodeID],
onSuccess);};



module.exports = queryLayoutByID;
});
__d('TextInput',["DocumentSelectionState","EventEmitter","NativeMethodsMixin","NativeModules","Platform","ReactPropTypes","React","ReactChildren","StyleSheet","Text","TextInputState","react-timer-mixin/TimerMixin.js","TouchableWithoutFeedback","createReactNativeComponentClass","emptyFunction","invariant","requireNativeComponent"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var DocumentSelectionState=require('DocumentSelectionState');
var EventEmitter=require('EventEmitter');
var NativeMethodsMixin=require('NativeMethodsMixin');
var RCTUIManager=require('NativeModules').UIManager;
var Platform=require('Platform');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var ReactChildren=require('ReactChildren');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var TextInputState=require('TextInputState');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var emptyFunction=require('emptyFunction');
var invariant=require('invariant');
var requireNativeComponent=require('requireNativeComponent');

var onlyMultiline={
onSelectionChange:true,
onTextInput:true,
children:true};


var notMultiline={
onSubmitEditing:true};


if(Platform.OS === 'android'){
var AndroidTextInput=requireNativeComponent('AndroidTextInput',null);}else 
if(Platform.OS === 'ios'){
var RCTTextView=requireNativeComponent('RCTTextView',null);
var RCTTextField=requireNativeComponent('RCTTextField',null);}




































var TextInput=React.createClass({displayName:'TextInput',
propTypes:{








autoCapitalize:PropTypes.oneOf([
'none',
'sentences',
'words',
'characters']),




autoCorrect:PropTypes.bool,




autoFocus:PropTypes.bool,




textAlign:PropTypes.oneOf([
'start',
'center',
'end']),





textAlignVertical:PropTypes.oneOf([
'top',
'center',
'bottom']),




editable:PropTypes.bool,








keyboardType:PropTypes.oneOf([

'default',
'numeric',
'email-address',

'ascii-capable',
'numbers-and-punctuation',
'url',
'number-pad',
'phone-pad',
'name-phone-pad',
'decimal-pad',
'twitter',
'web-search']),





returnKeyType:PropTypes.oneOf([
'default',
'go',
'google',
'join',
'next',
'route',
'search',
'send',
'yahoo',
'done',
'emergency-call']),






maxLength:PropTypes.number,





numberOfLines:PropTypes.number,





enablesReturnKeyAutomatically:PropTypes.bool,




multiline:PropTypes.bool,



onBlur:PropTypes.func,



onFocus:PropTypes.func,



onChange:PropTypes.func,




onChangeText:PropTypes.func,



onEndEditing:PropTypes.func,



onSubmitEditing:PropTypes.func,



onLayout:PropTypes.func,



placeholder:PropTypes.string,



placeholderTextColor:PropTypes.string,




secureTextEntry:PropTypes.bool,





selectionState:PropTypes.instanceOf(DocumentSelectionState),









value:PropTypes.string,





defaultValue:PropTypes.string,




clearButtonMode:PropTypes.oneOf([
'never',
'while-editing',
'unless-editing',
'always']),





clearTextOnFocus:PropTypes.bool,




selectTextOnFocus:PropTypes.bool,



style:Text.propTypes.style,



testID:PropTypes.string,




underlineColorAndroid:PropTypes.string},






mixins:[NativeMethodsMixin,TimerMixin],

viewConfig:Platform.OS === 'ios'?RCTTextField.viewConfig:
Platform.OS === 'android'?AndroidTextInput.viewConfig:{},

isFocused:function(){
return TextInputState.currentlyFocusedField() === 
React.findNodeHandle(this.refs.input);},


getInitialState:function(){
return {
mostRecentEventCount:0};},



contextTypes:{
onFocusRequested:React.PropTypes.func,
focusEmitter:React.PropTypes.instanceOf(EventEmitter)},


_focusSubscription:undefined,

componentDidMount:function(){var _this=this;
if(!this.context.focusEmitter){
if(this.props.autoFocus){
this.requestAnimationFrame(this.focus);}

return;}

this._focusSubscription = this.context.focusEmitter.addListener(
'focus',
function(el){
if(_this === el){
_this.requestAnimationFrame(_this.focus);}else 
if(_this.isFocused()){
_this.blur();}});



if(this.props.autoFocus){
this.context.onFocusRequested(this);}},



componentWillUnmount:function(){
this._focusSubscription && this._focusSubscription.remove();
if(this.isFocused()){
this.blur();}},



getChildContext:function(){
return {isInAParentText:true};},


childContextTypes:{
isInAParentText:React.PropTypes.bool},


clear:function(){
this.setNativeProps({text:''});},


render:function(){
if(Platform.OS === 'ios'){
return this._renderIOS();}else 
if(Platform.OS === 'android'){
return this._renderAndroid();}},



_getText:function(){
return typeof this.props.value === 'string'?
this.props.value:
this.props.defaultValue;},


_renderIOS:function(){
var textContainer;

var props=Object.assign({},this.props);
props.style = [styles.input,this.props.style];
if(!props.multiline){
for(var propKey in onlyMultiline) {
if(props[propKey]){
throw new Error(
'TextInput prop `' + propKey + '` is only supported with multiline.');}}



textContainer = 
React.createElement(RCTTextField,_extends({
ref:'input'},
props,{
onFocus:this._onFocus,
onBlur:this._onBlur,
onChange:this._onChange,
onSelectionChangeShouldSetResponder:function(){return true;},
text:this._getText(),
mostRecentEventCount:this.state.mostRecentEventCount}));}else 

{
for(var propKey in notMultiline) {
if(props[propKey]){
throw new Error(
'TextInput prop `' + propKey + '` cannot be used with multiline.');}}




var children=props.children;
var childCount=0;
ReactChildren.forEach(children,function(){return ++childCount;});
invariant(
!(props.value && childCount),
'Cannot specify both value and children.');

if(childCount > 1){
children = React.createElement(Text,null,children);}

if(props.inputView){
children = [children,props.inputView];}

textContainer = 
React.createElement(RCTTextView,_extends({
ref:'input'},
props,{
children:children,
mostRecentEventCount:this.state.mostRecentEventCount,
onFocus:this._onFocus,
onBlur:this._onBlur,
onChange:this._onChange,
onSelectionChange:this._onSelectionChange,
onTextInput:this._onTextInput,
onSelectionChangeShouldSetResponder:emptyFunction.thatReturnsTrue,
text:this._getText()}));}



return (
React.createElement(TouchableWithoutFeedback,{
onPress:this._onPress,
rejectResponderTermination:true,
testID:props.testID},
textContainer));},




_renderAndroid:function(){
var autoCapitalize=RCTUIManager.UIText.AutocapitalizationType[this.props.autoCapitalize];
var textAlign=
RCTUIManager.AndroidTextInput.Constants.TextAlign[this.props.textAlign];
var textAlignVertical=
RCTUIManager.AndroidTextInput.Constants.TextAlignVertical[this.props.textAlignVertical];
var children=this.props.children;
var childCount=0;
ReactChildren.forEach(children,function(){return ++childCount;});
invariant(
!(this.props.value && childCount),
'Cannot specify both value and children.');

if(childCount > 1){
children = React.createElement(Text,null,children);}

var textContainer=
React.createElement(AndroidTextInput,{
ref:'input',
style:[this.props.style],
autoCapitalize:autoCapitalize,
autoCorrect:this.props.autoCorrect,
textAlign:textAlign,
textAlignVertical:textAlignVertical,
keyboardType:this.props.keyboardType,
mostRecentEventCount:this.state.mostRecentEventCount,
multiline:this.props.multiline,
numberOfLines:this.props.numberOfLines,
onFocus:this._onFocus,
onBlur:this._onBlur,
onChange:this._onChange,
onTextInput:this._onTextInput,
onEndEditing:this.props.onEndEditing,
onSubmitEditing:this.props.onSubmitEditing,
onLayout:this.props.onLayout,
password:this.props.password || this.props.secureTextEntry,
placeholder:this.props.placeholder,
placeholderTextColor:this.props.placeholderTextColor,
text:this._getText(),
underlineColorAndroid:this.props.underlineColorAndroid,
children:children,
editable:this.props.editable});


return (
React.createElement(TouchableWithoutFeedback,{
onPress:this._onPress,
testID:this.props.testID},
textContainer));},




_onFocus:function(event){
if(this.props.onFocus){
this.props.onFocus(event);}},



_onPress:function(event){
if(this.props.editable || this.props.editable === undefined){
this.focus();}},



_onChange:function(event){var _this2=this;
if(Platform.OS === 'android'){

this.refs.input.setNativeProps({
mostRecentEventCount:event.nativeEvent.eventCount});}


var text=event.nativeEvent.text;
var eventCount=event.nativeEvent.eventCount;
this.props.onChange && this.props.onChange(event);
this.props.onChangeText && this.props.onChangeText(text);
this.setState({mostRecentEventCount:eventCount},function(){



if(text !== _this2.props.value && typeof _this2.props.value === 'string'){
_this2.refs.input.setNativeProps({
text:_this2.props.value});}});},





_onBlur:function(event){
this.blur();
if(this.props.onBlur){
this.props.onBlur(event);}},



_onSelectionChange:function(event){
if(this.props.selectionState){
var selection=event.nativeEvent.selection;
this.props.selectionState.update(selection.start,selection.end);}

this.props.onSelectionChange && this.props.onSelectionChange(event);},


_onTextInput:function(event){
this.props.onTextInput && this.props.onTextInput(event);}});



var styles=StyleSheet.create({
input:{
alignSelf:'stretch'}});



module.exports = TextInput;
});
__d('DocumentSelectionState',["mixInEventEmitter"],function(global, require, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}

















var mixInEventEmitter=require('mixInEventEmitter');var 










DocumentSelectionState=(function(){




function DocumentSelectionState(anchor,focus){_classCallCheck(this,DocumentSelectionState);
this._anchorOffset = anchor;
this._focusOffset = focus;
this._hasFocus = false;}_createClass(DocumentSelectionState,[{key:'update',value:









function update(anchor,focus){
if(this._anchorOffset !== anchor || this._focusOffset !== focus){
this._anchorOffset = anchor;
this._focusOffset = focus;
this.emit('update');}}},{key:'constrainLength',value:









function constrainLength(maxLength){
this.update(
Math.min(this._anchorOffset,maxLength),
Math.min(this._focusOffset,maxLength));}},{key:'focus',value:



function focus(){
if(!this._hasFocus){
this._hasFocus = true;
this.emit('focus');}}},{key:'blur',value:



function blur(){
if(this._hasFocus){
this._hasFocus = false;
this.emit('blur');}}},{key:'hasFocus',value:






function hasFocus(){
return this._hasFocus;}},{key:'isCollapsed',value:





function isCollapsed(){
return this._anchorOffset === this._focusOffset;}},{key:'isBackward',value:





function isBackward(){
return this._anchorOffset > this._focusOffset;}},{key:'getAnchorOffset',value:





function getAnchorOffset(){
return this._hasFocus?this._anchorOffset:null;}},{key:'getFocusOffset',value:





function getFocusOffset(){
return this._hasFocus?this._focusOffset:null;}},{key:'getStartOffset',value:





function getStartOffset(){
return (
this._hasFocus?Math.min(this._anchorOffset,this._focusOffset):null);}},{key:'getEndOffset',value:






function getEndOffset(){
return (
this._hasFocus?Math.max(this._anchorOffset,this._focusOffset):null);}},{key:'overlaps',value:








function overlaps(start,end){
return (
this.hasFocus() && 
this.getStartOffset() <= end && start <= this.getEndOffset());}}]);return DocumentSelectionState;})();




mixInEventEmitter(DocumentSelectionState,{
'blur':true,
'focus':true,
'update':true});


module.exports = DocumentSelectionState;
});
__d('mixInEventEmitter',["EventEmitter","EventEmitterWithHolding","EventHolder","EventValidator","copyProperties","invariant","keyOf"],function(global, require, module, exports) {  var 
















EventEmitter=require('EventEmitter');
var EventEmitterWithHolding=require('EventEmitterWithHolding');
var EventHolder=require('EventHolder');
var EventValidator=require('EventValidator');

var copyProperties=require('copyProperties');
var invariant=require('invariant');
var keyOf=require('keyOf');

var TYPES_KEY=keyOf({__types:true});






















function mixInEventEmitter(klass,types){
invariant(types,'Must supply set of valid event types');
invariant(!this.__eventEmitter,'An active emitter is already mixed in');



var target=klass.prototype || klass;

var ctor=klass.constructor;
if(ctor){
invariant(
ctor === Object || ctor === Function,
'Mix EventEmitter into a class, not an instance');}





if(target.hasOwnProperty(TYPES_KEY)){
copyProperties(target.__types,types);}else 
if(target.__types){
target.__types = copyProperties({},target.__types,types);}else 
{
target.__types = types;}

copyProperties(target,EventEmitterMixin);}


var EventEmitterMixin={
emit:function(eventType,a,b,c,d,e,_){
return this.__getEventEmitter().emit(eventType,a,b,c,d,e,_);},


emitAndHold:function(eventType,a,b,c,d,e,_){
return this.__getEventEmitter().emitAndHold(eventType,a,b,c,d,e,_);},


addListener:function(eventType,listener,context){
return this.__getEventEmitter().addListener(eventType,listener,context);},


once:function(eventType,listener,context){
return this.__getEventEmitter().once(eventType,listener,context);},


addRetroactiveListener:function(eventType,listener,context){
return this.__getEventEmitter().addRetroactiveListener(
eventType,
listener,
context);},



addListenerMap:function(listenerMap,context){
return this.__getEventEmitter().addListenerMap(listenerMap,context);},


addRetroactiveListenerMap:function(listenerMap,context){
return this.__getEventEmitter().addListenerMap(listenerMap,context);},


removeAllListeners:function(){
this.__getEventEmitter().removeAllListeners();},


removeCurrentListener:function(){
this.__getEventEmitter().removeCurrentListener();},


releaseHeldEventType:function(eventType){
this.__getEventEmitter().releaseHeldEventType(eventType);},


__getEventEmitter:function(){
if(!this.__eventEmitter){
var emitter=new EventEmitter();
emitter = EventValidator.addValidation(emitter,this.__types);

var holder=new EventHolder();
this.__eventEmitter = new EventEmitterWithHolding(emitter,holder);}

return this.__eventEmitter;}};



module.exports = mixInEventEmitter;
});
__d('EventEmitterWithHolding',[],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var 






























EventEmitterWithHolding=(function(){







function EventEmitterWithHolding(emitter,holder){_classCallCheck(this,EventEmitterWithHolding);
this._emitter = emitter;
this._eventHolder = holder;
this._currentEventToken = null;
this._emittingHeldEvents = false;}_createClass(EventEmitterWithHolding,[{key:'addListener',value:





function addListener(eventType,listener,context){
return this._emitter.addListener(eventType,listener,context);}},{key:'once',value:





function once(eventType,listener,context){
return this._emitter.once(eventType,listener,context);}},{key:'addRetroactiveListener',value:






















function addRetroactiveListener(
eventType,listener,context){
var subscription=this._emitter.addListener(eventType,listener,context);

this._emittingHeldEvents = true;
this._eventHolder.emitToListener(eventType,listener,context);
this._emittingHeldEvents = false;

return subscription;}},{key:'removeAllListeners',value:





function removeAllListeners(eventType){
this._emitter.removeAllListeners(eventType);}},{key:'removeCurrentListener',value:





function removeCurrentListener(){
this._emitter.removeCurrentListener();}},{key:'listeners',value:





function listeners(eventType){
return this._emitter.listeners(eventType);}},{key:'emit',value:





function emit(eventType,a,b,c,d,e,_){
this._emitter.emit(eventType,a,b,c,d,e,_);}},{key:'emitAndHold',value:

















function emitAndHold(eventType,a,b,c,d,e,_){
this._currentEventToken = this._eventHolder.holdEvent(
eventType,
a,b,c,d,e,_);

this._emitter.emit(eventType,a,b,c,d,e,_);
this._currentEventToken = null;}},{key:'releaseCurrentEvent',value:





function releaseCurrentEvent(){
if(this._currentEventToken !== null){
this._eventHolder.releaseEvent(this._currentEventToken);}else 
if(this._emittingHeldEvents){
this._eventHolder.releaseCurrentEvent();}}},{key:'releaseHeldEventType',value:







function releaseHeldEventType(eventType){
this._eventHolder.releaseEventType(eventType);}}]);return EventEmitterWithHolding;})();



module.exports = EventEmitterWithHolding;
});
__d('EventHolder',["invariant"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}


















var invariant=require('invariant');var 

EventHolder=(function(){
function EventHolder(){_classCallCheck(this,EventHolder);
this._heldEvents = {};
this._currentEventKey = null;}_createClass(EventHolder,[{key:'holdEvent',value:























function holdEvent(eventType,a,b,c,d,e,_){
this._heldEvents[eventType] = this._heldEvents[eventType] || [];
var eventsOfType=this._heldEvents[eventType];
var key={
eventType:eventType,
index:eventsOfType.length};

eventsOfType.push([a,b,c,d,e,_]);
return key;}},{key:'emitToListener',value:










function emitToListener(eventType,listener,context){var _this=this;
var eventsOfType=this._heldEvents[eventType];
if(!eventsOfType){
return;}

var origEventKey=this._currentEventKey;
eventsOfType.forEach(function(eventHeld,index){
if(!eventHeld){
return;}

_this._currentEventKey = {
eventType:eventType,
index:index};

listener.apply(context,eventHeld);});

this._currentEventKey = origEventKey;}},{key:'releaseCurrentEvent',value:










function releaseCurrentEvent(){
invariant(
this._currentEventKey !== null,
'Not in an emitting cycle; there is no current event');

this.releaseEvent(this._currentEventKey);}},{key:'releaseEvent',value:








function releaseEvent(token){
delete this._heldEvents[token.eventType][token.index];}},{key:'releaseEventType',value:







function releaseEventType(type){
this._heldEvents[type] = [];}}]);return EventHolder;})();



module.exports = EventHolder;
});
__d('EventValidator',["copyProperties"],function(global, require, module, exports) {  'use strict';

















var copyProperties=require('copyProperties');










var EventValidator={










addValidation:function(emitter,types){
var eventTypes=Object.keys(types);
var emitterWithValidation=Object.create(emitter);

copyProperties(emitterWithValidation,{
emit:function emit(type,a,b,c,d,e,_){
assertAllowsEventType(type,eventTypes);
return emitter.emit.call(this,type,a,b,c,d,e,_);}});



return emitterWithValidation;}};



function assertAllowsEventType(type,allowedTypes){
if(allowedTypes.indexOf(type) === -1){
throw new TypeError(errorMessageFor(type,allowedTypes));}}



function errorMessageFor(type,allowedTypes){
var message='Unknown event type "' + type + '". ';
if(__DEV__){
message += recommendationFor(type,allowedTypes);}

message += 'Known event types: ' + allowedTypes.join(', ') + '.';
return message;}



if(__DEV__){
var recommendationFor=function(type,allowedTypes){
var closestTypeRecommendation=closestTypeFor(type,allowedTypes);
if(isCloseEnough(closestTypeRecommendation,type)){
return 'Did you mean "' + closestTypeRecommendation.type + '"? ';}else 
{
return '';}};



var closestTypeFor=function(type,allowedTypes){
var typeRecommendations=allowedTypes.map(
typeRecommendationFor.bind(this,type));

return typeRecommendations.sort(recommendationSort)[0];};


var typeRecommendationFor=function(type,recomendedType){
return {
type:recomendedType,
distance:damerauLevenshteinDistance(type,recomendedType)};};



var recommendationSort=function(recommendationA,recommendationB){
if(recommendationA.distance < recommendationB.distance){
return -1;}else 
if(recommendationA.distance > recommendationB.distance){
return 1;}else 
{
return 0;}};



var isCloseEnough=function(closestType,actualType){
return closestType.distance / actualType.length < 0.334;};


var damerauLevenshteinDistance=function(a,b){
var i,j;
var d=[];

for(i = 0;i <= a.length;i++) {
d[i] = [i];}


for(j = 1;j <= b.length;j++) {
d[0][j] = j;}


for(i = 1;i <= a.length;i++) {
for(j = 1;j <= b.length;j++) {
var cost=a.charAt(i - 1) === b.charAt(j - 1)?0:1;

d[i][j] = Math.min(
d[i - 1][j] + 1,
d[i][j - 1] + 1,
d[i - 1][j - 1] + cost);


if(i > 1 && j > 1 && 
a.charAt(i - 1) == b.charAt(j - 2) && 
a.charAt(i - 2) == b.charAt(j - 1)){
d[i][j] = Math.min(d[i][j],d[i - 2][j - 2] + cost);}}}




return d[a.length][b.length];};}



module.exports = EventValidator;
});
__d('copyProperties',[],function(global, require, module, exports) {  function 























copyProperties(obj,a,b,c,d,e,f){
obj = obj || {};

if(__DEV__){
if(f){
throw new Error('Too many arguments passed to copyProperties');}}



var args=[a,b,c,d,e];
var ii=0,v;
while(args[ii]) {
v = args[ii++];
for(var k in v) {
obj[k] = v[k];}




if(v.hasOwnProperty && v.hasOwnProperty('toString') && 
typeof v.toString != 'undefined' && obj.toString !== v.toString){
obj.toString = v.toString;}}



return obj;}


module.exports = copyProperties;
});
__d('TouchableWithoutFeedback',["React","react-timer-mixin/TimerMixin.js","Touchable","View","ensurePositiveDelayProps","onlyChild"],function(global, require, module, exports) {  'use strict';












var React=require('React');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var Touchable=require('Touchable');
var View=require('View');
var ensurePositiveDelayProps=require('ensurePositiveDelayProps');
var onlyChild=require('onlyChild');









var PRESS_RECT_OFFSET={top:20,left:20,right:20,bottom:30};






var TouchableWithoutFeedback=React.createClass({displayName:'TouchableWithoutFeedback',
mixins:[TimerMixin,Touchable.Mixin],

propTypes:{
accessible:React.PropTypes.bool,
accessibilityComponentType:React.PropTypes.oneOf(View.AccessibilityComponentType),
accessibilityTraits:React.PropTypes.oneOfType([
React.PropTypes.oneOf(View.AccessibilityTraits),
React.PropTypes.arrayOf(React.PropTypes.oneOf(View.AccessibilityTraits))]),





onPress:React.PropTypes.func,
onPressIn:React.PropTypes.func,
onPressOut:React.PropTypes.func,





onLayout:React.PropTypes.func,

onLongPress:React.PropTypes.func,




delayPressIn:React.PropTypes.number,



delayPressOut:React.PropTypes.number,



delayLongPress:React.PropTypes.number},


getInitialState:function(){
return this.touchableGetInitialState();},


componentDidMount:function(){
ensurePositiveDelayProps(this.props);},


componentWillReceiveProps:function(nextProps){
ensurePositiveDelayProps(nextProps);},






touchableHandlePress:function(e){
this.props.onPress && this.props.onPress(e);},


touchableHandleActivePressIn:function(e){
this.props.onPressIn && this.props.onPressIn(e);},


touchableHandleActivePressOut:function(e){
this.props.onPressOut && this.props.onPressOut(e);},


touchableHandleLongPress:function(e){
this.props.onLongPress && this.props.onLongPress(e);},


touchableGetPressRectOffset:function(){
return PRESS_RECT_OFFSET;},


touchableGetHighlightDelayMS:function(){
return this.props.delayPressIn || 0;},


touchableGetLongPressDelayMS:function(){
return this.props.delayLongPress === 0?0:
this.props.delayLongPress || 500;},


touchableGetPressOutDelayMS:function(){
return this.props.delayPressOut || 0;},


render:function(){

return React.cloneElement(onlyChild(this.props.children),{
accessible:this.props.accessible !== false,
accessibilityComponentType:this.props.accessibilityComponentType,
accessibilityTraits:this.props.accessibilityTraits,
testID:this.props.testID,
onLayout:this.props.onLayout,
onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,
onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,
onResponderGrant:this.touchableHandleResponderGrant,
onResponderMove:this.touchableHandleResponderMove,
onResponderRelease:this.touchableHandleResponderRelease,
onResponderTerminate:this.touchableHandleResponderTerminate});}});




module.exports = TouchableWithoutFeedback;
});
__d('ensurePositiveDelayProps',["invariant"],function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');

var ensurePositiveDelayProps=function(props){
invariant(
!(props.delayPressIn < 0 || props.delayPressOut < 0 || 
props.delayLongPress < 0),
'Touchable components cannot have negative delay properties');};



module.exports = ensurePositiveDelayProps;
});
__d('ToastAndroid',["warning"],function(global, require, module, exports) {  'use strict';











var warning=require('warning');

var ToastAndroid={

show:function(
message,
duration)
{
warning(false,'Cannot use ToastAndroid on iOS.');}};




module.exports = ToastAndroid;
});
__d('ToolbarAndroid',["UnimplementedView"],function(global, require, module, exports) {  'use strict';











module.exports = require('UnimplementedView');
});
__d('TouchableHighlight',["NativeMethodsMixin","React","ReactNativeViewAttributes","StyleSheet","react-timer-mixin/TimerMixin.js","Touchable","TouchableWithoutFeedback","View","cloneWithProps","ensureComponentIsNative","ensurePositiveDelayProps","keyOf","merge","onlyChild"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};













var NativeMethodsMixin=require('NativeMethodsMixin');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheet=require('StyleSheet');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var Touchable=require('Touchable');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');
var View=require('View');

var cloneWithProps=require('cloneWithProps');
var ensureComponentIsNative=require('ensureComponentIsNative');
var ensurePositiveDelayProps=require('ensurePositiveDelayProps');
var keyOf=require('keyOf');
var merge=require('merge');
var onlyChild=require('onlyChild');



var DEFAULT_PROPS={
activeOpacity:0.8,
underlayColor:'black'};





























var TouchableHighlight=React.createClass({displayName:'TouchableHighlight',
propTypes:_extends({},
TouchableWithoutFeedback.propTypes,{




activeOpacity:React.PropTypes.number,




underlayColor:React.PropTypes.string,
style:View.propTypes.style,



onShowUnderlay:React.PropTypes.func,



onHideUnderlay:React.PropTypes.func}),


mixins:[NativeMethodsMixin,TimerMixin,Touchable.Mixin],

getDefaultProps:function(){return DEFAULT_PROPS;},


computeSyntheticState:function(props){
return {
activeProps:{
style:{
opacity:props.activeOpacity}},


activeUnderlayProps:{
style:{
backgroundColor:props.underlayColor}},


underlayStyle:[
INACTIVE_UNDERLAY_PROPS.style,
props.style]};},




getInitialState:function(){
return merge(
this.touchableGetInitialState(),this.computeSyntheticState(this.props));},



componentDidMount:function(){
ensurePositiveDelayProps(this.props);
ensureComponentIsNative(this.refs[CHILD_REF]);},


componentDidUpdate:function(){
ensureComponentIsNative(this.refs[CHILD_REF]);},


componentWillReceiveProps:function(nextProps){
ensurePositiveDelayProps(nextProps);
if(nextProps.activeOpacity !== this.props.activeOpacity || 
nextProps.underlayColor !== this.props.underlayColor || 
nextProps.style !== this.props.style){
this.setState(this.computeSyntheticState(nextProps));}},



viewConfig:{
uiViewClassName:'RCTView',
validAttributes:ReactNativeViewAttributes.RCTView},






touchableHandleActivePressIn:function(e){
this.clearTimeout(this._hideTimeout);
this._hideTimeout = null;
this._showUnderlay();
this.props.onPressIn && this.props.onPressIn(e);},


touchableHandleActivePressOut:function(e){
if(!this._hideTimeout){
this._hideUnderlay();}

this.props.onPressOut && this.props.onPressOut(e);},


touchableHandlePress:function(e){
this.clearTimeout(this._hideTimeout);
this._showUnderlay();
this._hideTimeout = this.setTimeout(this._hideUnderlay,
this.props.delayPressOut || 100);
this.props.onPress && this.props.onPress(e);},


touchableHandleLongPress:function(e){
this.props.onLongPress && this.props.onLongPress(e);},


touchableGetPressRectOffset:function(){
return PRESS_RECT_OFFSET;},


touchableGetHighlightDelayMS:function(){
return this.props.delayPressIn;},


touchableGetLongPressDelayMS:function(){
return this.props.delayLongPress;},


touchableGetPressOutDelayMS:function(){
return this.props.delayPressOut;},


_showUnderlay:function(){
if(!this.isMounted()){
return;}


this.refs[UNDERLAY_REF].setNativeProps(this.state.activeUnderlayProps);
this.refs[CHILD_REF].setNativeProps(this.state.activeProps);
this.props.onShowUnderlay && this.props.onShowUnderlay();},


_hideUnderlay:function(){
this.clearTimeout(this._hideTimeout);
this._hideTimeout = null;
if(this.refs[UNDERLAY_REF]){
this.refs[CHILD_REF].setNativeProps(INACTIVE_CHILD_PROPS);
this.refs[UNDERLAY_REF].setNativeProps(_extends({},
INACTIVE_UNDERLAY_PROPS,{
style:this.state.underlayStyle}));

this.props.onHideUnderlay && this.props.onHideUnderlay();}},



render:function(){
return (
React.createElement(View,{
accessible:true,
accessibilityComponentType:this.props.accessibilityComponentType,
accessibilityTraits:this.props.accessibilityTraits,
ref:UNDERLAY_REF,
style:this.state.underlayStyle,
onLayout:this.props.onLayout,
onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,
onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,
onResponderGrant:this.touchableHandleResponderGrant,
onResponderMove:this.touchableHandleResponderMove,
onResponderRelease:this.touchableHandleResponderRelease,
onResponderTerminate:this.touchableHandleResponderTerminate,
testID:this.props.testID},
cloneWithProps(
onlyChild(this.props.children),
{
ref:CHILD_REF})));}});







var PRESS_RECT_OFFSET={top:20,left:20,right:20,bottom:30};
var CHILD_REF=keyOf({childRef:null});
var UNDERLAY_REF=keyOf({underlayRef:null});
var INACTIVE_CHILD_PROPS={
style:StyleSheet.create({x:{opacity:1.0}}).x};

var INACTIVE_UNDERLAY_PROPS={
style:StyleSheet.create({x:{backgroundColor:'transparent'}}).x};


module.exports = TouchableHighlight;
});
__d('cloneWithProps',["ReactElement","ReactPropTransferer","keyOf","warning"],function(global, require, module, exports) {  'use strict';













var ReactElement=require('ReactElement');
var ReactPropTransferer=require('ReactPropTransferer');

var keyOf=require('keyOf');
var warning=require('warning');

var CHILDREN_PROP=keyOf({children:null});










function cloneWithProps(child,props){
if(__DEV__){
warning(
!child.ref,
'You are calling cloneWithProps() on a child with a ref. This is ' + 
'dangerous because you\'re creating a new child which will not be ' + 
'added as a ref to its parent.');}



var newProps=ReactPropTransferer.mergeProps(props,child.props);


if(!newProps.hasOwnProperty(CHILDREN_PROP) && 
child.props.hasOwnProperty(CHILDREN_PROP)){
newProps.children = child.props.children;}




return ReactElement.createElement(child.type,newProps);}


module.exports = cloneWithProps;
});
__d('ReactPropTransferer',["Object.assign","emptyFunction","joinClasses"],function(global, require, module, exports) {  'use strict';












var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');
var joinClasses=require('joinClasses');








function createTransferStrategy(mergeStrategy){
return function(props,key,value){
if(!props.hasOwnProperty(key)){
props[key] = value;}else 
{
props[key] = mergeStrategy(props[key],value);}};}




var transferStrategyMerge=createTransferStrategy(function(a,b){



return assign({},b,a);});







var TransferStrategies={



children:emptyFunction,



className:createTransferStrategy(joinClasses),



style:transferStrategyMerge};










function transferInto(props,newProps){
for(var thisKey in newProps) {
if(!newProps.hasOwnProperty(thisKey)){
continue;}


var transferStrategy=TransferStrategies[thisKey];

if(transferStrategy && TransferStrategies.hasOwnProperty(thisKey)){
transferStrategy(props,thisKey,newProps[thisKey]);}else 
if(!props.hasOwnProperty(thisKey)){
props[thisKey] = newProps[thisKey];}}


return props;}








var ReactPropTransferer={








mergeProps:function(oldProps,newProps){
return transferInto(assign({},oldProps),newProps);}};




module.exports = ReactPropTransferer;
});
__d('joinClasses',[],function(global, require, module, exports) {  'use strict';




















function joinClasses(className){
if(!className){
className = '';}

var nextClass;
var argLength=arguments.length;
if(argLength > 1){
for(var ii=1;ii < argLength;ii++) {
nextClass = arguments[ii];
if(nextClass){
className = (className?className + ' ':'') + nextClass;}}}



return className;}


module.exports = joinClasses;
});
__d('ensureComponentIsNative',["invariant"],function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');

var ensureComponentIsNative=function(component){
invariant(
component && typeof component.setNativeProps === 'function',
'Touchable child must either be native or forward setNativeProps to a ' + 
'native component');};



module.exports = ensureComponentIsNative;
});
__d('TouchableNativeFeedback',["React","StyleSheet","Text","View"],function(global, require, module, exports) {  'use strict';












var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');

var DummyTouchableNativeFeedback=React.createClass({displayName:'DummyTouchableNativeFeedback',
render:function(){
return (
React.createElement(View,{style:[styles.container,this.props.style]},
React.createElement(Text,{style:styles.info},'TouchableNativeFeedback is not supported on this platform!')));}});





var styles=StyleSheet.create({
container:{
height:100,
width:300,
backgroundColor:'#ffbcbc',
borderWidth:1,
borderColor:'red',
alignItems:'center',
justifyContent:'center',
margin:10},

info:{
color:'#333333',
margin:20}});



module.exports = DummyTouchableNativeFeedback;
});
__d('TouchableOpacity',["Animated","NativeMethodsMixin","React","react-timer-mixin/TimerMixin.js","Touchable","TouchableWithoutFeedback","ensurePositiveDelayProps","flattenStyle","keyOf"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};













var Animated=require('Animated');
var NativeMethodsMixin=require('NativeMethodsMixin');
var React=require('React');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var Touchable=require('Touchable');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');

var ensurePositiveDelayProps=require('ensurePositiveDelayProps');
var flattenStyle=require('flattenStyle');
var keyOf=require('keyOf');

























var TouchableOpacity=React.createClass({displayName:'TouchableOpacity',
mixins:[TimerMixin,Touchable.Mixin,NativeMethodsMixin],

propTypes:_extends({},
TouchableWithoutFeedback.propTypes,{




activeOpacity:React.PropTypes.number}),


getDefaultProps:function(){
return {
activeOpacity:0.2};},



getInitialState:function(){
return _extends({},
this.touchableGetInitialState(),{
anim:new Animated.Value(1)});},



componentDidMount:function(){
ensurePositiveDelayProps(this.props);},


componentWillReceiveProps:function(nextProps){
ensurePositiveDelayProps(nextProps);},


setOpacityTo:function(value){
Animated.timing(
this.state.anim,
{toValue:value,duration:150}).
start();},






touchableHandleActivePressIn:function(e){
this.clearTimeout(this._hideTimeout);
this._hideTimeout = null;
this._opacityActive();
this.props.onPressIn && this.props.onPressIn(e);},


touchableHandleActivePressOut:function(e){
if(!this._hideTimeout){
this._opacityInactive();}

this.props.onPressOut && this.props.onPressOut(e);},


touchableHandlePress:function(e){
this.clearTimeout(this._hideTimeout);
this._opacityActive();
this._hideTimeout = this.setTimeout(
this._opacityInactive,
this.props.delayPressOut || 100);

this.props.onPress && this.props.onPress(e);},


touchableHandleLongPress:function(e){
this.props.onLongPress && this.props.onLongPress(e);},


touchableGetPressRectOffset:function(){
return PRESS_RECT_OFFSET;},


touchableGetHighlightDelayMS:function(){
return this.props.delayPressIn || 0;},


touchableGetLongPressDelayMS:function(){
return this.props.delayLongPress === 0?0:
this.props.delayLongPress || 500;},


touchableGetPressOutDelayMS:function(){
return this.props.delayPressOut;},


_opacityActive:function(){
this.setOpacityTo(this.props.activeOpacity);},


_opacityInactive:function(){
this.clearTimeout(this._hideTimeout);
this._hideTimeout = null;
var childStyle=flattenStyle(this.props.style) || {};
this.setOpacityTo(
childStyle.opacity === undefined?1:childStyle.opacity);},



render:function(){
return (
React.createElement(Animated.View,{
accessible:true,
accessibilityComponentType:this.props.accessibilityComponentType,
accessibilityTraits:this.props.accessibilityTraits,
style:[this.props.style,{opacity:this.state.anim}],
testID:this.props.testID,
onLayout:this.props.onLayout,
onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,
onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,
onResponderGrant:this.touchableHandleResponderGrant,
onResponderMove:this.touchableHandleResponderMove,
onResponderRelease:this.touchableHandleResponderRelease,
onResponderTerminate:this.touchableHandleResponderTerminate},
this.props.children));}});











var PRESS_RECT_OFFSET={top:20,left:20,right:20,bottom:30};


module.exports = TouchableOpacity;
});
__d('Animated',["AnimatedImplementation","Image","Text","View"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var AnimatedImplementation=require('AnimatedImplementation');
var Image=require('Image');
var Text=require('Text');
var View=require('View');

module.exports = _extends({},
AnimatedImplementation,{
View:AnimatedImplementation.createAnimatedComponent(View),
Text:AnimatedImplementation.createAnimatedComponent(Text),
Image:AnimatedImplementation.createAnimatedComponent(Image)});
});
__d('AnimatedImplementation',["Interpolation","Easing","InteractionManager","Interpolation","React","Set","SpringConfig","ViewStylePropTypes","flattenStyle","invariant","requestAnimationFrame"],function(global, require, module, exports) {  var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}










'use strict';

var Easing=require('Easing');
var InteractionManager=require('InteractionManager');
var Interpolation=require('Interpolation');
var React=require('React');
var Set=require('Set');
var SpringConfig=require('SpringConfig');
var ViewStylePropTypes=require('ViewStylePropTypes');

var flattenStyle=require('flattenStyle');
var invariant=require('invariant');
var requestAnimationFrame=require('requestAnimationFrame');var 








Animated=(function(){function Animated(){_classCallCheck(this,Animated);}_createClass(Animated,[{key:'__attach',value:
function __attach(){}},{key:'__detach',value:
function __detach(){}},{key:'__getValue',value:
function __getValue(){}},{key:'__getAnimatedValue',value:
function __getAnimatedValue(){return this.__getValue();}},{key:'__addChild',value:
function __addChild(child){}},{key:'__removeChild',value:
function __removeChild(child){}},{key:'__getChildren',value:
function __getChildren(){return [];}}]);return Animated;})();var 





Animation=(function(){function Animation(){_classCallCheck(this,Animation);}_createClass(Animation,[{key:'start',value:


function start(
fromValue,
onUpdate,
onEnd,
previousAnimation)
{}},{key:'stop',value:
function stop(){}},{key:'__debouncedOnEnd',value:

function __debouncedOnEnd(result){
var onEnd=this.__onEnd;
this.__onEnd = null;
onEnd && onEnd(result);}}]);return Animation;})();var 



AnimatedWithChildren=(function(_Animated){_inherits(AnimatedWithChildren,_Animated);


function AnimatedWithChildren(){_classCallCheck(this,AnimatedWithChildren);
_get(Object.getPrototypeOf(AnimatedWithChildren.prototype),'constructor',this).call(this);
this._children = [];}_createClass(AnimatedWithChildren,[{key:'__addChild',value:


function __addChild(child){
if(this._children.length === 0){
this.__attach();}

this._children.push(child);}},{key:'__removeChild',value:


function __removeChild(child){
var index=this._children.indexOf(child);
if(index === -1){
console.warn('Trying to remove a child that doesn\'t exist');
return;}

this._children.splice(index,1);
if(this._children.length === 0){
this.__detach();}}},{key:'__getChildren',value:



function __getChildren(){
return this._children;}}]);return AnimatedWithChildren;})(Animated);

























function _flush(rootNode){
var animatedStyles=new Set();
function findAnimatedStyles(node){
if(typeof node.update === 'function'){
animatedStyles.add(node);}else 
{
node.__getChildren().forEach(findAnimatedStyles);}}


findAnimatedStyles(rootNode);
animatedStyles.forEach(function(animatedStyle){return animatedStyle.update();});}
















var easeInOut=Easing.inOut(Easing.ease);var 

TimingAnimation=(function(_Animation){_inherits(TimingAnimation,_Animation);










function TimingAnimation(
config)
{_classCallCheck(this,TimingAnimation);
_get(Object.getPrototypeOf(TimingAnimation.prototype),'constructor',this).call(this);
this._toValue = config.toValue;
this._easing = config.easing || easeInOut;
this._duration = config.duration !== undefined?config.duration:500;
this._delay = config.delay || 0;}_createClass(TimingAnimation,[{key:'start',value:


function start(
fromValue,
onUpdate,
onEnd)
{var _this=this;
this.__active = true;
this._fromValue = fromValue;
this._onUpdate = onUpdate;
this.__onEnd = onEnd;

var start=function(){
if(_this._duration === 0){
_this._onUpdate(_this._toValue);
_this.__debouncedOnEnd({finished:true});}else 
{
_this._startTime = Date.now();
_this._animationFrame = requestAnimationFrame(_this.onUpdate.bind(_this));}};


if(this._delay){
this._timeout = setTimeout(start,this._delay);}else 
{
start();}}},{key:'onUpdate',value:



function onUpdate(){
var now=Date.now();
if(now >= this._startTime + this._duration){
if(this._duration === 0){
this._onUpdate(this._toValue);}else 
{
this._onUpdate(
this._fromValue + this._easing(1) * (this._toValue - this._fromValue));}


this.__debouncedOnEnd({finished:true});
return;}


this._onUpdate(
this._fromValue + 
this._easing((now - this._startTime) / this._duration) * (
this._toValue - this._fromValue));

if(this.__active){
this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));}}},{key:'stop',value:



function stop(){
this.__active = false;
clearTimeout(this._timeout);
window.cancelAnimationFrame(this._animationFrame);
this.__debouncedOnEnd({finished:false});}}]);return TimingAnimation;})(Animation);var 













DecayAnimation=(function(_Animation2){_inherits(DecayAnimation,_Animation2);








function DecayAnimation(
config)
{_classCallCheck(this,DecayAnimation);
_get(Object.getPrototypeOf(DecayAnimation.prototype),'constructor',this).call(this);
this._deceleration = config.deceleration || 0.998;
this._velocity = config.velocity;}_createClass(DecayAnimation,[{key:'start',value:


function start(
fromValue,
onUpdate,
onEnd)
{
this.__active = true;
this._lastValue = fromValue;
this._fromValue = fromValue;
this._onUpdate = onUpdate;
this.__onEnd = onEnd;
this._startTime = Date.now();
this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));}},{key:'onUpdate',value:


function onUpdate(){
var now=Date.now();

var value=this._fromValue + 
this._velocity / (1 - this._deceleration) * (
1 - Math.exp(-(1 - this._deceleration) * (now - this._startTime)));

this._onUpdate(value);

if(Math.abs(this._lastValue - value) < 0.1){
this.__debouncedOnEnd({finished:true});
return;}


this._lastValue = value;
if(this.__active){
this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));}}},{key:'stop',value:



function stop(){
this.__active = false;
window.cancelAnimationFrame(this._animationFrame);
this.__debouncedOnEnd({finished:false});}}]);return DecayAnimation;})(Animation);



























function withDefault(value,defaultValue){
if(value === undefined || value === null){
return defaultValue;}

return value;}var 


SpringAnimation=(function(_Animation3){_inherits(SpringAnimation,_Animation3);















function SpringAnimation(
config)
{_classCallCheck(this,SpringAnimation);
_get(Object.getPrototypeOf(SpringAnimation.prototype),'constructor',this).call(this);

this._overshootClamping = withDefault(config.overshootClamping,false);
this._restDisplacementThreshold = withDefault(config.restDisplacementThreshold,0.001);
this._restSpeedThreshold = withDefault(config.restSpeedThreshold,0.001);
this._initialVelocity = config.velocity;
this._lastVelocity = withDefault(config.velocity,0);
this._toValue = config.toValue;

var springConfig;
if(config.bounciness !== undefined || config.speed !== undefined){
invariant(
config.tension === undefined && config.friction === undefined,
'You can only define bounciness/speed or tension/friction but not both');

springConfig = SpringConfig.fromBouncinessAndSpeed(
withDefault(config.bounciness,8),
withDefault(config.speed,12));}else 

{
springConfig = SpringConfig.fromOrigamiTensionAndFriction(
withDefault(config.tension,40),
withDefault(config.friction,7));}


this._tension = springConfig.tension;
this._friction = springConfig.friction;}_createClass(SpringAnimation,[{key:'start',value:


function start(
fromValue,
onUpdate,
onEnd,
previousAnimation)
{
this.__active = true;
this._startPosition = fromValue;
this._lastPosition = this._startPosition;

this._onUpdate = onUpdate;
this.__onEnd = onEnd;
this._lastTime = Date.now();

if(previousAnimation instanceof SpringAnimation){
var internalState=previousAnimation.getInternalState();
this._lastPosition = internalState.lastPosition;
this._lastVelocity = internalState.lastVelocity;
this._lastTime = internalState.lastTime;}

if(this._initialVelocity !== undefined && 
this._initialVelocity !== null){
this._lastVelocity = this._initialVelocity;}

this.onUpdate();}},{key:'getInternalState',value:


function getInternalState(){
return {
lastPosition:this._lastPosition,
lastVelocity:this._lastVelocity,
lastTime:this._lastTime};}},{key:'onUpdate',value:



function onUpdate(){
var position=this._lastPosition;
var velocity=this._lastVelocity;

var tempPosition=this._lastPosition;
var tempVelocity=this._lastVelocity;





var MAX_STEPS=64;
var now=Date.now();
if(now > this._lastTime + MAX_STEPS){
now = this._lastTime + MAX_STEPS;}





var TIMESTEP_MSEC=1;
var numSteps=Math.floor((now - this._lastTime) / TIMESTEP_MSEC);

for(var i=0;i < numSteps;++i) {

var step=TIMESTEP_MSEC / 1000;



var aVelocity=velocity;
var aAcceleration=this._tension * (this._toValue - tempPosition) - this._friction * tempVelocity;
var tempPosition=position + aVelocity * step / 2;
var tempVelocity=velocity + aAcceleration * step / 2;

var bVelocity=tempVelocity;
var bAcceleration=this._tension * (this._toValue - tempPosition) - this._friction * tempVelocity;
tempPosition = position + bVelocity * step / 2;
tempVelocity = velocity + bAcceleration * step / 2;

var cVelocity=tempVelocity;
var cAcceleration=this._tension * (this._toValue - tempPosition) - this._friction * tempVelocity;
tempPosition = position + cVelocity * step / 2;
tempVelocity = velocity + cAcceleration * step / 2;

var dVelocity=tempVelocity;
var dAcceleration=this._tension * (this._toValue - tempPosition) - this._friction * tempVelocity;
tempPosition = position + cVelocity * step / 2;
tempVelocity = velocity + cAcceleration * step / 2;

var dxdt=(aVelocity + 2 * (bVelocity + cVelocity) + dVelocity) / 6;
var dvdt=(aAcceleration + 2 * (bAcceleration + cAcceleration) + dAcceleration) / 6;

position += dxdt * step;
velocity += dvdt * step;}


this._lastTime = now;
this._lastPosition = position;
this._lastVelocity = velocity;

this._onUpdate(position);
if(!this.__active){
return;}



var isOvershooting=false;
if(this._overshootClamping && this._tension !== 0){
if(this._startPosition < this._toValue){
isOvershooting = position > this._toValue;}else 
{
isOvershooting = position < this._toValue;}}


var isVelocity=Math.abs(velocity) <= this._restSpeedThreshold;
var isDisplacement=true;
if(this._tension !== 0){
isDisplacement = Math.abs(this._toValue - position) <= this._restDisplacementThreshold;}


if(isOvershooting || isVelocity && isDisplacement){
if(this._tension !== 0){

this._onUpdate(this._toValue);}


this.__debouncedOnEnd({finished:true});
return;}

this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));}},{key:'stop',value:


function stop(){
this.__active = false;
window.cancelAnimationFrame(this._animationFrame);
this.__debouncedOnEnd({finished:false});}}]);return SpringAnimation;})(Animation);





var _uniqueId=1;var 







AnimatedValue=(function(_AnimatedWithChildren){_inherits(AnimatedValue,_AnimatedWithChildren);






function AnimatedValue(value){_classCallCheck(this,AnimatedValue);
_get(Object.getPrototypeOf(AnimatedValue.prototype),'constructor',this).call(this);
this._value = value;
this._offset = 0;
this._animation = null;
this._listeners = {};}_createClass(AnimatedValue,[{key:'__detach',value:


function __detach(){
this.stopAnimation();}},{key:'__getValue',value:


function __getValue(){
return this._value + this._offset;}},{key:'setValue',value:






function setValue(value){
if(this._animation){
this._animation.stop();
this._animation = null;}

this._updateValue(value);}},{key:'setOffset',value:







function setOffset(offset){
this._offset = offset;}},{key:'flattenOffset',value:






function flattenOffset(){
this._value += this._offset;
this._offset = 0;}},{key:'addListener',value:







function addListener(callback){
var id=String(_uniqueId++);
this._listeners[id] = callback;
return id;}},{key:'removeListener',value:


function removeListener(id){
delete this._listeners[id];}},{key:'removeAllListeners',value:


function removeAllListeners(){
this._listeners = {};}},{key:'stopAnimation',value:







function stopAnimation(callback){
this.stopTracking();
this._animation && this._animation.stop();
this._animation = null;
callback && callback(this.__getValue());}},{key:'interpolate',value:






function interpolate(config){
return new AnimatedInterpolation(this,Interpolation.create(config));}},{key:'animate',value:






function animate(animation,callback){var _this2=this;
var handle=InteractionManager.createInteractionHandle();
var previousAnimation=this._animation;
this._animation && this._animation.stop();
this._animation = animation;
animation.start(
this._value,
function(value){
_this2._updateValue(value);},

function(result){
_this2._animation = null;
InteractionManager.clearInteractionHandle(handle);
callback && callback(result);},

previousAnimation);}},{key:'stopTracking',value:






function stopTracking(){
this._tracking && this._tracking.__detach();
this._tracking = null;}},{key:'track',value:





function track(tracking){
this.stopTracking();
this._tracking = tracking;}},{key:'_updateValue',value:


function _updateValue(value){
this._value = value;
_flush(this);
for(var key in this._listeners) {
this._listeners[key]({value:this.__getValue()});}}}]);return AnimatedValue;})(AnimatedWithChildren);var 












































AnimatedValueXY=(function(_AnimatedWithChildren2){_inherits(AnimatedValueXY,_AnimatedWithChildren2);




function AnimatedValueXY(valueIn){_classCallCheck(this,AnimatedValueXY);
_get(Object.getPrototypeOf(AnimatedValueXY.prototype),'constructor',this).call(this);
var value=valueIn || {x:0,y:0};
if(typeof value.x === 'number' && typeof value.y === 'number'){
this.x = new AnimatedValue(value.x);
this.y = new AnimatedValue(value.y);}else 
{
invariant(
value.x instanceof AnimatedValue && 
value.y instanceof AnimatedValue,
'AnimatedValueXY must be initalized with an object of numbers or ' + 
'AnimatedValues.');

this.x = value.x;
this.y = value.y;}

this._listeners = {};}_createClass(AnimatedValueXY,[{key:'setValue',value:


function setValue(value){
this.x.setValue(value.x);
this.y.setValue(value.y);}},{key:'setOffset',value:


function setOffset(offset){
this.x.setOffset(offset.x);
this.y.setOffset(offset.y);}},{key:'flattenOffset',value:


function flattenOffset(){
this.x.flattenOffset();
this.y.flattenOffset();}},{key:'__getValue',value:


function __getValue(){
return {
x:this.x.__getValue(),
y:this.y.__getValue()};}},{key:'stopAnimation',value:



function stopAnimation(callback){
this.x.stopAnimation();
this.y.stopAnimation();
callback && callback(this.__getValue());}},{key:'addListener',value:


function addListener(callback){var _this3=this;
var id=String(_uniqueId++);
var jointCallback=function(_ref){var number=_ref.value;
callback(_this3.__getValue());};

this._listeners[id] = {
x:this.x.addListener(jointCallback),
y:this.y.addListener(jointCallback)};

return id;}},{key:'removeListener',value:


function removeListener(id){
this.x.removeListener(this._listeners[id].x);
this.y.removeListener(this._listeners[id].y);
delete this._listeners[id];}},{key:'getLayout',value:









function getLayout(){
return {
left:this.x,
top:this.y};}},{key:'getTranslateTransform',value:












function getTranslateTransform(){
return [
{translateX:this.x},
{translateY:this.y}];}}]);return AnimatedValueXY;})(AnimatedWithChildren);var 




AnimatedInterpolation=(function(_AnimatedWithChildren3){_inherits(AnimatedInterpolation,_AnimatedWithChildren3);



function AnimatedInterpolation(parent,interpolation){_classCallCheck(this,AnimatedInterpolation);
_get(Object.getPrototypeOf(AnimatedInterpolation.prototype),'constructor',this).call(this);
this._parent = parent;
this._interpolation = interpolation;}_createClass(AnimatedInterpolation,[{key:'__getValue',value:


function __getValue(){
var parentValue=this._parent.__getValue();
invariant(
typeof parentValue === 'number',
'Cannot interpolate an input which is not a number.');

return this._interpolation(parentValue);}},{key:'interpolate',value:


function interpolate(config){
return new AnimatedInterpolation(this,Interpolation.create(config));}},{key:'__attach',value:


function __attach(){
this._parent.__addChild(this);}},{key:'__detach',value:


function __detach(){
this._parent.__removeChild(this);}}]);return AnimatedInterpolation;})(AnimatedWithChildren);var 



AnimatedTransform=(function(_AnimatedWithChildren4){_inherits(AnimatedTransform,_AnimatedWithChildren4);


function AnimatedTransform(transforms){_classCallCheck(this,AnimatedTransform);
_get(Object.getPrototypeOf(AnimatedTransform.prototype),'constructor',this).call(this);
this._transforms = transforms;}_createClass(AnimatedTransform,[{key:'__getValue',value:


function __getValue(){
return this._transforms.map(function(transform){
var result={};
for(var key in transform) {
var value=transform[key];
if(value instanceof Animated){
result[key] = value.__getValue();}else 
{
result[key] = value;}}


return result;});}},{key:'__getAnimatedValue',value:



function __getAnimatedValue(){
return this._transforms.map(function(transform){
var result={};
for(var key in transform) {
var value=transform[key];
if(value instanceof Animated){
result[key] = value.__getAnimatedValue();}else 
{

result[key] = value;}}


return result;});}},{key:'__attach',value:



function __attach(){var _this4=this;
this._transforms.forEach(function(transform){
for(var key in transform) {
var value=transform[key];
if(value instanceof Animated){
value.__addChild(_this4);}}});}},{key:'__detach',value:





function __detach(){var _this5=this;
this._transforms.forEach(function(transform){
for(var key in transform) {
var value=transform[key];
if(value instanceof Animated){
value.__removeChild(_this5);}}});}}]);return AnimatedTransform;})(AnimatedWithChildren);var 






AnimatedStyle=(function(_AnimatedWithChildren5){_inherits(AnimatedStyle,_AnimatedWithChildren5);


function AnimatedStyle(style){_classCallCheck(this,AnimatedStyle);
_get(Object.getPrototypeOf(AnimatedStyle.prototype),'constructor',this).call(this);
style = flattenStyle(style) || {};
if(style.transform){
style = _extends({},
style,{
transform:new AnimatedTransform(style.transform)});}


this._style = style;}_createClass(AnimatedStyle,[{key:'__getValue',value:


function __getValue(){
var style={};
for(var key in this._style) {
var value=this._style[key];
if(value instanceof Animated){
style[key] = value.__getValue();}else 
{
style[key] = value;}}


return style;}},{key:'__getAnimatedValue',value:


function __getAnimatedValue(){
var style={};
for(var key in this._style) {
var value=this._style[key];
if(value instanceof Animated){
style[key] = value.__getAnimatedValue();}}


return style;}},{key:'__attach',value:


function __attach(){
for(var key in this._style) {
var value=this._style[key];
if(value instanceof Animated){
value.__addChild(this);}}}},{key:'__detach',value:




function __detach(){
for(var key in this._style) {
var value=this._style[key];
if(value instanceof Animated){
value.__removeChild(this);}}}}]);return AnimatedStyle;})(AnimatedWithChildren);var 





AnimatedProps=(function(_Animated2){_inherits(AnimatedProps,_Animated2);



function AnimatedProps(
props,
callback)
{_classCallCheck(this,AnimatedProps);
_get(Object.getPrototypeOf(AnimatedProps.prototype),'constructor',this).call(this);
if(props.style){
props = _extends({},
props,{
style:new AnimatedStyle(props.style)});}


this._props = props;
this._callback = callback;
this.__attach();}_createClass(AnimatedProps,[{key:'__getValue',value:


function __getValue(){
var props={};
for(var key in this._props) {
var value=this._props[key];
if(value instanceof Animated){
props[key] = value.__getValue();}else 
{
props[key] = value;}}


return props;}},{key:'__getAnimatedValue',value:


function __getAnimatedValue(){
var props={};
for(var key in this._props) {
var value=this._props[key];
if(value instanceof Animated){
props[key] = value.__getAnimatedValue();}}


return props;}},{key:'__attach',value:


function __attach(){
for(var key in this._props) {
var value=this._props[key];
if(value instanceof Animated){
value.__addChild(this);}}}},{key:'__detach',value:




function __detach(){
for(var key in this._props) {
var value=this._props[key];
if(value instanceof Animated){
value.__removeChild(this);}}}},{key:'update',value:




function update(){
this._callback();}}]);return AnimatedProps;})(Animated);



function createAnimatedComponent(Component){
var refName='node';var 

AnimatedComponent=(function(_React$Component){_inherits(AnimatedComponent,_React$Component);function AnimatedComponent(){_classCallCheck(this,AnimatedComponent);_get(Object.getPrototypeOf(AnimatedComponent.prototype),'constructor',this).apply(this,arguments);}_createClass(AnimatedComponent,[{key:'componentWillUnmount',value:


function componentWillUnmount(){
this._propsAnimated && this._propsAnimated.__detach();}},{key:'setNativeProps',value:


function setNativeProps(props){
this.refs[refName].setNativeProps(props);}},{key:'componentWillMount',value:


function componentWillMount(){
this.attachProps(this.props);}},{key:'attachProps',value:


function attachProps(nextProps){var _this6=this;
var oldPropsAnimated=this._propsAnimated;







var callback=function(){
if(_this6.refs[refName].setNativeProps){
var value=_this6._propsAnimated.__getAnimatedValue();
_this6.refs[refName].setNativeProps(value);}else 
{
_this6.forceUpdate();}};



this._propsAnimated = new AnimatedProps(
nextProps,
callback);










oldPropsAnimated && oldPropsAnimated.__detach();}},{key:'componentWillReceiveProps',value:


function componentWillReceiveProps(nextProps){
this.attachProps(nextProps);}},{key:'render',value:


function render(){
return (
React.createElement(Component,_extends({},
this._propsAnimated.__getValue(),{
ref:refName})));}}]);return AnimatedComponent;})(React.Component);




AnimatedComponent.propTypes = {
style:function(props,propName,componentName){
for(var key in ViewStylePropTypes) {
if(!Component.propTypes[key] && props[key] !== undefined){
console.error(
'You are setting the style `{ ' + key + ': ... }` as a prop. You ' + 
'should nest it in a style object. ' + 
'E.g. `{ style: { ' + key + ': ... } }`');}}}};






return AnimatedComponent;}var 


AnimatedTracking=(function(_Animated3){_inherits(AnimatedTracking,_Animated3);






function AnimatedTracking(
value,
parent,
animationClass,
animationConfig,
callback)
{_classCallCheck(this,AnimatedTracking);
_get(Object.getPrototypeOf(AnimatedTracking.prototype),'constructor',this).call(this);
this._value = value;
this._parent = parent;
this._animationClass = animationClass;
this._animationConfig = animationConfig;
this._callback = callback;
this.__attach();}_createClass(AnimatedTracking,[{key:'__getValue',value:


function __getValue(){
return this._parent.__getValue();}},{key:'__attach',value:


function __attach(){
this._parent.__addChild(this);}},{key:'__detach',value:


function __detach(){
this._parent.__removeChild(this);}},{key:'update',value:


function update(){
this._value.animate(new this._animationClass(_extends({},
this._animationConfig,{
toValue:this._animationConfig.toValue.__getValue()})),
this._callback);}}]);return AnimatedTracking;})(Animated);








var maybeVectorAnim=function(
value,
config,
anim)
{
if(value instanceof AnimatedValueXY){
var configX=_extends({},config);
var configY=_extends({},config);
for(var key in config) {var _config$key=
config[key];var x=_config$key.x;var y=_config$key.y;
if(x !== undefined && y !== undefined){
configX[key] = x;
configY[key] = y;}}


var aX=anim(value.x,configX);
var aY=anim(value.y,configY);


return parallel([aX,aY],{stopTogether:false});}

return null;};


var spring=function(
value,
config)
{
return maybeVectorAnim(value,config,spring) || {
start:function(callback){
var singleValue=value;
var singleConfig=config;
singleValue.stopTracking();
if(config.toValue instanceof Animated){
singleValue.track(new AnimatedTracking(
singleValue,
config.toValue,
SpringAnimation,
singleConfig,
callback));}else 

{
singleValue.animate(new SpringAnimation(singleConfig),callback);}},



stop:function(){
value.stopAnimation();}};};




var timing=function(
value,
config)
{
return maybeVectorAnim(value,config,timing) || {
start:function(callback){
var singleValue=value;
var singleConfig=config;
singleValue.stopTracking();
if(config.toValue instanceof Animated){
singleValue.track(new AnimatedTracking(
singleValue,
config.toValue,
TimingAnimation,
singleConfig,
callback));}else 

{
singleValue.animate(new TimingAnimation(singleConfig),callback);}},



stop:function(){
value.stopAnimation();}};};




var decay=function(
value,
config)
{
return maybeVectorAnim(value,config,decay) || {
start:function(callback){
var singleValue=value;
var singleConfig=config;
singleValue.stopTracking();
singleValue.animate(new DecayAnimation(singleConfig),callback);},


stop:function(){
value.stopAnimation();}};};




var sequence=function(
animations)
{
var current=0;
return {
start:function(callback){
var onComplete=function(result){
if(!result.finished){
callback && callback(result);
return;}


current++;

if(current === animations.length){
callback && callback(result);
return;}


animations[current].start(onComplete);};


if(animations.length === 0){
callback && callback({finished:true});}else 
{
animations[current].start(onComplete);}},



stop:function(){
if(current < animations.length){
animations[current].stop();}}};};








var parallel=function(
animations,
config)
{
var doneCount=0;

var hasEnded={};
var stopTogether=!(config && config.stopTogether === false);

var result={
start:function(callback){
if(doneCount === animations.length){
callback && callback({finished:true});
return;}


animations.forEach(function(animation,idx){
var cb=function(endResult){
hasEnded[idx] = true;
doneCount++;
if(doneCount === animations.length){
doneCount = 0;
callback && callback(endResult);
return;}


if(!endResult.finished && stopTogether){
result.stop();}};



if(!animation){
cb({finished:true});}else 
{
animation.start(cb);}});},




stop:function(){
animations.forEach(function(animation,idx){
!hasEnded[idx] && animation.stop();
hasEnded[idx] = true;});}};




return result;};


var delay=function(time){

return timing(new AnimatedValue(0),{toValue:0,delay:time,duration:0});};


var stagger=function(
time,
animations)
{
return parallel(animations.map(function(animation,i){
return sequence([
delay(time * i),
animation]);}));};







var event=function(
argMapping,
config)
{
return function(){for(var _len=arguments.length,args=Array(_len),_key=0;_key < _len;_key++) {args[_key] = arguments[_key];}
var traverse=function(recMapping,recEvt,key){
if(typeof recEvt === 'number'){
invariant(
recMapping instanceof AnimatedValue,
'Bad mapping of type ' + typeof recMapping + ' for key ' + key + 
', event value must map to AnimatedValue');

recMapping.setValue(recEvt);
return;}

invariant(
typeof recMapping === 'object',
'Bad mapping of type ' + typeof recMapping + ' for key ' + key);

invariant(
typeof recEvt === 'object',
'Bad event of type ' + typeof recEvt + ' for key ' + key);

for(var key in recMapping) {
traverse(recMapping[key],recEvt[key],key);}};


argMapping.forEach(function(mapping,idx){
traverse(mapping,args[idx],'arg' + idx);});

if(config && config.listener){
config.listener.apply(null,args);}};};





























































































module.exports = {




Value:AnimatedValue,



ValueXY:AnimatedValueXY,





decay:decay,




timing:timing,




spring:spring,




delay:delay,





sequence:sequence,





parallel:parallel,




stagger:stagger,

















event:event,




createAnimatedComponent:createAnimatedComponent,

__PropsOnlyForTests:AnimatedProps};
});
__d('Interpolation',["tinycolor"],function(global, require, module, exports) {  'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var tinycolor=require('tinycolor');


var invariant=function(condition,message){
if(!condition){
var error=new Error(message);
error.framesToPop = 1;
throw error;}};














var linear=function(t){return t;};var 





Interpolation=(function(){function Interpolation(){_classCallCheck(this,Interpolation);}_createClass(Interpolation,null,[{key:'create',value:
function create(config){

if(config.outputRange && typeof config.outputRange[0] === 'string'){
return createInterpolationFromStringOutputRange(config);}


var outputRange=config.outputRange;
checkInfiniteRange('outputRange',outputRange);

var inputRange=config.inputRange;
checkInfiniteRange('inputRange',inputRange);
checkValidInputRange(inputRange);

invariant(
inputRange.length === outputRange.length,
'inputRange (' + inputRange.length + ') and outputRange (' + 
outputRange.length + ') must have the same length');


var easing=config.easing || linear;

var extrapolateLeft='extend';
if(config.extrapolateLeft !== undefined){
extrapolateLeft = config.extrapolateLeft;}else 
if(config.extrapolate !== undefined){
extrapolateLeft = config.extrapolate;}


var extrapolateRight='extend';
if(config.extrapolateRight !== undefined){
extrapolateRight = config.extrapolateRight;}else 
if(config.extrapolate !== undefined){
extrapolateRight = config.extrapolate;}


return function(input){
invariant(
typeof input === 'number',
'Cannot interpolation an input which is not a number');


var range=findRange(input,inputRange);
return interpolate(
input,
inputRange[range],
inputRange[range + 1],
outputRange[range],
outputRange[range + 1],
easing,
extrapolateLeft,
extrapolateRight);};}}]);return Interpolation;})();





function interpolate(
input,
inputMin,
inputMax,
outputMin,
outputMax,
easing,
extrapolateLeft,
extrapolateRight)
{
var result=input;


if(result < inputMin){
if(extrapolateLeft === 'identity'){
return result;}else 
if(extrapolateLeft === 'clamp'){
result = inputMin;}else 
if(extrapolateLeft === 'extend'){}}




if(result > inputMax){
if(extrapolateRight === 'identity'){
return result;}else 
if(extrapolateRight === 'clamp'){
result = inputMax;}else 
if(extrapolateRight === 'extend'){}}




if(outputMin === outputMax){
return outputMin;}


if(inputMin === inputMax){
if(input <= inputMin){
return outputMin;}

return outputMax;}



if(inputMin === -Infinity){
result = -result;}else 
if(inputMax === Infinity){
result = result - inputMin;}else 
{
result = (result - inputMin) / (inputMax - inputMin);}



result = easing(result);


if(outputMin === -Infinity){
result = -result;}else 
if(outputMax === Infinity){
result = result + outputMin;}else 
{
result = result * (outputMax - outputMin) + outputMin;}


return result;}


function colorToRgba(
input)
{
var color=tinycolor(input);
if(color.isValid()){var _color$toRgb=
color.toRgb();var r=_color$toRgb.r;var g=_color$toRgb.g;var b=_color$toRgb.b;var a=_color$toRgb.a;
return 'rgba(' + r + ', ' + g + ', ' + b + ', ' + (a === undefined?1:a) + ')';}else 
{
return input;}}



var stringShapeRegex=/[0-9\.-]+/g;









function createInterpolationFromStringOutputRange(
config)
{
var outputRange=config.outputRange;
invariant(outputRange.length >= 2,'Bad output range');
outputRange = outputRange.map(colorToRgba);
checkPattern(outputRange);









var outputRanges=outputRange[0].match(stringShapeRegex).map(function(){return [];});
outputRange.forEach(function(value){
value.match(stringShapeRegex).forEach(function(number,i){
outputRanges[i].push(+number);});});



var interpolations=outputRange[0].match(stringShapeRegex).map(function(value,i){
return Interpolation.create(_extends({},
config,{
outputRange:outputRanges[i]}));});



return function(input){
var i=0;



return outputRange[0].replace(stringShapeRegex,function(){
return String(interpolations[i++](input));});};}




function checkPattern(arr){
var pattern=arr[0].replace(stringShapeRegex,'');
for(var i=1;i < arr.length;++i) {
invariant(
pattern === arr[i].replace(stringShapeRegex,''),
'invalid pattern ' + arr[0] + ' and ' + arr[i]);}}




function findRange(input,inputRange){
for(var i=1;i < inputRange.length - 1;++i) {
if(inputRange[i] >= input){
break;}}


return i - 1;}


function checkValidInputRange(arr){
invariant(arr.length >= 2,'inputRange must have at least 2 elements');
for(var i=1;i < arr.length;++i) {
invariant(
arr[i] >= arr[i - 1],






'inputRange must be monotonically increasing ' + arr);}}




function checkInfiniteRange(name,arr){
invariant(arr.length >= 2,name + ' must have at least 2 elements');
invariant(
arr.length !== 2 || arr[0] !== -Infinity || arr[1] !== Infinity,






name + 'cannot be ]-infinity;+infinity[ ' + arr);}



module.exports = Interpolation;
});
__d('Easing',["bezier"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var _bezier=require('bezier');var 






Easing=(function(){function Easing(){_classCallCheck(this,Easing);}_createClass(Easing,null,[{key:'step0',value:
function step0(n){
return n > 0?1:0;}},{key:'step1',value:


function step1(n){
return n >= 1?1:0;}},{key:'linear',value:


function linear(t){
return t;}},{key:'ease',value:


function ease(t){
return _ease(t);}},{key:'quad',value:


function quad(t){
return t * t;}},{key:'cubic',value:


function cubic(t){
return t * t * t;}},{key:'poly',value:


function poly(n){
return function(t){return Math.pow(t,n);};}},{key:'sin',value:


function sin(t){
return 1 - Math.cos(t * Math.PI / 2);}},{key:'circle',value:


function circle(t){
return 1 - Math.sqrt(1 - t * t);}},{key:'exp',value:


function exp(t){
return Math.pow(2,10 * (t - 1));}},{key:'elastic',value:












function elastic(){var bounciness=arguments.length <= 0 || arguments[0] === undefined?1:arguments[0];
var p=bounciness * Math.PI;
return function(t){return 1 - Math.pow(Math.cos(t * Math.PI / 2),3) * Math.cos(t * p);};}},{key:'back',value:


function back(s){
if(s === undefined){
s = 1.70158;}

return function(t){return t * t * ((s + 1) * t - s);};}},{key:'bounce',value:


function bounce(t){
if(t < 1 / 2.75){
return 7.5625 * t * t;}


if(t < 2 / 2.75){
t -= 1.5 / 2.75;
return 7.5625 * t * t + 0.75;}


if(t < 2.5 / 2.75){
t -= 2.25 / 2.75;
return 7.5625 * t * t + 0.9375;}


t -= 2.625 / 2.75;
return 7.5625 * t * t + 0.984375;}},{key:'bezier',value:


function bezier(
x1,
y1,
x2,
y2,
epsilon)
{
if(epsilon === undefined){


var duration=500;
epsilon = 1000 / 60 / duration / 4;}


return _bezier(x1,y1,x2,y2,epsilon);}},{key:'in',value:


function _in(
easing)
{
return easing;}},{key:'out',value:





function out(
easing)
{
return function(t){return 1 - easing(1 - t);};}},{key:'inOut',value:





function inOut(
easing)
{
return function(t){
if(t < 0.5){
return easing(t * 2) / 2;}

return 1 - easing((1 - t) * 2) / 2;};}}]);return Easing;})();




var _ease=Easing.bezier(0.42,0,1,1);



module.exports = Easing;
});
__d('bezier',[],function(global, require, module, exports) {  module.





























exports = function(x1,y1,x2,y2,epsilon){

var curveX=function(t){
var v=1 - t;
return 3 * v * v * t * x1 + 3 * v * t * t * x2 + t * t * t;};


var curveY=function(t){
var v=1 - t;
return 3 * v * v * t * y1 + 3 * v * t * t * y2 + t * t * t;};


var derivativeCurveX=function(t){
var v=1 - t;
return 3 * (2 * (t - 1) * t + v * v) * x1 + 3 * (-t * t * t + 2 * v * t) * x2;};


return function(t){

var x=t,t0,t1,t2,x2,d2,i;


for(t2 = x,i = 0;i < 8;i++) {
x2 = curveX(t2) - x;
if(Math.abs(x2) < epsilon)return curveY(t2);
d2 = derivativeCurveX(t2);
if(Math.abs(d2) < 1e-6)break;
t2 = t2 - x2 / d2;}


t0 = 0,t1 = 1,t2 = x;

if(t2 < t0)return curveY(t0);
if(t2 > t1)return curveY(t1);


while(t0 < t1) {
x2 = curveX(t2);
if(Math.abs(x2 - x) < epsilon)return curveY(t2);
if(x > x2)t0 = t2;else 
t1 = t2;
t2 = (t1 - t0) * .5 + t0;}



return curveY(t2);};};
});
__d('SpringConfig',[],function(global, require, module, exports) {  'use strict';


















function tensionFromOrigamiValue(oValue){
return (oValue - 30) * 3.62 + 194;}


function frictionFromOrigamiValue(oValue){
return (oValue - 8) * 3 + 25;}


function fromOrigamiTensionAndFriction(
tension,
friction)
{
return {
tension:tensionFromOrigamiValue(tension),
friction:frictionFromOrigamiValue(friction)};}



function fromBouncinessAndSpeed(
bounciness,
speed)
{
function normalize(value,startValue,endValue){
return (value - startValue) / (endValue - startValue);}


function projectNormal(n,start,end){
return start + n * (end - start);}


function linearInterpolation(t,start,end){
return t * end + (1 - t) * start;}


function quadraticOutInterpolation(t,start,end){
return linearInterpolation(2 * t - t * t,start,end);}


function b3Friction1(x){
return 0.0007 * Math.pow(x,3) - 
0.031 * Math.pow(x,2) + 0.64 * x + 1.28;}


function b3Friction2(x){
return 0.000044 * Math.pow(x,3) - 
0.006 * Math.pow(x,2) + 0.36 * x + 2;}


function b3Friction3(x){
return 0.00000045 * Math.pow(x,3) - 
0.000332 * Math.pow(x,2) + 0.1078 * x + 5.84;}


function b3Nobounce(tension){
if(tension <= 18){
return b3Friction1(tension);}else 
if(tension > 18 && tension <= 44){
return b3Friction2(tension);}else 
{
return b3Friction3(tension);}}



var b=normalize(bounciness / 1.7,0,20);
b = projectNormal(b,0,0.8);
var s=normalize(speed / 1.7,0,20);
var bouncyTension=projectNormal(s,0.5,200);
var bouncyFriction=quadraticOutInterpolation(
b,
b3Nobounce(bouncyTension),
0.01);


return {
tension:tensionFromOrigamiValue(bouncyTension),
friction:frictionFromOrigamiValue(bouncyFriction)};}



module.exports = {
fromOrigamiTensionAndFriction:fromOrigamiTensionAndFriction,
fromBouncinessAndSpeed:fromBouncinessAndSpeed};
});
__d('requestAnimationFrame',["emptyFunction","nativeRequestAnimationFrame"],function(global, require, module, exports) {  var 










emptyFunction=require('emptyFunction');
var nativeRequestAnimationFrame=require('nativeRequestAnimationFrame');

var lastTime=0;

var requestAnimationFrame=
nativeRequestAnimationFrame || 
function(callback){
var currTime=Date.now();
var timeDelay=Math.max(0,16 - (currTime - lastTime));
lastTime = currTime + timeDelay;
return global.setTimeout(function(){
callback(Date.now());},
timeDelay);};



requestAnimationFrame(emptyFunction);

module.exports = requestAnimationFrame;
});
__d('nativeRequestAnimationFrame',[],function(global, require, module, exports) {  var 










nativeRequestAnimationFrame=
global.requestAnimationFrame || 
global.webkitRequestAnimationFrame || 
global.mozRequestAnimationFrame || 
global.oRequestAnimationFrame || 
global.msRequestAnimationFrame;

module.exports = nativeRequestAnimationFrame;
});
__d('ViewPagerAndroid',["UnimplementedView"],function(global, require, module, exports) {  'use strict';











module.exports = require('UnimplementedView');
});
__d('WebView',["ActivityIndicatorIOS","EdgeInsetsPropType","React","StyleSheet","Text","View","invariant","keyMirror","requireNativeComponent","NativeModules"],function(global, require, module, exports) {  'use strict';












var ActivityIndicatorIOS=require('ActivityIndicatorIOS');
var EdgeInsetsPropType=require('EdgeInsetsPropType');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');

var invariant=require('invariant');
var keyMirror=require('keyMirror');
var requireNativeComponent=require('requireNativeComponent');

var PropTypes=React.PropTypes;
var RCTWebViewManager=require('NativeModules').WebViewManager;

var BGWASH='rgba(255,255,255,0.8)';
var RCT_WEBVIEW_REF='webview';

var WebViewState=keyMirror({
IDLE:null,
LOADING:null,
ERROR:null});


var NavigationType={
click:RCTWebViewManager.NavigationType.LinkClicked,
formsubmit:RCTWebViewManager.NavigationType.FormSubmitted,
backforward:RCTWebViewManager.NavigationType.BackForward,
reload:RCTWebViewManager.NavigationType.Reload,
formresubmit:RCTWebViewManager.NavigationType.FormResubmitted,
other:RCTWebViewManager.NavigationType.Other};


var JSNavigationScheme=RCTWebViewManager.JSNavigationScheme;









var defaultRenderLoading=function(){return (
React.createElement(View,{style:styles.loadingView},
React.createElement(ActivityIndicatorIOS,null)));};


var defaultRenderError=function(errorDomain,errorCode,errorDesc){return (
React.createElement(View,{style:styles.errorContainer},
React.createElement(Text,{style:styles.errorTextTitle},'Error loading page'),


React.createElement(Text,{style:styles.errorText},
'Domain: ' + errorDomain),

React.createElement(Text,{style:styles.errorText},
'Error Code: ' + errorCode),

React.createElement(Text,{style:styles.errorText},
'Description: ' + errorDesc)));};




var WebView=React.createClass({displayName:'WebView',
statics:{
JSNavigationScheme:JSNavigationScheme,
NavigationType:NavigationType},


propTypes:{
url:PropTypes.string,
html:PropTypes.string,
renderError:PropTypes.func,
renderLoading:PropTypes.func,
bounces:PropTypes.bool,
scrollEnabled:PropTypes.bool,
automaticallyAdjustContentInsets:PropTypes.bool,
contentInset:EdgeInsetsPropType,
onNavigationStateChange:PropTypes.func,
startInLoadingState:PropTypes.bool,
style:View.propTypes.style,



javaScriptEnabledAndroid:PropTypes.bool,



injectedJavaScript:PropTypes.string,





scalesPageToFit:PropTypes.bool},


getInitialState:function(){
return {
viewState:WebViewState.IDLE,
lastErrorEvent:null,
startInLoadingState:true};},



componentWillMount:function(){
if(this.props.startInLoadingState){
this.setState({viewState:WebViewState.LOADING});}},



render:function(){
var otherView=null;

if(this.state.viewState === WebViewState.LOADING){
otherView = (this.props.renderLoading || defaultRenderLoading)();}else 
if(this.state.viewState === WebViewState.ERROR){
var errorEvent=this.state.lastErrorEvent;
invariant(
errorEvent != null,
'lastErrorEvent expected to be non-null');

otherView = (this.props.renderError || defaultRenderError)(
errorEvent.domain,
errorEvent.code,
errorEvent.description);}else 

if(this.state.viewState !== WebViewState.IDLE){
console.error(
'RCTWebView invalid state encountered: ' + this.state.loading);}



var webViewStyles=[styles.container,styles.webView,this.props.style];
if(this.state.viewState === WebViewState.LOADING || 
this.state.viewState === WebViewState.ERROR){

webViewStyles.push(styles.hidden);}


var webView=
React.createElement(RCTWebView,{
ref:RCT_WEBVIEW_REF,
key:'webViewKey',
style:webViewStyles,
url:this.props.url,
html:this.props.html,
injectedJavaScript:this.props.injectedJavaScript,
bounces:this.props.bounces,
scrollEnabled:this.props.scrollEnabled,
contentInset:this.props.contentInset,
automaticallyAdjustContentInsets:this.props.automaticallyAdjustContentInsets,
onLoadingStart:this.onLoadingStart,
onLoadingFinish:this.onLoadingFinish,
onLoadingError:this.onLoadingError,
scalesPageToFit:this.props.scalesPageToFit});


return (
React.createElement(View,{style:styles.container},
webView,
otherView));},




goForward:function(){
RCTWebViewManager.goForward(this.getWebViewHandle());},


goBack:function(){
RCTWebViewManager.goBack(this.getWebViewHandle());},


reload:function(){
RCTWebViewManager.reload(this.getWebViewHandle());},






updateNavigationState:function(event){
if(this.props.onNavigationStateChange){
this.props.onNavigationStateChange(event.nativeEvent);}},



getWebViewHandle:function(){
return React.findNodeHandle(this.refs[RCT_WEBVIEW_REF]);},


onLoadingStart:function(event){
this.updateNavigationState(event);},


onLoadingError:function(event){
event.persist();
console.warn('Encountered an error loading page',event.nativeEvent);

this.setState({
lastErrorEvent:event.nativeEvent,
viewState:WebViewState.ERROR});},



onLoadingFinish:function(event){
this.setState({
viewState:WebViewState.IDLE});

this.updateNavigationState(event);}});



var RCTWebView=requireNativeComponent('RCTWebView',WebView,{
nativeOnly:{
onLoadingStart:true,
onLoadingError:true,
onLoadingFinish:true}});



var styles=StyleSheet.create({
container:{
flex:1},

errorContainer:{
flex:1,
justifyContent:'center',
alignItems:'center',
backgroundColor:BGWASH},

errorText:{
fontSize:14,
textAlign:'center',
marginBottom:2},

errorTextTitle:{
fontSize:15,
fontWeight:'500',
marginBottom:10},

hidden:{
height:0,
flex:0},

loadingView:{
backgroundColor:BGWASH,
flex:1,
justifyContent:'center',
alignItems:'center'},

webView:{
backgroundColor:'#ffffff'}});



module.exports = WebView;
});
__d('ActionSheetIOS',["NativeModules","invariant"],function(global, require, module, exports) {  'use strict';












var RCTActionSheetManager=require('NativeModules').ActionSheetManager;

var invariant=require('invariant');

var ActionSheetIOS={
showActionSheetWithOptions:function(options,callback){
invariant(
typeof options === 'object' && options !== null,
'Options must a valid object');

invariant(
typeof callback === 'function',
'Must provide a valid callback');

RCTActionSheetManager.showActionSheetWithOptions(
options,
function(){},
callback);},



showShareActionSheetWithOptions:function(
options,
failureCallback,
successCallback)
{
invariant(
typeof options === 'object' && options !== null,
'Options must a valid object');

invariant(
typeof failureCallback === 'function',
'Must provide a valid failureCallback');

invariant(
typeof successCallback === 'function',
'Must provide a valid successCallback');

RCTActionSheetManager.showShareActionSheetWithOptions(
options,
failureCallback,
successCallback);}};




module.exports = ActionSheetIOS;
});
__d('AdSupportIOS',["NativeModules"],function(global, require, module, exports) {  'use strict';












var AdSupport=require('NativeModules').AdSupport;

module.exports = {
getAdvertisingId:function(onSuccess,onFailure){
AdSupport.getAdvertisingId(onSuccess,onFailure);},


getAdvertisingTrackingEnabled:function(onSuccess,onFailure){
AdSupport.getAdvertisingTrackingEnabled(onSuccess,onFailure);}};
});
__d('AlertIOS',["NativeModules","invariant"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var RCTAlertManager=require('NativeModules').AlertManager;
var invariant=require('invariant');

var DEFAULT_BUTTON_TEXT='OK';
var DEFAULT_BUTTON={
text:DEFAULT_BUTTON_TEXT,
onPress:null};var 
























AlertIOS=(function(){function AlertIOS(){_classCallCheck(this,AlertIOS);}_createClass(AlertIOS,null,[{key:'alert',value:
function alert(
title,
message,
buttons,



type)
{
var callbacks=[];
var buttonsSpec=[];
title = title || '';
message = message || '';
buttons = buttons || [DEFAULT_BUTTON];
type = type || '';

buttons.forEach(function(btn,index){
callbacks[index] = btn.onPress;
var btnDef={};
btnDef[index] = btn.text || DEFAULT_BUTTON_TEXT;
buttonsSpec.push(btnDef);});

RCTAlertManager.alertWithArgs({
title:title,
message:message,
buttons:buttonsSpec,
type:type},
function(id,value){
var cb=callbacks[id];
cb && cb(value);});}},{key:'prompt',value:



function prompt(
title,
value,
buttons,



callback)
{
if(arguments.length === 2){
if(typeof value === 'object'){
buttons = value;
value = undefined;}else 
if(typeof value === 'function'){
callback = value;
value = undefined;}}else 

if(arguments.length === 3 && typeof buttons === 'function'){
callback = buttons;
buttons = undefined;}


invariant(
!(callback && buttons) && (callback || buttons),
'Must provide either a button list or a callback, but not both');


if(!buttons){
buttons = [{
text:'Cancel'},
{
text:'OK',
onPress:callback}];}


this.alert(title,value,buttons,'plain-text');}}]);return AlertIOS;})();



module.exports = AlertIOS;
});
__d('AppRegistry',["invariant","renderApplication","RCTRenderingPerf"],function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');
var renderApplication=require('renderApplication');

if(__DEV__){


require('RCTRenderingPerf');}


var runnables={};




















var AppRegistry={
registerConfig:function(config){
for(var i=0;i < config.length;++i) {
var appConfig=config[i];
if(appConfig.run){
AppRegistry.registerRunnable(appConfig.appKey,appConfig.run);}else 
{
invariant(appConfig.component,'No component provider passed in');
AppRegistry.registerComponent(appConfig.appKey,appConfig.component);}}},




registerComponent:function(appKey,getComponentFunc){
runnables[appKey] = {
run:function(appParameters){return (
renderApplication(getComponentFunc(),appParameters.initialProps,appParameters.rootTag));}};

return appKey;},


registerRunnable:function(appKey,func){
runnables[appKey] = {run:func};
return appKey;},


getAppKeys:function(){
return Object.keys(runnables);},


runApplication:function(appKey,appParameters){
console.log(
'Running application "' + appKey + '" with appParams: ' + 
JSON.stringify(appParameters) + '. ' + 
'__DEV__ === ' + String(__DEV__) + 
', development-level warning are ' + (__DEV__?'ON':'OFF') + 
', performance optimizations are ' + (__DEV__?'OFF':'ON'));

invariant(
runnables[appKey] && runnables[appKey].run,
'Application ' + appKey + ' has not been registered. This ' + 
'is either due to a require() error during initialization ' + 
'or failure to call AppRegistry.registerComponent.');

runnables[appKey].run(appParameters);}};



module.exports = AppRegistry;
});
__d('renderApplication',["Inspector","RCTDeviceEventEmitter","React","StyleSheet","Subscribable","View","WarningBox","invariant","setupDevtools"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};











var Inspector=require('Inspector');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Subscribable=require('Subscribable');
var View=require('View');
var WarningBox=require('WarningBox');

var invariant=require('invariant');

var AppContainer=React.createClass({displayName:'AppContainer',
mixins:[Subscribable.Mixin],

getInitialState:function(){
return {inspector:null};},


toggleElementInspector:function(){
var inspector=this.state.inspector?
null:
React.createElement(Inspector,{
rootTag:this.props.rootTag,
inspectedViewTag:React.findNodeHandle(this.refs.main)});

this.setState({inspector:inspector});},


componentDidMount:function(){
this.addListenerOn(
RCTDeviceEventEmitter,
'toggleElementInspector',
this.toggleElementInspector);},



render:function(){
var shouldRenderWarningBox=__DEV__ && console.yellowBoxEnabled;
var warningBox=shouldRenderWarningBox?React.createElement(WarningBox,null):null;
return (
React.createElement(View,{style:styles.appContainer},
React.createElement(View,{collapsible:false,style:styles.appContainer,ref:'main'},
this.props.children),

warningBox,
this.state.inspector));}});





function renderApplication(
RootComponent,
initialProps,
rootTag)
{
invariant(
rootTag,
'Expect to have a valid rootTag, instead got ',rootTag);


if(__DEV__ && !window.document){
var setupDevtools=require('setupDevtools');
setupDevtools();}

React.render(
React.createElement(AppContainer,{rootTag:rootTag},
React.createElement(RootComponent,_extends({},
initialProps,{
rootTag:rootTag}))),


rootTag);}



var styles=StyleSheet.create({
appContainer:{
position:'absolute',
left:0,
top:0,
right:0,
bottom:0}});



module.exports = renderApplication;
});
__d('Inspector',["Dimensions","InspectorOverlay","InspectorPanel","InspectorUtils","React","StyleSheet","NativeModules","View","flattenStyle"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}












var Dimensions=require('Dimensions');
var InspectorOverlay=require('InspectorOverlay');
var InspectorPanel=require('InspectorPanel');
var InspectorUtils=require('InspectorUtils');
var React=require('React');
var StyleSheet=require('StyleSheet');
var UIManager=require('NativeModules').UIManager;
var View=require('View');

if(window.__REACT_DEVTOOLS_GLOBAL_HOOK__){

window.__REACT_DEVTOOLS_GLOBAL_HOOK__.resolveRNStyle = require('flattenStyle');}var 


Inspector=(function(_React$Component){_inherits(Inspector,_React$Component);


function Inspector(props){_classCallCheck(this,Inspector);
_get(Object.getPrototypeOf(Inspector.prototype),'constructor',this).call(this,props);

this.state = {
devtoolsAgent:null,
panelPos:'bottom',
inspecting:true,
perfing:false,
inspected:null};}_createClass(Inspector,[{key:'componentDidMount',value:



function componentDidMount(){
if(window.__REACT_DEVTOOLS_GLOBAL_HOOK__){
this.attachToDevtools = this.attachToDevtools.bind(this);
window.__REACT_DEVTOOLS_GLOBAL_HOOK__.on('react-devtools',this.attachToDevtools);

if(window.__REACT_DEVTOOLS_GLOBAL_HOOK__.reactDevtoolsAgent){
this.attachToDevtools(window.__REACT_DEVTOOLS_GLOBAL_HOOK__.reactDevtoolsAgent);}}}},{key:'componentWillUnmount',value:




function componentWillUnmount(){
if(this._subs){
this._subs.map(function(fn){return fn();});}

if(window.__REACT_DEVTOOLS_GLOBAL_HOOK__){
window.__REACT_DEVTOOLS_GLOBAL_HOOK__.off('react-devtools',this.attachToDevtools);}}},{key:'attachToDevtools',value:



function attachToDevtools(agent){var _this=this;
var _hideWait=null;
var hlSub=agent.sub('highlight',function(_ref){var node=_ref.node;var name=_ref.name;var props=_ref.props;
clearTimeout(_hideWait);
UIManager.measure(node,function(x,y,width,height,left,top){
_this.setState({
hierarchy:[],
inspected:{
frame:{left:left,top:top,width:width,height:height},
style:props?props.style:{}}});});});




var hideSub=agent.sub('hideHighlight',function(){
if(_this.state.inspected === null){
return;}


_hideWait = setTimeout(function(){
_this.setState({
inspected:null});},

100);});

this._subs = [hlSub,hideSub];

agent.on('shutdown',function(){
_this.setState({devtoolsAgent:null});
_this._subs = null;});

this.setState({
devtoolsAgent:agent});}},{key:'setSelection',value:



function setSelection(i){var _this2=this;
var instance=this.state.hierarchy[i];
var publicInstance=instance.getPublicInstance();
UIManager.measure(React.findNodeHandle(instance),function(x,y,width,height,left,top){
_this2.setState({
inspected:{
frame:{left:left,top:top,width:width,height:height},
style:publicInstance.props?publicInstance.props.style:{}},

selection:i});});}},{key:'onTouchInstance',value:




function onTouchInstance(instance,frame,pointerY){
if(this.state.devtoolsAgent){
this.state.devtoolsAgent.selectFromReactInstance(instance,true);}

var hierarchy=InspectorUtils.getOwnerHierarchy(instance);
var publicInstance=instance.getPublicInstance();
var props=publicInstance.props || {};
this.setState({
panelPos:pointerY > Dimensions.get('window').height / 2?'top':'bottom',
selection:hierarchy.length - 1,
hierarchy:hierarchy,
inspected:{
style:props.style || {},
frame:frame}});}},{key:'setPerfing',value:




function setPerfing(val){
this.setState({
perfing:val,
inspecting:false,
inspected:null});}},{key:'setInspecting',value:



function setInspecting(val){
this.setState({
inspecting:val,
inspected:null});}},{key:'render',value:



function render(){
var panelContainerStyle=this.state.panelPos === 'bottom'?{bottom:0}:{top:0};
return (
React.createElement(View,{style:styles.container,pointerEvents:'box-none'},
this.state.inspecting && 
React.createElement(InspectorOverlay,{
rootTag:this.props.rootTag,
inspected:this.state.inspected,
inspectedViewTag:this.props.inspectedViewTag,
onTouchInstance:this.onTouchInstance.bind(this)}),

React.createElement(View,{style:[styles.panelContainer,panelContainerStyle]},
React.createElement(InspectorPanel,{
devtoolsIsOpen:!!this.state.devtoolsAgent,
inspecting:this.state.inspecting,
perfing:this.state.perfing,
setPerfing:this.setPerfing.bind(this),
setInspecting:this.setInspecting.bind(this),
inspected:this.state.inspected,
hierarchy:this.state.hierarchy,
selection:this.state.selection,
setSelection:this.setSelection.bind(this)}))));}}]);return Inspector;})(React.Component);







var styles=StyleSheet.create({
container:{
position:'absolute',
backgroundColor:'transparent',
top:0,
left:0,
right:0,
bottom:0},

panelContainer:{
position:'absolute',
left:0,
right:0}});



module.exports = Inspector;
});
__d('InspectorOverlay',["Dimensions","InspectorUtils","React","StyleSheet","NativeModules","View","ElementBox"],function(global, require, module, exports) {  'use strict';












var Dimensions=require('Dimensions');
var InspectorUtils=require('InspectorUtils');
var React=require('React');
var StyleSheet=require('StyleSheet');
var UIManager=require('NativeModules').UIManager;
var View=require('View');
var ElementBox=require('ElementBox');

var PropTypes=React.PropTypes;





var InspectorOverlay=React.createClass({displayName:'InspectorOverlay',
propTypes:{
inspected:PropTypes.shape({
frame:PropTypes.object,
style:PropTypes.any}),

inspectedViewTag:PropTypes.number,
onTouchInstance:PropTypes.func.isRequired},


findViewForTouchEvent:function(e){var _this=this;var _e$nativeEvent$touches$0=
e.nativeEvent.touches[0];var locationX=_e$nativeEvent$touches$0.locationX;var locationY=_e$nativeEvent$touches$0.locationY;
UIManager.findSubviewIn(
this.props.inspectedViewTag,
[locationX,locationY],
function(nativeViewTag,left,top,width,height){
var instance=InspectorUtils.findInstanceByNativeTag(_this.props.rootTag,nativeViewTag);
if(!instance){
return;}

_this.props.onTouchInstance(instance,{left:left,top:top,width:width,height:height},locationY);});},




shouldSetResponser:function(e){
this.findViewForTouchEvent(e);
return true;},


render:function(){
var content=null;
if(this.props.inspected){
content = React.createElement(ElementBox,{frame:this.props.inspected.frame,style:this.props.inspected.style});}


return (
React.createElement(View,{
onStartShouldSetResponder:this.shouldSetResponser,
onResponderMove:this.findViewForTouchEvent,
style:[styles.inspector,{height:Dimensions.get('window').height}]},
content));}});





var styles=StyleSheet.create({
inspector:{
backgroundColor:'transparent',
position:'absolute',
left:0,
top:0,
right:0}});



module.exports = InspectorOverlay;
});
__d('ElementBox',["React","View","StyleSheet","BorderBox","resolveBoxStyle","flattenStyle"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}












var React=require('React');
var View=require('View');
var StyleSheet=require('StyleSheet');
var BorderBox=require('BorderBox');
var resolveBoxStyle=require('resolveBoxStyle');

var flattenStyle=require('flattenStyle');var 

ElementBox=(function(_React$Component){_inherits(ElementBox,_React$Component);function ElementBox(){_classCallCheck(this,ElementBox);_get(Object.getPrototypeOf(ElementBox.prototype),'constructor',this).apply(this,arguments);}_createClass(ElementBox,[{key:'render',value:
function render(){
var style=flattenStyle(this.props.style) || {};
var margin=resolveBoxStyle('margin',style);
var padding=resolveBoxStyle('padding',style);
var frameStyle=this.props.frame;
if(margin){
frameStyle = {
top:frameStyle.top - margin.top,
left:frameStyle.left - margin.left,
height:frameStyle.height + margin.top + margin.bottom,
width:frameStyle.width + margin.left + margin.right};}


var contentStyle={
width:this.props.frame.width,
height:this.props.frame.height};

if(padding){
contentStyle = {
width:contentStyle.width - padding.left - padding.right,
height:contentStyle.height - padding.top - padding.bottom};}


return (
React.createElement(View,{style:[styles.frame,frameStyle],pointerEvents:'none'},
React.createElement(BorderBox,{box:margin,style:styles.margin},
React.createElement(BorderBox,{box:padding,style:styles.padding},
React.createElement(View,{style:[styles.content,contentStyle]})))));}}]);return ElementBox;})(React.Component);







var styles=StyleSheet.create({
frame:{
position:'absolute'},

content:{
backgroundColor:'rgba(200, 230, 255, 0.8)'},

padding:{
borderColor:'rgba(77, 255, 0, 0.3)'},

margin:{
borderColor:'rgba(255, 132, 0, 0.3)'}});



module.exports = ElementBox;
});
__d('BorderBox',["React","View"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}












var React=require('React');
var View=require('View');var 

BorderBox=(function(_React$Component){_inherits(BorderBox,_React$Component);function BorderBox(){_classCallCheck(this,BorderBox);_get(Object.getPrototypeOf(BorderBox.prototype),'constructor',this).apply(this,arguments);}_createClass(BorderBox,[{key:'render',value:
function render(){
var box=this.props.box;
if(!box){
return this.props.children;}

var style={
borderTopWidth:box.top,
borderBottomWidth:box.bottom,
borderLeftWidth:box.left,
borderRightWidth:box.right};

return (
React.createElement(View,{style:[style,this.props.style]},
this.props.children));}}]);return BorderBox;})(React.Component);





module.exports = BorderBox;
});
__d('resolveBoxStyle',[],function(global, require, module, exports) {  'use strict';





















function resolveBoxStyle(prefix,style){
var res={};
var subs=['top','left','bottom','right'];
var set=false;
subs.forEach(function(sub){
res[sub] = style[prefix] || 0;});

if(style[prefix]){
set = true;}

if(style[prefix + 'Vertical']){
res.top = res.bottom = style[prefix + 'Vertical'];
set = true;}

if(style[prefix + 'Horizontal']){
res.left = res.right = style[prefix + 'Horizontal'];
set = true;}

subs.forEach(function(sub){
var val=style[prefix + capFirst(sub)];
if(val){
res[sub] = val;
set = true;}});


if(!set){
return;}

return res;}


function capFirst(text){
return text[0].toUpperCase() + text.slice(1);}


module.exports = resolveBoxStyle;
});
__d('InspectorPanel',["React","StyleSheet","Text","View","ElementProperties","PerformanceOverlay","TouchableHighlight"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}












var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');
var ElementProperties=require('ElementProperties');
var PerformanceOverlay=require('PerformanceOverlay');
var TouchableHighlight=require('TouchableHighlight');

var PropTypes=React.PropTypes;var 

InspectorPanel=(function(_React$Component){_inherits(InspectorPanel,_React$Component);function InspectorPanel(){_classCallCheck(this,InspectorPanel);_get(Object.getPrototypeOf(InspectorPanel.prototype),'constructor',this).apply(this,arguments);}_createClass(InspectorPanel,[{key:'renderWaiting',value:
function renderWaiting(){
if(this.props.inspecting){
return (
React.createElement(Text,{style:styles.waitingText},'Tap something to inspect it'));}




return React.createElement(Text,{style:styles.waitingText},'Nothing is inspected');}},{key:'render',value:


function render(){
var contents;
if(this.props.inspected){
contents = 
React.createElement(ElementProperties,{
style:this.props.inspected.style,
frame:this.props.inspected.frame,
hierarchy:this.props.hierarchy,
selection:this.props.selection,
setSelection:this.props.setSelection});}else 


if(this.props.perfing){
contents = 
React.createElement(PerformanceOverlay,null);}else 

{
contents = 
React.createElement(View,{style:styles.waiting},
this.renderWaiting());}



return (
React.createElement(View,{style:styles.container},
!this.props.devtoolsIsOpen && contents,
React.createElement(View,{style:styles.buttonRow},
React.createElement(Button,{
title:'Inspect',
pressed:this.props.inspecting,
onClick:this.props.setInspecting}),

React.createElement(Button,{title:'Perf',
pressed:this.props.perfing,
onClick:this.props.setPerfing}))));}}]);return InspectorPanel;})(React.Component);







InspectorPanel.propTypes = {
devtoolsIsOpen:PropTypes.bool,
inspecting:PropTypes.bool,
setInspecting:PropTypes.func,
inspected:PropTypes.object,
perfing:PropTypes.bool,
setPerfing:PropTypes.func};var 


Button=(function(_React$Component2){_inherits(Button,_React$Component2);function Button(){_classCallCheck(this,Button);_get(Object.getPrototypeOf(Button.prototype),'constructor',this).apply(this,arguments);}_createClass(Button,[{key:'render',value:
function render(){var _this=this;
return (
React.createElement(TouchableHighlight,{onPress:function(){return _this.props.onClick(!_this.props.pressed);},style:[
styles.button,
this.props.pressed && styles.buttonPressed]},

React.createElement(Text,{style:styles.buttonText},this.props.title)));}}]);return Button;})(React.Component);





var styles=StyleSheet.create({
buttonRow:{
flexDirection:'row'},

button:{
backgroundColor:'rgba(0, 0, 0, 0.3)',
margin:2,
height:30,
justifyContent:'center',
alignItems:'center'},

buttonPressed:{
backgroundColor:'rgba(255, 255, 255, 0.3)'},

buttonText:{
textAlign:'center',
color:'white',
margin:5},

container:{
backgroundColor:'rgba(0, 0, 0, 0.7)'},

waiting:{
height:100},

waitingText:{
fontSize:20,
textAlign:'center',
marginVertical:20}});



module.exports = InspectorPanel;
});
__d('ElementProperties',["BoxInspector","ReactPropTypes","React","StyleInspector","StyleSheet","Text","TouchableHighlight","TouchableWithoutFeedback","View","flattenStyle","mapWithSeparator"],function(global, require, module, exports) {  'use strict';












var BoxInspector=require('BoxInspector');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleInspector=require('StyleInspector');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var TouchableHighlight=require('TouchableHighlight');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');
var View=require('View');

var flattenStyle=require('flattenStyle');
var mapWithSeparator=require('mapWithSeparator');

var ElementProperties=React.createClass({displayName:'ElementProperties',
propTypes:{
hierarchy:PropTypes.array.isRequired,
style:PropTypes.oneOfType([
PropTypes.object,
PropTypes.array,
PropTypes.number])},



render:function(){var _this=this;
var style=flattenStyle(this.props.style);
var selection=this.props.selection;


return (
React.createElement(TouchableWithoutFeedback,null,
React.createElement(View,{style:styles.info},
React.createElement(View,{style:styles.breadcrumb},
mapWithSeparator(
this.props.hierarchy,
function(item,i){return (
React.createElement(TouchableHighlight,{
style:[styles.breadItem,i === selection && styles.selected],
onPress:function(){return _this.props.setSelection(i);}},
React.createElement(Text,{style:styles.breadItemText},
item.getName?item.getName():'Unknown')));},



function(){return React.createElement(Text,{style:styles.breadSep},'▸');})),


React.createElement(View,{style:styles.row},
React.createElement(StyleInspector,{style:style}),
React.createElement(BoxInspector,{style:style,frame:this.props.frame})))));}});







var styles=StyleSheet.create({
breadSep:{
fontSize:8,
color:'white'},

breadcrumb:{
flexDirection:'row',
flexWrap:'wrap',
marginBottom:5},

selected:{
borderColor:'white',
borderRadius:5},

breadItem:{
borderWidth:1,
borderColor:'transparent',
marginHorizontal:2},

breadItemText:{
fontSize:10,
color:'white',
marginHorizontal:5},

row:{
flexDirection:'row',
alignItems:'center',
justifyContent:'space-between'},

info:{
padding:10},

path:{
color:'white',
fontSize:9}});



module.exports = ElementProperties;
});
__d('BoxInspector',["React","StyleSheet","Text","View","resolveBoxStyle"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}












var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');
var resolveBoxStyle=require('resolveBoxStyle');

var blank={
top:0,
left:0,
right:0,
bottom:0};var 


BoxInspector=(function(_React$Component){_inherits(BoxInspector,_React$Component);function BoxInspector(){_classCallCheck(this,BoxInspector);_get(Object.getPrototypeOf(BoxInspector.prototype),'constructor',this).apply(this,arguments);}_createClass(BoxInspector,[{key:'render',value:
function render(){
var frame=this.props.frame;
var style=this.props.style;
var margin=style && resolveBoxStyle('margin',style) || blank;
var padding=style && resolveBoxStyle('padding',style) || blank;
return (
React.createElement(BoxContainer,{title:'margin',titleStyle:styles.marginLabel,box:margin},
React.createElement(BoxContainer,{title:'padding',box:padding},
React.createElement(View,null,
React.createElement(Text,{style:styles.innerText},'(',
frame.left,', ',frame.top,')'),

React.createElement(Text,{style:styles.innerText},
frame.width,' × ',frame.height)))));}}]);return BoxInspector;})(React.Component);var 








BoxContainer=(function(_React$Component2){_inherits(BoxContainer,_React$Component2);function BoxContainer(){_classCallCheck(this,BoxContainer);_get(Object.getPrototypeOf(BoxContainer.prototype),'constructor',this).apply(this,arguments);}_createClass(BoxContainer,[{key:'render',value:
function render(){
var box=this.props.box;
return (
React.createElement(View,{style:styles.box},
React.createElement(View,{style:styles.row},
React.createElement(Text,{style:[this.props.titleStyle,styles.label]},this.props.title),
React.createElement(Text,{style:styles.boxText},box.top)),

React.createElement(View,{style:styles.row},
React.createElement(Text,{style:styles.boxText},box.left),
this.props.children,
React.createElement(Text,{style:styles.boxText},box.right)),

React.createElement(Text,{style:styles.boxText},box.bottom)));}}]);return BoxContainer;})(React.Component);





var styles=StyleSheet.create({
row:{
flexDirection:'row',
alignItems:'center',
justifyContent:'space-around'},

marginLabel:{
width:60},

label:{
fontSize:10,
color:'rgb(255,100,0)',
marginLeft:5,
flex:1,
textAlign:'left',
top:-3},

buffer:{
fontSize:10,
color:'yellow',
flex:1,
textAlign:'center'},

innerText:{
color:'yellow',
fontSize:12,
textAlign:'center',
width:70},

box:{
borderWidth:1,
borderColor:'grey'},

boxText:{
color:'white',
fontSize:12,
marginHorizontal:3,
marginVertical:2,
textAlign:'center'}});



module.exports = BoxInspector;
});
__d('StyleInspector',["React","StyleSheet","Text","View"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}












var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');var 

StyleInspector=(function(_React$Component){_inherits(StyleInspector,_React$Component);function StyleInspector(){_classCallCheck(this,StyleInspector);_get(Object.getPrototypeOf(StyleInspector.prototype),'constructor',this).apply(this,arguments);}_createClass(StyleInspector,[{key:'render',value:
function render(){var _this=this;
if(!this.props.style){
return React.createElement(Text,{style:styles.noStyle},'No style');}

var names=Object.keys(this.props.style);
return (
React.createElement(View,{style:styles.container},
React.createElement(View,null,
names.map(function(name){return React.createElement(Text,{style:styles.attr},name,':');})),

React.createElement(View,null,
names.map(function(name){return React.createElement(Text,{style:styles.value},_this.props.style[name]);}))));}}]);return StyleInspector;})(React.Component);






var styles=StyleSheet.create({
container:{
flexDirection:'row'},

row:{
flexDirection:'row',
alignItems:'center',
justifyContent:'space-around'},

attr:{
fontSize:10,
color:'#ccc'},

value:{
fontSize:10,
color:'white',
marginLeft:10},

noStyle:{
color:'white',
fontSize:10}});



module.exports = StyleInspector;
});
__d('mapWithSeparator',[],function(global, require, module, exports) {  'use strict';






function mapWithSeparator(array,valueFunction,separatorFunction){
var results=[];
for(var i=0;i < array.length;i++) {
results.push(valueFunction(array[i],i,array));
if(i !== array.length - 1){
results.push(separatorFunction(i));}}


return results;}


module.exports = mapWithSeparator;
});
__d('PerformanceOverlay',["PerformanceLogger","React","StyleSheet","Text","View"],function(global, require, module, exports) {  'use strict';












var PerformanceLogger=require('PerformanceLogger');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');

var PerformanceOverlay=React.createClass({displayName:'PerformanceOverlay',
render:function(){
var perfLogs=PerformanceLogger.getTimespans();
var items=[];

for(var key in perfLogs) {
if(perfLogs[key].totalTime){
items.push(
React.createElement(View,{style:styles.row},
React.createElement(Text,{style:[styles.text,styles.label]},key),
React.createElement(Text,{style:[styles.text,styles.totalTime]},
perfLogs[key].totalTime + 'ms')));}}






return (
React.createElement(View,{style:styles.container},
items));}});





var styles=StyleSheet.create({
container:{
height:100,
paddingTop:10},

label:{
flex:1},

row:{
flexDirection:'row',
paddingHorizontal:10},

text:{
color:'white',
fontSize:12},

totalTime:{
paddingRight:100}});



module.exports = PerformanceOverlay;
});
__d('WarningBox',["AsyncStorage","EventEmitter","Map","PanResponder","React","StyleSheet","Text","TouchableOpacity","View","invariant","rebound/rebound.js","stringifySafe","Dimensions"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};











var AsyncStorage=require('AsyncStorage');
var EventEmitter=require('EventEmitter');
var Map=require('Map');
var PanResponder=require('PanResponder');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var TouchableOpacity=require('TouchableOpacity');
var View=require('View');

var invariant=require('invariant');
var rebound=require('rebound/rebound.js');
var stringifySafe=require('stringifySafe');

var SCREEN_WIDTH=require('Dimensions').get('window').width;
var IGNORED_WARNINGS_KEY='__DEV_WARNINGS_IGNORED';

var consoleWarn=console.warn.bind(console);

var warningCounts=new Map();
var ignoredWarnings=[];
var totalWarningCount=0;
var warningCountEvents=new EventEmitter();























if(__DEV__){
console.warn = function(){
consoleWarn.apply(null,arguments);
if(!console.yellowBoxEnabled){
return;}

var warning=Array.prototype.map.call(arguments,stringifySafe).join(' ');
if(!console.yellowBoxResetIgnored && 
ignoredWarnings.indexOf(warning) !== -1){
return;}

var count=warningCounts.has(warning)?warningCounts.get(warning) + 1:1;
warningCounts.set(warning,count);
totalWarningCount += 1;
warningCountEvents.emit('count',totalWarningCount);};}



function saveIgnoredWarnings(){
AsyncStorage.setItem(
IGNORED_WARNINGS_KEY,
JSON.stringify(ignoredWarnings),
function(err){
if(err){
console.warn('Could not save ignored warnings.',err);}});}





AsyncStorage.getItem(IGNORED_WARNINGS_KEY,function(err,data){
if(!err && data && !console.yellowBoxResetIgnored){
ignoredWarnings = JSON.parse(data);}});



var WarningRow=React.createClass({displayName:'WarningRow',
componentWillMount:function(){var _this=this;
this.springSystem = new rebound.SpringSystem();
this.dismissalSpring = this.springSystem.createSpring();
this.dismissalSpring.setRestSpeedThreshold(0.05);
this.dismissalSpring.setCurrentValue(0);
this.dismissalSpring.addListener({
onSpringUpdate:function(){
var val=_this.dismissalSpring.getCurrentValue();
_this.text && _this.text.setNativeProps({
left:SCREEN_WIDTH * val});

_this.container && _this.container.setNativeProps({
opacity:1 - val});

_this.closeButton && _this.closeButton.setNativeProps({
opacity:1 - val * 5});},


onSpringAtRest:function(){
if(_this.dismissalSpring.getCurrentValue()){
_this.collapseSpring.setEndValue(1);}}});



this.collapseSpring = this.springSystem.createSpring();
this.collapseSpring.setRestSpeedThreshold(0.05);
this.collapseSpring.setCurrentValue(0);
this.collapseSpring.getSpringConfig().friction = 20;
this.collapseSpring.getSpringConfig().tension = 200;
this.collapseSpring.addListener({
onSpringUpdate:function(){
var val=_this.collapseSpring.getCurrentValue();
_this.container && _this.container.setNativeProps({
height:Math.abs(46 - val * 46)});},


onSpringAtRest:function(){
_this.props.onDismissed();}});


this.panGesture = PanResponder.create({
onStartShouldSetPanResponder:function(){
return !!_this.dismissalSpring.getCurrentValue();},

onMoveShouldSetPanResponder:function(){return true;},
onPanResponderGrant:function(){
_this.isResponderOnlyToBlockTouches = 
!!_this.dismissalSpring.getCurrentValue();},

onPanResponderMove:function(e,gestureState){
if(_this.isResponderOnlyToBlockTouches){
return;}

_this.dismissalSpring.setCurrentValue(gestureState.dx / SCREEN_WIDTH);},

onPanResponderRelease:function(e,gestureState){
if(_this.isResponderOnlyToBlockTouches){
return;}

var gestureCompletion=gestureState.dx / SCREEN_WIDTH;
var doesGestureRelease=gestureState.vx + gestureCompletion > 0.5;
_this.dismissalSpring.setEndValue(doesGestureRelease?1:0);}});},



render:function(){var _this2=this;
var countText;
if(warningCounts.get(this.props.warning) > 1){
countText = 
React.createElement(Text,{style:styles.bold},'(',
warningCounts.get(this.props.warning),')'," ");}



return (
React.createElement(View,_extends({
style:styles.warningBox,
ref:function(container){_this2.container = container;}},
this.panGesture.panHandlers),
React.createElement(TouchableOpacity,{
onPress:this.props.onOpened},
React.createElement(Text,{
style:styles.warningText,
numberOfLines:2,
ref:function(text){_this2.text = text;}},
countText,
this.props.warning)),


React.createElement(View,{
ref:function(closeButton){_this2.closeButton = closeButton;},
style:styles.closeButton},
React.createElement(TouchableOpacity,{
onPress:function(){
_this2.dismissalSpring.setEndValue(1);}},

React.createElement(Text,{style:styles.closeButtonText},'✕')))));}});







var WarningBoxOpened=React.createClass({displayName:'WarningBoxOpened',
render:function(){
var countText;
if(warningCounts.get(this.props.warning) > 1){
countText = 
React.createElement(Text,{style:styles.bold},'(',
warningCounts.get(this.props.warning),')'," ");}



return (
React.createElement(TouchableOpacity,{
activeOpacity:0.9,
onPress:this.props.onClose,
style:styles.yellowBox},
React.createElement(Text,{style:styles.yellowBoxText},
countText,
this.props.warning),

React.createElement(View,{style:styles.yellowBoxButtons},
React.createElement(TouchableOpacity,{
onPress:this.props.onDismissed,
style:styles.yellowBoxButton},
React.createElement(Text,{style:styles.yellowBoxButtonText},'Dismiss')),



React.createElement(TouchableOpacity,{
onPress:this.props.onIgnored,
style:styles.yellowBoxButton},
React.createElement(Text,{style:styles.yellowBoxButtonText},'Ignore')))));}});









var canMountWarningBox=true;

var WarningBox=React.createClass({displayName:'WarningBox',
getInitialState:function(){
return {
totalWarningCount:totalWarningCount,
openWarning:null};},


componentWillMount:function(){
if(console.yellowBoxResetIgnored){
AsyncStorage.setItem(IGNORED_WARNINGS_KEY,'[]',function(err){
if(err){
console.warn('Could not reset ignored warnings.',err);}});


ignoredWarnings = [];}},


componentDidMount:function(){
invariant(
canMountWarningBox,
'There can only be one WarningBox');

canMountWarningBox = false;
warningCountEvents.addListener(
'count',
this._onWarningCount);},


componentWillUnmount:function(){
warningCountEvents.removeAllListeners();
canMountWarningBox = true;},

_onWarningCount:function(totalWarningCount){var _this3=this;


setImmediate(function(){
_this3.setState({totalWarningCount:totalWarningCount});});},


_onDismiss:function(warning){
warningCounts.delete(warning);
this.setState({
openWarning:null});},


render:function(){var _this4=this;
if(warningCounts.size === 0){
return React.createElement(View,null);}

if(this.state.openWarning){
return (
React.createElement(WarningBoxOpened,{
warning:this.state.openWarning,
onClose:function(){
_this4.setState({openWarning:null});},

onDismissed:this._onDismiss.bind(this,this.state.openWarning),
onIgnored:function(){
ignoredWarnings.push(_this4.state.openWarning);
saveIgnoredWarnings();
_this4._onDismiss(_this4.state.openWarning);}}));}




var warningRows=[];
warningCounts.forEach(function(count,warning){
warningRows.push(
React.createElement(WarningRow,{
key:warning,
onOpened:function(){
_this4.setState({openWarning:warning});},

onDismissed:_this4._onDismiss.bind(_this4,warning),
warning:warning}));});



return (
React.createElement(View,{style:styles.warningContainer},
warningRows));}});





var styles=StyleSheet.create({
bold:{
fontWeight:'bold'},

closeButton:{
position:'absolute',
right:0,
height:46,
width:46},

closeButtonText:{
color:'white',
fontSize:32,
position:'relative',
left:8},

warningContainer:{
position:'absolute',
left:0,
right:0,
bottom:0},

warningBox:{
position:'relative',
backgroundColor:'rgba(171, 124, 36, 0.9)',
flex:1,
height:46},

warningText:{
color:'white',
position:'absolute',
left:0,
marginLeft:15,
marginRight:46,
top:7},

yellowBox:{
backgroundColor:'rgba(171, 124, 36, 0.9)',
position:'absolute',
left:0,
right:0,
top:0,
bottom:0,
padding:15,
paddingTop:35},

yellowBoxText:{
color:'white',
fontSize:20},

yellowBoxButtons:{
flexDirection:'row',
position:'absolute',
bottom:0},

yellowBoxButton:{
flex:1,
padding:25},

yellowBoxButtonText:{
color:'white',
fontSize:16}});



module.exports = WarningBox;
});
__d('AsyncStorage',["NativeModules"],function(global, require, module, exports) {  'use strict';












var NativeModules=require('NativeModules');
var RCTAsyncLocalStorage=NativeModules.AsyncLocalStorage;
var RCTAsyncRocksDBStorage=NativeModules.AsyncRocksDBStorage;


var RCTAsyncStorage=RCTAsyncRocksDBStorage || RCTAsyncLocalStorage;













var AsyncStorage={




getItem:function(
key,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiGet([key],function(errors,result){

var value=result && result[0] && result[0][1]?result[0][1]:null;
callback && callback(errors && convertError(errors[0]) || null,value);
if(errors){
reject(convertError(errors[0]));}else 
{
resolve(value);}});});},









setItem:function(
key,
value,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiSet([[key,value]],function(errors){
callback && callback(errors && convertError(errors[0]) || null);
if(errors){
reject(convertError(errors[0]));}else 
{
resolve(null);}});});},







removeItem:function(
key,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiRemove([key],function(errors){
callback && callback(errors && convertError(errors[0]) || null);
if(errors){
reject(convertError(errors[0]));}else 
{
resolve(null);}});});},










mergeItem:function(
key,
value,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiMerge([[key,value]],function(errors){
callback && callback(errors && convertError(errors[0]) || null);
if(errors){
reject(convertError(errors[0]));}else 
{
resolve(null);}});});},










clear:function(callback){
return new Promise(function(resolve,reject){
RCTAsyncStorage.clear(function(error){
callback && callback(convertError(error));
if(error && convertError(error)){
reject(convertError(error));}else 
{
resolve(null);}});});},








getAllKeys:function(callback){
return new Promise(function(resolve,reject){
RCTAsyncStorage.getAllKeys(function(error,keys){
callback && callback(convertError(error),keys);
if(error){
reject(convertError(error));}else 
{
resolve(keys);}});});},





















multiGet:function(
keys,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiGet(keys,function(errors,result){
var error=errors && errors.map(function(error){return convertError(error);}) || null;
callback && callback(error,result);
if(errors){
reject(error);}else 
{
resolve(result);}});});},











multiSet:function(
keyValuePairs,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiSet(keyValuePairs,function(errors){
var error=errors && errors.map(function(error){return convertError(error);}) || null;
callback && callback(error);
if(errors){
reject(error);}else 
{
resolve(null);}});});},








multiRemove:function(
keys,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiRemove(keys,function(errors){
var error=errors && errors.map(function(error){return convertError(error);}) || null;
callback && callback(error);
if(errors){
reject(error);}else 
{
resolve(null);}});});},











multiMerge:function(
keyValuePairs,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiMerge(keyValuePairs,function(errors){
var error=errors && errors.map(function(error){return convertError(error);}) || null;
callback && callback(error);
if(errors){
reject(error);}else 
{
resolve(null);}});});}};







if(!RCTAsyncStorage.multiMerge){
delete AsyncStorage.mergeItem;
delete AsyncStorage.multiMerge;}


function convertError(error){
if(!error){
return null;}

var out=new Error(error.message);
out.key = error.key;
return out;}


module.exports = AsyncStorage;
});
__d('setupDevtools',["flattenStyle","ReactCurrentOwner","ReactInstanceHandles","ReactNativeMount","ReactReconciler","ReactNativeTextComponent"],function(global, require, module, exports) {  'use strict';












function setupDevtools(){
var messageListeners=[];
var closeListeners=[];
var ws=new window.WebSocket('ws://localhost:8081/devtools');

var FOR_BACKEND={
resolveRNStyle:require('flattenStyle'),
wall:{
listen:function(fn){
messageListeners.push(fn);},

onClose:function(fn){
closeListeners.push(fn);},

send:function(data){
ws.send(JSON.stringify(data));}}};



ws.onclose = function(){
console.warn('devtools socket closed');
closeListeners.forEach(function(fn){return fn();});};

ws.onerror = function(error){
console.warn('devtools socket errored',error);
closeListeners.forEach(function(fn){return fn();});};

ws.onopen = function(){
tryToConnect();};


function tryToConnect(){
ws.send('attach:agent');
var _interval=setInterval(function(){return ws.send('attach:agent');},500);
ws.onmessage = function(evt){
if(evt.data.indexOf('eval:') === 0){
clearInterval(_interval);
initialize(evt.data.slice('eval:'.length));}};}




function initialize(text){
try{

eval(text);}
catch(e) {
console.error('Failed to eval' + e.message);
return;}

window.__REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
CurrentOwner:require('ReactCurrentOwner'),
InstanceHandles:require('ReactInstanceHandles'),
Mount:require('ReactNativeMount'),
Reconciler:require('ReactReconciler'),
TextComponent:require('ReactNativeTextComponent')});

ws.onmessage = handleMessage;}


function handleMessage(evt){


var data;
try{
data = JSON.parse(evt.data);}
catch(e) {
return console.error('failed to parse json: ' + evt.data);}


if(data.$close || data.$error){
closeListeners.forEach(function(fn){return fn();});
window.__REACT_DEVTOOLS_GLOBAL_HOOK__.emit('shutdown');
tryToConnect();
return;}

if(data.$open){
return;}

messageListeners.forEach(function(fn){
try{
fn(data);}
catch(e) {



console.log(data);
throw e;}});}}





module.exports = setupDevtools;
});
__d('RCTRenderingPerf',["ReactDefaultPerf","invariant"],function(global, require, module, exports) {  'use strict';












var ReactDefaultPerf=require('ReactDefaultPerf');

var invariant=require('invariant');






var perfModules=[];
var enabled=false;

var RCTRenderingPerf={

toggle:function(){
console.log('Render perfomance measurements enabled');
enabled = true;},


start:function(){
if(!enabled){
return;}


ReactDefaultPerf.start();
perfModules.forEach(function(module){return module.start();});},


stop:function(){
if(!enabled){
return;}


ReactDefaultPerf.stop();
ReactDefaultPerf.printInclusive();
ReactDefaultPerf.printWasted();

var totalRender=0;
var totalTime=0;
var measurements=ReactDefaultPerf.getLastMeasurements();
for(var ii=0;ii < measurements.length;ii++) {
var render=measurements[ii].render;
for(var nodeName in render) {
totalRender += render[nodeName];}

totalTime += measurements[ii].totalTime;}

console.log('Total time spent in render(): ' + totalRender + 'ms');

perfModules.forEach(function(module){return module.stop();});},


register:function(module){
invariant(
typeof module.start === 'function',
'Perf module should have start() function');

invariant(
typeof module.stop === 'function',
'Perf module should have stop() function');

perfModules.push(module);}};



module.exports = RCTRenderingPerf;
});
__d('ReactDefaultPerf',["DOMProperty","ReactDefaultPerfAnalysis","ReactMount","ReactPerf","performanceNow"],function(global, require, module, exports) {  'use strict';













var DOMProperty=require('DOMProperty');
var ReactDefaultPerfAnalysis=require('ReactDefaultPerfAnalysis');
var ReactMount=require('ReactMount');
var ReactPerf=require('ReactPerf');

var performanceNow=require('performanceNow');

function roundFloat(val){
return Math.floor(val * 100) / 100;}


function addValue(obj,key,val){
obj[key] = (obj[key] || 0) + val;}


var ReactDefaultPerf={
_allMeasurements:[],
_mountStack:[0],
_injected:false,

start:function(){
if(!ReactDefaultPerf._injected){
ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);}


ReactDefaultPerf._allMeasurements.length = 0;
ReactPerf.enableMeasure = true;},


stop:function(){
ReactPerf.enableMeasure = false;},


getLastMeasurements:function(){
return ReactDefaultPerf._allMeasurements;},


printExclusive:function(measurements){
measurements = measurements || ReactDefaultPerf._allMeasurements;
var summary=ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);
console.table(summary.map(function(item){
return {
'Component class name':item.componentName,
'Total inclusive time (ms)':roundFloat(item.inclusive),
'Exclusive mount time (ms)':roundFloat(item.exclusive),
'Exclusive render time (ms)':roundFloat(item.render),
'Mount time per instance (ms)':roundFloat(item.exclusive / item.count),
'Render time per instance (ms)':roundFloat(item.render / item.count),
'Instances':item.count};}));},






printInclusive:function(measurements){
measurements = measurements || ReactDefaultPerf._allMeasurements;
var summary=ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);
console.table(summary.map(function(item){
return {
'Owner > component':item.componentName,
'Inclusive time (ms)':roundFloat(item.time),
'Instances':item.count};}));


console.log(
'Total time:',
ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');},



getMeasurementsSummaryMap:function(measurements){
var summary=ReactDefaultPerfAnalysis.getInclusiveSummary(
measurements,
true);

return summary.map(function(item){
return {
'Owner > component':item.componentName,
'Wasted time (ms)':item.time,
'Instances':item.count};});},




printWasted:function(measurements){
measurements = measurements || ReactDefaultPerf._allMeasurements;
console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));
console.log(
'Total time:',
ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');},



printDOM:function(measurements){
measurements = measurements || ReactDefaultPerf._allMeasurements;
var summary=ReactDefaultPerfAnalysis.getDOMSummary(measurements);
console.table(summary.map(function(item){
var result={};
result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;
result['type'] = item.type;
result['args'] = JSON.stringify(item.args);
return result;}));

console.log(
'Total time:',
ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');},



_recordWrite:function(id,fnName,totalTime,args){

var writes=
ReactDefaultPerf.
_allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].
writes;
writes[id] = writes[id] || [];
writes[id].push({
type:fnName,
time:totalTime,
args:args});},



measure:function(moduleName,fnName,func){
return function(){for(var _len=arguments.length,args=Array(_len),_key=0;_key < _len;_key++) {args[_key] = arguments[_key];}
var totalTime;
var rv;
var start;

if(fnName === '_renderNewRootComponent' || 
fnName === 'flushBatchedUpdates'){




ReactDefaultPerf._allMeasurements.push({
exclusive:{},
inclusive:{},
render:{},
counts:{},
writes:{},
displayNames:{},
totalTime:0});

start = performanceNow();
rv = func.apply(this,args);
ReactDefaultPerf._allMeasurements[
ReactDefaultPerf._allMeasurements.length - 1].
totalTime = performanceNow() - start;
return rv;}else 
if(fnName === '_mountImageIntoNode' || 
moduleName === 'ReactDOMIDOperations'){
start = performanceNow();
rv = func.apply(this,args);
totalTime = performanceNow() - start;

if(fnName === '_mountImageIntoNode'){
var mountID=ReactMount.getID(args[1]);
ReactDefaultPerf._recordWrite(mountID,fnName,totalTime,args[0]);}else 
if(fnName === 'dangerouslyProcessChildrenUpdates'){

args[0].forEach(function(update){
var writeArgs={};
if(update.fromIndex !== null){
writeArgs.fromIndex = update.fromIndex;}

if(update.toIndex !== null){
writeArgs.toIndex = update.toIndex;}

if(update.textContent !== null){
writeArgs.textContent = update.textContent;}

if(update.markupIndex !== null){
writeArgs.markup = args[1][update.markupIndex];}

ReactDefaultPerf._recordWrite(
update.parentID,
update.type,
totalTime,
writeArgs);});}else 


{

ReactDefaultPerf._recordWrite(
args[0],
fnName,
totalTime,
Array.prototype.slice.call(args,1));}


return rv;}else 
if(moduleName === 'ReactCompositeComponent' && (
fnName === 'mountComponent' || 
fnName === 'updateComponent' || 
fnName === '_renderValidatedComponent')){

if(typeof this._currentElement.type === 'string'){
return func.apply(this,args);}


var rootNodeID=fnName === 'mountComponent'?
args[0]:
this._rootNodeID;
var isRender=fnName === '_renderValidatedComponent';
var isMount=fnName === 'mountComponent';

var mountStack=ReactDefaultPerf._mountStack;
var entry=ReactDefaultPerf._allMeasurements[
ReactDefaultPerf._allMeasurements.length - 1];


if(isRender){
addValue(entry.counts,rootNodeID,1);}else 
if(isMount){
mountStack.push(0);}


start = performanceNow();
rv = func.apply(this,args);
totalTime = performanceNow() - start;

if(isRender){
addValue(entry.render,rootNodeID,totalTime);}else 
if(isMount){
var subMountTime=mountStack.pop();
mountStack[mountStack.length - 1] += totalTime;
addValue(entry.exclusive,rootNodeID,totalTime - subMountTime);
addValue(entry.inclusive,rootNodeID,totalTime);}else 
{
addValue(entry.inclusive,rootNodeID,totalTime);}


entry.displayNames[rootNodeID] = {
current:this.getName(),
owner:this._currentElement._owner?
this._currentElement._owner.getName():
'<root>'};


return rv;}else 
{
return func.apply(this,args);}};}};





module.exports = ReactDefaultPerf;
});
__d('DOMProperty',["invariant"],function(global, require, module, exports) {  'use strict';













var invariant=require('invariant');

function checkMask(value,bitmask){
return (value & bitmask) === bitmask;}


var DOMPropertyInjection={




MUST_USE_ATTRIBUTE:0x1,
MUST_USE_PROPERTY:0x2,
HAS_SIDE_EFFECTS:0x4,
HAS_BOOLEAN_VALUE:0x8,
HAS_NUMERIC_VALUE:0x10,
HAS_POSITIVE_NUMERIC_VALUE:0x20 | 0x10,
HAS_OVERLOADED_BOOLEAN_VALUE:0x40,





























injectDOMPropertyConfig:function(domPropertyConfig){
var Injection=DOMPropertyInjection;
var Properties=domPropertyConfig.Properties || {};
var DOMAttributeNamespaces=domPropertyConfig.DOMAttributeNamespaces || {};
var DOMAttributeNames=domPropertyConfig.DOMAttributeNames || {};
var DOMPropertyNames=domPropertyConfig.DOMPropertyNames || {};
var DOMMutationMethods=domPropertyConfig.DOMMutationMethods || {};

if(domPropertyConfig.isCustomAttribute){
DOMProperty._isCustomAttributeFunctions.push(
domPropertyConfig.isCustomAttribute);}



for(var propName in Properties) {
invariant(
!DOMProperty.properties.hasOwnProperty(propName),
'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' + 
'\'%s\' which has already been injected. You may be accidentally ' + 
'injecting the same DOM property config twice, or you may be ' + 
'injecting two configs that have conflicting property names.',
propName);


var lowerCased=propName.toLowerCase();
var propConfig=Properties[propName];

var propertyInfo={
attributeName:lowerCased,
attributeNamespace:null,
propertyName:propName,
mutationMethod:null,

mustUseAttribute:checkMask(propConfig,Injection.MUST_USE_ATTRIBUTE),
mustUseProperty:checkMask(propConfig,Injection.MUST_USE_PROPERTY),
hasSideEffects:checkMask(propConfig,Injection.HAS_SIDE_EFFECTS),
hasBooleanValue:checkMask(propConfig,Injection.HAS_BOOLEAN_VALUE),
hasNumericValue:checkMask(propConfig,Injection.HAS_NUMERIC_VALUE),
hasPositiveNumericValue:
checkMask(propConfig,Injection.HAS_POSITIVE_NUMERIC_VALUE),
hasOverloadedBooleanValue:
checkMask(propConfig,Injection.HAS_OVERLOADED_BOOLEAN_VALUE)};


invariant(
!propertyInfo.mustUseAttribute || !propertyInfo.mustUseProperty,
'DOMProperty: Cannot require using both attribute and property: %s',
propName);

invariant(
propertyInfo.mustUseProperty || !propertyInfo.hasSideEffects,
'DOMProperty: Properties that have side effects must use property: %s',
propName);

invariant(
propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + 
propertyInfo.hasOverloadedBooleanValue <= 1,
'DOMProperty: Value can be one of boolean, overloaded boolean, or ' + 
'numeric value, but not a combination: %s',
propName);


if(__DEV__){
DOMProperty.getPossibleStandardName[lowerCased] = propName;}


if(DOMAttributeNames.hasOwnProperty(propName)){
var attributeName=DOMAttributeNames[propName];
propertyInfo.attributeName = attributeName;
if(__DEV__){
DOMProperty.getPossibleStandardName[attributeName] = propName;}}



if(DOMAttributeNamespaces.hasOwnProperty(propName)){
propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];}


if(DOMPropertyNames.hasOwnProperty(propName)){
propertyInfo.propertyName = DOMPropertyNames[propName];}


if(DOMMutationMethods.hasOwnProperty(propName)){
propertyInfo.mutationMethod = DOMMutationMethods[propName];}


DOMProperty.properties[propName] = propertyInfo;}}};



var defaultValueCache={};














var DOMProperty={

ID_ATTRIBUTE_NAME:'data-reactid',





































properties:{},






getPossibleStandardName:__DEV__?{}:null,




_isCustomAttributeFunctions:[],





isCustomAttribute:function(attributeName){
for(var i=0;i < DOMProperty._isCustomAttributeFunctions.length;i++) {
var isCustomAttributeFn=DOMProperty._isCustomAttributeFunctions[i];
if(isCustomAttributeFn(attributeName)){
return true;}}


return false;},










getDefaultValueForProperty:function(nodeName,prop){
var nodeDefaults=defaultValueCache[nodeName];
var testElement;
if(!nodeDefaults){
defaultValueCache[nodeName] = nodeDefaults = {};}

if(!(prop in nodeDefaults)){
testElement = document.createElement(nodeName);
nodeDefaults[prop] = testElement[prop];}

return nodeDefaults[prop];},


injection:DOMPropertyInjection};


module.exports = DOMProperty;
});
__d('ReactDefaultPerfAnalysis',["Object.assign"],function(global, require, module, exports) {  var 










assign=require('Object.assign');


var DONT_CARE_THRESHOLD=1.2;
var DOM_OPERATION_TYPES={
'_mountImageIntoNode':'set innerHTML',
INSERT_MARKUP:'set innerHTML',
MOVE_EXISTING:'move',
REMOVE_NODE:'remove',
TEXT_CONTENT:'set textContent',
'updatePropertyByID':'update attribute',
'deletePropertyByID':'delete attribute',
'updateStylesByID':'update styles',
'updateInnerHTMLByID':'set innerHTML',
'dangerouslyReplaceNodeWithMarkupByID':'replace'};


function getTotalTime(measurements){




var totalTime=0;
for(var i=0;i < measurements.length;i++) {
var measurement=measurements[i];
totalTime += measurement.totalTime;}

return totalTime;}


function getDOMSummary(measurements){
var items=[];
for(var i=0;i < measurements.length;i++) {
var measurement=measurements[i];
var id;

for(id in measurement.writes) {
measurement.writes[id].forEach(function(write){
items.push({
id:id,
type:DOM_OPERATION_TYPES[write.type] || write.type,
args:write.args});});}}




return items;}


function getExclusiveSummary(measurements){
var candidates={};
var displayName;

for(var i=0;i < measurements.length;i++) {
var measurement=measurements[i];
var allIDs=assign(
{},
measurement.exclusive,
measurement.inclusive);


for(var id in allIDs) {
displayName = measurement.displayNames[id].current;

candidates[displayName] = candidates[displayName] || {
componentName:displayName,
inclusive:0,
exclusive:0,
render:0,
count:0};

if(measurement.render[id]){
candidates[displayName].render += measurement.render[id];}

if(measurement.exclusive[id]){
candidates[displayName].exclusive += measurement.exclusive[id];}

if(measurement.inclusive[id]){
candidates[displayName].inclusive += measurement.inclusive[id];}

if(measurement.counts[id]){
candidates[displayName].count += measurement.counts[id];}}}





var arr=[];
for(displayName in candidates) {
if(candidates[displayName].exclusive >= DONT_CARE_THRESHOLD){
arr.push(candidates[displayName]);}}



arr.sort(function(a,b){
return b.exclusive - a.exclusive;});


return arr;}


function getInclusiveSummary(measurements,onlyClean){
var candidates={};
var inclusiveKey;

for(var i=0;i < measurements.length;i++) {
var measurement=measurements[i];
var allIDs=assign(
{},
measurement.exclusive,
measurement.inclusive);

var cleanComponents;

if(onlyClean){
cleanComponents = getUnchangedComponents(measurement);}


for(var id in allIDs) {
if(onlyClean && !cleanComponents[id]){
continue;}


var displayName=measurement.displayNames[id];




inclusiveKey = displayName.owner + ' > ' + displayName.current;

candidates[inclusiveKey] = candidates[inclusiveKey] || {
componentName:inclusiveKey,
time:0,
count:0};


if(measurement.inclusive[id]){
candidates[inclusiveKey].time += measurement.inclusive[id];}

if(measurement.counts[id]){
candidates[inclusiveKey].count += measurement.counts[id];}}}





var arr=[];
for(inclusiveKey in candidates) {
if(candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD){
arr.push(candidates[inclusiveKey]);}}



arr.sort(function(a,b){
return b.time - a.time;});


return arr;}


function getUnchangedComponents(measurement){



var cleanComponents={};
var dirtyLeafIDs=Object.keys(measurement.writes);
var allIDs=assign({},measurement.exclusive,measurement.inclusive);

for(var id in allIDs) {
var isDirty=false;


for(var i=0;i < dirtyLeafIDs.length;i++) {
if(dirtyLeafIDs[i].indexOf(id) === 0){
isDirty = true;
break;}}


if(!isDirty && measurement.counts[id] > 0){
cleanComponents[id] = true;}}


return cleanComponents;}


var ReactDefaultPerfAnalysis={
getExclusiveSummary:getExclusiveSummary,
getInclusiveSummary:getInclusiveSummary,
getDOMSummary:getDOMSummary,
getTotalTime:getTotalTime};


module.exports = ReactDefaultPerfAnalysis;
});
__d('ReactMount',["DOMProperty","ReactBrowserEventEmitter","ReactCurrentOwner","ReactElement","ReactEmptyComponent","ReactInstanceHandles","ReactInstanceMap","ReactMarkupChecksum","ReactPerf","ReactReconciler","ReactUpdateQueue","ReactUpdates","emptyObject","containsNode","instantiateReactComponent","invariant","setInnerHTML","shouldUpdateReactComponent","validateDOMNesting","warning"],function(global, require, module, exports) {  'use strict';












var DOMProperty=require('DOMProperty');
var ReactBrowserEventEmitter=require('ReactBrowserEventEmitter');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactEmptyComponent=require('ReactEmptyComponent');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactMarkupChecksum=require('ReactMarkupChecksum');
var ReactPerf=require('ReactPerf');
var ReactReconciler=require('ReactReconciler');
var ReactUpdateQueue=require('ReactUpdateQueue');
var ReactUpdates=require('ReactUpdates');

var emptyObject=require('emptyObject');
var containsNode=require('containsNode');
var instantiateReactComponent=require('instantiateReactComponent');
var invariant=require('invariant');
var setInnerHTML=require('setInnerHTML');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');
var validateDOMNesting=require('validateDOMNesting');
var warning=require('warning');

var SEPARATOR=ReactInstanceHandles.SEPARATOR;

var ATTR_NAME=DOMProperty.ID_ATTRIBUTE_NAME;
var nodeCache={};

var ELEMENT_NODE_TYPE=1;
var DOC_NODE_TYPE=9;
var DOCUMENT_FRAGMENT_NODE_TYPE=11;


var instancesByReactRootID={};


var containersByReactRootID={};

if(__DEV__){

var rootElementsByReactRootID={};}



var findComponentRootReusableArray=[];







function firstDifferenceIndex(string1,string2){
var minLen=Math.min(string1.length,string2.length);
for(var i=0;i < minLen;i++) {
if(string1.charAt(i) !== string2.charAt(i)){
return i;}}


return string1.length === string2.length?-1:minLen;}







function getReactRootElementInContainer(container){
if(!container){
return null;}


if(container.nodeType === DOC_NODE_TYPE){
return container.documentElement;}else 
{
return container.firstChild;}}







function getReactRootID(container){
var rootElement=getReactRootElementInContainer(container);
return rootElement && ReactMount.getID(rootElement);}












function getID(node){
var id=internalGetID(node);
if(id){
if(nodeCache.hasOwnProperty(id)){
var cached=nodeCache[id];
if(cached !== node){
invariant(
!isValid(cached,id),
'ReactMount: Two valid but unequal nodes with the same `%s`: %s',
ATTR_NAME,id);


nodeCache[id] = node;}}else 

{
nodeCache[id] = node;}}



return id;}


function internalGetID(node){



return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';}








function setID(node,id){
var oldID=internalGetID(node);
if(oldID !== id){
delete nodeCache[oldID];}

node.setAttribute(ATTR_NAME,id);
nodeCache[id] = node;}









function getNode(id){
if(!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id],id)){
nodeCache[id] = ReactMount.findReactNodeByID(id);}

return nodeCache[id];}









function getNodeFromInstance(instance){
var id=ReactInstanceMap.get(instance)._rootNodeID;
if(ReactEmptyComponent.isNullComponentID(id)){
return null;}

if(!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id],id)){
nodeCache[id] = ReactMount.findReactNodeByID(id);}

return nodeCache[id];}












function isValid(node,id){
if(node){
invariant(
internalGetID(node) === id,
'ReactMount: Unexpected modification of `%s`',
ATTR_NAME);


var container=ReactMount.findReactContainerForID(id);
if(container && containsNode(container,node)){
return true;}}



return false;}







function purgeID(id){
delete nodeCache[id];}


var deepestNodeSoFar=null;
function findDeepestCachedAncestorImpl(ancestorID){
var ancestor=nodeCache[ancestorID];
if(ancestor && isValid(ancestor,ancestorID)){
deepestNodeSoFar = ancestor;}else 
{


return false;}}






function findDeepestCachedAncestor(targetID){
deepestNodeSoFar = null;
ReactInstanceHandles.traverseAncestors(
targetID,
findDeepestCachedAncestorImpl);


var foundNode=deepestNodeSoFar;
deepestNodeSoFar = null;
return foundNode;}











function mountComponentIntoNode(
componentInstance,
rootID,
container,
transaction,
shouldReuseMarkup,
context){
if(__DEV__){
if(context === emptyObject){
context = {};}

var tag=container.nodeName.toLowerCase();
context[validateDOMNesting.ancestorInfoContextKey] = 
validateDOMNesting.updatedAncestorInfo(null,tag,null);}

var markup=ReactReconciler.mountComponent(
componentInstance,rootID,transaction,context);

componentInstance._renderedComponent._topLevelWrapper = componentInstance;
ReactMount._mountImageIntoNode(markup,container,shouldReuseMarkup);}










function batchedMountComponentIntoNode(
componentInstance,
rootID,
container,
shouldReuseMarkup,
context){
var transaction=ReactUpdates.ReactReconcileTransaction.getPooled();
transaction.perform(
mountComponentIntoNode,
null,
componentInstance,
rootID,
container,
transaction,
shouldReuseMarkup,
context);

ReactUpdates.ReactReconcileTransaction.release(transaction);}











function unmountComponentFromNode(instance,container){
ReactReconciler.unmountComponent(instance);

if(container.nodeType === DOC_NODE_TYPE){
container = container.documentElement;}



while(container.lastChild) {
container.removeChild(container.lastChild);}}








var TopLevelWrapper=function(){};
TopLevelWrapper.prototype.render = function(){

return this.props;};




















var ReactMount={

_instancesByReactRootID:instancesByReactRootID,









scrollMonitor:function(container,renderCallback){
renderCallback();},









_updateRootComponent:function(
prevComponent,
nextElement,
container,
callback){
ReactMount.scrollMonitor(container,function(){
ReactUpdateQueue.enqueueElementInternal(prevComponent,nextElement);
if(callback){
ReactUpdateQueue.enqueueCallbackInternal(prevComponent,callback);}});



if(__DEV__){

rootElementsByReactRootID[getReactRootID(container)] = 
getReactRootElementInContainer(container);}


return prevComponent;},









_registerComponent:function(nextComponent,container){
invariant(
container && (
container.nodeType === ELEMENT_NODE_TYPE || 
container.nodeType === DOC_NODE_TYPE || 
container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE),

'_registerComponent(...): Target container is not a DOM element.');


ReactBrowserEventEmitter.ensureScrollValueMonitoring();

var reactRootID=ReactMount.registerContainer(container);
instancesByReactRootID[reactRootID] = nextComponent;
return reactRootID;},









_renderNewRootComponent:function(
nextElement,
container,
shouldReuseMarkup,
context)
{



warning(
ReactCurrentOwner.current == null,
'_renderNewRootComponent(): Render methods should be a pure function ' + 
'of props and state; triggering nested component updates from ' + 
'render is not allowed. If necessary, trigger nested updates in ' + 
'componentDidUpdate. Check the render method of %s.',
ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 
'ReactCompositeComponent');


var componentInstance=instantiateReactComponent(nextElement,null);
var reactRootID=ReactMount._registerComponent(
componentInstance,
container);






ReactUpdates.batchedUpdates(
batchedMountComponentIntoNode,
componentInstance,
reactRootID,
container,
shouldReuseMarkup,
context);


if(__DEV__){

rootElementsByReactRootID[reactRootID] = 
getReactRootElementInContainer(container);}


return componentInstance;},















renderSubtreeIntoContainer:function(parentComponent,nextElement,container,callback){
invariant(
parentComponent != null && parentComponent._reactInternalInstance != null,
'parentComponent must be a valid React Component');

return ReactMount._renderSubtreeIntoContainer(
parentComponent,
nextElement,
container,
callback);},



_renderSubtreeIntoContainer:function(parentComponent,nextElement,container,callback){
invariant(
ReactElement.isValidElement(nextElement),
'React.render(): Invalid component element.%s',

typeof nextElement === 'string'?
' Instead of passing an element string, make sure to instantiate ' + 
'it by passing it to React.createElement.':
typeof nextElement === 'function'?
' Instead of passing a component class, make sure to instantiate ' + 
'it by passing it to React.createElement.':

nextElement != null && nextElement.props !== undefined?
' This may be caused by unintentionally loading two independent ' + 
'copies of React.':
'');



warning(
!container || !container.tagName || 
container.tagName.toUpperCase() !== 'BODY',
'render(): Rendering components directly into document.body is ' + 
'discouraged, since its children are often manipulated by third-party ' + 
'scripts and browser extensions. This may lead to subtle ' + 
'reconciliation issues. Try rendering into a container element created ' + 
'for your app.');


var nextWrappedElement=new ReactElement(
TopLevelWrapper,
null,
null,
null,
nextElement);


var prevComponent=instancesByReactRootID[getReactRootID(container)];

if(prevComponent){
var prevWrappedElement=prevComponent._currentElement;
var prevElement=prevWrappedElement.props;
if(shouldUpdateReactComponent(prevElement,nextElement)){
return ReactMount._updateRootComponent(
prevComponent,
nextWrappedElement,
container,
callback).
_renderedComponent.getPublicInstance();}else 
{
ReactMount.unmountComponentAtNode(container);}}



var reactRootElement=getReactRootElementInContainer(container);
var containerHasReactMarkup=
reactRootElement && ReactMount.isRenderedByReact(reactRootElement);

if(__DEV__){
if(!containerHasReactMarkup || reactRootElement.nextSibling){
var rootElementSibling=reactRootElement;
while(rootElementSibling) {
if(ReactMount.isRenderedByReact(rootElementSibling)){
warning(
false,
'render(): Target node has markup rendered by React, but there ' + 
'are unrelated nodes as well. This is most commonly caused by ' + 
'white-space inserted around server-rendered markup.');

break;}


rootElementSibling = rootElementSibling.nextSibling;}}}




var shouldReuseMarkup=containerHasReactMarkup && !prevComponent;
var component=ReactMount._renderNewRootComponent(
nextWrappedElement,
container,
shouldReuseMarkup,
parentComponent != null?
parentComponent._reactInternalInstance._processChildContext(
parentComponent._reactInternalInstance._context):

emptyObject).
_renderedComponent.getPublicInstance();
if(callback){
callback.call(component);}

return component;},















render:function(nextElement,container,callback){
return ReactMount._renderSubtreeIntoContainer(null,nextElement,container,callback);},










registerContainer:function(container){
var reactRootID=getReactRootID(container);
if(reactRootID){

reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);}

if(!reactRootID){

reactRootID = ReactInstanceHandles.createReactRootID();}

containersByReactRootID[reactRootID] = container;
return reactRootID;},









unmountComponentAtNode:function(container){




warning(
ReactCurrentOwner.current == null,
'unmountComponentAtNode(): Render methods should be a pure function ' + 
'of props and state; triggering nested component updates from render ' + 
'is not allowed. If necessary, trigger nested updates in ' + 
'componentDidUpdate. Check the render method of %s.',
ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 
'ReactCompositeComponent');


invariant(
container && (
container.nodeType === ELEMENT_NODE_TYPE || 
container.nodeType === DOC_NODE_TYPE || 
container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE),

'unmountComponentAtNode(...): Target container is not a DOM element.');


var reactRootID=getReactRootID(container);
var component=instancesByReactRootID[reactRootID];
if(!component){
return false;}

ReactUpdates.batchedUpdates(
unmountComponentFromNode,
component,
container);

delete instancesByReactRootID[reactRootID];
delete containersByReactRootID[reactRootID];
if(__DEV__){
delete rootElementsByReactRootID[reactRootID];}

return true;},









findReactContainerForID:function(id){
var reactRootID=ReactInstanceHandles.getReactRootIDFromNodeID(id);
var container=containersByReactRootID[reactRootID];

if(__DEV__){
var rootElement=rootElementsByReactRootID[reactRootID];
if(rootElement && rootElement.parentNode !== container){
warning(


internalGetID(rootElement) === reactRootID,
'ReactMount: Root element ID differed from reactRootID.');

var containerChild=container.firstChild;
if(containerChild && 
reactRootID === internalGetID(containerChild)){




rootElementsByReactRootID[reactRootID] = containerChild;}else 
{
warning(
false,
'ReactMount: Root element has been removed from its original ' + 
'container. New container: %s',
rootElement.parentNode);}}}





return container;},








findReactNodeByID:function(id){
var reactRoot=ReactMount.findReactContainerForID(id);
return ReactMount.findComponentRoot(reactRoot,id);},









isRenderedByReact:function(node){
if(node.nodeType !== 1){

return false;}

var id=ReactMount.getID(node);
return id?id.charAt(0) === SEPARATOR:false;},










getFirstReactDOM:function(node){
var current=node;
while(current && current.parentNode !== current) {
if(ReactMount.isRenderedByReact(current)){
return current;}

current = current.parentNode;}

return null;},












findComponentRoot:function(ancestorNode,targetID){
var firstChildren=findComponentRootReusableArray;
var childIndex=0;

var deepestAncestor=findDeepestCachedAncestor(targetID) || ancestorNode;

firstChildren[0] = deepestAncestor.firstChild;
firstChildren.length = 1;

while(childIndex < firstChildren.length) {
var child=firstChildren[childIndex++];
var targetChild;

while(child) {
var childID=ReactMount.getID(child);
if(childID){





if(targetID === childID){
targetChild = child;}else 
if(ReactInstanceHandles.isAncestorIDOf(childID,targetID)){




firstChildren.length = childIndex = 0;
firstChildren.push(child.firstChild);}}else 


{





firstChildren.push(child.firstChild);}


child = child.nextSibling;}


if(targetChild){



firstChildren.length = 0;

return targetChild;}}



firstChildren.length = 0;

invariant(
false,
'findComponentRoot(..., %s): Unable to find element. This probably ' + 
'means the DOM was unexpectedly mutated (e.g., by the browser), ' + 
'usually due to forgetting a <tbody> when using tables, nesting tags ' + 
'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' + 
'parent. ' + 
'Try inspecting the child nodes of the element with React ID `%s`.',
targetID,
ReactMount.getID(ancestorNode));},



_mountImageIntoNode:function(markup,container,shouldReuseMarkup){
invariant(
container && (
container.nodeType === ELEMENT_NODE_TYPE || 
container.nodeType === DOC_NODE_TYPE || 
container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE),

'mountComponentIntoNode(...): Target container is not valid.');


if(shouldReuseMarkup){
var rootElement=getReactRootElementInContainer(container);
if(ReactMarkupChecksum.canReuseMarkup(markup,rootElement)){
return;}else 
{
var checksum=rootElement.getAttribute(
ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

var rootMarkup=rootElement.outerHTML;
rootElement.setAttribute(
ReactMarkupChecksum.CHECKSUM_ATTR_NAME,
checksum);


var diffIndex=firstDifferenceIndex(markup,rootMarkup);
var difference=' (client) ' + 
markup.substring(diffIndex - 20,diffIndex + 20) + 
'\n (server) ' + rootMarkup.substring(diffIndex - 20,diffIndex + 20);

invariant(
container.nodeType !== DOC_NODE_TYPE,
'You\'re trying to render a component to the document using ' + 
'server rendering but the checksum was invalid. This usually ' + 
'means you rendered a different component type or props on ' + 
'the client from the one on the server, or your render() ' + 
'methods are impure. React cannot handle this case due to ' + 
'cross-browser quirks by rendering at the document root. You ' + 
'should look for environment dependent code in your components ' + 
'and ensure the props are the same client and server side:\n%s',
difference);


if(__DEV__){
warning(
false,
'React attempted to reuse markup in a container but the ' + 
'checksum was invalid. This generally means that you are ' + 
'using server rendering and the markup generated on the ' + 
'server was not what the client was expecting. React injected ' + 
'new markup to compensate which works but you have lost many ' + 
'of the benefits of server rendering. Instead, figure out ' + 
'why the markup being generated is different on the client ' + 
'or server:\n%s',
difference);}}}





invariant(
container.nodeType !== DOC_NODE_TYPE,
'You\'re trying to render a component to the document but ' + 
'you didn\'t use server rendering. We can\'t do this ' + 
'without using server rendering due to cross-browser quirks. ' + 
'See React.renderToString() for server rendering.');


setInnerHTML(container,markup);},






getReactRootID:getReactRootID,

getID:getID,

setID:setID,

getNode:getNode,

getNodeFromInstance:getNodeFromInstance,

purgeID:purgeID};


ReactPerf.measureMethods(ReactMount,'ReactMount',{
_renderNewRootComponent:'_renderNewRootComponent',
_mountImageIntoNode:'_mountImageIntoNode'});


module.exports = ReactMount;
});
__d('ReactBrowserEventEmitter',["EventConstants","EventPluginHub","EventPluginRegistry","ReactEventEmitterMixin","ViewportMetrics","Object.assign","isEventSupported"],function(global, require, module, exports) {  'use strict';













var EventConstants=require('EventConstants');
var EventPluginHub=require('EventPluginHub');
var EventPluginRegistry=require('EventPluginRegistry');
var ReactEventEmitterMixin=require('ReactEventEmitterMixin');
var ViewportMetrics=require('ViewportMetrics');

var assign=require('Object.assign');
var isEventSupported=require('isEventSupported');
























































var alreadyListeningTo={};
var isMonitoringScrollValue=false;
var reactTopListenersCounter=0;




var topEventMapping={
topBlur:'blur',
topChange:'change',
topClick:'click',
topCompositionEnd:'compositionend',
topCompositionStart:'compositionstart',
topCompositionUpdate:'compositionupdate',
topContextMenu:'contextmenu',
topCopy:'copy',
topCut:'cut',
topDoubleClick:'dblclick',
topDrag:'drag',
topDragEnd:'dragend',
topDragEnter:'dragenter',
topDragExit:'dragexit',
topDragLeave:'dragleave',
topDragOver:'dragover',
topDragStart:'dragstart',
topDrop:'drop',
topFocus:'focus',
topInput:'input',
topKeyDown:'keydown',
topKeyPress:'keypress',
topKeyUp:'keyup',
topMouseDown:'mousedown',
topMouseMove:'mousemove',
topMouseOut:'mouseout',
topMouseOver:'mouseover',
topMouseUp:'mouseup',
topPaste:'paste',
topScroll:'scroll',
topSelectionChange:'selectionchange',
topTextInput:'textInput',
topTouchCancel:'touchcancel',
topTouchEnd:'touchend',
topTouchMove:'touchmove',
topTouchStart:'touchstart',
topWheel:'wheel'};





var topListenersIDKey='_reactListenersID' + String(Math.random()).slice(2);

function getListeningForDocument(mountAt){


if(!Object.prototype.hasOwnProperty.call(mountAt,topListenersIDKey)){
mountAt[topListenersIDKey] = reactTopListenersCounter++;
alreadyListeningTo[mountAt[topListenersIDKey]] = {};}

return alreadyListeningTo[mountAt[topListenersIDKey]];}












var ReactBrowserEventEmitter=assign({},ReactEventEmitterMixin,{




ReactEventListener:null,

injection:{



injectReactEventListener:function(ReactEventListener){
ReactEventListener.setHandleTopLevel(
ReactBrowserEventEmitter.handleTopLevel);

ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;}},








setEnabled:function(enabled){
if(ReactBrowserEventEmitter.ReactEventListener){
ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);}},






isEnabled:function(){
return !!(
ReactBrowserEventEmitter.ReactEventListener && 
ReactBrowserEventEmitter.ReactEventListener.isEnabled());},
























listenTo:function(registrationName,contentDocumentHandle){
var mountAt=contentDocumentHandle;
var isListening=getListeningForDocument(mountAt);
var dependencies=
EventPluginRegistry.registrationNameDependencies[registrationName];

var topLevelTypes=EventConstants.topLevelTypes;
for(var i=0;i < dependencies.length;i++) {
var dependency=dependencies[i];
if(!(
isListening.hasOwnProperty(dependency) && 
isListening[dependency]))
{
if(dependency === topLevelTypes.topWheel){
if(isEventSupported('wheel')){
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topWheel,
'wheel',
mountAt);}else 

if(isEventSupported('mousewheel')){
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topWheel,
'mousewheel',
mountAt);}else 

{


ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topWheel,
'DOMMouseScroll',
mountAt);}}else 


if(dependency === topLevelTypes.topScroll){

if(isEventSupported('scroll',true)){
ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelTypes.topScroll,
'scroll',
mountAt);}else 

{
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topScroll,
'scroll',
ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);}}else 


if(dependency === topLevelTypes.topFocus || 
dependency === topLevelTypes.topBlur){

if(isEventSupported('focus',true)){
ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelTypes.topFocus,
'focus',
mountAt);

ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelTypes.topBlur,
'blur',
mountAt);}else 

if(isEventSupported('focusin')){


ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topFocus,
'focusin',
mountAt);

ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topBlur,
'focusout',
mountAt);}




isListening[topLevelTypes.topBlur] = true;
isListening[topLevelTypes.topFocus] = true;}else 
if(topEventMapping.hasOwnProperty(dependency)){
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
dependency,
topEventMapping[dependency],
mountAt);}



isListening[dependency] = true;}}},




trapBubbledEvent:function(topLevelType,handlerBaseName,handle){
return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelType,
handlerBaseName,
handle);},



trapCapturedEvent:function(topLevelType,handlerBaseName,handle){
return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelType,
handlerBaseName,
handle);},











ensureScrollValueMonitoring:function(){
if(!isMonitoringScrollValue){
var refresh=ViewportMetrics.refreshScrollValues;
ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
isMonitoringScrollValue = true;}},



eventNameDispatchConfigs:EventPluginHub.eventNameDispatchConfigs,

registrationNameModules:EventPluginHub.registrationNameModules,

putListener:EventPluginHub.putListener,

getListener:EventPluginHub.getListener,

deleteListener:EventPluginHub.deleteListener,

deleteAllListeners:EventPluginHub.deleteAllListeners});



module.exports = ReactBrowserEventEmitter;
});
__d('ViewportMetrics',[],function(global, require, module, exports) {  'use strict';












var ViewportMetrics={

currentScrollLeft:0,

currentScrollTop:0,

refreshScrollValues:function(scrollPosition){
ViewportMetrics.currentScrollLeft = scrollPosition.x;
ViewportMetrics.currentScrollTop = scrollPosition.y;}};




module.exports = ViewportMetrics;
});
__d('isEventSupported',["ExecutionEnvironment"],function(global, require, module, exports) {  'use strict';












var ExecutionEnvironment=require('ExecutionEnvironment');

var useHasFeature;
if(ExecutionEnvironment.canUseDOM){
useHasFeature = 
document.implementation && 
document.implementation.hasFeature && 


document.implementation.hasFeature('','') !== true;}


/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
function isEventSupported(eventNameSuffix,capture){
if(!ExecutionEnvironment.canUseDOM || 
capture && !('addEventListener' in document)){
return false;}


var eventName='on' + eventNameSuffix;
var isSupported=(eventName in document);

if(!isSupported){
var element=document.createElement('div');
element.setAttribute(eventName,'return;');
isSupported = typeof element[eventName] === 'function';}


if(!isSupported && useHasFeature && eventNameSuffix === 'wheel'){

isSupported = document.implementation.hasFeature('Events.wheel','3.0');}


return isSupported;}


module.exports = isEventSupported;
});
__d('ReactMarkupChecksum',["adler32"],function(global, require, module, exports) {  'use strict';












var adler32=require('adler32');

var ReactMarkupChecksum={
CHECKSUM_ATTR_NAME:'data-react-checksum',





addChecksumToMarkup:function(markup){
var checksum=adler32(markup);
return markup.replace(
'>',
' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '">');},








canReuseMarkup:function(markup,element){
var existingChecksum=element.getAttribute(
ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

existingChecksum = existingChecksum && parseInt(existingChecksum,10);
var markupChecksum=adler32(markup);
return markupChecksum === existingChecksum;}};



module.exports = ReactMarkupChecksum;
});
__d('adler32',[],function(global, require, module, exports) {  'use strict';












var MOD=65521;





function adler32(data){
var a=1;
var b=0;
for(var i=0;i < data.length;i++) {
a = (a + data.charCodeAt(i)) % MOD;
b = (b + a) % MOD;}

return a | b << 16;}


module.exports = adler32;
});
__d('containsNode',["isTextNode"],function(global, require, module, exports) {  var 











isTextNode=require('isTextNode');










function containsNode(outerNode,innerNode){
if(!outerNode || !innerNode){
return false;}else 
if(outerNode === innerNode){
return true;}else 
if(isTextNode(outerNode)){
return false;}else 
if(isTextNode(innerNode)){
return containsNode(outerNode,innerNode.parentNode);}else 
if(outerNode.contains){
return outerNode.contains(innerNode);}else 
if(outerNode.compareDocumentPosition){
return !!(outerNode.compareDocumentPosition(innerNode) & 16);}else 
{
return false;}}



module.exports = containsNode;
});
__d('isTextNode',["isNode"],function(global, require, module, exports) {  var 











isNode=require('isNode');





function isTextNode(object){
return isNode(object) && object.nodeType == 3;}


module.exports = isTextNode;
});
__d('setInnerHTML',["ExecutionEnvironment"],function(global, require, module, exports) {  'use strict';














var ExecutionEnvironment=require('ExecutionEnvironment');

var WHITESPACE_TEST=/^[ \r\n\t\f]/;
var NONVISIBLE_TEST=/<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;









var setInnerHTML=function(node,html){
node.innerHTML = html;};



if(typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction){
setInnerHTML = function(node,html){
MSApp.execUnsafeLocalFunction(function(){
node.innerHTML = html;});};}




if(ExecutionEnvironment.canUseDOM){






var testElement=document.createElement('div');
testElement.innerHTML = ' ';
if(testElement.innerHTML === ''){
setInnerHTML = function(node,html){





if(node.parentNode){
node.parentNode.replaceChild(node,node);}






if(WHITESPACE_TEST.test(html) || 
html[0] === '<' && NONVISIBLE_TEST.test(html)){






node.innerHTML = String.fromCharCode(0xFEFF) + html;



var textNode=node.firstChild;
if(textNode.data.length === 1){
node.removeChild(textNode);}else 
{
textNode.deleteData(0,1);}}else 

{
node.innerHTML = html;}};}}





module.exports = setInnerHTML;
});
__d('validateDOMNesting',["Object.assign","emptyFunction","warning"],function(global, require, module, exports) {  'use strict';












var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');
var warning=require('warning');

var validateDOMNesting=emptyFunction;

if(__DEV__){












var specialTags=[
'address','applet','area','article','aside','base','basefont',
'bgsound','blockquote','body','br','button','caption','center','col',
'colgroup','dd','details','dir','div','dl','dt','embed','fieldset',
'figcaption','figure','footer','form','frame','frameset','h1','h2',
'h3','h4','h5','h6','head','header','hgroup','hr','html','iframe',
'img','input','isindex','li','link','listing','main','marquee',
'menu','menuitem','meta','nav','noembed','noframes','noscript',
'object','ol','p','param','plaintext','pre','script','section',
'select','source','style','summary','table','tbody','td','template',
'textarea','tfoot','th','thead','title','tr','track','ul','wbr',
'xmp'];



var inScopeTags=[
'applet','caption','html','table','td','th','marquee','object',
'template',




'foreignObject','desc','title'];



var buttonScopeTags=inScopeTags.concat(['button']);


var impliedEndTags=
['dd','dt','li','option','optgroup','p','rp','rt'];

var emptyAncestorInfo={
parentTag:null,

formTag:null,
aTagInScope:null,
buttonTagInScope:null,
nobrTagInScope:null,
pTagInButtonScope:null,

listItemTagAutoclosing:null,
dlItemTagAutoclosing:null};


var updatedAncestorInfo=function(oldInfo,tag,instance){
var ancestorInfo=assign({},oldInfo || emptyAncestorInfo);
var info={tag:tag,instance:instance};

if(inScopeTags.indexOf(tag) !== -1){
ancestorInfo.aTagInScope = null;
ancestorInfo.buttonTagInScope = null;
ancestorInfo.nobrTagInScope = null;}

if(buttonScopeTags.indexOf(tag) !== -1){
ancestorInfo.pTagInButtonScope = null;}




if(
specialTags.indexOf(tag) !== -1 && 
tag !== 'address' && tag !== 'div' && tag !== 'p')
{
ancestorInfo.listItemTagAutoclosing = null;
ancestorInfo.dlItemTagAutoclosing = null;}


ancestorInfo.parentTag = info;

if(tag === 'form'){
ancestorInfo.formTag = info;}

if(tag === 'a'){
ancestorInfo.aTagInScope = info;}

if(tag === 'button'){
ancestorInfo.buttonTagInScope = info;}

if(tag === 'nobr'){
ancestorInfo.nobrTagInScope = info;}

if(tag === 'p'){
ancestorInfo.pTagInButtonScope = info;}

if(tag === 'li'){
ancestorInfo.listItemTagAutoclosing = info;}

if(tag === 'dd' || tag === 'dt'){
ancestorInfo.dlItemTagAutoclosing = info;}


return ancestorInfo;};





var isTagValidWithParent=function(tag,parentTag){

switch(parentTag){

case 'select':
return tag === 'option' || tag === 'optgroup' || tag === '#text';
case 'optgroup':
return tag === 'option' || tag === '#text';


case 'option':
return tag === '#text';







case 'tr':
return (
tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || 
tag === 'template');



case 'tbody':
case 'thead':
case 'tfoot':
return (
tag === 'tr' || tag === 'style' || tag === 'script' || 
tag === 'template');



case 'colgroup':
return tag === 'col' || tag === 'template';


case 'table':
return (
tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || 
tag === 'tfoot' || tag === 'thead' || tag === 'style' || 
tag === 'script' || tag === 'template');



case 'head':
return (
tag === 'base' || tag === 'basefont' || tag === 'bgsound' || 
tag === 'link' || tag === 'meta' || tag === 'title' || 
tag === 'noscript' || tag === 'noframes' || tag === 'style' || 
tag === 'script' || tag === 'template');



case 'html':
return tag === 'head' || tag === 'body';}





switch(tag){
case 'h1':
case 'h2':
case 'h3':
case 'h4':
case 'h5':
case 'h6':
return (
parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && 
parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6');


case 'rp':
case 'rt':
return impliedEndTags.indexOf(parentTag) === -1;

case 'caption':
case 'col':
case 'colgroup':
case 'frame':
case 'head':
case 'tbody':
case 'td':
case 'tfoot':
case 'th':
case 'thead':
case 'tr':




return parentTag == null;}


return true;};





var findInvalidAncestorForTag=function(tag,ancestorInfo){
switch(tag){
case 'address':
case 'article':
case 'aside':
case 'blockquote':
case 'center':
case 'details':
case 'dialog':
case 'dir':
case 'div':
case 'dl':
case 'fieldset':
case 'figcaption':
case 'figure':
case 'footer':
case 'header':
case 'hgroup':
case 'main':
case 'menu':
case 'nav':
case 'ol':
case 'p':
case 'section':
case 'summary':
case 'ul':

case 'pre':
case 'listing':

case 'table':

case 'hr':

case 'xmp':

case 'h1':
case 'h2':
case 'h3':
case 'h4':
case 'h5':
case 'h6':
return ancestorInfo.pTagInButtonScope;

case 'form':
return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

case 'li':
return ancestorInfo.listItemTagAutoclosing;

case 'dd':
case 'dt':
return ancestorInfo.dlItemTagAutoclosing;

case 'button':
return ancestorInfo.buttonTagInScope;

case 'a':


return ancestorInfo.aTagInScope;

case 'nobr':
return ancestorInfo.nobrTagInScope;}


return null;};






var findOwnerStack=function(instance){
if(!instance){
return [];}


var stack=[];

do {

stack.push(instance);}while(
instance = instance._currentElement._owner);
stack.reverse();
return stack;};


var didWarn={};

validateDOMNesting = function(childTag,childInstance,ancestorInfo){
ancestorInfo = ancestorInfo || emptyAncestorInfo;
var parentInfo=ancestorInfo.parentTag;
var parentTag=parentInfo && parentInfo.tag;

var invalidParent=
isTagValidWithParent(childTag,parentTag)?null:parentInfo;
var invalidAncestor=
invalidParent?null:findInvalidAncestorForTag(childTag,ancestorInfo);
var problematic=invalidParent || invalidAncestor;

if(problematic){
var ancestorTag=problematic.tag;
var ancestorInstance=problematic.instance;

var childOwner=childInstance && childInstance._currentElement._owner;
var ancestorOwner=
ancestorInstance && ancestorInstance._currentElement._owner;

var childOwners=findOwnerStack(childOwner);
var ancestorOwners=findOwnerStack(ancestorOwner);

var minStackLen=Math.min(childOwners.length,ancestorOwners.length);
var i;

var deepestCommon=-1;
for(i = 0;i < minStackLen;i++) {
if(childOwners[i] === ancestorOwners[i]){
deepestCommon = i;}else 
{
break;}}



var UNKNOWN='(unknown)';
var childOwnerNames=childOwners.slice(deepestCommon + 1).map(
function(inst){return inst.getName() || UNKNOWN;});

var ancestorOwnerNames=ancestorOwners.slice(deepestCommon + 1).map(
function(inst){return inst.getName() || UNKNOWN;});

var ownerInfo=[].concat(


deepestCommon !== -1?
childOwners[deepestCommon].getName() || UNKNOWN:
[],
ancestorOwnerNames,
ancestorTag,

invalidAncestor?['...']:[],
childOwnerNames,
childTag).
join(' > ');

var warnKey=
!!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
if(didWarn[warnKey]){
return;}

didWarn[warnKey] = true;

if(invalidParent){
var info='';
if(ancestorTag === 'table' && childTag === 'tr'){
info += 
' Add a <tbody> to your code to match the DOM tree generated by ' + 
'the browser.';}

warning(
false,
'validateDOMNesting(...): <%s> cannot appear as a child of <%s>. ' + 
'See %s.%s',
childTag,
ancestorTag,
ownerInfo,
info);}else 

{
warning(
false,
'validateDOMNesting(...): <%s> cannot appear as a descendant of ' + 
'<%s>. See %s.',
childTag,
ancestorTag,
ownerInfo);}}};





validateDOMNesting.ancestorInfoContextKey = 
'__validateDOMNesting_ancestorInfo$' + Math.random().toString(36).slice(2);

validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;


validateDOMNesting.isTagValidInContext = function(tag,ancestorInfo){
ancestorInfo = ancestorInfo || emptyAncestorInfo;
var parentInfo=ancestorInfo.parentTag;
var parentTag=parentInfo && parentInfo.tag;
return (
isTagValidWithParent(tag,parentTag) && 
!findInvalidAncestorForTag(tag,ancestorInfo));};}




module.exports = validateDOMNesting;
});
__d('AppStateIOS',["Map","NativeModules","RCTDeviceEventEmitter","logError","invariant"],function(global, require, module, exports) {  'use strict';












var Map=require('Map');
var NativeModules=require('NativeModules');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTAppState=NativeModules.AppState;

var logError=require('logError');
var invariant=require('invariant');

var _eventHandlers={
change:new Map(),
memoryWarning:new Map()};





















































var AppStateIOS={





addEventListener:function(
type,
handler)
{
invariant(
['change','memoryWarning'].indexOf(type) !== -1,
'Trying to subscribe to unknown event: "%s"',type);

if(type === 'change'){
_eventHandlers[type].set(handler,RCTDeviceEventEmitter.addListener(
'appStateDidChange',
function(appStateData){
handler(appStateData.app_state);}));}else 


if(type === 'memoryWarning'){
_eventHandlers[type].set(handler,RCTDeviceEventEmitter.addListener(
'memoryWarning',
handler));}},







removeEventListener:function(
type,
handler)
{
invariant(
['change','memoryWarning'].indexOf(type) !== -1,
'Trying to remove listener for unknown event: "%s"',type);

if(!_eventHandlers[type].has(handler)){
return;}

_eventHandlers[type].get(handler).remove();
_eventHandlers[type].delete(handler);},






currentState:'active'};



RCTDeviceEventEmitter.addListener(
'appStateDidChange',
function(appStateData){
AppStateIOS.currentState = appStateData.app_state;});



RCTAppState.getCurrentAppState(
function(appStateData){
AppStateIOS.currentState = appStateData.app_state;},

logError);


module.exports = AppStateIOS;
});
__d('BackAndroid',["warning"],function(global, require, module, exports) {  'use strict';














var warning=require('warning');

function platformWarn(){
warning(false,'BackAndroid is not supported on this platform.');}


var BackAndroid={
exitApp:platformWarn,
addEventListener:platformWarn,
removeEventListener:platformWarn};


module.exports = BackAndroid;
});
__d('CameraRoll',["ReactPropTypes","NativeModules","createStrictShapeTypeChecker","deepFreezeAndThrowOnMutationInDev","invariant"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var ReactPropTypes=require('ReactPropTypes');
var RCTCameraRollManager=require('NativeModules').CameraRollManager;

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var deepFreezeAndThrowOnMutationInDev=
require('deepFreezeAndThrowOnMutationInDev');
var invariant=require('invariant');

var GROUP_TYPES_OPTIONS=[
'Album',
'All',
'Event',
'Faces',
'Library',
'PhotoStream',
'SavedPhotos'];


var ASSET_TYPE_OPTIONS=[
'All',
'Videos',
'Photos'];




deepFreezeAndThrowOnMutationInDev(GROUP_TYPES_OPTIONS);
deepFreezeAndThrowOnMutationInDev(ASSET_TYPE_OPTIONS);




var getPhotosParamChecker=createStrictShapeTypeChecker({




first:ReactPropTypes.number.isRequired,





after:ReactPropTypes.string,




groupTypes:ReactPropTypes.oneOf(GROUP_TYPES_OPTIONS),





groupName:ReactPropTypes.string,




assetType:ReactPropTypes.oneOf(ASSET_TYPE_OPTIONS),




mimeTypes:ReactPropTypes.arrayOf(ReactPropTypes.string)});





var getPhotosReturnChecker=createStrictShapeTypeChecker({
edges:ReactPropTypes.arrayOf(createStrictShapeTypeChecker({
node:createStrictShapeTypeChecker({
type:ReactPropTypes.string.isRequired,
group_name:ReactPropTypes.string.isRequired,
image:createStrictShapeTypeChecker({
uri:ReactPropTypes.string.isRequired,
height:ReactPropTypes.number.isRequired,
width:ReactPropTypes.number.isRequired,
isStored:ReactPropTypes.bool}).
isRequired,
timestamp:ReactPropTypes.number.isRequired,
location:createStrictShapeTypeChecker({
latitude:ReactPropTypes.number,
longitude:ReactPropTypes.number,
altitude:ReactPropTypes.number,
heading:ReactPropTypes.number,
speed:ReactPropTypes.number})}).

isRequired})).
isRequired,
page_info:createStrictShapeTypeChecker({
has_next_page:ReactPropTypes.bool.isRequired,
start_cursor:ReactPropTypes.string,
end_cursor:ReactPropTypes.string}).
isRequired});var 





CameraRoll=(function(){function CameraRoll(){_classCallCheck(this,CameraRoll);}_createClass(CameraRoll,null,[{key:'saveImageWithTag',value:



















function saveImageWithTag(tag,successCallback,errorCallback){
invariant(
typeof tag === 'string',
'CameraRoll.saveImageWithTag tag must be a valid string.');

RCTCameraRollManager.saveImageWithTag(
tag,
function(imageTag){
successCallback && successCallback(imageTag);},

function(errorMessage){
errorCallback && errorCallback(errorMessage);});}},{key:'getPhotos',value:












function getPhotos(params,callback,errorCallback){
var metaCallback=callback;
if(__DEV__){
getPhotosParamChecker({params:params},'params','CameraRoll.getPhotos');
invariant(
typeof callback === 'function',
'CameraRoll.getPhotos callback must be a valid function.');

invariant(
typeof errorCallback === 'function',
'CameraRoll.getPhotos errorCallback must be a valid function.');}


if(__DEV__){
metaCallback = function(response){
getPhotosReturnChecker(
{response:response},
'response',
'CameraRoll.getPhotos callback');

callback(response);};}


RCTCameraRollManager.getPhotos(params,metaCallback,errorCallback);}}]);return CameraRoll;})();



CameraRoll.GroupTypesOptions = GROUP_TYPES_OPTIONS;
CameraRoll.AssetTypeOptions = ASSET_TYPE_OPTIONS;

module.exports = CameraRoll;
});
__d('ImagePickerIOS',["NativeModules"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var RCTImagePicker=require('NativeModules').ImagePickerIOS;

var ImagePickerIOS={
canRecordVideos:function(callback){
return RCTImagePicker.canRecordVideos(callback);},

canUseCamera:function(callback){
return RCTImagePicker.canUseCamera(callback);},

openCameraDialog:function(config,successCallback,cancelCallback){
config = _extends({
videoMode:false},
config);

return RCTImagePicker.openCameraDialog(config,successCallback,cancelCallback);},

openSelectDialog:function(config,successCallback,cancelCallback){
config = _extends({
showImages:true,
showVideos:false},
config);

return RCTImagePicker.openSelectDialog(config,successCallback,cancelCallback);}};



module.exports = ImagePickerIOS;
});
__d('LayoutAnimation',["ReactPropTypes","NativeModules","createStrictShapeTypeChecker","keyMirror"],function(global, require, module, exports) {  'use strict';












var PropTypes=require('ReactPropTypes');
var RCTUIManager=require('NativeModules').UIManager;

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var keyMirror=require('keyMirror');

var TypesEnum={
spring:true,
linear:true,
easeInEaseOut:true,
easeIn:true,
easeOut:true,
keyboard:true};

var Types=keyMirror(TypesEnum);

var PropertiesEnum={
opacity:true,
scaleXY:true};

var Properties=keyMirror(PropertiesEnum);

var animChecker=createStrictShapeTypeChecker({
duration:PropTypes.number,
delay:PropTypes.number,
springDamping:PropTypes.number,
initialVelocity:PropTypes.number,
type:PropTypes.oneOf(
Object.keys(Types)),

property:PropTypes.oneOf(
Object.keys(Properties))});












var configChecker=createStrictShapeTypeChecker({
duration:PropTypes.number.isRequired,
create:animChecker,
update:animChecker,
delete:animChecker});









function configureNext(config,onAnimationDidEnd){
configChecker({config:config},'config','LayoutAnimation.configureNext');
RCTUIManager.configureNextLayoutAnimation(
config,onAnimationDidEnd || function(){},function(){});}



function create(duration,type,creationProp){
return {
duration:duration,
create:{
type:type,
property:creationProp},

update:{
type:type}};}




var Presets={
easeInEaseOut:create(
300,Types.easeInEaseOut,Properties.opacity),

linear:create(
500,Types.linear,Properties.opacity),

spring:{
duration:700,
create:{
type:Types.linear,
property:Properties.opacity},

update:{
type:Types.spring,
springDamping:0.4}}};











var LayoutAnimation={














configureNext:configureNext,



create:create,
Types:Types,
Properties:Properties,
configChecker:configChecker,
Presets:Presets,
easeInEaseOut:configureNext.bind(
null,Presets.easeInEaseOut),

linear:configureNext.bind(
null,Presets.linear),

spring:configureNext.bind(
null,Presets.spring)};



module.exports = LayoutAnimation;
});
__d('LinkingIOS',["RCTDeviceEventEmitter","NativeModules","Map","invariant"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTLinkingManager=require('NativeModules').LinkingManager;
var Map=require('Map');
var invariant=require('invariant');

var _notifHandlers=new Map();
var _initialURL=RCTLinkingManager && 
RCTLinkingManager.initialURL;

var DEVICE_NOTIF_EVENT='openURL';var 





























































LinkingIOS=(function(){function LinkingIOS(){_classCallCheck(this,LinkingIOS);}_createClass(LinkingIOS,null,[{key:'addEventListener',value:




function addEventListener(type,handler){
invariant(
type === 'url',
'LinkingIOS only supports `url` events');

var listener=RCTDeviceEventEmitter.addListener(
DEVICE_NOTIF_EVENT,
handler);

_notifHandlers.set(handler,listener);}},{key:'removeEventListener',value:





function removeEventListener(type,handler){
invariant(
type === 'url',
'LinkingIOS only supports `url` events');

var listener=_notifHandlers.get(handler);
if(!listener){
return;}

listener.remove();
_notifHandlers.delete(handler);}},{key:'openURL',value:





function openURL(url){
invariant(
typeof url === 'string',
'Invalid url: should be a string');

RCTLinkingManager.openURL(url);}},{key:'canOpenURL',value:









function canOpenURL(url,callback){
invariant(
typeof url === 'string',
'Invalid url: should be a string');

invariant(
typeof callback === 'function',
'A valid callback function is required');

RCTLinkingManager.canOpenURL(url,callback);}},{key:'popInitialURL',value:






function popInitialURL(){
var initialURL=_initialURL;
_initialURL = null;
return initialURL;}}]);return LinkingIOS;})();



module.exports = LinkingIOS;
});
__d('NetInfo',["Map","NativeModules","Platform","RCTDeviceEventEmitter"],function(global, require, module, exports) {  'use strict';












var Map=require('Map');
var NativeModules=require('NativeModules');
var Platform=require('Platform');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTNetInfo=NativeModules.NetInfo;

var DEVICE_REACHABILITY_EVENT='networkDidChange';






















































































































var _subscriptions=new Map();

if(Platform.OS === 'ios'){
var _isConnected=function(
reachability)
{
return reachability !== 'none' && 
reachability !== 'unknown';};}else 

if(Platform.OS === 'android'){
var _isConnected=function(
connectionType)
{
return connectionType !== 'NONE' && connectionType !== 'UNKNOWN';};}



var _isConnectedSubscriptions=new Map();

var NetInfo={
addEventListener:function(
eventName,
handler)
{
var listener=RCTDeviceEventEmitter.addListener(
DEVICE_REACHABILITY_EVENT,
function(appStateData){
handler(appStateData.network_info);});


_subscriptions.set(handler,listener);},


removeEventListener:function(
eventName,
handler)
{
var listener=_subscriptions.get(handler);
if(!listener){
return;}

listener.remove();
_subscriptions.delete(handler);},


fetch:function(){
return new Promise(function(resolve,reject){
RCTNetInfo.getCurrentReachability(
function(resp){
resolve(resp.network_info);},

reject);});},




isConnected:{
addEventListener:function(
eventName,
handler)
{
var listener=function(connection){
handler(_isConnected(connection));};

_isConnectedSubscriptions.set(handler,listener);
NetInfo.addEventListener(
eventName,
listener);},



removeEventListener:function(
eventName,
handler)
{
var listener=_isConnectedSubscriptions.get(handler);
NetInfo.removeEventListener(
eventName,
listener);

_isConnectedSubscriptions.delete(handler);},


fetch:function(){
return NetInfo.fetch().then(
function(connection){return _isConnected(connection);});}},




isConnectionMetered:{}};


if(Platform.OS === 'android'){
NetInfo.isConnectionMetered = function(callback){
RCTNetInfo.isConnectionMetered(function(_isMetered){
callback(_isMetered);});};}




module.exports = NetInfo;
});
__d('PushNotificationIOS',["Map","RCTDeviceEventEmitter","NativeModules","invariant"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var Map=require('Map');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTPushNotificationManager=require('NativeModules').PushNotificationManager;
var invariant=require('invariant');

var _notifHandlers=new Map();
var _initialNotification=RCTPushNotificationManager && 
RCTPushNotificationManager.initialNotification;

var DEVICE_NOTIF_EVENT='remoteNotificationReceived';
var NOTIF_REGISTER_EVENT='remoteNotificationsRegistered';
var NOTIF_REGISTER_ERROR_EVENT='remoteNotificationsRegisteredError';var 








PushNotificationIOS=(function(){_createClass(PushNotificationIOS,null,[{key:'presentLocalNotification',value:













function presentLocalNotification(details){
RCTPushNotificationManager.presentLocalNotification(details);}},{key:'scheduleLocalNotification',value:











function scheduleLocalNotification(details){
RCTPushNotificationManager.scheduleLocalNotification(details);}},{key:'setApplicationIconBadgeNumber',value:





function setApplicationIconBadgeNumber(number){
RCTPushNotificationManager.setApplicationIconBadgeNumber(number);}},{key:'getApplicationIconBadgeNumber',value:





function getApplicationIconBadgeNumber(callback){
RCTPushNotificationManager.getApplicationIconBadgeNumber(callback);}},{key:'addEventListener',value:













function addEventListener(type,handler){
invariant(
type === 'notification' || type === 'register' || type === 'error',
'PushNotificationIOS only supports `notification`, `register` and `error` events');

var listener;
if(type === 'notification'){
listener = RCTDeviceEventEmitter.addListener(
DEVICE_NOTIF_EVENT,
function(notifData){
handler(new PushNotificationIOS(notifData));});}else 


if(type === 'register'){
listener = RCTDeviceEventEmitter.addListener(
NOTIF_REGISTER_EVENT,
function(registrationInfo){
handler(registrationInfo.deviceToken);});}else 


if(type === 'error'){
listener = RCTDeviceEventEmitter.addListener(
NOTIF_REGISTER_ERROR_EVENT,
function(registrationError){
var key=Object.keys(registrationError)[0] || null;
if(!key){
return;}

handler(registrationError[key],key);});}



_notifHandlers.set(handler,listener);}},{key:'requestPermissions',value:
















function requestPermissions(permissions)



{
var requestedPermissions={};
if(permissions){
requestedPermissions = {
alert:!!permissions.alert,
badge:!!permissions.badge,
sound:!!permissions.sound};}else 

{
requestedPermissions = {
alert:true,
badge:true,
sound:true};}


RCTPushNotificationManager.requestPermissions(requestedPermissions);}},{key:'abandonPermissions',value:










function abandonPermissions(){
RCTPushNotificationManager.abandonPermissions();}},{key:'checkPermissions',value:










function checkPermissions(callback){
invariant(
typeof callback === 'function',
'Must provide a valid callback');

RCTPushNotificationManager.checkPermissions(callback);}},{key:'removeEventListener',value:






function removeEventListener(type,handler){
invariant(
type === 'notification' || type === 'register' || type === 'error',
'PushNotificationIOS only supports `notification`, `register` and `error` events');

var listener=_notifHandlers.get(handler);
if(!listener){
return;}

listener.remove();
_notifHandlers.delete(handler);}},{key:'popInitialNotification',value:










function popInitialNotification(){
var initialNotification=_initialNotification && 
new PushNotificationIOS(_initialNotification);
_initialNotification = null;
return initialNotification;}}]);







function PushNotificationIOS(nativeNotif){var _this=this;_classCallCheck(this,PushNotificationIOS);
this._data = {};





Object.keys(nativeNotif).forEach(function(notifKey){
var notifVal=nativeNotif[notifKey];
if(notifKey === 'aps'){
_this._alert = notifVal.alert;
_this._sound = notifVal.sound;
_this._badgeCount = notifVal.badge;}else 
{
_this._data[notifKey] = notifVal;}});}_createClass(PushNotificationIOS,[{key:'getMessage',value:







function getMessage(){

return this._alert;}},{key:'getSound',value:





function getSound(){
return this._sound;}},{key:'getAlert',value:





function getAlert(){
return this._alert;}},{key:'getBadgeCount',value:





function getBadgeCount(){
return this._badgeCount;}},{key:'getData',value:





function getData(){
return this._data;}}]);return PushNotificationIOS;})();



module.exports = PushNotificationIOS;
});
__d('Settings',["RCTDeviceEventEmitter","NativeModules","invariant"],function(global, require, module, exports) {  'use strict';












var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTSettingsManager=require('NativeModules').SettingsManager;

var invariant=require('invariant');

var subscriptions=[];

var Settings={
_settings:RCTSettingsManager && RCTSettingsManager.settings,

get:function(key){
return this._settings[key];},


set:function(settings){
this._settings = Object.assign(this._settings,settings);
RCTSettingsManager.setValues(settings);},


watchKeys:function(keys,callback){
if(typeof keys === 'string'){
keys = [keys];}


invariant(
Array.isArray(keys),
'keys should be a string or array of strings');


var sid=subscriptions.length;
subscriptions.push({keys:keys,callback:callback});
return sid;},


clearWatch:function(watchId){
if(watchId < subscriptions.length){
subscriptions[watchId] = {keys:[],callback:null};}},



_sendObservations:function(body){var _this=this;
Object.keys(body).forEach(function(key){
var newValue=body[key];
var didChange=_this._settings[key] !== newValue;
_this._settings[key] = newValue;

if(didChange){
subscriptions.forEach(function(sub){
if(sub.keys.indexOf(key) !== -1 && sub.callback){
sub.callback();}});}});}};







RCTDeviceEventEmitter.addListener(
'settingsUpdated',
Settings._sendObservations.bind(Settings));


module.exports = Settings;
});
__d('StatusBarIOS',["NativeModules"],function(global, require, module, exports) {  'use strict';












var RCTStatusBarManager=require('NativeModules').StatusBarManager;












var StatusBarIOS={

setStyle:function(style,animated){
animated = animated || false;
RCTStatusBarManager.setStyle(style,animated);},


setHidden:function(hidden,animation){
animation = animation || 'none';
RCTStatusBarManager.setHidden(hidden,animation);},


setNetworkActivityIndicatorVisible:function(visible){
RCTStatusBarManager.setNetworkActivityIndicatorVisible(visible);}};



module.exports = StatusBarIOS;
});
__d('VibrationIOS',["NativeModules","invariant"],function(global, require, module, exports) {  'use strict';












var RCTVibration=require('NativeModules').Vibration;

var invariant=require('invariant');












var VibrationIOS={
vibrate:function(){
invariant(
arguments[0] === undefined,
'Vibration patterns not supported.');

RCTVibration.vibrate();}};



module.exports = VibrationIOS;
});
__d('RCTNativeAppEventEmitter',["EventEmitter"],function(global, require, module, exports) {  'use strict';












var EventEmitter=require('EventEmitter');

var RCTNativeAppEventEmitter=new EventEmitter();

module.exports = RCTNativeAppEventEmitter;
});
__d('LinkedStateMixin',["ReactLink","ReactStateSetters"],function(global, require, module, exports) {  'use strict';













var ReactLink=require('ReactLink');
var ReactStateSetters=require('ReactStateSetters');




var LinkedStateMixin={









linkState:function(key){
return new ReactLink(
this.state[key],
ReactStateSetters.createStateKeySetter(this,key));}};




module.exports = LinkedStateMixin;
});
__d('ReactLink',["React"],function(global, require, module, exports) {  'use strict';




































var React=require('React');





function ReactLink(value,requestChange){
this.value = value;
this.requestChange = requestChange;}










function createLinkTypeChecker(linkType){
var shapes={
value:typeof linkType === 'undefined'?
React.PropTypes.any.isRequired:
linkType.isRequired,
requestChange:React.PropTypes.func.isRequired};

return React.PropTypes.shape(shapes);}


ReactLink.PropTypes = {
link:createLinkTypeChecker};


module.exports = ReactLink;
});
__d('ReactStateSetters',[],function(global, require, module, exports) {  'use strict';












var ReactStateSetters={










createStateSetter:function(component,funcReturningState){
return function(a,b,c,d,e,f){
var partialState=funcReturningState.call(component,a,b,c,d,e,f);
if(partialState){
component.setState(partialState);}};},















createStateKeySetter:function(component,key){

var cache=component.__keySetters || (component.__keySetters = {});
return cache[key] || (cache[key] = createStateKeySetter(component,key));}};



function createStateKeySetter(component,key){



var partialState={};
return function stateKeySetter(value){
partialState[key] = value;
component.setState(partialState);};}



ReactStateSetters.Mixin = {
















createStateSetter:function(funcReturningState){
return ReactStateSetters.createStateSetter(this,funcReturningState);},

















createStateKeySetter:function(key){
return ReactStateSetters.createStateKeySetter(this,key);}};



module.exports = ReactStateSetters;
});
__d('ReactComponentWithPureRenderMixin',["shallowCompare"],function(global, require, module, exports) {  'use strict';












var shallowCompare=require('shallowCompare');

























var ReactComponentWithPureRenderMixin={
shouldComponentUpdate:function(nextProps,nextState){
return shallowCompare(this,nextProps,nextState);}};



module.exports = ReactComponentWithPureRenderMixin;
});
__d('shallowCompare',["shallowEqual"],function(global, require, module, exports) {  'use strict';












var shallowEqual=require('shallowEqual');





function shallowCompare(instance,nextProps,nextState){
return (
!shallowEqual(instance.props,nextProps) || 
!shallowEqual(instance.state,nextState));}



module.exports = shallowCompare;
});
__d('shallowEqual',[],function(global, require, module, exports) {  'use strict';



















function shallowEqual(objA,objB){
if(objA === objB){
return true;}


if(typeof objA !== 'object' || objA === null || 
typeof objB !== 'object' || objB === null){
return false;}


var keysA=Object.keys(objA);
var keysB=Object.keys(objB);

if(keysA.length !== keysB.length){
return false;}



var bHasOwnProperty=Object.prototype.hasOwnProperty.bind(objB);
for(var i=0;i < keysA.length;i++) {
if(!bHasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]){
return false;}}



return true;}


module.exports = shallowEqual;
});
__d('update',["Object.assign","keyOf","invariant"],function(global, require, module, exports) {  'use strict';














var assign=require('Object.assign');
var keyOf=require('keyOf');
var invariant=require('invariant');
var hasOwnProperty=({}).hasOwnProperty;

function shallowCopy(x){
if(Array.isArray(x)){
return x.concat();}else 
if(x && typeof x === 'object'){
return assign(new x.constructor(),x);}else 
{
return x;}}



var COMMAND_PUSH=keyOf({$push:null});
var COMMAND_UNSHIFT=keyOf({$unshift:null});
var COMMAND_SPLICE=keyOf({$splice:null});
var COMMAND_SET=keyOf({$set:null});
var COMMAND_MERGE=keyOf({$merge:null});
var COMMAND_APPLY=keyOf({$apply:null});

var ALL_COMMANDS_LIST=[
COMMAND_PUSH,
COMMAND_UNSHIFT,
COMMAND_SPLICE,
COMMAND_SET,
COMMAND_MERGE,
COMMAND_APPLY];


var ALL_COMMANDS_SET={};

ALL_COMMANDS_LIST.forEach(function(command){
ALL_COMMANDS_SET[command] = true;});


function invariantArrayCase(value,spec,command){
invariant(
Array.isArray(value),
'update(): expected target of %s to be an array; got %s.',
command,
value);

var specValue=spec[command];
invariant(
Array.isArray(specValue),
'update(): expected spec of %s to be an array; got %s. ' + 
'Did you forget to wrap your parameter in an array?',
command,
specValue);}



function update(value,spec){
invariant(
typeof spec === 'object',
'update(): You provided a key path to update() that did not contain one ' + 
'of %s. Did you forget to include {%s: ...}?',
ALL_COMMANDS_LIST.join(', '),
COMMAND_SET);


if(hasOwnProperty.call(spec,COMMAND_SET)){
invariant(
Object.keys(spec).length === 1,
'Cannot have more than one key in an object with %s',
COMMAND_SET);


return spec[COMMAND_SET];}


var nextValue=shallowCopy(value);

if(hasOwnProperty.call(spec,COMMAND_MERGE)){
var mergeObj=spec[COMMAND_MERGE];
invariant(
mergeObj && typeof mergeObj === 'object',
'update(): %s expects a spec of type \'object\'; got %s',
COMMAND_MERGE,
mergeObj);

invariant(
nextValue && typeof nextValue === 'object',
'update(): %s expects a target of type \'object\'; got %s',
COMMAND_MERGE,
nextValue);

assign(nextValue,spec[COMMAND_MERGE]);}


if(hasOwnProperty.call(spec,COMMAND_PUSH)){
invariantArrayCase(value,spec,COMMAND_PUSH);
spec[COMMAND_PUSH].forEach(function(item){
nextValue.push(item);});}



if(hasOwnProperty.call(spec,COMMAND_UNSHIFT)){
invariantArrayCase(value,spec,COMMAND_UNSHIFT);
spec[COMMAND_UNSHIFT].forEach(function(item){
nextValue.unshift(item);});}



if(hasOwnProperty.call(spec,COMMAND_SPLICE)){
invariant(
Array.isArray(value),
'Expected %s target to be an array; got %s',
COMMAND_SPLICE,
value);

invariant(
Array.isArray(spec[COMMAND_SPLICE]),
'update(): expected spec of %s to be an array of arrays; got %s. ' + 
'Did you forget to wrap your parameters in an array?',
COMMAND_SPLICE,
spec[COMMAND_SPLICE]);

spec[COMMAND_SPLICE].forEach(function(args){
invariant(
Array.isArray(args),
'update(): expected spec of %s to be an array of arrays; got %s. ' + 
'Did you forget to wrap your parameters in an array?',
COMMAND_SPLICE,
spec[COMMAND_SPLICE]);

nextValue.splice.apply(nextValue,args);});}



if(hasOwnProperty.call(spec,COMMAND_APPLY)){
invariant(
typeof spec[COMMAND_APPLY] === 'function',
'update(): expected spec of %s to be a function; got %s.',
COMMAND_APPLY,
spec[COMMAND_APPLY]);

nextValue = spec[COMMAND_APPLY](nextValue);}


for(var k in spec) {
if(!(ALL_COMMANDS_SET.hasOwnProperty(k) && ALL_COMMANDS_SET[k])){
nextValue[k] = update(value[k],spec[k]);}}



return nextValue;}


module.exports = update;
});
__d('ReactTestUtils',["EventConstants","EventPluginHub","EventPropagators","React","ReactElement","ReactEmptyComponent","ReactBrowserEventEmitter","ReactCompositeComponent","ReactInstanceHandles","ReactInstanceMap","ReactMount","ReactUpdates","SyntheticEvent","Object.assign","emptyObject","findDOMNode","invariant"],function(global, require, module, exports) {  'use strict';












var EventConstants=require('EventConstants');
var EventPluginHub=require('EventPluginHub');
var EventPropagators=require('EventPropagators');
var React=require('React');
var ReactElement=require('ReactElement');
var ReactEmptyComponent=require('ReactEmptyComponent');
var ReactBrowserEventEmitter=require('ReactBrowserEventEmitter');
var ReactCompositeComponent=require('ReactCompositeComponent');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactMount=require('ReactMount');
var ReactUpdates=require('ReactUpdates');
var SyntheticEvent=require('SyntheticEvent');

var assign=require('Object.assign');
var emptyObject=require('emptyObject');
var findDOMNode=require('findDOMNode');
var invariant=require('invariant');

var topLevelTypes=EventConstants.topLevelTypes;

function Event(suffix){}





function findAllInRenderedTreeInternal(inst,test){
if(!inst || !inst.getPublicInstance){
return [];}

var publicInst=inst.getPublicInstance();
var ret=test(publicInst)?[publicInst]:[];
if(ReactTestUtils.isDOMComponent(publicInst)){
var renderedChildren=inst._renderedChildren;
var key;
for(key in renderedChildren) {
if(!renderedChildren.hasOwnProperty(key)){
continue;}

ret = ret.concat(
findAllInRenderedTreeInternal(
renderedChildren[key],
test));}}else 



if(ReactTestUtils.isCompositeComponent(publicInst)){
ret = ret.concat(
findAllInRenderedTreeInternal(inst._renderedComponent,test));}


return ret;}







var ReactTestUtils={
renderIntoDocument:function(instance){
var div=document.createElement('div');





return React.render(instance,div);},


isElement:function(element){
return ReactElement.isValidElement(element);},


isElementOfType:function(inst,convenienceConstructor){
return (
ReactElement.isValidElement(inst) && 
inst.type === convenienceConstructor);},



isDOMComponent:function(inst){


return !!(inst && inst.nodeType === 1 && inst.tagName);},


isDOMComponentElement:function(inst){
return !!(inst && 
ReactElement.isValidElement(inst) && 
!!inst.tagName);},


isCompositeComponent:function(inst){
if(ReactTestUtils.isDOMComponent(inst)){


return false;}

return typeof inst.render === 'function' && 
typeof inst.setState === 'function';},


isCompositeComponentWithType:function(inst,type){
if(!ReactTestUtils.isCompositeComponent(inst)){
return false;}

var internalInstance=ReactInstanceMap.get(inst);
var constructor=internalInstance.
_currentElement.
type;

return constructor === type;},


isCompositeComponentElement:function(inst){
if(!ReactElement.isValidElement(inst)){
return false;}



var prototype=inst.type.prototype;
return (
typeof prototype.render === 'function' && 
typeof prototype.setState === 'function');},



isCompositeComponentElementWithType:function(inst,type){
var internalInstance=ReactInstanceMap.get(inst);
var constructor=internalInstance.
_currentElement.
type;

return !!(ReactTestUtils.isCompositeComponentElement(inst) && 
constructor === type);},


getRenderedChildOfCompositeComponent:function(inst){
if(!ReactTestUtils.isCompositeComponent(inst)){
return null;}

var internalInstance=ReactInstanceMap.get(inst);
return internalInstance._renderedComponent.getPublicInstance();},


findAllInRenderedTree:function(inst,test){
if(!inst){
return [];}

invariant(
ReactTestUtils.isCompositeComponent(inst),
'findAllInRenderedTree(...): instance must be a composite component');

return findAllInRenderedTreeInternal(ReactInstanceMap.get(inst),test);},







scryRenderedDOMComponentsWithClass:function(root,className){
return ReactTestUtils.findAllInRenderedTree(root,function(inst){
if(ReactTestUtils.isDOMComponent(inst)){
var instClassName=React.findDOMNode(inst).className;
return (
instClassName && 
('' + instClassName).split(/\s+/).indexOf(className) !== -1);}


return false;});},









findRenderedDOMComponentWithClass:function(root,className){
var all=
ReactTestUtils.scryRenderedDOMComponentsWithClass(root,className);
if(all.length !== 1){
throw new Error('Did not find exactly one match ' + 
'(found: ' + all.length + ') for class:' + className);}


return all[0];},








scryRenderedDOMComponentsWithTag:function(root,tagName){
return ReactTestUtils.findAllInRenderedTree(root,function(inst){
return ReactTestUtils.isDOMComponent(inst) && 
inst.tagName === tagName.toUpperCase();});},









findRenderedDOMComponentWithTag:function(root,tagName){
var all=ReactTestUtils.scryRenderedDOMComponentsWithTag(root,tagName);
if(all.length !== 1){
throw new Error('Did not find exactly one match for tag:' + tagName);}

return all[0];},







scryRenderedComponentsWithType:function(root,componentType){
return ReactTestUtils.findAllInRenderedTree(root,function(inst){
return ReactTestUtils.isCompositeComponentWithType(
inst,
componentType);});},










findRenderedComponentWithType:function(root,componentType){
var all=ReactTestUtils.scryRenderedComponentsWithType(
root,
componentType);

if(all.length !== 1){
throw new Error(
'Did not find exactly one match for componentType:' + componentType + 
' (found ' + all.length + ')');}


return all[0];},















mockComponent:function(module,mockTagName){
mockTagName = mockTagName || module.mockTagName || "div";

module.prototype.render.mockImplementation(function(){
return React.createElement(
mockTagName,
null,
this.props.children);});



return this;},









simulateNativeEventOnNode:function(topLevelType,node,fakeNativeEvent){
fakeNativeEvent.target = node;
ReactBrowserEventEmitter.ReactEventListener.dispatchEvent(
topLevelType,
fakeNativeEvent);},










simulateNativeEventOnDOMComponent:function(
topLevelType,
comp,
fakeNativeEvent){
ReactTestUtils.simulateNativeEventOnNode(
topLevelType,
findDOMNode(comp),
fakeNativeEvent);},



nativeTouchData:function(x,y){
return {
touches:[
{pageX:x,pageY:y}]};},




createRenderer:function(){
return new ReactShallowRenderer();},


Simulate:null,
SimulateNative:{}};





var ReactShallowRenderer=function(){
this._instance = null;};


ReactShallowRenderer.prototype.getRenderOutput = function(){
return (
this._instance && this._instance._renderedComponent && 
this._instance._renderedComponent._renderedOutput || 
null);};



var NoopInternalComponent=function(element){
this._renderedOutput = element;
this._currentElement = element === null || element === false?
ReactEmptyComponent.emptyElement:
element;};


NoopInternalComponent.prototype = {

mountComponent:function(){},


receiveComponent:function(element){
this._renderedOutput = element;
this._currentElement = element === null || element === false?
ReactEmptyComponent.emptyElement:
element;},


unmountComponent:function(){}};




var ShallowComponentWrapper=function(){};
assign(
ShallowComponentWrapper.prototype,
ReactCompositeComponent.Mixin,{
_instantiateReactComponent:function(element){
return new NoopInternalComponent(element);},

_replaceNodeWithMarkupByID:function(){},
_renderValidatedComponent:
ReactCompositeComponent.Mixin.
_renderValidatedComponentWithoutOwnerOrContext});



ReactShallowRenderer.prototype.render = function(element,context){
if(!context){
context = emptyObject;}

var transaction=ReactUpdates.ReactReconcileTransaction.getPooled();
this._render(element,transaction,context);
ReactUpdates.ReactReconcileTransaction.release(transaction);};


ReactShallowRenderer.prototype.unmount = function(){
if(this._instance){
this._instance.unmountComponent();}};



ReactShallowRenderer.prototype._render = function(element,transaction,context){
if(!this._instance){
var rootID=ReactInstanceHandles.createReactRootID();
var instance=new ShallowComponentWrapper(element.type);
instance.construct(element);

instance.mountComponent(rootID,transaction,context);

this._instance = instance;}else 
{
this._instance.receiveComponent(element,transaction,context);}};











function makeSimulator(eventType){
return function(domComponentOrNode,eventData){
var node;
if(ReactTestUtils.isDOMComponent(domComponentOrNode)){
node = findDOMNode(domComponentOrNode);}else 
if(domComponentOrNode.tagName){
node = domComponentOrNode;}


var dispatchConfig=
ReactBrowserEventEmitter.eventNameDispatchConfigs[eventType];

var fakeNativeEvent=new Event();
fakeNativeEvent.target = node;


var event=new SyntheticEvent(
dispatchConfig,
ReactMount.getID(node),
fakeNativeEvent,
node);

assign(event,eventData);

if(dispatchConfig.phasedRegistrationNames){
EventPropagators.accumulateTwoPhaseDispatches(event);}else 
{
EventPropagators.accumulateDirectDispatches(event);}


ReactUpdates.batchedUpdates(function(){
EventPluginHub.enqueueEvents(event);
EventPluginHub.processEventQueue();});};}




function buildSimulators(){
ReactTestUtils.Simulate = {};

var eventType;
for(eventType in ReactBrowserEventEmitter.eventNameDispatchConfigs) {




ReactTestUtils.Simulate[eventType] = makeSimulator(eventType);}}




var oldInjectEventPluginOrder=EventPluginHub.injection.injectEventPluginOrder;
EventPluginHub.injection.injectEventPluginOrder = function(){
oldInjectEventPluginOrder.apply(this,arguments);
buildSimulators();};

var oldInjectEventPlugins=EventPluginHub.injection.injectEventPluginsByName;
EventPluginHub.injection.injectEventPluginsByName = function(){
oldInjectEventPlugins.apply(this,arguments);
buildSimulators();};


buildSimulators();

















function makeNativeSimulator(eventType){
return function(domComponentOrNode,nativeEventData){
var fakeNativeEvent=new Event(eventType);
assign(fakeNativeEvent,nativeEventData);
if(ReactTestUtils.isDOMComponent(domComponentOrNode)){
ReactTestUtils.simulateNativeEventOnDOMComponent(
eventType,
domComponentOrNode,
fakeNativeEvent);}else 

if(!!domComponentOrNode.tagName){

ReactTestUtils.simulateNativeEventOnNode(
eventType,
domComponentOrNode,
fakeNativeEvent);}};}





var eventType;
for(eventType in topLevelTypes) {

var convenienceName=eventType.indexOf('top') === 0?
eventType.charAt(3).toLowerCase() + eventType.substr(4):eventType;




ReactTestUtils.SimulateNative[convenienceName] = 
makeNativeSimulator(eventType);}


module.exports = ReactTestUtils;
});
__d('findDOMNode',["ReactCurrentOwner","ReactInstanceMap","ReactMount","invariant","warning"],function(global, require, module, exports) {  'use strict';













var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactMount=require('ReactMount');

var invariant=require('invariant');
var warning=require('warning');







function findDOMNode(componentOrElement){
if(__DEV__){
var owner=ReactCurrentOwner.current;
if(owner !== null){
warning(
owner._warnedAboutRefsInRender,
'%s is accessing getDOMNode or findDOMNode inside its render(). ' + 
'render() should be a pure function of props and state. It should ' + 
'never access something that requires stale data from the previous ' + 
'render, such as refs. Move this logic to componentDidMount and ' + 
'componentDidUpdate instead.',
owner.getName() || 'A component');

owner._warnedAboutRefsInRender = true;}}


if(componentOrElement == null){
return null;}

if(componentOrElement.nodeType === 1){
return componentOrElement;}

if(ReactInstanceMap.has(componentOrElement)){
return ReactMount.getNodeFromInstance(componentOrElement);}

invariant(
componentOrElement.render == null || 
typeof componentOrElement.render !== 'function',
'Component (with keys: %s) contains `render` method ' + 
'but is not mounted in the DOM',
Object.keys(componentOrElement));

invariant(
false,
'Element appears to be neither ReactComponent nor DOMNode (keys: %s)',
Object.keys(componentOrElement));}



module.exports = findDOMNode;
});
__d('plainX/components/PlainNavigator.js',["image!logo","image!menuicon","image!backicon","image!msgicon","react-native/Libraries/react-native/react-native.js","plainX/components/screens/Routes.js","rx/dist/rx.all.js","react-native-side-menu/index.js","plainX/components/PlainSideMenu.js","plainX/components/NavigationTextButton.js","react-native-rest-kit/index.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

View=









React.View;var Navigator=React.Navigator;var Text=React.Text;var TouchableOpacity=React.TouchableOpacity;var ScrollView=React.ScrollView;var StatusBarIOS=React.StatusBarIOS;var Platform=React.Platform;var StyleSheet=React.StyleSheet;var Image=React.Image;var Animated=React.Animated;

var Routes=require('plainX/components/screens/Routes.js');
var Rx=require('rx/dist/rx.all.js');
var SideMenu=require('react-native-side-menu/index.js');

var PlainSideMenu=require('plainX/components/PlainSideMenu.js');
var NavigationTextButton=require('plainX/components/NavigationTextButton.js');
var RestKit=require('react-native-rest-kit/index.js');

var routesMap;

var PlainNavigator=React.createClass({displayName:'PlainNavigator',
getDefaultProps:function(){
return {
sideMenuSubject:new Rx.Subject()};},


getInitialState:function(){
return {
user:null,
messageBounceValue:new Animated.Value(0),
shouldBounceCount:true,
isSideMenuOpen:false};},


shouldComponentUpdate:function(nextProps,nextState){
if(nextProps["uri"] != this.props.uri){
this.shouldRerender = true;}

if(nextProps["messageCount"] > 0 && nextProps["messageCount"] != this.props.messageCount)
this.setState({shouldBounceCount:true});
return true;},

componentDidUpdate:function(){
if(this.state.shouldBounceCount)
this.bounceMessage();},


getInitialRouteStack:function(uri){
var initialRoutesStack=[];
var routes=new Routes(uri);
var length=routes.getDepth();
for(var i=0;i < length;i++) {
initialRoutesStack.push({uri:routes.getUri()});
routes = routes.getPreviousRoutes();}

return initialRoutesStack.reverse();},

setNetworkActivityIndicator:function(value){
if(Platform.OS === 'ios')
StatusBarIOS.setNetworkActivityIndicatorVisible(value);},

navBarRouter:{
Title:function(route,navigator,index,navState){
var routes=new Routes(route.uri);
var screenNameParam=routes.getScreenNameInParamsIfAny();

return routes.getCurrentRoute().title?
React.createElement(Text,{style:[styles.navBarText,styles.navBarTitleText]},screenNameParam?screenNameParam:routes.getCurrentRoute().title):

React.createElement(Image,{style:styles.navBarTitleImage,source:require('image!logo')});},

LeftButton:function(route,navigator,index,navState){
var routes=new Routes(route.uri);
if(routes.getDepth() == 1){
var button=
React.createElement(Image,{style:styles.navBarIcon,
source:require("image!menuicon")});
return (
React.createElement(TouchableOpacity,{
onPress:function(){return navigator.props.leftNavBarButtonSubject.onNext(routes);},
style:styles.navBarLeftButton},
button));}else 


{
if(routes.hasBack()){
return (
React.createElement(TouchableOpacity,{
style:styles.navBarLeftButton,
onPress:function(){return navigator.pop();}},
React.createElement(Image,{style:styles.navBarIcon,
source:require('image!backicon')})));}}



return null;},

RightButton:function(route,navigator,index,navState){
var routes=new Routes(route.uri);
var routeName=routes.getCurrentRoute().name;
var messageIconScreenBlackList=["conversations","conversationRoom","login","signup"];
var shouldNotShowMsgIcon=messageIconScreenBlackList.indexOf(routeName) != -1;
console.log(navigator.props.messageCount);
return shouldNotShowMsgIcon?null:
React.createElement(TouchableOpacity,{
style:styles.navBarRightButton,
onPress:function(){return navigator.props.rightNavBarButtonSubject.onNext(routes);}},
React.createElement(Image,{style:[styles.navBarIcon,styles.messageIcon],
source:require("image!msgicon")}),
navigator.props.messageCount > 0?
React.createElement(Animated.View,{style:[styles.messageCountContainer,{transform:[{scale:navigator.props.messageBounceValue}]}]},
React.createElement(Text,{style:styles.messageCount},
navigator.props.messageCount)):

null);}},



updateInfo:function(token){
var request={
method:'get',
headers:{'X-Session':token}};


if(!this.state.user){
console.log("UPDATE USER INFO");
var url=this.props.API_DOMAIN + "user/me";
RestKit.send(url,request,this.updateUserInfo);}

this.props.updateMessageCount(token);},

updateUserInfo:function(error,json){
if(error){
console.log("Error loading UserInfo");
console.log(error);
return;}

if(json){
console.log("Update User info " + json);
this.setState({user:json});}},


bounceMessage:function(){
this.state.messageBounceValue.setValue(1.1);
Animated.spring(
this.state.messageBounceValue,
{
toValue:0.8,
friction:0.5}).

start();
this.setState({shouldBounceCount:false});},

setLogoutState:function(){
this.setState({user:null});},

renderScene:function(route,navigator){
var routes=new Routes(route.uri);
if(this.shouldRerender && this.props.uri != route.uri){
this.shouldRerender = false;
var newRouteStack=this.getInitialRouteStack(this.props.uri);
navigator.immediatelyResetRouteStack(newRouteStack);
return;}

if(routes != null){
if(!navigator.props.sideMenuSubject.hasObservers()){
var changeState=
navigator.props.sideMenuSubject.subscribe(function(event){
switch(event.type){
case "pushScreen":
navigator.push({uri:routes.addRoute(event.uri)});
break;
case "logout":
navigator.props.setLogoutState();
break;}});}




var Screen=routes.getCurrentRoute().getComponent();
return (
React.createElement(View,{
style:styles.scene,keyboardShouldPersistTaps:false},
React.createElement(Screen,{

enablePagination:routes.getCurrentRoute().enablePagination,
leftNavBarButtonSubject:this.leftNavBarButtonSubject,
rightNavBarButtonSubject:this.rightNavBarButtonSubject,
routes:routes,
pushScreen:navigator.push,
popScreen:navigator.pop,
replaceScreen:navigator.replace,
immediatelyResetRouteStack:navigator.immediatelyResetRouteStack,
api_domain:this.props.API_DOMAIN,
updateInfo:this.updateInfo,
setNetworkActivityIndicator:this.setNetworkActivityIndicator,
params:routes.getCurrentRouteParams()})));}



return null;},

leftNavBarButtonSubject:new Rx.Subject(),
rightNavBarButtonSubject:new Rx.Subject(),
render:function(){var _this=this;
return (
React.createElement(SideMenu,{
onChange:function(isOpen){return _this.setState({isSideMenuOpen:isOpen});},
menu:
React.createElement(PlainSideMenu,{
isOpen:this.state.isSideMenuOpen,
sideMenuSubject:this.props.sideMenuSubject,
user:this.state.user}),
touchToClose:true},
React.createElement(Navigator,{
setLogoutState:this.setLogoutState,
sideMenuSubject:this.props.sideMenuSubject,
leftNavBarButtonSubject:this.leftNavBarButtonSubject,
rightNavBarButtonSubject:this.rightNavBarButtonSubject,
initialRouteStack:this.getInitialRouteStack(this.props.uri),
renderScene:this.renderScene,
messageCount:this.props.messageCount,
messageBounceValue:this.state.messageBounceValue,
style:styles.appContainer,
navigationBar:
React.createElement(Navigator.NavigationBar,{
style:styles.navBar,
routeMapper:this.navBarRouter})})));}});







var styles=StyleSheet.create({
navBar:{
backgroundColor:'white'},

navBarText:{
fontSize:16,
marginVertical:10},

navBarTitleText:{},


navBarTitleImage:{
width:59,
height:25,
marginVertical:10,
padding:5},

navBarIcon:{
width:20,
height:20,
resizeMode:'stretch',
alignSelf:'center'},

navBarLeftButton:{
marginLeft:10,
marginTop:12,
padding:3},

navBarRightButton:{
marginRight:10,
marginTop:12,
padding:3},

navBarButtonText:{
color:'#33cc66'},

scene:{
flex:1,
paddingTop:20,
backgroundColor:'#EAEAEA'},

messageIcon:{
position:'absolute',
top:-2,
left:-20,
width:30,height:30},

messageCountContainer:{
backgroundColor:'#33cc66',
width:20,height:20,
borderRadius:10,
overflow:'hidden',
justifyContent:'center',
flexDirection:'row',
position:'absolute',
top:-2,
left:-33},

messageCount:{
color:'white',
textAlign:'center',
alignSelf:'center'}});



module.exports = PlainNavigator;
});
__d('plainX/components/screens/Routes.js',["plainX/components/screens/GeneralCardsScreen.js","plainX/components/screens/MainScreen.js","plainX/components/screens/OfferListScreen.js","plainX/components/screens/MakeOfferScreen.js","plainX/components/screens/OfferConfirmationScreen.js","plainX/components/screens/OfferDetailScreen.js","plainX/components/screens/ConversationsScreen.js","plainX/components/screens/ConversationRoomScreen.js","plainX/components/screens/OfferSubmittedScreen.js","plainX/components/screens/MyOffersScreen.js","plainX/components/screens/LoginScreen.js","plainX/components/screens/SignUpScreen.js"],function(global, require, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if("value" in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var 

Routes=(function(){_createClass(Routes,[{key:"getRegisteredRoutes",value:
function getRegisteredRoutes(){
return [
{
name:"generalCards",
id:0,
getComponent:function(){return require("plainX/components/screens/GeneralCardsScreen.js");},
title:"General",
enablePagination:true},

{
name:"main",
id:1,
getComponent:function(){return require("plainX/components/screens/MainScreen.js");},
enablePagination:false},

{
name:"offerlist",
id:2,
getComponent:function(){return require("plainX/components/screens/OfferListScreen.js");},
title:"See all offers",
enablePagination:true},

{
name:"makeOffer",
id:3,
getComponent:function(){return require("plainX/components/screens/MakeOfferScreen.js");},
title:"Make an offer",
enablePagination:false},

{
name:"login",
id:4,
getComponent:function(){return require("plainX/components/screens/LoginScreen.js");},
title:"Login",
enablePagination:false},

{
name:"signup",
id:5,
getComponent:function(){return require("plainX/components/screens/SignUpScreen.js");},
title:"Sign Up",
enablePagination:false},

{
name:"offerConfirm",
id:6,
getComponent:function(){return require("plainX/components/screens/OfferConfirmationScreen.js");},
title:"Confirm your offer",
enablePagination:false},

{
name:"offerDetail",
id:7,
getComponent:function(){return require("plainX/components/screens/OfferDetailScreen.js");},
title:"Offer Detail",
enablePagination:false},

{
name:"conversations",
id:8,
getComponent:function(){return require("plainX/components/screens/ConversationsScreen.js");},
title:"Conversations",
enablePagination:true},

{
name:"conversationRoom",
id:9,
getComponent:function(){return require("plainX/components/screens/ConversationRoomScreen.js");},
title:"Room",
enablePagination:true},

{
name:"offerSubmitted",
id:10,
getComponent:function(){return require("plainX/components/screens/OfferSubmittedScreen.js");},
title:"",
enablePagination:false},

{
name:"myOffers",
id:11,
getComponent:function(){return require("plainX/components/screens/MyOffersScreen.js");},
title:"My Offers",
enablePagination:false}];}}]);




function Routes(uri){var _this=this;_classCallCheck(this,Routes);
var routeNames=uri.split('/');
if(routeNames.length > 0){
for(var i=0;i < routeNames.length;i++) {
if(!this.isRegisteredName(routeNames[i].split('?')[0])){
return null;}

if(routeNames[i].split('?').length > 1){
this.params = this.params || {};
this.params[i] = routeNames[i].split('?')[1];}}


this.routes = routeNames.map(function(name){return _this.getRegisteredRouteWithName(name);});}}_createClass(Routes,[{key:"isRegisteredName",value:



function isRegisteredName(name){
name = name.split('?')[0];
var registeredRoutes=this.getRegisteredRoutes();
for(var i=0,numRoutes=registeredRoutes.length;i < numRoutes;i++) {
if(registeredRoutes[i].name == name)return true;}

return false;}},{key:"getRegisteredRouteWithName",value:


function getRegisteredRouteWithName(name){
name = name.split('?')[0];
if(this.isRegisteredName(name)){
var registeredRoutes=this.getRegisteredRoutes();
return registeredRoutes[registeredRoutes.map(function(route){return route.name;}).indexOf(name)];}else 

{
return null;}}},{key:"getDepth",value:



function getDepth(){
return this.routes.length;}},{key:"getCurrentRoute",value:


function getCurrentRoute(){
return this.routes[this.routes.length - 1];}},{key:"getCurrentRouteParams",value:


function getCurrentRouteParams(){
return this.params?this.params[this.routes.length - 1] || "":"";}},{key:"getScreenNameInParamsIfAny",value:


function getScreenNameInParamsIfAny(){
var queryString=this.getCurrentRouteParams();
var params={};
var paramStrings=queryString.split("&");
for(var i=0;i < paramStrings.length;i++) {
var split=paramStrings[i].split("=");
if(split[0] == "Title")
return split[1];}

return null;}},{key:"addRoute",value:


function addRoute(name){
if(this.isRegisteredName(name)){
this.routes.push(this.getRegisteredRouteWithName(name));
if(name.split('?').length > 1){
this.params = this.params || {};
this.params[this.routes.length - 1] = name.split('?')[1];}}


return this.getUri();}},{key:"getUri",value:


function getUri(){
var uri=this.routes[0].name;
for(var i=1;i < this.routes.length;i++) {
uri += "/" + this.routes[i].name;
if(this.params && this.params[i])
uri += "?" + this.params[i];}

return uri;}},{key:"getPreviousRoutes",value:


function getPreviousRoutes(){
var previous=new Routes("");
if(this.params && this.params[this.routes.length - 1])
delete this.params[this.routes.length - 1];
previous.routes = this.routes.slice(0,this.routes.length - 1);
return previous;}},{key:"getRouteStack",value:


function getRouteStack(){
var stack=[];
var r=new Routes(this.getUri());
for(var i=0;i < this.getDepth();i++) {
stack.push(r.getUri());
r = r.getPreviousRoutes();}

return stack;}},{key:"hasBack",value:



function hasBack(){
return this.routes.length != 1;}}]);return Routes;})();



module.exports = Routes;
});
__d('plainX/components/screens/GeneralCardsScreen.js',["react-native/Libraries/react-native/react-native.js","plainX/components/PlainListView.js","plainX/components/screens/componentMixins/ScreenMixin.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 


View=


React.View;var StyleSheet=React.StyleSheet;var Text=React.Text;

var PlainListView=require('plainX/components/PlainListView.js');
var ScreenMixin=require('plainX/components/screens/componentMixins/ScreenMixin.js');

var GeneralCardsScreen=React.createClass({
mixins:[ScreenMixin],
displayName:"GeneralCardsScreen",
getInitialState:function(){
return {
data:null};},


renderScreen:function(){
var cardObservers={};

var listView=React.createElement(PlainListView,{
cardObservers:cardObservers,
cards:this.state.data["Cards"]});


return (
React.createElement(View,{style:this.screenCommonStyle.container},
listView));}});





module.exports = GeneralCardsScreen;
});
__d('plainX/components/PlainListView.js',["react-native/Libraries/react-native/react-native.js","rx/dist/rx.all.js","plainX/components/cards/CardRouter.js","plainX/components/Divider.js","react-native-invertible-scroll-view/InvertibleScrollView.js"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};

var React=require('react-native/Libraries/react-native/react-native.js');
var Rx=require('rx/dist/rx.all.js');

var CardRouter=require('plainX/components/cards/CardRouter.js');
var Divider=require('plainX/components/Divider.js');var 


ListView=




React.ListView;var StyleSheet=React.StyleSheet;var View=React.View;var PixelRatio=React.PixelRatio;var Image=React.Image;

var PlainListView=React.createClass({
displayName:'PlainListView',
propType:{
cards:React.PropTypes.array,
cardObservers:React.PropTypes.array,
loadMore:React.PropTypes.func},

nameOfCardsTobeObserved:[],
needsTobeObserved:function(cardName){
if(this.nameOfCardsTobeObserved.length == 0 && this.props.cardObservers && 
this.props.cardObservers.length != 0)
this.nameOfCardsTobeObserved = Object.keys(this.props.cardObservers);

for(var i=0,numCards=this.nameOfCardsTobeObserved.length;i < numCards;i++) {
if(this.nameOfCardsTobeObserved[i] == cardName)return true;}

return false;},

getMarginStyle:function(merged){
switch(merged){
case "":
return styles.singleCard;
case "Top":
return styles.topCard;
case "Mid":
return styles.midCard;
case "Bottom":
return styles.bottomCard;}},


renderCards:function(card){
var observer;

if(this.needsTobeObserved(card["Name"])){
observer = this.props.cardObservers[card["Name"]];}


var CardComponent=CardRouter.getComponent(card["Name"]);
if(CardComponent == null)
return null;

var isConversationCard=CardRouter.isConversationCard(card["Name"]);

return (
React.createElement(View,{style:isConversationCard?null:[styles.cardContainer,this.getMarginStyle(card["Merged"])]},
React.createElement(CardComponent,{
cardCommonStyles:cardCommonStyles,
id:card["UUID"],
key:card["UUID"],
observer:observer,
data:card["Data"]}),
card["Merged"] == "Top" || card["Merged"] == "Mid"?
React.createElement(Divider,{margin:styles.mergedCardDivider}):null));},



render:function(){
var listView;

if(this.props.invertList){
var InvertibleScrollView=require('react-native-invertible-scroll-view/InvertibleScrollView.js');

listView = React.createElement(ListView,{
style:this.props.hasBackgroundColor?styles.background:null,
renderScrollComponent:function(props){return React.createElement(InvertibleScrollView,_extends({},props,{inverted:true}));},
dataSource:new ListView.DataSource({rowHasChanged:function(r1,r2){return r1 !== r2;}}).cloneWithRows(this.props.cards.slice().reverse()),
renderRow:this.renderCards,
onEndReached:this.props.onEndReached});}else 


{
listView = React.createElement(ListView,{
style:this.props.hasBackgroundColor?styles.background:null,
dataSource:new ListView.DataSource({rowHasChanged:function(r1,r2){return r1 !== r2;}}).cloneWithRows(this.props.cards),
renderRow:this.renderCards,
onEndReached:this.props.onEndReached});}



return (
React.createElement(View,{style:styles.listContainer},
listView));}});






var styles=StyleSheet.create({
background:{
backgroundColor:'white'},

singleCard:{
marginTop:2.5,
marginBottom:2.5,
borderRadius:2,
padding:10},

midCard:{
paddingTop:10,
borderWidth:0,
borderColor:'transparent'},

topCard:{
paddingTop:10,
borderTopLeftRadius:2,
borderTopRightRadius:2,
marginTop:2.5,
borderBottomColor:'transparent'},

bottomCard:{
paddingTop:10,
paddingBottom:10,
marginBottom:2.5,
borderTopColor:'transparent',
borderBottomLeftRadius:2,
borderBottomRightRadius:2},

cardContainer:{
marginLeft:10,
marginRight:10,
backgroundColor:'white',
shadowRadius:0.3,
shadowColor:'grey',
shadowOffset:{width:0.5,height:0.5},
shadowOpacity:0.8},

listContainer:{
flex:1},

mergedCardDivider:{
marginLeft:16,
marginRight:16,
marginTop:10}});



var cardCommonStyles=StyleSheet.create({
titles:{
color:'#333333',
fontSize:40 / 2,
textAlign:'center'},


description:{
color:'#333333',
fontSize:36 / 2,
textAlign:'center'},

headings:{
color:'#333333',
fontSize:36 / 2,
fontWeight:'bold',
textAlign:'center'},


currency:{
color:'#333333',
fontSize:40 / 2,
marginRight:10},


finePrint:{
color:'#333333',
fontSize:30 / 2},

inputAmountText:{
fontSize:60 / 2,
textAlign:'center',
color:'#33cc66'},


urgentText:{
fontSize:30 / 2,
color:'#006633'},


triangleIconStyle:{
width:11,
height:5.5,
resizeMode:'stretch',
alignSelf:'center'},

offerTitle:{
fontSize:15,
textAlign:'center'},

offerOptions:{
fontSize:18,
fontWeight:'bold',
color:"#333"}});



module.exports = PlainListView;
});
__d('rx/dist/rx.all.js',[],function(global, require, module, exports) {  ;

(function(undefined){

var objectTypes={
'function':true,
'object':true};


function checkGlobal(value){
return value && value.Object === Object?value:null;}


var freeExports=objectTypes[typeof exports] && exports && !exports.nodeType?exports:null;
var freeModule=objectTypes[typeof module] && module && !module.nodeType?module:null;
var freeGlobal=checkGlobal(freeExports && freeModule && typeof global === 'object' && global);
var freeSelf=checkGlobal(objectTypes[typeof self] && self);
var freeWindow=checkGlobal(objectTypes[typeof window] && window);
var moduleExports=freeModule && freeModule.exports === freeExports?freeExports:null;
var thisGlobal=checkGlobal(objectTypes[typeof this] && this);
var root=freeGlobal || freeWindow !== (thisGlobal && thisGlobal.window) && freeWindow || freeSelf || thisGlobal || Function('return this')();

var Rx={
internals:{},
config:{
Promise:root.Promise},

helpers:{}};



var noop=Rx.helpers.noop = function(){},
identity=Rx.helpers.identity = function(x){return x;},
defaultNow=Rx.helpers.defaultNow = Date.now,
defaultComparer=Rx.helpers.defaultComparer = function(x,y){return isEqual(x,y);},
defaultSubComparer=Rx.helpers.defaultSubComparer = function(x,y){return x > y?1:x < y?-1:0;},
defaultKeySerializer=Rx.helpers.defaultKeySerializer = function(x){return x.toString();},
defaultError=Rx.helpers.defaultError = function(err){throw err;},
isPromise=Rx.helpers.isPromise = function(p){return !!p && typeof p.subscribe !== 'function' && typeof p.then === 'function';},
isFunction=Rx.helpers.isFunction = (function(){

var isFn=function(value){
return typeof value == 'function' || false;};



if(isFn(/x/)){
isFn = function(value){
return typeof value == 'function' && toString.call(value) == '[object Function]';};}



return isFn;})();


function cloneArray(arr){for(var a=[],i=0,len=arr.length;i < len;i++) {a.push(arr[i]);}return a;}

var errorObj={e:{}};

function tryCatcherGen(tryCatchTarget){
return function tryCatcher(){
try{
return tryCatchTarget.apply(this,arguments);}
catch(e) {
errorObj.e = e;
return errorObj;}};}




var tryCatch=Rx.internals.tryCatch = function tryCatch(fn){
if(!isFunction(fn)){throw new TypeError('fn must be a function');}
return tryCatcherGen(fn);};


function thrower(e){
throw e;}


Rx.config.longStackSupport = false;
var hasStacks=false,stacks=tryCatch(function(){throw new Error();})();
hasStacks = !!stacks.e && !!stacks.e.stack;


var rStartingLine=captureLine(),rFileName;

var STACK_JUMP_SEPARATOR='From previous event:';

function makeStackTraceLong(error,observable){


if(hasStacks && 
observable.stack && 
typeof error === 'object' && 
error !== null && 
error.stack && 
error.stack.indexOf(STACK_JUMP_SEPARATOR) === -1)
{
var stacks=[];
for(var o=observable;!!o;o = o.source) {
if(o.stack){
stacks.unshift(o.stack);}}


stacks.unshift(error.stack);

var concatedStacks=stacks.join('\n' + STACK_JUMP_SEPARATOR + '\n');
error.stack = filterStackString(concatedStacks);}}



function filterStackString(stackString){
var lines=stackString.split('\n'),desiredLines=[];
for(var i=0,len=lines.length;i < len;i++) {
var line=lines[i];

if(!isInternalFrame(line) && !isNodeFrame(line) && line){
desiredLines.push(line);}}


return desiredLines.join('\n');}


function isInternalFrame(stackLine){
var fileNameAndLineNumber=getFileNameAndLineNumber(stackLine);
if(!fileNameAndLineNumber){
return false;}

var fileName=fileNameAndLineNumber[0],lineNumber=fileNameAndLineNumber[1];

return fileName === rFileName && 
lineNumber >= rStartingLine && 
lineNumber <= rEndingLine;}


function isNodeFrame(stackLine){
return stackLine.indexOf('(module.js:') !== -1 || 
stackLine.indexOf('(node.js:') !== -1;}


function captureLine(){
if(!hasStacks){return;}

try{
throw new Error();}
catch(e) {
var lines=e.stack.split('\n');
var firstLine=lines[0].indexOf('@') > 0?lines[1]:lines[2];
var fileNameAndLineNumber=getFileNameAndLineNumber(firstLine);
if(!fileNameAndLineNumber){return;}

rFileName = fileNameAndLineNumber[0];
return fileNameAndLineNumber[1];}}



function getFileNameAndLineNumber(stackLine){

var attempt1=/at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
if(attempt1){return [attempt1[1],Number(attempt1[2])];}


var attempt2=/at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
if(attempt2){return [attempt2[1],Number(attempt2[2])];}


var attempt3=/.*@(.+):(\d+)$/.exec(stackLine);
if(attempt3){return [attempt3[1],Number(attempt3[2])];}}


var EmptyError=Rx.EmptyError = function(){
this.message = 'Sequence contains no elements.';
Error.call(this);};

EmptyError.prototype = Object.create(Error.prototype);
EmptyError.prototype.name = 'EmptyError';

var ObjectDisposedError=Rx.ObjectDisposedError = function(){
this.message = 'Object has been disposed';
Error.call(this);};

ObjectDisposedError.prototype = Object.create(Error.prototype);
ObjectDisposedError.prototype.name = 'ObjectDisposedError';

var ArgumentOutOfRangeError=Rx.ArgumentOutOfRangeError = function(){
this.message = 'Argument out of range';
Error.call(this);};

ArgumentOutOfRangeError.prototype = Object.create(Error.prototype);
ArgumentOutOfRangeError.prototype.name = 'ArgumentOutOfRangeError';

var NotSupportedError=Rx.NotSupportedError = function(message){
this.message = message || 'This operation is not supported';
Error.call(this);};

NotSupportedError.prototype = Object.create(Error.prototype);
NotSupportedError.prototype.name = 'NotSupportedError';

var NotImplementedError=Rx.NotImplementedError = function(message){
this.message = message || 'This operation is not implemented';
Error.call(this);};

NotImplementedError.prototype = Object.create(Error.prototype);
NotImplementedError.prototype.name = 'NotImplementedError';

var notImplemented=Rx.helpers.notImplemented = function(){
throw new NotImplementedError();};


var notSupported=Rx.helpers.notSupported = function(){
throw new NotSupportedError();};



var $iterator$=typeof Symbol === 'function' && Symbol.iterator || 
'_es6shim_iterator_';

if(root.Set && typeof new root.Set()['@@iterator'] === 'function'){
$iterator$ = '@@iterator';}


var doneEnumerator=Rx.doneEnumerator = {done:true,value:undefined};

var isIterable=Rx.helpers.isIterable = function(o){
return o && o[$iterator$] !== undefined;};


var isArrayLike=Rx.helpers.isArrayLike = function(o){
return o && o.length !== undefined;};


Rx.helpers.iterator = $iterator$;

var bindCallback=Rx.internals.bindCallback = function(func,thisArg,argCount){
if(typeof thisArg === 'undefined'){return func;}
switch(argCount){
case 0:
return function(){
return func.call(thisArg);};

case 1:
return function(arg){
return func.call(thisArg,arg);};

case 2:
return function(value,index){
return func.call(thisArg,value,index);};

case 3:
return function(value,index,collection){
return func.call(thisArg,value,index,collection);};}



return function(){
return func.apply(thisArg,arguments);};};




var dontEnums=['toString',
'toLocaleString',
'valueOf',
'hasOwnProperty',
'isPrototypeOf',
'propertyIsEnumerable',
'constructor'],
dontEnumsLength=dontEnums.length;


var argsClass='[object Arguments]',
arrayClass='[object Array]',
boolClass='[object Boolean]',
dateClass='[object Date]',
errorClass='[object Error]',
funcClass='[object Function]',
numberClass='[object Number]',
objectClass='[object Object]',
regexpClass='[object RegExp]',
stringClass='[object String]';

var toString=Object.prototype.toString,
hasOwnProperty=Object.prototype.hasOwnProperty,
supportsArgsClass=toString.call(arguments) == argsClass,
supportNodeClass,
errorProto=Error.prototype,
objectProto=Object.prototype,
stringProto=String.prototype,
propertyIsEnumerable=objectProto.propertyIsEnumerable;

try{
supportNodeClass = !(toString.call(document) == objectClass && !({'toString':0} + ''));}
catch(e) {
supportNodeClass = true;}


var nonEnumProps={};
nonEnumProps[arrayClass] = nonEnumProps[dateClass] = nonEnumProps[numberClass] = {'constructor':true,'toLocaleString':true,'toString':true,'valueOf':true};
nonEnumProps[boolClass] = nonEnumProps[stringClass] = {'constructor':true,'toString':true,'valueOf':true};
nonEnumProps[errorClass] = nonEnumProps[funcClass] = nonEnumProps[regexpClass] = {'constructor':true,'toString':true};
nonEnumProps[objectClass] = {'constructor':true};

var support={};
(function(){
var ctor=function(){this.x = 1;},
props=[];

ctor.prototype = {'valueOf':1,'y':1};
for(var key in new ctor()) {props.push(key);}
for(key in arguments) {}


support.enumErrorProps = propertyIsEnumerable.call(errorProto,'message') || propertyIsEnumerable.call(errorProto,'name');


support.enumPrototypes = propertyIsEnumerable.call(ctor,'prototype');


support.nonEnumArgs = key != 0;


support.nonEnumShadows = !/valueOf/.test(props);})(
1);

var isObject=Rx.internals.isObject = function(value){
var type=typeof value;
return value && (type == 'function' || type == 'object') || false;};


function keysIn(object){
var result=[];
if(!isObject(object)){
return result;}

if(support.nonEnumArgs && object.length && isArguments(object)){
object = slice.call(object);}

var skipProto=support.enumPrototypes && typeof object == 'function',
skipErrorProps=support.enumErrorProps && (object === errorProto || object instanceof Error);

for(var key in object) {
if(!(skipProto && key == 'prototype') && 
!(skipErrorProps && (key == 'message' || key == 'name'))){
result.push(key);}}



if(support.nonEnumShadows && object !== objectProto){
var ctor=object.constructor,
index=-1,
length=dontEnumsLength;

if(object === (ctor && ctor.prototype)){
var className=object === stringProto?stringClass:object === errorProto?errorClass:toString.call(object),
nonEnum=nonEnumProps[className];}

while(++index < length) {
key = dontEnums[index];
if(!(nonEnum && nonEnum[key]) && hasOwnProperty.call(object,key)){
result.push(key);}}}



return result;}


function internalFor(object,callback,keysFunc){
var index=-1,
props=keysFunc(object),
length=props.length;

while(++index < length) {
var key=props[index];
if(callback(object[key],key,object) === false){
break;}}


return object;}


function internalForIn(object,callback){
return internalFor(object,callback,keysIn);}


function isNode(value){


return typeof value.toString != 'function' && typeof (value + '') == 'string';}


var isArguments=function(value){
return value && typeof value == 'object'?toString.call(value) == argsClass:false;};



if(!supportsArgsClass){
isArguments = function(value){
return value && typeof value == 'object'?hasOwnProperty.call(value,'callee'):false;};}



var isEqual=Rx.internals.isEqual = function(x,y){
return deepEquals(x,y,[],[]);};





function deepEquals(a,b,stackA,stackB){

if(a === b){

return a !== 0 || 1 / a == 1 / b;}


var type=typeof a,
otherType=typeof b;


if(a === a && (a == null || b == null || 
type != 'function' && type != 'object' && otherType != 'function' && otherType != 'object')){
return false;}



var className=toString.call(a),
otherClass=toString.call(b);

if(className == argsClass){
className = objectClass;}

if(otherClass == argsClass){
otherClass = objectClass;}

if(className != otherClass){
return false;}

switch(className){
case boolClass:
case dateClass:


return +a == +b;

case numberClass:

return a != +a?
b != +b:

a == 0?1 / a == 1 / b:a == +b;

case regexpClass:
case stringClass:


return a == String(b);}

var isArr=className == arrayClass;
if(!isArr){


if(className != objectClass || !support.nodeClass && (isNode(a) || isNode(b))){
return false;}


var ctorA=!support.argsObject && isArguments(a)?Object:a.constructor,
ctorB=!support.argsObject && isArguments(b)?Object:b.constructor;


if(ctorA != ctorB && 
!(hasOwnProperty.call(a,'constructor') && hasOwnProperty.call(b,'constructor')) && 
!(isFunction(ctorA) && ctorA instanceof ctorA && isFunction(ctorB) && ctorB instanceof ctorB) && (
'constructor' in a && 'constructor' in b))
{
return false;}}





var initedStack=!stackA;
stackA || (stackA = []);
stackB || (stackB = []);

var length=stackA.length;
while(length--) {
if(stackA[length] == a){
return stackB[length] == b;}}


var size=0;
var result=true;


stackA.push(a);
stackB.push(b);


if(isArr){

length = a.length;
size = b.length;
result = size == length;

if(result){

while(size--) {
var index=length,
value=b[size];

if(!(result = deepEquals(a[size],value,stackA,stackB))){
break;}}}}else 




{


internalForIn(b,function(value,key,b){
if(hasOwnProperty.call(b,key)){

size++;

return result = hasOwnProperty.call(a,key) && deepEquals(a[key],value,stackA,stackB);}});



if(result){

internalForIn(a,function(value,key,a){
if(hasOwnProperty.call(a,key)){

return result = --size > -1;}});}}




stackA.pop();
stackB.pop();

return result;}


var hasProp=({}).hasOwnProperty,
slice=Array.prototype.slice;

var inherits=Rx.internals.inherits = function(child,parent){
function __(){this.constructor = child;}
__.prototype = parent.prototype;
child.prototype = new __();};


var addProperties=Rx.internals.addProperties = function(obj){
for(var sources=[],i=1,len=arguments.length;i < len;i++) {sources.push(arguments[i]);}
for(var idx=0,ln=sources.length;idx < ln;idx++) {
var source=sources[idx];
for(var prop in source) {
obj[prop] = source[prop];}}};





var addRef=Rx.internals.addRef = function(xs,r){
return new AnonymousObservable(function(observer){
return new BinaryDisposable(r.getDisposable(),xs.subscribe(observer));});};



function arrayInitialize(count,factory){
var a=new Array(count);
for(var i=0;i < count;i++) {
a[i] = factory();}

return a;}


function IndexedItem(id,value){
this.id = id;
this.value = value;}


IndexedItem.prototype.compareTo = function(other){
var c=this.value.compareTo(other.value);
c === 0 && (c = this.id - other.id);
return c;};


var PriorityQueue=Rx.internals.PriorityQueue = function(capacity){
this.items = new Array(capacity);
this.length = 0;};


var priorityProto=PriorityQueue.prototype;
priorityProto.isHigherPriority = function(left,right){
return this.items[left].compareTo(this.items[right]) < 0;};


priorityProto.percolate = function(index){
if(index >= this.length || index < 0){return;}
var parent=index - 1 >> 1;
if(parent < 0 || parent === index){return;}
if(this.isHigherPriority(index,parent)){
var temp=this.items[index];
this.items[index] = this.items[parent];
this.items[parent] = temp;
this.percolate(parent);}};



priorityProto.heapify = function(index){
+index || (index = 0);
if(index >= this.length || index < 0){return;}
var left=2 * index + 1,
right=2 * index + 2,
first=index;
if(left < this.length && this.isHigherPriority(left,first)){
first = left;}

if(right < this.length && this.isHigherPriority(right,first)){
first = right;}

if(first !== index){
var temp=this.items[index];
this.items[index] = this.items[first];
this.items[first] = temp;
this.heapify(first);}};



priorityProto.peek = function(){return this.items[0].value;};

priorityProto.removeAt = function(index){
this.items[index] = this.items[--this.length];
this.items[this.length] = undefined;
this.heapify();};


priorityProto.dequeue = function(){
var result=this.peek();
this.removeAt(0);
return result;};


priorityProto.enqueue = function(item){
var index=this.length++;
this.items[index] = new IndexedItem(PriorityQueue.count++,item);
this.percolate(index);};


priorityProto.remove = function(item){
for(var i=0;i < this.length;i++) {
if(this.items[i].value === item){
this.removeAt(i);
return true;}}


return false;};

PriorityQueue.count = 0;





var CompositeDisposable=Rx.CompositeDisposable = function(){
var args=[],i,len;
if(Array.isArray(arguments[0])){
args = arguments[0];
len = args.length;}else 
{
len = arguments.length;
args = new Array(len);
for(i = 0;i < len;i++) {args[i] = arguments[i];}}

this.disposables = args;
this.isDisposed = false;
this.length = args.length;};


var CompositeDisposablePrototype=CompositeDisposable.prototype;





CompositeDisposablePrototype.add = function(item){
if(this.isDisposed){
item.dispose();}else 
{
this.disposables.push(item);
this.length++;}};








CompositeDisposablePrototype.remove = function(item){
var shouldDispose=false;
if(!this.isDisposed){
var idx=this.disposables.indexOf(item);
if(idx !== -1){
shouldDispose = true;
this.disposables.splice(idx,1);
this.length--;
item.dispose();}}


return shouldDispose;};





CompositeDisposablePrototype.dispose = function(){
if(!this.isDisposed){
this.isDisposed = true;
var len=this.disposables.length,currentDisposables=new Array(len);
for(var i=0;i < len;i++) {currentDisposables[i] = this.disposables[i];}
this.disposables = [];
this.length = 0;

for(i = 0;i < len;i++) {
currentDisposables[i].dispose();}}};








var Disposable=Rx.Disposable = function(action){
this.isDisposed = false;
this.action = action || noop;};



Disposable.prototype.dispose = function(){
if(!this.isDisposed){
this.action();
this.isDisposed = true;}};








var disposableCreate=Disposable.create = function(action){return new Disposable(action);};




var disposableEmpty=Disposable.empty = {dispose:noop};






var isDisposable=Disposable.isDisposable = function(d){
return d && isFunction(d.dispose);};


var checkDisposed=Disposable.checkDisposed = function(disposable){
if(disposable.isDisposed){throw new ObjectDisposedError();}};


var disposableFixup=Disposable._fixup = function(result){
return isDisposable(result)?result:disposableEmpty;};



var SingleAssignmentDisposable=Rx.SingleAssignmentDisposable = function(){
this.isDisposed = false;
this.current = null;};

SingleAssignmentDisposable.prototype.getDisposable = function(){
return this.current;};

SingleAssignmentDisposable.prototype.setDisposable = function(value){
if(this.current){throw new Error('Disposable has already been assigned');}
var shouldDispose=this.isDisposed;
!shouldDispose && (this.current = value);
shouldDispose && value && value.dispose();};

SingleAssignmentDisposable.prototype.dispose = function(){
if(!this.isDisposed){
this.isDisposed = true;
var old=this.current;
this.current = null;
old && old.dispose();}};




var SerialDisposable=Rx.SerialDisposable = function(){
this.isDisposed = false;
this.current = null;};

SerialDisposable.prototype.getDisposable = function(){
return this.current;};

SerialDisposable.prototype.setDisposable = function(value){
var shouldDispose=this.isDisposed;
if(!shouldDispose){
var old=this.current;
this.current = value;}

old && old.dispose();
shouldDispose && value && value.dispose();};

SerialDisposable.prototype.dispose = function(){
if(!this.isDisposed){
this.isDisposed = true;
var old=this.current;
this.current = null;}

old && old.dispose();};


var BinaryDisposable=Rx.BinaryDisposable = function(first,second){
this._first = first;
this._second = second;
this.isDisposed = false;};


BinaryDisposable.prototype.dispose = function(){
if(!this.isDisposed){
this.isDisposed = true;
var old1=this._first;
this._first = null;
old1 && old1.dispose();
var old2=this._second;
this._second = null;
old2 && old2.dispose();}};



var NAryDisposable=Rx.NAryDisposable = function(disposables){
this._disposables = disposables;
this.isDisposed = false;};


NAryDisposable.prototype.dispose = function(){
if(!this.isDisposed){
this.isDisposed = true;
for(var i=0,len=this._disposables.length;i < len;i++) {
this._disposables[i].dispose();}

this._disposables.length = 0;}};






var RefCountDisposable=Rx.RefCountDisposable = (function(){

function InnerDisposable(disposable){
this.disposable = disposable;
this.disposable.count++;
this.isInnerDisposed = false;}


InnerDisposable.prototype.dispose = function(){
if(!this.disposable.isDisposed && !this.isInnerDisposed){
this.isInnerDisposed = true;
this.disposable.count--;
if(this.disposable.count === 0 && this.disposable.isPrimaryDisposed){
this.disposable.isDisposed = true;
this.disposable.underlyingDisposable.dispose();}}};









function RefCountDisposable(disposable){
this.underlyingDisposable = disposable;
this.isDisposed = false;
this.isPrimaryDisposed = false;
this.count = 0;}





RefCountDisposable.prototype.dispose = function(){
if(!this.isDisposed && !this.isPrimaryDisposed){
this.isPrimaryDisposed = true;
if(this.count === 0){
this.isDisposed = true;
this.underlyingDisposable.dispose();}}};








RefCountDisposable.prototype.getDisposable = function(){
return this.isDisposed?disposableEmpty:new InnerDisposable(this);};


return RefCountDisposable;})();


function ScheduledDisposable(scheduler,disposable){
this.scheduler = scheduler;
this.disposable = disposable;
this.isDisposed = false;}


function scheduleItem(s,self){
if(!self.isDisposed){
self.isDisposed = true;
self.disposable.dispose();}}



ScheduledDisposable.prototype.dispose = function(){
this.scheduler.schedule(this,scheduleItem);};


var ScheduledItem=Rx.internals.ScheduledItem = function(scheduler,state,action,dueTime,comparer){
this.scheduler = scheduler;
this.state = state;
this.action = action;
this.dueTime = dueTime;
this.comparer = comparer || defaultSubComparer;
this.disposable = new SingleAssignmentDisposable();};


ScheduledItem.prototype.invoke = function(){
this.disposable.setDisposable(this.invokeCore());};


ScheduledItem.prototype.compareTo = function(other){
return this.comparer(this.dueTime,other.dueTime);};


ScheduledItem.prototype.isCancelled = function(){
return this.disposable.isDisposed;};


ScheduledItem.prototype.invokeCore = function(){
return disposableFixup(this.action(this.scheduler,this.state));};



var Scheduler=Rx.Scheduler = (function(){

function Scheduler(){}


Scheduler.isScheduler = function(s){
return s instanceof Scheduler;};


var schedulerProto=Scheduler.prototype;







schedulerProto.schedule = function(state,action){
throw new NotImplementedError();};









schedulerProto.scheduleFuture = function(state,dueTime,action){
var dt=dueTime;
dt instanceof Date && (dt = dt - this.now());
dt = Scheduler.normalize(dt);

if(dt === 0){return this.schedule(state,action);}

return this._scheduleFuture(state,dt,action);};


schedulerProto._scheduleFuture = function(state,dueTime,action){
throw new NotImplementedError();};



Scheduler.now = defaultNow;


Scheduler.prototype.now = defaultNow;






Scheduler.normalize = function(timeSpan){
timeSpan < 0 && (timeSpan = 0);
return timeSpan;};


return Scheduler;})();


var normalizeTime=Scheduler.normalize,isScheduler=Scheduler.isScheduler;

(function(schedulerProto){

function invokeRecImmediate(scheduler,pair){
var state=pair[0],action=pair[1],group=new CompositeDisposable();
action(state,innerAction);
return group;

function innerAction(state2){
var isAdded=false,isDone=false;

var d=scheduler.schedule(state2,scheduleWork);
if(!isDone){
group.add(d);
isAdded = true;}


function scheduleWork(_,state3){
if(isAdded){
group.remove(d);}else 
{
isDone = true;}

action(state3,innerAction);
return disposableEmpty;}}}




function invokeRecDate(scheduler,pair){
var state=pair[0],action=pair[1],group=new CompositeDisposable();
action(state,innerAction);
return group;

function innerAction(state2,dueTime1){
var isAdded=false,isDone=false;

var d=scheduler.scheduleFuture(state2,dueTime1,scheduleWork);
if(!isDone){
group.add(d);
isAdded = true;}


function scheduleWork(_,state3){
if(isAdded){
group.remove(d);}else 
{
isDone = true;}

action(state3,innerAction);
return disposableEmpty;}}}










schedulerProto.scheduleRecursive = function(state,action){
return this.schedule([state,action],invokeRecImmediate);};









schedulerProto.scheduleRecursiveFuture = function(state,dueTime,action){
return this.scheduleFuture([state,action],dueTime,invokeRecDate);};})(


Scheduler.prototype);

(function(schedulerProto){








Scheduler.prototype.schedulePeriodic = function(state,period,action){
if(typeof root.setInterval === 'undefined'){throw new NotSupportedError();}
period = normalizeTime(period);
var s=state,id=root.setInterval(function(){s = action(s);},period);
return disposableCreate(function(){root.clearInterval(id);});};})(


Scheduler.prototype);

(function(schedulerProto){





schedulerProto.catchError = schedulerProto['catch'] = function(handler){
return new CatchScheduler(this,handler);};})(

Scheduler.prototype);

var SchedulePeriodicRecursive=Rx.internals.SchedulePeriodicRecursive = (function(){
function createTick(self){
return function tick(command,recurse){
recurse(0,self._period);
var state=tryCatch(self._action)(self._state);
if(state === errorObj){
self._cancel.dispose();
thrower(state.e);}

self._state = state;};}



function SchedulePeriodicRecursive(scheduler,state,period,action){
this._scheduler = scheduler;
this._state = state;
this._period = period;
this._action = action;}


SchedulePeriodicRecursive.prototype.start = function(){
var d=new SingleAssignmentDisposable();
this._cancel = d;
d.setDisposable(this._scheduler.scheduleRecursiveFuture(0,this._period,createTick(this)));

return d;};


return SchedulePeriodicRecursive;})();



var ImmediateScheduler=(function(__super__){
inherits(ImmediateScheduler,__super__);
function ImmediateScheduler(){
__super__.call(this);}


ImmediateScheduler.prototype.schedule = function(state,action){
return disposableFixup(action(this,state));};


return ImmediateScheduler;})(
Scheduler);

var immediateScheduler=Scheduler.immediate = new ImmediateScheduler();




var CurrentThreadScheduler=(function(__super__){
var queue;

function runTrampoline(){
while(queue.length > 0) {
var item=queue.dequeue();
!item.isCancelled() && item.invoke();}}



inherits(CurrentThreadScheduler,__super__);
function CurrentThreadScheduler(){
__super__.call(this);}


CurrentThreadScheduler.prototype.schedule = function(state,action){
var si=new ScheduledItem(this,state,action,this.now());

if(!queue){
queue = new PriorityQueue(4);
queue.enqueue(si);

var result=tryCatch(runTrampoline)();
queue = null;
if(result === errorObj){thrower(result.e);}}else 
{
queue.enqueue(si);}

return si.disposable;};


CurrentThreadScheduler.prototype.scheduleRequired = function(){return !queue;};

return CurrentThreadScheduler;})(
Scheduler);

var currentThreadScheduler=Scheduler.currentThread = new CurrentThreadScheduler();

var scheduleMethod,clearMethod;

var localTimer=(function(){
var localSetTimeout,localClearTimeout=noop;
if(!!root.setTimeout){
localSetTimeout = root.setTimeout;
localClearTimeout = root.clearTimeout;}else 
if(!!root.WScript){
localSetTimeout = function(fn,time){
root.WScript.Sleep(time);
fn();};}else 

{
throw new NotSupportedError();}


return {
setTimeout:localSetTimeout,
clearTimeout:localClearTimeout};})();


var localSetTimeout=localTimer.setTimeout,
localClearTimeout=localTimer.clearTimeout;

(function(){

var nextHandle=1,tasksByHandle={},currentlyRunning=false;

clearMethod = function(handle){
delete tasksByHandle[handle];};


function runTask(handle){
if(currentlyRunning){
localSetTimeout(function(){runTask(handle);},0);}else 
{
var task=tasksByHandle[handle];
if(task){
currentlyRunning = true;
var result=tryCatch(task)();
clearMethod(handle);
currentlyRunning = false;
if(result === errorObj){thrower(result.e);}}}}




var reNative=new RegExp('^' + 
String(toString).
replace(/[.*+?^${}()|[\]\\]/g,'\\$&').
replace(/toString| for [^\]]+/g,'.*?') + '$');


var setImmediate=typeof (setImmediate = freeGlobal && moduleExports && freeGlobal.setImmediate) == 'function' && 
!reNative.test(setImmediate) && setImmediate;

function postMessageSupported(){

if(!root.postMessage || root.importScripts){return false;}
var isAsync=false,oldHandler=root.onmessage;

root.onmessage = function(){isAsync = true;};
root.postMessage('','*');
root.onmessage = oldHandler;

return isAsync;}



if(isFunction(setImmediate)){
scheduleMethod = function(action){
var id=nextHandle++;
tasksByHandle[id] = action;
setImmediate(function(){runTask(id);});

return id;};}else 

if(typeof process !== 'undefined' && ({}).toString.call(process) === '[object process]'){
scheduleMethod = function(action){
var id=nextHandle++;
tasksByHandle[id] = action;
process.nextTick(function(){runTask(id);});

return id;};}else 

if(postMessageSupported()){
var MSG_PREFIX='ms.rx.schedule' + Math.random();

var onGlobalPostMessage=function(event){

if(typeof event.data === 'string' && event.data.substring(0,MSG_PREFIX.length) === MSG_PREFIX){
runTask(event.data.substring(MSG_PREFIX.length));}};



root.addEventListener('message',onGlobalPostMessage,false);

scheduleMethod = function(action){
var id=nextHandle++;
tasksByHandle[id] = action;
root.postMessage(MSG_PREFIX + currentId,'*');
return id;};}else 

if(!!root.MessageChannel){
var channel=new root.MessageChannel();

channel.port1.onmessage = function(e){runTask(e.data);};

scheduleMethod = function(action){
var id=nextHandle++;
tasksByHandle[id] = action;
channel.port2.postMessage(id);
return id;};}else 

if('document' in root && 'onreadystatechange' in root.document.createElement('script')){

scheduleMethod = function(action){
var scriptElement=root.document.createElement('script');
var id=nextHandle++;
tasksByHandle[id] = action;

scriptElement.onreadystatechange = function(){
runTask(id);
scriptElement.onreadystatechange = null;
scriptElement.parentNode.removeChild(scriptElement);
scriptElement = null;};

root.document.documentElement.appendChild(scriptElement);
return id;};}else 


{
scheduleMethod = function(action){
var id=nextHandle++;
tasksByHandle[id] = action;
localSetTimeout(function(){
runTask(id);},
0);

return id;};}})();







var DefaultScheduler=(function(__super__){
inherits(DefaultScheduler,__super__);
function DefaultScheduler(){
__super__.call(this);}


function scheduleAction(disposable,action,scheduler,state){
return function schedule(){
!disposable.isDisposed && disposable.setDisposable(Disposable._fixup(action(scheduler,state)));};}



function ClearDisposable(method,id){
this._id = id;
this._method = method;
this.isDisposed = false;}


ClearDisposable.prototype.dispose = function(){
if(!this.isDisposed){
this.isDisposed = true;
this._method.call(null,this._id);}};



DefaultScheduler.prototype.schedule = function(state,action){
var disposable=new SingleAssignmentDisposable(),
id=scheduleMethod(scheduleAction(disposable,action,this,state));
return new BinaryDisposable(disposable,new ClearDisposable(clearMethod,id));};


DefaultScheduler.prototype._scheduleFuture = function(state,dueTime,action){
if(dueTime === 0){return this.schedule(state,action);}
var disposable=new SingleAssignmentDisposable(),
id=localSetTimeout(scheduleAction(disposable,action,this,state),dueTime);
return new BinaryDisposable(disposable,new ClearDisposable(localClearTimeout,id));};


return DefaultScheduler;})(
Scheduler);

var defaultScheduler=Scheduler['default'] = Scheduler.async = new DefaultScheduler();

var CatchScheduler=(function(__super__){
inherits(CatchScheduler,__super__);

function CatchScheduler(scheduler,handler){
this._scheduler = scheduler;
this._handler = handler;
this._recursiveOriginal = null;
this._recursiveWrapper = null;
__super__.call(this);}


CatchScheduler.prototype.schedule = function(state,action){
return this._scheduler.schedule(state,this._wrap(action));};


CatchScheduler.prototype._scheduleFuture = function(state,dueTime,action){
return this._scheduler.schedule(state,dueTime,this._wrap(action));};


CatchScheduler.prototype.now = function(){return this._scheduler.now();};

CatchScheduler.prototype._clone = function(scheduler){
return new CatchScheduler(scheduler,this._handler);};


CatchScheduler.prototype._wrap = function(action){
var parent=this;
return function(self,state){
var res=tryCatch(action)(parent._getRecursiveWrapper(self),state);
if(res === errorObj){
if(!parent._handler(res.e)){thrower(res.e);}
return disposableEmpty;}

return disposableFixup(ret);};};



CatchScheduler.prototype._getRecursiveWrapper = function(scheduler){
if(this._recursiveOriginal !== scheduler){
this._recursiveOriginal = scheduler;
var wrapper=this._clone(scheduler);
wrapper._recursiveOriginal = scheduler;
wrapper._recursiveWrapper = wrapper;
this._recursiveWrapper = wrapper;}

return this._recursiveWrapper;};


CatchScheduler.prototype.schedulePeriodic = function(state,period,action){
var self=this,failed=false,d=new SingleAssignmentDisposable();

d.setDisposable(this._scheduler.schedulePeriodic(state,period,function(state1){
if(failed){return null;}
var res=tryCatch(action)(state1);
if(res === errorObj){
failed = true;
if(!self._handler(res.e)){thrower(res.e);}
d.dispose();
return null;}

return ret;}));


return d;};


return CatchScheduler;})(
Scheduler);




var Notification=Rx.Notification = (function(){
function Notification(){}



Notification.prototype._accept = function(onNext,onError,onCompleted){
throw new NotImplementedError();};


Notification.prototype._acceptObservable = function(onNext,onError,onCompleted){
throw new NotImplementedError();};











Notification.prototype.accept = function(observerOrOnNext,onError,onCompleted){
return observerOrOnNext && typeof observerOrOnNext === 'object'?
this._acceptObservable(observerOrOnNext):
this._accept(observerOrOnNext,onError,onCompleted);};









Notification.prototype.toObservable = function(scheduler){
var self=this;
isScheduler(scheduler) || (scheduler = immediateScheduler);
return new AnonymousObservable(function(o){
return scheduler.schedule(self,function(_,notification){
notification._acceptObservable(o);
notification.kind === 'N' && o.onCompleted();});});};




return Notification;})();


var OnNextNotification=(function(__super__){
inherits(OnNextNotification,__super__);
function OnNextNotification(value){
this.value = value;
this.kind = 'N';}


OnNextNotification.prototype._accept = function(onNext){
return onNext(this.value);};


OnNextNotification.prototype._acceptObservable = function(o){
return o.onNext(this.value);};


OnNextNotification.prototype.toString = function(){
return 'OnNext(' + this.value + ')';};


return OnNextNotification;})(
Notification);

var OnErrorNotification=(function(__super__){
inherits(OnErrorNotification,__super__);
function OnErrorNotification(error){
this.error = error;
this.kind = 'E';}


OnErrorNotification.prototype._accept = function(onNext,onError){
return onError(this.error);};


OnErrorNotification.prototype._acceptObservable = function(o){
return o.onError(this.error);};


OnErrorNotification.prototype.toString = function(){
return 'OnError(' + this.error + ')';};


return OnErrorNotification;})(
Notification);

var OnCompletedNotification=(function(__super__){
inherits(OnCompletedNotification,__super__);
function OnCompletedNotification(){
this.kind = 'C';}


OnCompletedNotification.prototype._accept = function(onNext,onError,onCompleted){
return onCompleted();};


OnCompletedNotification.prototype._acceptObservable = function(o){
return o.onCompleted();};


OnCompletedNotification.prototype.toString = function(){
return 'OnCompleted()';};


return OnCompletedNotification;})(
Notification);






var notificationCreateOnNext=Notification.createOnNext = function(value){
return new OnNextNotification(value);};







var notificationCreateOnError=Notification.createOnError = function(error){
return new OnErrorNotification(error);};






var notificationCreateOnCompleted=Notification.createOnCompleted = function(){
return new OnCompletedNotification();};





var Observer=Rx.Observer = function(){};





Observer.prototype.toNotifier = function(){
var observer=this;
return function(n){return n.accept(observer);};};






Observer.prototype.asObserver = function(){
var self=this;
return new AnonymousObserver(
function(x){self.onNext(x);},
function(err){self.onError(err);},
function(){self.onCompleted();});};







Observer.prototype.checked = function(){return new CheckedObserver(this);};








var observerCreate=Observer.create = function(onNext,onError,onCompleted){
onNext || (onNext = noop);
onError || (onError = defaultError);
onCompleted || (onCompleted = noop);
return new AnonymousObserver(onNext,onError,onCompleted);};







Observer.fromNotifier = function(handler,thisArg){
var cb=bindCallback(handler,thisArg,1);
return new AnonymousObserver(function(x){
return cb(notificationCreateOnNext(x));},
function(e){
return cb(notificationCreateOnError(e));},
function(){
return cb(notificationCreateOnCompleted());});};








Observer.prototype.notifyOn = function(scheduler){
return new ObserveOnObserver(scheduler,this);};


Observer.prototype.makeSafe = function(disposable){
return new AnonymousSafeObserver(this._onNext,this._onError,this._onCompleted,disposable);};






var AbstractObserver=Rx.internals.AbstractObserver = (function(__super__){
inherits(AbstractObserver,__super__);




function AbstractObserver(){
this.isStopped = false;}



AbstractObserver.prototype.next = notImplemented;
AbstractObserver.prototype.error = notImplemented;
AbstractObserver.prototype.completed = notImplemented;





AbstractObserver.prototype.onNext = function(value){
!this.isStopped && this.next(value);};






AbstractObserver.prototype.onError = function(error){
if(!this.isStopped){
this.isStopped = true;
this.error(error);}};






AbstractObserver.prototype.onCompleted = function(){
if(!this.isStopped){
this.isStopped = true;
this.completed();}};






AbstractObserver.prototype.dispose = function(){this.isStopped = true;};

AbstractObserver.prototype.fail = function(e){
if(!this.isStopped){
this.isStopped = true;
this.error(e);
return true;}


return false;};


return AbstractObserver;})(
Observer);




var AnonymousObserver=Rx.AnonymousObserver = (function(__super__){
inherits(AnonymousObserver,__super__);







function AnonymousObserver(onNext,onError,onCompleted){
__super__.call(this);
this._onNext = onNext;
this._onError = onError;
this._onCompleted = onCompleted;}






AnonymousObserver.prototype.next = function(value){
this._onNext(value);};






AnonymousObserver.prototype.error = function(error){
this._onError(error);};





AnonymousObserver.prototype.completed = function(){
this._onCompleted();};


return AnonymousObserver;})(
AbstractObserver);

var CheckedObserver=(function(__super__){
inherits(CheckedObserver,__super__);

function CheckedObserver(observer){
__super__.call(this);
this._observer = observer;
this._state = 0;}


var CheckedObserverPrototype=CheckedObserver.prototype;

CheckedObserverPrototype.onNext = function(value){
this.checkAccess();
var res=tryCatch(this._observer.onNext).call(this._observer,value);
this._state = 0;
res === errorObj && thrower(res.e);};


CheckedObserverPrototype.onError = function(err){
this.checkAccess();
var res=tryCatch(this._observer.onError).call(this._observer,err);
this._state = 2;
res === errorObj && thrower(res.e);};


CheckedObserverPrototype.onCompleted = function(){
this.checkAccess();
var res=tryCatch(this._observer.onCompleted).call(this._observer);
this._state = 2;
res === errorObj && thrower(res.e);};


CheckedObserverPrototype.checkAccess = function(){
if(this._state === 1){throw new Error('Re-entrancy detected');}
if(this._state === 2){throw new Error('Observer completed');}
if(this._state === 0){this._state = 1;}};


return CheckedObserver;})(
Observer);

var ScheduledObserver=Rx.internals.ScheduledObserver = (function(__super__){
inherits(ScheduledObserver,__super__);

function ScheduledObserver(scheduler,observer){
__super__.call(this);
this.scheduler = scheduler;
this.observer = observer;
this.isAcquired = false;
this.hasFaulted = false;
this.queue = [];
this.disposable = new SerialDisposable();}


ScheduledObserver.prototype.next = function(value){
var self=this;
this.queue.push(function(){self.observer.onNext(value);});};


ScheduledObserver.prototype.error = function(e){
var self=this;
this.queue.push(function(){self.observer.onError(e);});};


ScheduledObserver.prototype.completed = function(){
var self=this;
this.queue.push(function(){self.observer.onCompleted();});};


ScheduledObserver.prototype.ensureActive = function(){
var isOwner=false;
if(!this.hasFaulted && this.queue.length > 0){
isOwner = !this.isAcquired;
this.isAcquired = true;}

if(isOwner){
this.disposable.setDisposable(this.scheduler.scheduleRecursive(this,function(parent,self){
var work;
if(parent.queue.length > 0){
work = parent.queue.shift();}else 
{
parent.isAcquired = false;
return;}

var res=tryCatch(work)();
if(res === errorObj){
parent.queue = [];
parent.hasFaulted = true;
return thrower(res.e);}

self(parent);}));}};




ScheduledObserver.prototype.dispose = function(){
__super__.prototype.dispose.call(this);
this.disposable.dispose();};


return ScheduledObserver;})(
AbstractObserver);

var ObserveOnObserver=(function(__super__){
inherits(ObserveOnObserver,__super__);

function ObserveOnObserver(scheduler,observer,cancel){
__super__.call(this,scheduler,observer);
this._cancel = cancel;}


ObserveOnObserver.prototype.next = function(value){
__super__.prototype.next.call(this,value);
this.ensureActive();};


ObserveOnObserver.prototype.error = function(e){
__super__.prototype.error.call(this,e);
this.ensureActive();};


ObserveOnObserver.prototype.completed = function(){
__super__.prototype.completed.call(this);
this.ensureActive();};


ObserveOnObserver.prototype.dispose = function(){
__super__.prototype.dispose.call(this);
this._cancel && this._cancel.dispose();
this._cancel = null;};


return ObserveOnObserver;})(
ScheduledObserver);

var observableProto;




var Observable=Rx.Observable = (function(){

function makeSubscribe(self,subscribe){
return function(o){
var oldOnError=o.onError;
o.onError = function(e){
makeStackTraceLong(e,self);
oldOnError.call(o,e);};


return subscribe.call(self,o);};}



function Observable(){
if(Rx.config.longStackSupport && hasStacks){
var oldSubscribe=this._subscribe;
var e=tryCatch(thrower)(new Error()).e;
this.stack = e.stack.substring(e.stack.indexOf('\n') + 1);
this._subscribe = makeSubscribe(this,oldSubscribe);}}



observableProto = Observable.prototype;






Observable.isObservable = function(o){
return o && isFunction(o.subscribe);};









observableProto.subscribe = observableProto.forEach = function(oOrOnNext,onError,onCompleted){
return this._subscribe(typeof oOrOnNext === 'object'?
oOrOnNext:
observerCreate(oOrOnNext,onError,onCompleted));};








observableProto.subscribeOnNext = function(onNext,thisArg){
return this._subscribe(observerCreate(typeof thisArg !== 'undefined'?function(x){onNext.call(thisArg,x);}:onNext));};








observableProto.subscribeOnError = function(onError,thisArg){
return this._subscribe(observerCreate(null,typeof thisArg !== 'undefined'?function(e){onError.call(thisArg,e);}:onError));};








observableProto.subscribeOnCompleted = function(onCompleted,thisArg){
return this._subscribe(observerCreate(null,null,typeof thisArg !== 'undefined'?function(){onCompleted.call(thisArg);}:onCompleted));};


return Observable;})();


var ObservableBase=Rx.ObservableBase = (function(__super__){
inherits(ObservableBase,__super__);

function fixSubscriber(subscriber){
return subscriber && isFunction(subscriber.dispose)?subscriber:
isFunction(subscriber)?disposableCreate(subscriber):disposableEmpty;}


function setDisposable(s,state){
var ado=state[0],self=state[1];
var sub=tryCatch(self.subscribeCore).call(self,ado);
if(sub === errorObj && !ado.fail(errorObj.e)){thrower(errorObj.e);}
ado.setDisposable(fixSubscriber(sub));}


function ObservableBase(){
__super__.call(this);}


ObservableBase.prototype._subscribe = function(o){
var ado=new AutoDetachObserver(o),state=[ado,this];

if(currentThreadScheduler.scheduleRequired()){
currentThreadScheduler.schedule(state,setDisposable);}else 
{
setDisposable(null,state);}

return ado;};


ObservableBase.prototype.subscribeCore = notImplemented;

return ObservableBase;})(
Observable);

var FlatMapObservable=Rx.FlatMapObservable = (function(__super__){

inherits(FlatMapObservable,__super__);

function FlatMapObservable(source,selector,resultSelector,thisArg){
this.resultSelector = isFunction(resultSelector)?resultSelector:null;
this.selector = bindCallback(isFunction(selector)?selector:function(){return selector;},thisArg,3);
this.source = source;
__super__.call(this);}


FlatMapObservable.prototype.subscribeCore = function(o){
return this.source.subscribe(new InnerObserver(o,this.selector,this.resultSelector,this));};


inherits(InnerObserver,AbstractObserver);
function InnerObserver(observer,selector,resultSelector,source){
this.i = 0;
this.selector = selector;
this.resultSelector = resultSelector;
this.source = source;
this.o = observer;
AbstractObserver.call(this);}


InnerObserver.prototype._wrapResult = function(result,x,i){
return this.resultSelector?
result.map(function(y,i2){return this.resultSelector(x,y,i,i2);},this):
result;};


InnerObserver.prototype.next = function(x){
var i=this.i++;
var result=tryCatch(this.selector)(x,i,this.source);
if(result === errorObj){return this.o.onError(result.e);}

isPromise(result) && (result = observableFromPromise(result));
(isArrayLike(result) || isIterable(result)) && (result = Observable.from(result));
this.o.onNext(this._wrapResult(result,x,i));};


InnerObserver.prototype.error = function(e){this.o.onError(e);};

InnerObserver.prototype.onCompleted = function(){this.o.onCompleted();};

return FlatMapObservable;})(

ObservableBase);

var Enumerable=Rx.internals.Enumerable = function(){};

function IsDisposedDisposable(state){
this._s = state;
this.isDisposed = false;}


IsDisposedDisposable.prototype.dispose = function(){
if(!this.isDisposed){
this.isDisposed = true;
this._s.isDisposed = true;}};



var ConcatEnumerableObservable=(function(__super__){
inherits(ConcatEnumerableObservable,__super__);
function ConcatEnumerableObservable(sources){
this.sources = sources;
__super__.call(this);}


ConcatEnumerableObservable.prototype.subscribeCore = function(o){
var state={isDisposed:false},subscription=new SerialDisposable();
var cancelable=currentThreadScheduler.scheduleRecursive(this.sources[$iterator$](),function(e,self){
if(state.isDisposed){return;}
var currentItem=tryCatch(e.next).call(e);
if(currentItem === errorObj){return o.onError(currentItem.e);}

if(currentItem.done){
return o.onCompleted();}



var currentValue=currentItem.value;
isPromise(currentValue) && (currentValue = observableFromPromise(currentValue));

var d=new SingleAssignmentDisposable();
subscription.setDisposable(d);
d.setDisposable(currentValue.subscribe(new InnerObserver(o,self,e)));});


return new NAryDisposable([subscription,cancelable,new IsDisposedDisposable(state)]);};


inherits(InnerObserver,AbstractObserver);
function InnerObserver(o,s,e){
this._o = o;
this._s = s;
this._e = e;
AbstractObserver.call(this);}

InnerObserver.prototype.onNext = function(x){this._o.onNext(x);};
InnerObserver.prototype.onError = function(e){this._o.onError(e);};
InnerObserver.prototype.onCompleted = function(){this._s(this._e);};

return ConcatEnumerableObservable;})(
ObservableBase);

Enumerable.prototype.concat = function(){
return new ConcatEnumerableObservable(this);};


var CatchErrorObservable=(function(__super__){
inherits(CatchErrorObservable,__super__);
function CatchErrorObservable(sources){
this.sources = sources;
__super__.call(this);}


CatchErrorObservable.prototype.subscribeCore = function(o){
var e=this.sources[$iterator$]();

var state={isDisposed:false},subscription=new SerialDisposable();
var cancelable=currentThreadScheduler.scheduleRecursive(null,function(lastException,self){
if(state.isDisposed){return;}
var currentItem=tryCatch(e.next).call(e);
if(currentItem === errorObj){return o.onError(currentItem.e);}

if(currentItem.done){
return lastException !== null?o.onError(lastException):o.onCompleted();}



var currentValue=currentItem.value;
isPromise(currentValue) && (currentValue = observableFromPromise(currentValue));

var d=new SingleAssignmentDisposable();
subscription.setDisposable(d);
d.setDisposable(currentValue.subscribe(new InnerObserver(o,self)));});

return new NAryDisposable([subscription,cancelable,new IsDisposedDisposable(state)]);};


inherits(InnerObserver,AbstractObserver);
function InnerObserver(o,recurse){
this._o = o;
this._recurse = recurse;
AbstractObserver.call(this);}


InnerObserver.prototype.next = function(x){this._o.onNext(x);};
InnerObserver.prototype.error = function(e){this._recurse(e);};
InnerObserver.prototype.completed = function(){this._o.onCompleted();};

return CatchErrorObservable;})(
ObservableBase);

Enumerable.prototype.catchError = function(){
return new CatchErrorObservable(this);};


Enumerable.prototype.catchErrorWhen = function(notificationHandler){
var sources=this;
return new AnonymousObservable(function(o){
var exceptions=new Subject(),
notifier=new Subject(),
handled=notificationHandler(exceptions),
notificationDisposable=handled.subscribe(notifier);

var e=sources[$iterator$]();

var state={isDisposed:false},
lastException,
subscription=new SerialDisposable();
var cancelable=currentThreadScheduler.scheduleRecursive(null,function(_,self){
if(state.isDisposed){return;}
var currentItem=tryCatch(e.next).call(e);
if(currentItem === errorObj){return o.onError(currentItem.e);}

if(currentItem.done){
if(lastException){
o.onError(lastException);}else 
{
o.onCompleted();}

return;}



var currentValue=currentItem.value;
isPromise(currentValue) && (currentValue = observableFromPromise(currentValue));

var outer=new SingleAssignmentDisposable();
var inner=new SingleAssignmentDisposable();
subscription.setDisposable(new BinaryDisposable(inner,outer));
outer.setDisposable(currentValue.subscribe(
function(x){o.onNext(x);},
function(exn){
inner.setDisposable(notifier.subscribe(self,function(ex){
o.onError(ex);},
function(){
o.onCompleted();}));


exceptions.onNext(exn);},

function(){o.onCompleted();}));});


return new NAryDisposable([notificationDisposable,subscription,cancelable,new IsDisposedDisposable(state)]);});};



var RepeatEnumerable=(function(__super__){
inherits(RepeatEnumerable,__super__);

function RepeatEnumerable(v,c){
this.v = v;
this.c = c == null?-1:c;}

RepeatEnumerable.prototype[$iterator$] = function(){
return new RepeatEnumerator(this);};


function RepeatEnumerator(p){
this.v = p.v;
this.l = p.c;}

RepeatEnumerator.prototype.next = function(){
if(this.l === 0){return doneEnumerator;}
if(this.l > 0){this.l--;}
return {done:false,value:this.v};};


return RepeatEnumerable;})(
Enumerable);

var enumerableRepeat=Enumerable.repeat = function(value,repeatCount){
return new RepeatEnumerable(value,repeatCount);};


var OfEnumerable=(function(__super__){
inherits(OfEnumerable,__super__);
function OfEnumerable(s,fn,thisArg){
this.s = s;
this.fn = fn?bindCallback(fn,thisArg,3):null;}

OfEnumerable.prototype[$iterator$] = function(){
return new OfEnumerator(this);};


function OfEnumerator(p){
this.i = -1;
this.s = p.s;
this.l = this.s.length;
this.fn = p.fn;}

OfEnumerator.prototype.next = function(){
return ++this.i < this.l?
{done:false,value:!this.fn?this.s[this.i]:this.fn(this.s[this.i],this.i,this.s)}:
doneEnumerator;};


return OfEnumerable;})(
Enumerable);

var enumerableOf=Enumerable.of = function(source,selector,thisArg){
return new OfEnumerable(source,selector,thisArg);};


var ObserveOnObservable=(function(__super__){
inherits(ObserveOnObservable,__super__);
function ObserveOnObservable(source,s){
this.source = source;
this._s = s;
__super__.call(this);}


ObserveOnObservable.prototype.subscribeCore = function(o){
return this.source.subscribe(new ObserveOnObserver(this._s,o));};


return ObserveOnObservable;})(
ObservableBase);










observableProto.observeOn = function(scheduler){
return new ObserveOnObservable(this,scheduler);};


var SubscribeOnObservable=(function(__super__){
inherits(SubscribeOnObservable,__super__);
function SubscribeOnObservable(source,s){
this.source = source;
this._s = s;
__super__.call(this);}


function scheduleMethod(scheduler,state){
var source=state[0],d=state[1],o=state[2];
d.setDisposable(new ScheduledDisposable(scheduler,source.subscribe(o)));}


SubscribeOnObservable.prototype.subscribeCore = function(o){
var m=new SingleAssignmentDisposable(),d=new SerialDisposable();
d.setDisposable(m);
m.setDisposable(this._s.schedule([this.source,d,o],scheduleMethod));
return d;};


return SubscribeOnObservable;})(
ObservableBase);











observableProto.subscribeOn = function(scheduler){
return new SubscribeOnObservable(this,scheduler);};


var FromPromiseObservable=(function(__super__){
inherits(FromPromiseObservable,__super__);
function FromPromiseObservable(p,s){
this._p = p;
this._s = s;
__super__.call(this);}


function scheduleNext(s,state){
var o=state[0],data=state[1];
o.onNext(data);
o.onCompleted();}


function scheduleError(s,state){
var o=state[0],err=state[1];
o.onError(err);}


FromPromiseObservable.prototype.subscribeCore = function(o){
var sad=new SingleAssignmentDisposable(),self=this;

this._p.
then(function(data){
sad.setDisposable(self._s.schedule([o,data],scheduleNext));},
function(err){
sad.setDisposable(self._s.schedule([o,err],scheduleError));});


return sad;};


return FromPromiseObservable;})(
ObservableBase);






var observableFromPromise=Observable.fromPromise = function(promise,scheduler){
scheduler || (scheduler = defaultScheduler);
return new FromPromiseObservable(promise,scheduler);};













observableProto.toPromise = function(promiseCtor){
promiseCtor || (promiseCtor = Rx.config.Promise);
if(!promiseCtor){throw new NotSupportedError('Promise type not provided nor in Rx.config.Promise');}
var source=this;
return new promiseCtor(function(resolve,reject){

var value;
source.subscribe(function(v){
value = v;},
reject,function(){
resolve(value);});});};




var ToArrayObservable=(function(__super__){
inherits(ToArrayObservable,__super__);
function ToArrayObservable(source){
this.source = source;
__super__.call(this);}


ToArrayObservable.prototype.subscribeCore = function(o){
return this.source.subscribe(new InnerObserver(o));};


inherits(InnerObserver,AbstractObserver);
function InnerObserver(o){
this.o = o;
this.a = [];
AbstractObserver.call(this);}


InnerObserver.prototype.next = function(x){this.a.push(x);};
InnerObserver.prototype.error = function(e){this.o.onError(e);};
InnerObserver.prototype.completed = function(){this.o.onNext(this.a);this.o.onCompleted();};

return ToArrayObservable;})(
ObservableBase);





observableProto.toArray = function(){
return new ToArrayObservable(this);};











Observable.create = function(subscribe,parent){
return new AnonymousObservable(subscribe,parent);};


var Defer=(function(__super__){
inherits(Defer,__super__);
function Defer(factory){
this._f = factory;
__super__.call(this);}


Defer.prototype.subscribeCore = function(o){
var result=tryCatch(this._f)();
if(result === errorObj){return observableThrow(result.e).subscribe(o);}
isPromise(result) && (result = observableFromPromise(result));
return result.subscribe(o);};


return Defer;})(
ObservableBase);









var observableDefer=Observable.defer = function(observableFactory){
return new Defer(observableFactory);};


var EmptyObservable=(function(__super__){
inherits(EmptyObservable,__super__);
function EmptyObservable(scheduler){
this.scheduler = scheduler;
__super__.call(this);}


EmptyObservable.prototype.subscribeCore = function(observer){
var sink=new EmptySink(observer,this.scheduler);
return sink.run();};


function EmptySink(observer,scheduler){
this.observer = observer;
this.scheduler = scheduler;}


function scheduleItem(s,state){
state.onCompleted();
return disposableEmpty;}


EmptySink.prototype.run = function(){
var state=this.observer;
return this.scheduler === immediateScheduler?
scheduleItem(null,state):
this.scheduler.schedule(state,scheduleItem);};


return EmptyObservable;})(
ObservableBase);

var EMPTY_OBSERVABLE=new EmptyObservable(immediateScheduler);










var observableEmpty=Observable.empty = function(scheduler){
isScheduler(scheduler) || (scheduler = immediateScheduler);
return scheduler === immediateScheduler?EMPTY_OBSERVABLE:new EmptyObservable(scheduler);};


var FromObservable=(function(__super__){
inherits(FromObservable,__super__);
function FromObservable(iterable,mapper,scheduler){
this.iterable = iterable;
this.mapper = mapper;
this.scheduler = scheduler;
__super__.call(this);}


FromObservable.prototype.subscribeCore = function(o){
var sink=new FromSink(o,this);
return sink.run();};


return FromObservable;})(
ObservableBase);

var FromSink=(function(){
function FromSink(o,parent){
this.o = o;
this.parent = parent;}


FromSink.prototype.run = function(){
var list=Object(this.parent.iterable),
it=getIterable(list),
o=this.o,
mapper=this.parent.mapper;

function loopRecursive(i,recurse){
var next=tryCatch(it.next).call(it);
if(next === errorObj){return o.onError(next.e);}
if(next.done){return o.onCompleted();}

var result=next.value;

if(isFunction(mapper)){
result = tryCatch(mapper)(result,i);
if(result === errorObj){return o.onError(result.e);}}


o.onNext(result);
recurse(i + 1);}


return this.parent.scheduler.scheduleRecursive(0,loopRecursive);};


return FromSink;})();


var maxSafeInteger=Math.pow(2,53) - 1;

function StringIterable(s){
this._s = s;}


StringIterable.prototype[$iterator$] = function(){
return new StringIterator(this._s);};


function StringIterator(s){
this._s = s;
this._l = s.length;
this._i = 0;}


StringIterator.prototype[$iterator$] = function(){
return this;};


StringIterator.prototype.next = function(){
return this._i < this._l?{done:false,value:this._s.charAt(this._i++)}:doneEnumerator;};


function ArrayIterable(a){
this._a = a;}


ArrayIterable.prototype[$iterator$] = function(){
return new ArrayIterator(this._a);};


function ArrayIterator(a){
this._a = a;
this._l = toLength(a);
this._i = 0;}


ArrayIterator.prototype[$iterator$] = function(){
return this;};


ArrayIterator.prototype.next = function(){
return this._i < this._l?{done:false,value:this._a[this._i++]}:doneEnumerator;};


function numberIsFinite(value){
return typeof value === 'number' && root.isFinite(value);}


function isNan(n){
return n !== n;}


function getIterable(o){
var i=o[$iterator$],it;
if(!i && typeof o === 'string'){
it = new StringIterable(o);
return it[$iterator$]();}

if(!i && o.length !== undefined){
it = new ArrayIterable(o);
return it[$iterator$]();}

if(!i){throw new TypeError('Object is not iterable');}
return o[$iterator$]();}


function sign(value){
var number=+value;
if(number === 0){return number;}
if(isNaN(number)){return number;}
return number < 0?-1:1;}


function toLength(o){
var len=+o.length;
if(isNaN(len)){return 0;}
if(len === 0 || !numberIsFinite(len)){return len;}
len = sign(len) * Math.floor(Math.abs(len));
if(len <= 0){return 0;}
if(len > maxSafeInteger){return maxSafeInteger;}
return len;}









var observableFrom=Observable.from = function(iterable,mapFn,thisArg,scheduler){
if(iterable == null){
throw new Error('iterable cannot be null.');}

if(mapFn && !isFunction(mapFn)){
throw new Error('mapFn when provided must be a function');}

if(mapFn){
var mapper=bindCallback(mapFn,thisArg,2);}

isScheduler(scheduler) || (scheduler = currentThreadScheduler);
return new FromObservable(iterable,mapper,scheduler);};


var FromArrayObservable=(function(__super__){
inherits(FromArrayObservable,__super__);
function FromArrayObservable(args,scheduler){
this.args = args;
this.scheduler = scheduler;
__super__.call(this);}


FromArrayObservable.prototype.subscribeCore = function(observer){
var sink=new FromArraySink(observer,this);
return sink.run();};


return FromArrayObservable;})(
ObservableBase);

function FromArraySink(observer,parent){
this.observer = observer;
this.parent = parent;}


function loopRecursive(args,observer){
var len=args.length;
return function loop(i,recurse){
if(i < len){
observer.onNext(args[i]);
recurse(i + 1);}else 
{
observer.onCompleted();}};}




FromArraySink.prototype.run = function(){
return this.parent.scheduler.scheduleRecursive(0,loopRecursive(this.parent.args,this.observer));};








var observableFromArray=Observable.fromArray = function(array,scheduler){
isScheduler(scheduler) || (scheduler = currentThreadScheduler);
return new FromArrayObservable(array,scheduler);};


var GenerateObservable=(function(__super__){
inherits(GenerateObservable,__super__);
function GenerateObservable(state,cndFn,itrFn,resFn,s){
this._state = state;
this._cndFn = cndFn;
this._itrFn = itrFn;
this._resFn = resFn;
this._s = s;
this._first = true;
__super__.call(this);}


function scheduleRecursive(self,recurse){
if(self._first){
self._first = false;}else 
{
self._state = tryCatch(self._itrFn)(self._state);
if(self._state === errorObj){return self._o.onError(self._state.e);}}

var hasResult=tryCatch(self._cndFn)(self._state);
if(hasResult === errorObj){return self._o.onError(hasResult.e);}
if(hasResult){
var result=tryCatch(self._resFn)(self._state);
if(result === errorObj){return self._o.onError(result.e);}
self._o.onNext(result);
recurse(self);}else 
{
self._o.onCompleted();}}



GenerateObservable.prototype.subscribeCore = function(o){
this._o = o;
return this._s.scheduleRecursive(this,scheduleRecursive);};


return GenerateObservable;})(
ObservableBase);














Observable.generate = function(initialState,condition,iterate,resultSelector,scheduler){
isScheduler(scheduler) || (scheduler = currentThreadScheduler);
return new GenerateObservable(initialState,condition,iterate,resultSelector,scheduler);};


function observableOf(scheduler,array){
isScheduler(scheduler) || (scheduler = currentThreadScheduler);
return new FromArrayObservable(array,scheduler);}






Observable.of = function(){
var len=arguments.length,args=new Array(len);
for(var i=0;i < len;i++) {args[i] = arguments[i];}
return new FromArrayObservable(args,currentThreadScheduler);};







Observable.ofWithScheduler = function(scheduler){
var len=arguments.length,args=new Array(len - 1);
for(var i=1;i < len;i++) {args[i - 1] = arguments[i];}
return new FromArrayObservable(args,scheduler);};







Observable.ofArrayChanges = function(array){
if(!Array.isArray(array)){throw new TypeError('Array.observe only accepts arrays.');}
if(typeof Array.observe !== 'function' && typeof Array.unobserve !== 'function'){throw new TypeError('Array.observe is not supported on your platform');}
return new AnonymousObservable(function(observer){
function observerFn(changes){
for(var i=0,len=changes.length;i < len;i++) {
observer.onNext(changes[i]);}}



Array.observe(array,observerFn);

return function(){
Array.unobserve(array,observerFn);};});};









Observable.ofObjectChanges = function(obj){
if(obj == null){throw new TypeError('object must not be null or undefined.');}
if(typeof Object.observe !== 'function' && typeof Object.unobserve !== 'function'){throw new TypeError('Object.observe is not supported on your platform');}
return new AnonymousObservable(function(observer){
function observerFn(changes){
for(var i=0,len=changes.length;i < len;i++) {
observer.onNext(changes[i]);}}



Object.observe(obj,observerFn);

return function(){
Object.unobserve(obj,observerFn);};});};




var NeverObservable=(function(__super__){
inherits(NeverObservable,__super__);
function NeverObservable(){
__super__.call(this);}


NeverObservable.prototype.subscribeCore = function(observer){
return disposableEmpty;};


return NeverObservable;})(
ObservableBase);

var NEVER_OBSERVABLE=new NeverObservable();





var observableNever=Observable.never = function(){
return NEVER_OBSERVABLE;};


var PairsObservable=(function(__super__){
inherits(PairsObservable,__super__);
function PairsObservable(obj,scheduler){
this.obj = obj;
this.keys = Object.keys(obj);
this.scheduler = scheduler;
__super__.call(this);}


PairsObservable.prototype.subscribeCore = function(observer){
var sink=new PairsSink(observer,this);
return sink.run();};


return PairsObservable;})(
ObservableBase);

function PairsSink(observer,parent){
this.observer = observer;
this.parent = parent;}


PairsSink.prototype.run = function(){
var observer=this.observer,obj=this.parent.obj,keys=this.parent.keys,len=keys.length;
function loopRecursive(i,recurse){
if(i < len){
var key=keys[i];
observer.onNext([key,obj[key]]);
recurse(i + 1);}else 
{
observer.onCompleted();}}



return this.parent.scheduler.scheduleRecursive(0,loopRecursive);};








Observable.pairs = function(obj,scheduler){
scheduler || (scheduler = currentThreadScheduler);
return new PairsObservable(obj,scheduler);};


var RangeObservable=(function(__super__){
inherits(RangeObservable,__super__);
function RangeObservable(start,count,scheduler){
this.start = start;
this.rangeCount = count;
this.scheduler = scheduler;
__super__.call(this);}


RangeObservable.prototype.subscribeCore = function(observer){
var sink=new RangeSink(observer,this);
return sink.run();};


return RangeObservable;})(
ObservableBase);

var RangeSink=(function(){
function RangeSink(observer,parent){
this.observer = observer;
this.parent = parent;}


function loopRecursive(start,count,observer){
return function loop(i,recurse){
if(i < count){
observer.onNext(start + i);
recurse(i + 1);}else 
{
observer.onCompleted();}};}




RangeSink.prototype.run = function(){
return this.parent.scheduler.scheduleRecursive(
0,
loopRecursive(this.parent.start,this.parent.rangeCount,this.observer));};



return RangeSink;})();









Observable.range = function(start,count,scheduler){
isScheduler(scheduler) || (scheduler = currentThreadScheduler);
return new RangeObservable(start,count,scheduler);};


var RepeatObservable=(function(__super__){
inherits(RepeatObservable,__super__);
function RepeatObservable(value,repeatCount,scheduler){
this.value = value;
this.repeatCount = repeatCount == null?-1:repeatCount;
this.scheduler = scheduler;
__super__.call(this);}


RepeatObservable.prototype.subscribeCore = function(observer){
var sink=new RepeatSink(observer,this);
return sink.run();};


return RepeatObservable;})(
ObservableBase);

function RepeatSink(observer,parent){
this.observer = observer;
this.parent = parent;}


RepeatSink.prototype.run = function(){
var observer=this.observer,value=this.parent.value;
function loopRecursive(i,recurse){
if(i === -1 || i > 0){
observer.onNext(value);
i > 0 && i--;}

if(i === 0){return observer.onCompleted();}
recurse(i);}


return this.parent.scheduler.scheduleRecursive(this.parent.repeatCount,loopRecursive);};









Observable.repeat = function(value,repeatCount,scheduler){
isScheduler(scheduler) || (scheduler = currentThreadScheduler);
return new RepeatObservable(value,repeatCount,scheduler);};


var JustObservable=(function(__super__){
inherits(JustObservable,__super__);
function JustObservable(value,scheduler){
this.value = value;
this.scheduler = scheduler;
__super__.call(this);}


JustObservable.prototype.subscribeCore = function(observer){
var sink=new JustSink(observer,this.value,this.scheduler);
return sink.run();};


function JustSink(observer,value,scheduler){
this.observer = observer;
this.value = value;
this.scheduler = scheduler;}


function scheduleItem(s,state){
var value=state[0],observer=state[1];
observer.onNext(value);
observer.onCompleted();
return disposableEmpty;}


JustSink.prototype.run = function(){
var state=[this.value,this.observer];
return this.scheduler === immediateScheduler?
scheduleItem(null,state):
this.scheduler.schedule(state,scheduleItem);};


return JustObservable;})(
ObservableBase);








var observableReturn=Observable['return'] = Observable.just = function(value,scheduler){
isScheduler(scheduler) || (scheduler = immediateScheduler);
return new JustObservable(value,scheduler);};


var ThrowObservable=(function(__super__){
inherits(ThrowObservable,__super__);
function ThrowObservable(error,scheduler){
this.error = error;
this.scheduler = scheduler;
__super__.call(this);}


ThrowObservable.prototype.subscribeCore = function(o){
var sink=new ThrowSink(o,this);
return sink.run();};


function ThrowSink(o,p){
this.o = o;
this.p = p;}


function scheduleItem(s,state){
var e=state[0],o=state[1];
o.onError(e);}


ThrowSink.prototype.run = function(){
return this.p.scheduler.schedule([this.p.error,this.o],scheduleItem);};


return ThrowObservable;})(
ObservableBase);








var observableThrow=Observable['throw'] = function(error,scheduler){
isScheduler(scheduler) || (scheduler = immediateScheduler);
return new ThrowObservable(error,scheduler);};


var UsingObservable=(function(__super__){
inherits(UsingObservable,__super__);
function UsingObservable(resFn,obsFn){
this._resFn = resFn;
this._obsFn = obsFn;
__super__.call(this);}


UsingObservable.prototype.subscribeCore = function(o){
var disposable=disposableEmpty;
var resource=tryCatch(this._resFn)();
if(resource === errorObj){
return new BinaryDisposable(observableThrow(resource.e).subscribe(o),disposable);}

resource && (disposable = resource);
var source=tryCatch(this._obsFn)(resource);
if(source === errorObj){
return new BinaryDisposable(observableThrow(source.e).subscribe(o),disposable);}

return new BinaryDisposable(source.subscribe(o),disposable);};


return UsingObservable;})(
ObservableBase);







Observable.using = function(resourceFactory,observableFactory){
return new UsingObservable(resourceFactory,observableFactory);};







observableProto.amb = function(rightSource){
var leftSource=this;
return new AnonymousObservable(function(observer){
var choice,
leftChoice='L',rightChoice='R',
leftSubscription=new SingleAssignmentDisposable(),
rightSubscription=new SingleAssignmentDisposable();

isPromise(rightSource) && (rightSource = observableFromPromise(rightSource));

function choiceL(){
if(!choice){
choice = leftChoice;
rightSubscription.dispose();}}



function choiceR(){
if(!choice){
choice = rightChoice;
leftSubscription.dispose();}}



var leftSubscribe=observerCreate(
function(left){
choiceL();
choice === leftChoice && observer.onNext(left);},

function(e){
choiceL();
choice === leftChoice && observer.onError(e);},

function(){
choiceL();
choice === leftChoice && observer.onCompleted();});


var rightSubscribe=observerCreate(
function(right){
choiceR();
choice === rightChoice && observer.onNext(right);},

function(e){
choiceR();
choice === rightChoice && observer.onError(e);},

function(){
choiceR();
choice === rightChoice && observer.onCompleted();});



leftSubscription.setDisposable(leftSource.subscribe(leftSubscribe));
rightSubscription.setDisposable(rightSource.subscribe(rightSubscribe));

return new BinaryDisposable(leftSubscription,rightSubscription);});};



function amb(p,c){return p.amb(c);}





Observable.amb = function(){
var acc=observableNever(),items;
if(Array.isArray(arguments[0])){
items = arguments[0];}else 
{
var len=arguments.length;
items = new Array(items);
for(var i=0;i < len;i++) {items[i] = arguments[i];}}

for(var i=0,len=items.length;i < len;i++) {
acc = amb(acc,items[i]);}

return acc;};


var CatchObservable=(function(__super__){
inherits(CatchObservable,__super__);
function CatchObservable(source,fn){
this.source = source;
this._fn = fn;
__super__.call(this);}


CatchObservable.prototype.subscribeCore = function(o){
var d1=new SingleAssignmentDisposable(),subscription=new SerialDisposable();
subscription.setDisposable(d1);
d1.setDisposable(this.source.subscribe(new CatchObserver(o,subscription,this._fn)));
return subscription;};


return CatchObservable;})(
ObservableBase);

var CatchObserver=(function(__super__){
inherits(CatchObserver,__super__);
function CatchObserver(o,s,fn){
this._o = o;
this._s = s;
this._fn = fn;
__super__.call(this);}


CatchObserver.prototype.next = function(x){this._o.onNext(x);};
CatchObserver.prototype.completed = function(){return this._o.onCompleted();};
CatchObserver.prototype.error = function(e){
var result=tryCatch(this._fn)(e);
if(result === errorObj){return this._o.onError(result.e);}
isPromise(result) && (result = observableFromPromise(result));

var d=new SingleAssignmentDisposable();
this._s.setDisposable(d);
d.setDisposable(result.subscribe(this._o));};


return CatchObserver;})(
AbstractObserver);






observableProto['catch'] = function(handlerOrSecond){
return isFunction(handlerOrSecond)?new CatchObservable(this,handlerOrSecond):observableCatch([this,handlerOrSecond]);};







var observableCatch=Observable['catch'] = function(){
var items;
if(Array.isArray(arguments[0])){
items = arguments[0];}else 
{
var len=arguments.length;
items = new Array(len);
for(var i=0;i < len;i++) {items[i] = arguments[i];}}

return enumerableOf(items).catchError();};











observableProto.combineLatest = function(){
var len=arguments.length,args=new Array(len);
for(var i=0;i < len;i++) {args[i] = arguments[i];}
if(Array.isArray(args[0])){
args[0].unshift(this);}else 
{
args.unshift(this);}

return combineLatest.apply(this,args);};


function falseFactory(){return false;}
function argumentsToArray(){
var len=arguments.length,args=new Array(len);
for(var i=0;i < len;i++) {args[i] = arguments[i];}
return args;}


var CombineLatestObservable=(function(__super__){
inherits(CombineLatestObservable,__super__);
function CombineLatestObservable(params,cb){
this._params = params;
this._cb = cb;
__super__.call(this);}


CombineLatestObservable.prototype.subscribeCore = function(observer){
var len=this._params.length,
subscriptions=new Array(len);

var state={
hasValue:arrayInitialize(len,falseFactory),
hasValueAll:false,
isDone:arrayInitialize(len,falseFactory),
values:new Array(len)};


for(var i=0;i < len;i++) {
var source=this._params[i],sad=new SingleAssignmentDisposable();
subscriptions[i] = sad;
isPromise(source) && (source = observableFromPromise(source));
sad.setDisposable(source.subscribe(new CombineLatestObserver(observer,i,this._cb,state)));}


return new NAryDisposable(subscriptions);};


return CombineLatestObservable;})(
ObservableBase);

var CombineLatestObserver=(function(__super__){
inherits(CombineLatestObserver,__super__);
function CombineLatestObserver(o,i,cb,state){
this._o = o;
this._i = i;
this._cb = cb;
this._state = state;
__super__.call(this);}


function notTheSame(i){
return function(x,j){
return j !== i;};}



CombineLatestObserver.prototype.next = function(x){
this._state.values[this._i] = x;
this._state.hasValue[this._i] = true;
if(this._state.hasValueAll || (this._state.hasValueAll = this._state.hasValue.every(identity))){
var res=tryCatch(this._cb).apply(null,this._state.values);
if(res === errorObj){return this._o.onError(res.e);}
this._o.onNext(res);}else 
if(this._state.isDone.filter(notTheSame(this._i)).every(identity)){
this._o.onCompleted();}};



CombineLatestObserver.prototype.error = function(e){
this._o.onError(e);};


CombineLatestObserver.prototype.completed = function(){
this._state.isDone[this._i] = true;
this._state.isDone.every(identity) && this._o.onCompleted();};


return CombineLatestObserver;})(
AbstractObserver);









var combineLatest=Observable.combineLatest = function(){
var len=arguments.length,args=new Array(len);
for(var i=0;i < len;i++) {args[i] = arguments[i];}
var resultSelector=isFunction(args[len - 1])?args.pop():argumentsToArray;
Array.isArray(args[0]) && (args = args[0]);
return new CombineLatestObservable(args,resultSelector);};






observableProto.concat = function(){
for(var args=[],i=0,len=arguments.length;i < len;i++) {args.push(arguments[i]);}
args.unshift(this);
return observableConcat.apply(null,args);};


var ConcatObservable=(function(__super__){
inherits(ConcatObservable,__super__);
function ConcatObservable(sources){
this.sources = sources;
__super__.call(this);}


ConcatObservable.prototype.subscribeCore = function(o){
var sink=new ConcatSink(this.sources,o);
return sink.run();};


function ConcatSink(sources,o){
this.sources = sources;
this.o = o;}

ConcatSink.prototype.run = function(){
var isDisposed,subscription=new SerialDisposable(),sources=this.sources,length=sources.length,o=this.o;
var cancelable=immediateScheduler.scheduleRecursive(0,function(i,self){
if(isDisposed){return;}
if(i === length){
return o.onCompleted();}



var currentValue=sources[i];
isPromise(currentValue) && (currentValue = observableFromPromise(currentValue));

var d=new SingleAssignmentDisposable();
subscription.setDisposable(d);
d.setDisposable(currentValue.subscribe(
function(x){o.onNext(x);},
function(e){o.onError(e);},
function(){self(i + 1);}));});



return new CompositeDisposable(subscription,cancelable,disposableCreate(function(){
isDisposed = true;}));};




return ConcatObservable;})(
ObservableBase);






var observableConcat=Observable.concat = function(){
var args;
if(Array.isArray(arguments[0])){
args = arguments[0];}else 
{
args = new Array(arguments.length);
for(var i=0,len=arguments.length;i < len;i++) {args[i] = arguments[i];}}

return new ConcatObservable(args);};






observableProto.concatAll = function(){
return this.merge(1);};


var MergeObservable=(function(__super__){
inherits(MergeObservable,__super__);

function MergeObservable(source,maxConcurrent){
this.source = source;
this.maxConcurrent = maxConcurrent;
__super__.call(this);}


MergeObservable.prototype.subscribeCore = function(observer){
var g=new CompositeDisposable();
g.add(this.source.subscribe(new MergeObserver(observer,this.maxConcurrent,g)));
return g;};


return MergeObservable;})(

ObservableBase);

var MergeObserver=(function(){
function MergeObserver(o,max,g){
this.o = o;
this.max = max;
this.g = g;
this.done = false;
this.q = [];
this.activeCount = 0;
this.isStopped = false;}

MergeObserver.prototype.handleSubscribe = function(xs){
var sad=new SingleAssignmentDisposable();
this.g.add(sad);
isPromise(xs) && (xs = observableFromPromise(xs));
sad.setDisposable(xs.subscribe(new InnerObserver(this,sad)));};

MergeObserver.prototype.onNext = function(innerSource){
if(this.isStopped){return;}
if(this.activeCount < this.max){
this.activeCount++;
this.handleSubscribe(innerSource);}else 
{
this.q.push(innerSource);}};


MergeObserver.prototype.onError = function(e){
if(!this.isStopped){
this.isStopped = true;
this.o.onError(e);}};


MergeObserver.prototype.onCompleted = function(){
if(!this.isStopped){
this.isStopped = true;
this.done = true;
this.activeCount === 0 && this.o.onCompleted();}};


MergeObserver.prototype.dispose = function(){this.isStopped = true;};
MergeObserver.prototype.fail = function(e){
if(!this.isStopped){
this.isStopped = true;
this.o.onError(e);
return true;}


return false;};


function InnerObserver(parent,sad){
this.parent = parent;
this.sad = sad;
this.isStopped = false;}

InnerObserver.prototype.onNext = function(x){if(!this.isStopped){this.parent.o.onNext(x);}};
InnerObserver.prototype.onError = function(e){
if(!this.isStopped){
this.isStopped = true;
this.parent.o.onError(e);}};


InnerObserver.prototype.onCompleted = function(){
if(!this.isStopped){
this.isStopped = true;
var parent=this.parent;
parent.g.remove(this.sad);
if(parent.q.length > 0){
parent.handleSubscribe(parent.q.shift());}else 
{
parent.activeCount--;
parent.done && parent.activeCount === 0 && parent.o.onCompleted();}}};



InnerObserver.prototype.dispose = function(){this.isStopped = true;};
InnerObserver.prototype.fail = function(e){
if(!this.isStopped){
this.isStopped = true;
this.parent.o.onError(e);
return true;}


return false;};


return MergeObserver;})();
















observableProto.merge = function(maxConcurrentOrOther){
return typeof maxConcurrentOrOther !== 'number'?
observableMerge(this,maxConcurrentOrOther):
new MergeObservable(this,maxConcurrentOrOther);};







var observableMerge=Observable.merge = function(){
var scheduler,sources=[],i,len=arguments.length;
if(!arguments[0]){
scheduler = immediateScheduler;
for(i = 1;i < len;i++) {sources.push(arguments[i]);}}else 
if(isScheduler(arguments[0])){
scheduler = arguments[0];
for(i = 1;i < len;i++) {sources.push(arguments[i]);}}else 
{
scheduler = immediateScheduler;
for(i = 0;i < len;i++) {sources.push(arguments[i]);}}

if(Array.isArray(sources[0])){
sources = sources[0];}

return observableOf(scheduler,sources).mergeAll();};


var MergeAllObservable=(function(__super__){
inherits(MergeAllObservable,__super__);

function MergeAllObservable(source){
this.source = source;
__super__.call(this);}


MergeAllObservable.prototype.subscribeCore = function(observer){
var g=new CompositeDisposable(),m=new SingleAssignmentDisposable();
g.add(m);
m.setDisposable(this.source.subscribe(new MergeAllObserver(observer,g)));
return g;};


function MergeAllObserver(o,g){
this.o = o;
this.g = g;
this.isStopped = false;
this.done = false;}

MergeAllObserver.prototype.onNext = function(innerSource){
if(this.isStopped){return;}
var sad=new SingleAssignmentDisposable();
this.g.add(sad);

isPromise(innerSource) && (innerSource = observableFromPromise(innerSource));

sad.setDisposable(innerSource.subscribe(new InnerObserver(this,sad)));};

MergeAllObserver.prototype.onError = function(e){
if(!this.isStopped){
this.isStopped = true;
this.o.onError(e);}};


MergeAllObserver.prototype.onCompleted = function(){
if(!this.isStopped){
this.isStopped = true;
this.done = true;
this.g.length === 1 && this.o.onCompleted();}};


MergeAllObserver.prototype.dispose = function(){this.isStopped = true;};
MergeAllObserver.prototype.fail = function(e){
if(!this.isStopped){
this.isStopped = true;
this.o.onError(e);
return true;}


return false;};


function InnerObserver(parent,sad){
this.parent = parent;
this.sad = sad;
this.isStopped = false;}

InnerObserver.prototype.onNext = function(x){if(!this.isStopped){this.parent.o.onNext(x);}};
InnerObserver.prototype.onError = function(e){
if(!this.isStopped){
this.isStopped = true;
this.parent.o.onError(e);}};


InnerObserver.prototype.onCompleted = function(){
if(!this.isStopped){
var parent=this.parent;
this.isStopped = true;
parent.g.remove(this.sad);
parent.done && parent.g.length === 1 && parent.o.onCompleted();}};


InnerObserver.prototype.dispose = function(){this.isStopped = true;};
InnerObserver.prototype.fail = function(e){
if(!this.isStopped){
this.isStopped = true;
this.parent.o.onError(e);
return true;}


return false;};


return MergeAllObservable;})(
ObservableBase);





observableProto.mergeAll = function(){
return new MergeAllObservable(this);};


var CompositeError=Rx.CompositeError = function(errors){
this.innerErrors = errors;
this.message = 'This contains multiple errors. Check the innerErrors';
Error.call(this);};

CompositeError.prototype = Object.create(Error.prototype);
CompositeError.prototype.name = 'CompositeError';

var MergeDelayErrorObservable=(function(__super__){
inherits(MergeDelayErrorObservable,__super__);
function MergeDelayErrorObservable(source){
this.source = source;
__super__.call(this);}


MergeDelayErrorObservable.prototype.subscribeCore = function(o){
var group=new CompositeDisposable(),
m=new SingleAssignmentDisposable(),
state={isStopped:false,errors:[],o:o};

group.add(m);
m.setDisposable(this.source.subscribe(new MergeDelayErrorObserver(group,state)));

return group;};


return MergeDelayErrorObservable;})(
ObservableBase);

var MergeDelayErrorObserver=(function(__super__){
inherits(MergeDelayErrorObserver,__super__);
function MergeDelayErrorObserver(group,state){
this._group = group;
this._state = state;
__super__.call(this);}


function setCompletion(o,errors){
if(errors.length === 0){
o.onCompleted();}else 
if(errors.length === 1){
o.onError(errors[0]);}else 
{
o.onError(new CompositeError(errors));}}



MergeDelayErrorObserver.prototype.next = function(x){
var inner=new SingleAssignmentDisposable();
this._group.add(inner);


isPromise(x) && (x = observableFromPromise(x));
inner.setDisposable(x.subscribe(new InnerObserver(inner,this._group,this._state)));};


MergeDelayErrorObserver.prototype.error = function(e){
this._state.errors.push(e);
this._state.isStopped = true;
this._group.length === 1 && setCompletion(this._state.o,this._state.errors);};


MergeDelayErrorObserver.prototype.completed = function(){
this._state.isStopped = true;
this._group.length === 1 && setCompletion(this._state.o,this._state.errors);};


inherits(InnerObserver,__super__);
function InnerObserver(inner,group,state){
this._inner = inner;
this._group = group;
this._state = state;
__super__.call(this);}


InnerObserver.prototype.next = function(x){this._state.o.onNext(x);};
InnerObserver.prototype.error = function(e){
this._state.errors.push(e);
this._group.remove(this._inner);
this._state.isStopped && this._group.length === 1 && setCompletion(this._state.o,this._state.errors);};

InnerObserver.prototype.completed = function(){
this._group.remove(this._inner);
this._state.isStopped && this._group.length === 1 && setCompletion(this._state.o,this._state.errors);};


return MergeDelayErrorObserver;})(
AbstractObserver);












Observable.mergeDelayError = function(){
var args;
if(Array.isArray(arguments[0])){
args = arguments[0];}else 
{
var len=arguments.length;
args = new Array(len);
for(var i=0;i < len;i++) {args[i] = arguments[i];}}

var source=observableOf(null,args);
return new MergeDelayErrorObservable(source);};







observableProto.onErrorResumeNext = function(second){
if(!second){throw new Error('Second observable is required');}
return onErrorResumeNext([this,second]);};


var OnErrorResumeNextObservable=(function(__super__){
inherits(OnErrorResumeNextObservable,__super__);
function OnErrorResumeNextObservable(sources){
this.sources = sources;
__super__.call(this);}


function scheduleMethod(state,recurse){
if(state.pos < state.sources.length){
var current=state.sources[state.pos++];
isPromise(current) && (current = observableFromPromise(current));
var d=new SingleAssignmentDisposable();
state.subscription.setDisposable(d);
d.setDisposable(current.subscribe(new OnErrorResumeNextObserver(state,recurse)));}else 
{
state.o.onCompleted();}}



OnErrorResumeNextObservable.prototype.subscribeCore = function(o){
var subscription=new SerialDisposable(),
state={pos:0,subscription:subscription,o:o,sources:this.sources},
cancellable=immediateScheduler.scheduleRecursive(state,scheduleMethod);

return new BinaryDisposable(subscription,cancellable);};


return OnErrorResumeNextObservable;})(
ObservableBase);

var OnErrorResumeNextObserver=(function(__super__){
inherits(OnErrorResumeNextObserver,__super__);
function OnErrorResumeNextObserver(state,recurse){
this._state = state;
this._recurse = recurse;
__super__.call(this);}


OnErrorResumeNextObserver.prototype.next = function(x){this._state.o.onNext(x);};
OnErrorResumeNextObserver.prototype.error = function(){this._recurse(this._state);};
OnErrorResumeNextObserver.prototype.completed = function(){this._recurse(this._state);};

return OnErrorResumeNextObserver;})(
AbstractObserver);





var onErrorResumeNext=Observable.onErrorResumeNext = function(){
var sources=[];
if(Array.isArray(arguments[0])){
sources = arguments[0];}else 
{
var len=arguments.length;
sources = new Array(len);
for(var i=0;i < len;i++) {sources[i] = arguments[i];}}

return new OnErrorResumeNextObservable(sources);};


var SkipUntilObservable=(function(__super__){
inherits(SkipUntilObservable,__super__);

function SkipUntilObservable(source,other){
this._s = source;
this._o = isPromise(other)?observableFromPromise(other):other;
this._open = false;
__super__.call(this);}


SkipUntilObservable.prototype.subscribeCore = function(o){
var leftSubscription=new SingleAssignmentDisposable();
leftSubscription.setDisposable(this._s.subscribe(new SkipUntilSourceObserver(o,this)));

isPromise(this._o) && (this._o = observableFromPromise(this._o));

var rightSubscription=new SingleAssignmentDisposable();
rightSubscription.setDisposable(this._o.subscribe(new SkipUntilOtherObserver(o,this,rightSubscription)));

return new BinaryDisposable(leftSubscription,rightSubscription);};


return SkipUntilObservable;})(
ObservableBase);

var SkipUntilSourceObserver=(function(__super__){
inherits(SkipUntilSourceObserver,__super__);
function SkipUntilSourceObserver(o,p){
this._o = o;
this._p = p;
__super__.call(this);}


SkipUntilSourceObserver.prototype.next = function(x){
this._p._open && this._o.onNext(x);};


SkipUntilSourceObserver.prototype.error = function(err){
this._o.onError(err);};


SkipUntilSourceObserver.prototype.onCompleted = function(){
this._p._open && this._o.onCompleted();};


return SkipUntilSourceObserver;})(
AbstractObserver);

var SkipUntilOtherObserver=(function(__super__){
inherits(SkipUntilOtherObserver,__super__);
function SkipUntilOtherObserver(o,p,r){
this._o = o;
this._p = p;
this._r = r;
__super__.call(this);}


SkipUntilOtherObserver.prototype.next = function(){
this._p._open = true;
this._r.dispose();};


SkipUntilOtherObserver.prototype.error = function(err){
this._o.onError(err);};


SkipUntilOtherObserver.prototype.onCompleted = function(){
this._r.dispose();};


return SkipUntilOtherObserver;})(
AbstractObserver);






observableProto.skipUntil = function(other){
return new SkipUntilObservable(this,other);};


var SwitchObservable=(function(__super__){
inherits(SwitchObservable,__super__);
function SwitchObservable(source){
this.source = source;
__super__.call(this);}


SwitchObservable.prototype.subscribeCore = function(o){
var inner=new SerialDisposable(),s=this.source.subscribe(new SwitchObserver(o,inner));
return new BinaryDisposable(s,inner);};


inherits(SwitchObserver,AbstractObserver);
function SwitchObserver(o,inner){
this.o = o;
this.inner = inner;
this.stopped = false;
this.latest = 0;
this.hasLatest = false;
AbstractObserver.call(this);}


SwitchObserver.prototype.next = function(innerSource){
var d=new SingleAssignmentDisposable(),id=++this.latest;
this.hasLatest = true;
this.inner.setDisposable(d);
isPromise(innerSource) && (innerSource = observableFromPromise(innerSource));
d.setDisposable(innerSource.subscribe(new InnerObserver(this,id)));};


SwitchObserver.prototype.error = function(e){
this.o.onError(e);};


SwitchObserver.prototype.completed = function(){
this.stopped = true;
!this.hasLatest && this.o.onCompleted();};


inherits(InnerObserver,AbstractObserver);
function InnerObserver(parent,id){
this.parent = parent;
this.id = id;
AbstractObserver.call(this);}

InnerObserver.prototype.next = function(x){
this.parent.latest === this.id && this.parent.o.onNext(x);};


InnerObserver.prototype.error = function(e){
this.parent.latest === this.id && this.parent.o.onError(e);};


InnerObserver.prototype.completed = function(){
if(this.parent.latest === this.id){
this.parent.hasLatest = false;
this.parent.isStopped && this.parent.o.onCompleted();}};



return SwitchObservable;})(
ObservableBase);





observableProto['switch'] = observableProto.switchLatest = function(){
return new SwitchObservable(this);};


var TakeUntilObservable=(function(__super__){
inherits(TakeUntilObservable,__super__);

function TakeUntilObservable(source,other){
this.source = source;
this.other = isPromise(other)?observableFromPromise(other):other;
__super__.call(this);}


TakeUntilObservable.prototype.subscribeCore = function(o){
return new BinaryDisposable(
this.source.subscribe(o),
this.other.subscribe(new TakeUntilObserver(o)));};



return TakeUntilObservable;})(
ObservableBase);

var TakeUntilObserver=(function(__super__){
inherits(TakeUntilObserver,__super__);
function TakeUntilObserver(o){
this._o = o;
__super__.call(this);}


TakeUntilObserver.prototype.next = function(){
this._o.onCompleted();};


TakeUntilObserver.prototype.error = function(err){
this._o.onError(err);};


TakeUntilObserver.prototype.onCompleted = noop;

return TakeUntilObserver;})(
AbstractObserver);






observableProto.takeUntil = function(other){
return new TakeUntilObservable(this,other);};


function falseFactory(){return false;}
function argumentsToArray(){
var len=arguments.length,args=new Array(len);
for(var i=0;i < len;i++) {args[i] = arguments[i];}
return args;}


var WithLatestFromObservable=(function(__super__){
inherits(WithLatestFromObservable,__super__);
function WithLatestFromObservable(source,sources,resultSelector){
this._s = source;
this._ss = sources;
this._cb = resultSelector;
__super__.call(this);}


WithLatestFromObservable.prototype.subscribeCore = function(o){
var len=this._ss.length;
var state={
hasValue:arrayInitialize(len,falseFactory),
hasValueAll:false,
values:new Array(len)};


var n=this._ss.length,subscriptions=new Array(n + 1);
for(var i=0;i < n;i++) {
var other=this._ss[i],sad=new SingleAssignmentDisposable();
isPromise(other) && (other = observableFromPromise(other));
sad.setDisposable(other.subscribe(new WithLatestFromOtherObserver(o,i,state)));
subscriptions[i] = sad;}


var sad=new SingleAssignmentDisposable();
sad.setDisposable(this._s.subscribe(new WithLatestFromSourceObserver(o,this._cb,state)));
subscriptions[n] = sad;

return new NAryDisposable(subscriptions);};


return WithLatestFromObservable;})(
ObservableBase);

var WithLatestFromOtherObserver=(function(__super__){
inherits(WithLatestFromOtherObserver,__super__);
function WithLatestFromOtherObserver(o,i,state){
this._o = o;
this._i = i;
this._state = state;
__super__.call(this);}


WithLatestFromOtherObserver.prototype.next = function(x){
this._state.values[this._i] = x;
this._state.hasValue[this._i] = true;
this._state.hasValueAll = this._state.hasValue.every(identity);};


WithLatestFromOtherObserver.prototype.error = function(e){
this._o.onError(e);};


WithLatestFromOtherObserver.prototype.completed = noop;

return WithLatestFromOtherObserver;})(
AbstractObserver);

var WithLatestFromSourceObserver=(function(__super__){
inherits(WithLatestFromSourceObserver,__super__);
function WithLatestFromSourceObserver(o,cb,state){
this._o = o;
this._cb = cb;
this._state = state;
__super__.call(this);}


WithLatestFromSourceObserver.prototype.next = function(x){
var allValues=[x].concat(this._state.values);
if(!this._state.hasValueAll){return;}
var res=tryCatch(this._cb).apply(null,allValues);
if(res === errorObj){return this._o.onError(res.e);}
this._o.onNext(res);};


WithLatestFromSourceObserver.prototype.error = function(e){
this._o.onError(e);};


WithLatestFromSourceObserver.prototype.completed = function(){
this._o.onCompleted();};


return WithLatestFromSourceObserver;})(
AbstractObserver);





observableProto.withLatestFrom = function(){
if(arguments.length === 0){throw new Error('invalid arguments');}

var len=arguments.length,args=new Array(len);
for(var i=0;i < len;i++) {args[i] = arguments[i];}
var resultSelector=isFunction(args[len - 1])?args.pop():argumentsToArray;
Array.isArray(args[0]) && (args = args[0]);

return new WithLatestFromObservable(this,args,resultSelector);};


function falseFactory(){return false;}
function emptyArrayFactory(){return [];}

var ZipObservable=(function(__super__){
inherits(ZipObservable,__super__);
function ZipObservable(sources,resultSelector){
this._s = sources;
this._cb = resultSelector;
__super__.call(this);}


ZipObservable.prototype.subscribeCore = function(observer){
var n=this._s.length,
subscriptions=new Array(n);
done = arrayInitialize(n,falseFactory),
q = arrayInitialize(n,emptyArrayFactory);

for(var i=0;i < n;i++) {
var source=this._s[i],sad=new SingleAssignmentDisposable();
subscriptions[i] = sad;
isPromise(source) && (source = observableFromPromise(source));
sad.setDisposable(source.subscribe(new ZipObserver(observer,i,this,q,done)));}


return new NAryDisposable(subscriptions);};


return ZipObservable;})(
ObservableBase);

var ZipObserver=(function(__super__){
inherits(ZipObserver,__super__);
function ZipObserver(o,i,p,q,d){
this._o = o;
this._i = i;
this._p = p;
this._q = q;
this._d = d;
__super__.call(this);}


function notEmpty(x){return x.length > 0;}
function shiftEach(x){return x.shift();}
function notTheSame(i){
return function(x,j){
return j !== i;};}



ZipObserver.prototype.next = function(x){
this._q[this._i].push(x);
if(this._q.every(notEmpty)){
var queuedValues=this._q.map(shiftEach);
var res=tryCatch(this._p._cb).apply(null,queuedValues);
if(res === errorObj){return this._o.onError(res.e);}
this._o.onNext(res);}else 
if(this._d.filter(notTheSame(this._i)).every(identity)){
this._o.onCompleted();}};



ZipObserver.prototype.error = function(e){
this._o.onError(e);};


ZipObserver.prototype.completed = function(){
this._d[this._i] = true;
this._d.every(identity) && this._o.onCompleted();};


return ZipObserver;})(
AbstractObserver);






observableProto.zip = function(){
if(arguments.length === 0){throw new Error('invalid arguments');}

var len=arguments.length,args=new Array(len);
for(var i=0;i < len;i++) {args[i] = arguments[i];}
var resultSelector=isFunction(args[len - 1])?args.pop():argumentsToArray;
Array.isArray(args[0]) && (args = args[0]);

var parent=this;
args.unshift(parent);

return new ZipObservable(args,resultSelector);};








Observable.zip = function(){
var len=arguments.length,args=new Array(len);
for(var i=0;i < len;i++) {args[i] = arguments[i];}
if(Array.isArray(args[0])){
args = isFunction(args[1])?args[0].concat(args[1]):args[0];}

var first=args.shift();
return first.zip.apply(first,args);};


function falseFactory(){return false;}
function emptyArrayFactory(){return [];}
function argumentsToArray(){
var len=arguments.length,args=new Array(len);
for(var i=0;i < len;i++) {args[i] = arguments[i];}
return args;}







observableProto.zipIterable = function(){
if(arguments.length === 0){throw new Error('invalid arguments');}

var len=arguments.length,args=new Array(len);
for(var i=0;i < len;i++) {args[i] = arguments[i];}
var resultSelector=isFunction(args[len - 1])?args.pop():argumentsToArray;

var parent=this;
args.unshift(parent);
return new AnonymousObservable(function(o){
var n=args.length,
queues=arrayInitialize(n,emptyArrayFactory),
isDone=arrayInitialize(n,falseFactory);

var subscriptions=new Array(n);
for(var idx=0;idx < n;idx++) {
(function(i){
var source=args[i],sad=new SingleAssignmentDisposable();

(isArrayLike(source) || isIterable(source)) && (source = observableFrom(source));

sad.setDisposable(source.subscribe(function(x){
queues[i].push(x);
if(queues.every(function(x){return x.length > 0;})){
var queuedValues=queues.map(function(x){return x.shift();}),
res=tryCatch(resultSelector).apply(parent,queuedValues);
if(res === errorObj){return o.onError(res.e);}
o.onNext(res);}else 
if(isDone.filter(function(x,j){return j !== i;}).every(identity)){
o.onCompleted();}},

function(e){o.onError(e);},function(){
isDone[i] = true;
isDone.every(identity) && o.onCompleted();}));

subscriptions[i] = sad;})(
idx);}


return new CompositeDisposable(subscriptions);},
parent);};


function asObservable(source){
return function subscribe(o){return source.subscribe(o);};}






observableProto.asObservable = function(){
return new AnonymousObservable(asObservable(this),this);};


function toArray(x){return x.toArray();}
function notEmpty(x){return x.length > 0;}







observableProto.bufferWithCount = function(count,skip){
typeof skip !== 'number' && (skip = count);
return this.windowWithCount(count,skip).
flatMap(toArray).
filter(notEmpty);};


var DematerializeObservable=(function(__super__){
inherits(DematerializeObservable,__super__);
function DematerializeObservable(source){
this.source = source;
__super__.call(this);}


DematerializeObservable.prototype.subscribeCore = function(o){
return this.source.subscribe(new DematerializeObserver(o));};


return DematerializeObservable;})(
ObservableBase);

var DematerializeObserver=(function(__super__){
inherits(DematerializeObserver,__super__);

function DematerializeObserver(o){
this._o = o;
__super__.call(this);}


DematerializeObserver.prototype.next = function(x){x.accept(this._o);};
DematerializeObserver.prototype.error = function(e){this._o.onError(e);};
DematerializeObserver.prototype.completed = function(){this._o.onCompleted();};

return DematerializeObserver;})(
AbstractObserver);





observableProto.dematerialize = function(){
return new DematerializeObservable(this);};


var DistinctUntilChangedObservable=(function(__super__){
inherits(DistinctUntilChangedObservable,__super__);
function DistinctUntilChangedObservable(source,keyFn,comparer){
this.source = source;
this.keyFn = keyFn;
this.comparer = comparer;
__super__.call(this);}


DistinctUntilChangedObservable.prototype.subscribeCore = function(o){
return this.source.subscribe(new DistinctUntilChangedObserver(o,this.keyFn,this.comparer));};


return DistinctUntilChangedObservable;})(
ObservableBase);

var DistinctUntilChangedObserver=(function(__super__){
inherits(DistinctUntilChangedObserver,__super__);
function DistinctUntilChangedObserver(o,keyFn,comparer){
this.o = o;
this.keyFn = keyFn;
this.comparer = comparer;
this.hasCurrentKey = false;
this.currentKey = null;
__super__.call(this);}


DistinctUntilChangedObserver.prototype.next = function(x){
var key=x,comparerEquals;
if(isFunction(this.keyFn)){
key = tryCatch(this.keyFn)(x);
if(key === errorObj){return this.o.onError(key.e);}}

if(this.hasCurrentKey){
comparerEquals = tryCatch(this.comparer)(this.currentKey,key);
if(comparerEquals === errorObj){return this.o.onError(comparerEquals.e);}}

if(!this.hasCurrentKey || !comparerEquals){
this.hasCurrentKey = true;
this.currentKey = key;
this.o.onNext(x);}};


DistinctUntilChangedObserver.prototype.error = function(e){
this.o.onError(e);};

DistinctUntilChangedObserver.prototype.completed = function(){
this.o.onCompleted();};


return DistinctUntilChangedObserver;})(
AbstractObserver);







observableProto.distinctUntilChanged = function(keyFn,comparer){
comparer || (comparer = defaultComparer);
return new DistinctUntilChangedObservable(this,keyFn,comparer);};


var TapObservable=(function(__super__){
inherits(TapObservable,__super__);
function TapObservable(source,observerOrOnNext,onError,onCompleted){
this.source = source;
this._oN = observerOrOnNext;
this._oE = onError;
this._oC = onCompleted;
__super__.call(this);}


TapObservable.prototype.subscribeCore = function(o){
return this.source.subscribe(new InnerObserver(o,this));};


inherits(InnerObserver,AbstractObserver);
function InnerObserver(o,p){
this.o = o;
this.t = !p._oN || isFunction(p._oN)?
observerCreate(p._oN || noop,p._oE || noop,p._oC || noop):
p._oN;
this.isStopped = false;
AbstractObserver.call(this);}

InnerObserver.prototype.next = function(x){
var res=tryCatch(this.t.onNext).call(this.t,x);
if(res === errorObj){this.o.onError(res.e);}
this.o.onNext(x);};

InnerObserver.prototype.error = function(err){
var res=tryCatch(this.t.onError).call(this.t,err);
if(res === errorObj){return this.o.onError(res.e);}
this.o.onError(err);};

InnerObserver.prototype.completed = function(){
var res=tryCatch(this.t.onCompleted).call(this.t);
if(res === errorObj){return this.o.onError(res.e);}
this.o.onCompleted();};


return TapObservable;})(
ObservableBase);









observableProto['do'] = observableProto.tap = observableProto.doAction = function(observerOrOnNext,onError,onCompleted){
return new TapObservable(this,observerOrOnNext,onError,onCompleted);};









observableProto.doOnNext = observableProto.tapOnNext = function(onNext,thisArg){
return this.tap(typeof thisArg !== 'undefined'?function(x){onNext.call(thisArg,x);}:onNext);};









observableProto.doOnError = observableProto.tapOnError = function(onError,thisArg){
return this.tap(noop,typeof thisArg !== 'undefined'?function(e){onError.call(thisArg,e);}:onError);};









observableProto.doOnCompleted = observableProto.tapOnCompleted = function(onCompleted,thisArg){
return this.tap(noop,null,typeof thisArg !== 'undefined'?function(){onCompleted.call(thisArg);}:onCompleted);};







observableProto['finally'] = function(action){
var source=this;
return new AnonymousObservable(function(observer){
var subscription=tryCatch(source.subscribe).call(source,observer);
if(subscription === errorObj){
action();
return thrower(subscription.e);}

return disposableCreate(function(){
var r=tryCatch(subscription.dispose).call(subscription);
action();
r === errorObj && thrower(r.e);});},

this);};


var IgnoreElementsObservable=(function(__super__){
inherits(IgnoreElementsObservable,__super__);

function IgnoreElementsObservable(source){
this.source = source;
__super__.call(this);}


IgnoreElementsObservable.prototype.subscribeCore = function(o){
return this.source.subscribe(new InnerObserver(o));};


function InnerObserver(o){
this.o = o;
this.isStopped = false;}

InnerObserver.prototype.onNext = noop;
InnerObserver.prototype.onError = function(err){
if(!this.isStopped){
this.isStopped = true;
this.o.onError(err);}};


InnerObserver.prototype.onCompleted = function(){
if(!this.isStopped){
this.isStopped = true;
this.o.onCompleted();}};


InnerObserver.prototype.dispose = function(){this.isStopped = true;};
InnerObserver.prototype.fail = function(e){
if(!this.isStopped){
this.isStopped = true;
this.observer.onError(e);
return true;}


return false;};


return IgnoreElementsObservable;})(
ObservableBase);





observableProto.ignoreElements = function(){
return new IgnoreElementsObservable(this);};


var MaterializeObservable=(function(__super__){
inherits(MaterializeObservable,__super__);
function MaterializeObservable(source,fn){
this.source = source;
__super__.call(this);}


MaterializeObservable.prototype.subscribeCore = function(o){
return this.source.subscribe(new MaterializeObserver(o));};


return MaterializeObservable;})(
ObservableBase);

var MaterializeObserver=(function(__super__){
inherits(MaterializeObserver,__super__);

function MaterializeObserver(o){
this._o = o;
__super__.call(this);}


MaterializeObserver.prototype.next = function(x){this._o.onNext(notificationCreateOnNext(x));};
MaterializeObserver.prototype.error = function(e){this._o.onNext(notificationCreateOnError(e));this._o.onCompleted();};
MaterializeObserver.prototype.completed = function(){this._o.onNext(notificationCreateOnCompleted());this._o.onCompleted();};

return MaterializeObserver;})(
AbstractObserver);





observableProto.materialize = function(){
return new MaterializeObservable(this);};







observableProto.repeat = function(repeatCount){
return enumerableRepeat(this,repeatCount).concat();};












observableProto.retry = function(retryCount){
return enumerableRepeat(this,retryCount).catchError();};












observableProto.retryWhen = function(notifier){
return enumerableRepeat(this).catchErrorWhen(notifier);};

var ScanObservable=(function(__super__){
inherits(ScanObservable,__super__);
function ScanObservable(source,accumulator,hasSeed,seed){
this.source = source;
this.accumulator = accumulator;
this.hasSeed = hasSeed;
this.seed = seed;
__super__.call(this);}


ScanObservable.prototype.subscribeCore = function(o){
return this.source.subscribe(new ScanObserver(o,this));};


return ScanObservable;})(
ObservableBase);

var ScanObserver=(function(__super__){
inherits(ScanObserver,__super__);
function ScanObserver(o,parent){
this._o = o;
this._p = parent;
this._fn = parent.accumulator;
this._hs = parent.hasSeed;
this._s = parent.seed;
this._ha = false;
this._a = null;
this._hv = false;
this._i = 0;
__super__.call(this);}


ScanObserver.prototype.next = function(x){
!this._hv && (this._hv = true);
if(this._ha){
this._a = tryCatch(this._fn)(this._a,x,this._i,this._p);}else 
{
this._a = this._hs?tryCatch(this._fn)(this._s,x,this._i,this._p):x;
this._ha = true;}

if(this._a === errorObj){return this._o.onError(this._a.e);}
this._o.onNext(this._a);
this._i++;};


ScanObserver.prototype.error = function(e){
this._o.onError(e);};


ScanObserver.prototype.completed = function(){
!this._hv && this._hs && this._o.onNext(this._s);
this._o.onCompleted();};


return ScanObserver;})(
AbstractObserver);








observableProto.scan = function(){
var hasSeed=false,seed,accumulator=arguments[0];
if(arguments.length === 2){
hasSeed = true;
seed = arguments[1];}

return new ScanObservable(this,accumulator,hasSeed,seed);};


var SkipLastObservable=(function(__super__){
inherits(SkipLastObservable,__super__);
function SkipLastObservable(source,c){
this.source = source;
this._c = c;
__super__.call(this);}


SkipLastObservable.prototype.subscribeCore = function(o){
return this.source.subscribe(new SkipLastObserver(o,this._c));};


return SkipLastObservable;})(
ObservableBase);

var SkipLastObserver=(function(__super__){
inherits(SkipLastObserver,__super__);
function SkipLastObserver(o,c){
this._o = o;
this._c = c;
this._q = [];
__super__.call(this);}


SkipLastObserver.prototype.next = function(x){
this._q.push(x);
this._q.length > this._c && this._o.onNext(this._q.shift());};


SkipLastObserver.prototype.error = function(e){
this._o.onError(e);};


SkipLastObserver.prototype.completed = function(){
this._o.onCompleted();};


return SkipLastObserver;})(
AbstractObserver);









observableProto.skipLast = function(count){
if(count < 0){throw new ArgumentOutOfRangeError();}
return new SkipLastObservable(this,count);};










observableProto.startWith = function(){
var values,scheduler,start=0;
if(!!arguments.length && isScheduler(arguments[0])){
scheduler = arguments[0];
start = 1;}else 
{
scheduler = immediateScheduler;}

for(var args=[],i=start,len=arguments.length;i < len;i++) {args.push(arguments[i]);}
return enumerableOf([observableFromArray(args,scheduler),this]).concat();};


var TakeLastObserver=(function(__super__){
inherits(TakeLastObserver,__super__);
function TakeLastObserver(o,c){
this._o = o;
this._c = c;
this._q = [];
__super__.call(this);}


TakeLastObserver.prototype.next = function(x){
this._q.push(x);
this._q.length > this._c && this._q.shift();};


TakeLastObserver.prototype.error = function(e){
this._o.onError(e);};


TakeLastObserver.prototype.completed = function(){
while(this._q.length > 0) {this._o.onNext(this._q.shift());}
this._o.onCompleted();};


return TakeLastObserver;})(
AbstractObserver);









observableProto.takeLast = function(count){
if(count < 0){throw new ArgumentOutOfRangeError();}
var source=this;
return new AnonymousObservable(function(o){
return source.subscribe(new TakeLastObserver(o,count));},
source);};


var TakeLastBufferObserver=(function(__super__){
inherits(TakeLastBufferObserver,__super__);
function TakeLastBufferObserver(o,c){
this._o = o;
this._c = c;
this._q = [];
__super__.call(this);}


TakeLastBufferObserver.prototype.next = function(x){
this._q.push(x);
this._q.length > this._c && this._q.shift();};


TakeLastBufferObserver.prototype.error = function(e){
this._o.onError(e);};


TakeLastBufferObserver.prototype.completed = function(){
this._o.onNext(this._q);
this._o.onCompleted();};


return TakeLastBufferObserver;})(
AbstractObserver);










observableProto.takeLastBuffer = function(count){
if(count < 0){throw new ArgumentOutOfRangeError();}
var source=this;
return new AnonymousObservable(function(o){
return source.subscribe(new TakeLastBufferObserver(o,count));},
source);};








observableProto.windowWithCount = function(count,skip){
var source=this;
+count || (count = 0);
Math.abs(count) === Infinity && (count = 0);
if(count <= 0){throw new ArgumentOutOfRangeError();}
skip == null && (skip = count);
+skip || (skip = 0);
Math.abs(skip) === Infinity && (skip = 0);

if(skip <= 0){throw new ArgumentOutOfRangeError();}
return new AnonymousObservable(function(observer){
var m=new SingleAssignmentDisposable(),
refCountDisposable=new RefCountDisposable(m),
n=0,
q=[];

function createWindow(){
var s=new Subject();
q.push(s);
observer.onNext(addRef(s,refCountDisposable));}


createWindow();

m.setDisposable(source.subscribe(
function(x){
for(var i=0,len=q.length;i < len;i++) {q[i].onNext(x);}
var c=n - count + 1;
c >= 0 && c % skip === 0 && q.shift().onCompleted();
++n % skip === 0 && createWindow();},

function(e){
while(q.length > 0) {q.shift().onError(e);}
observer.onError(e);},

function(){
while(q.length > 0) {q.shift().onCompleted();}
observer.onCompleted();}));


return refCountDisposable;},
source);};


function concatMap(source,selector,thisArg){
var selectorFunc=bindCallback(selector,thisArg,3);
return source.map(function(x,i){
var result=selectorFunc(x,i,source);
isPromise(result) && (result = observableFromPromise(result));
(isArrayLike(result) || isIterable(result)) && (result = observableFrom(result));
return result;}).
concatAll();}





















observableProto.selectConcat = observableProto.concatMap = function(selector,resultSelector,thisArg){
if(isFunction(selector) && isFunction(resultSelector)){
return this.concatMap(function(x,i){
var selectorResult=selector(x,i);
isPromise(selectorResult) && (selectorResult = observableFromPromise(selectorResult));
(isArrayLike(selectorResult) || isIterable(selectorResult)) && (selectorResult = observableFrom(selectorResult));

return selectorResult.map(function(y,i2){
return resultSelector(x,y,i,i2);});});}



return isFunction(selector)?
concatMap(this,selector,thisArg):
concatMap(this,function(){return selector;});};










observableProto.concatMapObserver = observableProto.selectConcatObserver = function(onNext,onError,onCompleted,thisArg){
var source=this,
onNextFunc=bindCallback(onNext,thisArg,2),
onErrorFunc=bindCallback(onError,thisArg,1),
onCompletedFunc=bindCallback(onCompleted,thisArg,0);
return new AnonymousObservable(function(observer){
var index=0;
return source.subscribe(
function(x){
var result;
try{
result = onNextFunc(x,index++);}
catch(e) {
observer.onError(e);
return;}

isPromise(result) && (result = observableFromPromise(result));
observer.onNext(result);},

function(err){
var result;
try{
result = onErrorFunc(err);}
catch(e) {
observer.onError(e);
return;}

isPromise(result) && (result = observableFromPromise(result));
observer.onNext(result);
observer.onCompleted();},

function(){
var result;
try{
result = onCompletedFunc();}
catch(e) {
observer.onError(e);
return;}

isPromise(result) && (result = observableFromPromise(result));
observer.onNext(result);
observer.onCompleted();});},

this).concatAll();};


var DefaultIfEmptyObserver=(function(__super__){
inherits(DefaultIfEmptyObserver,__super__);
function DefaultIfEmptyObserver(o,d){
this._o = o;
this._d = d;
this._f = false;
__super__.call(this);}


DefaultIfEmptyObserver.prototype.next = function(x){
this._f = true;
this._o.onNext(x);};


DefaultIfEmptyObserver.prototype.error = function(e){
this._o.onError(e);};


DefaultIfEmptyObserver.prototype.completed = function(){
!this._f && this._o.onNext(this._d);
this._o.onCompleted();};


return DefaultIfEmptyObserver;})(
AbstractObserver);











observableProto.defaultIfEmpty = function(defaultValue){
var source=this;
defaultValue === undefined && (defaultValue = null);
return new AnonymousObservable(function(o){
return source.subscribe(new DefaultIfEmptyObserver(o,defaultValue));},
source);};



function arrayIndexOfComparer(array,item,comparer){
for(var i=0,len=array.length;i < len;i++) {
if(comparer(array[i],item)){return i;}}

return -1;}


function HashSet(comparer){
this.comparer = comparer;
this.set = [];}

HashSet.prototype.push = function(value){
var retValue=arrayIndexOfComparer(this.set,value,this.comparer) === -1;
retValue && this.set.push(value);
return retValue;};


var DistinctObservable=(function(__super__){
inherits(DistinctObservable,__super__);
function DistinctObservable(source,keyFn,cmpFn){
this.source = source;
this._keyFn = keyFn;
this._cmpFn = cmpFn;
__super__.call(this);}


DistinctObservable.prototype.subscribeCore = function(o){
return this.source.subscribe(new DistinctObserver(o,this._keyFn,this._cmpFn));};


return DistinctObservable;})(
ObservableBase);

var DistinctObserver=(function(__super__){
inherits(DistinctObserver,__super__);
function DistinctObserver(o,keyFn,cmpFn){
this._o = o;
this._keyFn = keyFn;
this._h = new HashSet(cmpFn);
__super__.call(this);}


DistinctObserver.prototype.next = function(x){
var key=x;
if(isFunction(this._keyFn)){
key = tryCatch(this._keyFn)(x);
if(key === errorObj){return this._o.onError(key.e);}}

this._h.push(key) && this._o.onNext(x);};


DistinctObserver.prototype.error = function(e){this._o.onError(e);};
DistinctObserver.prototype.completed = function(){this._o.onCompleted();};

return DistinctObserver;})(
AbstractObserver);













observableProto.distinct = function(keySelector,comparer){
comparer || (comparer = defaultComparer);
return new DistinctObservable(this,keySelector,comparer);};













observableProto.groupBy = function(keySelector,elementSelector){
return this.groupByUntil(keySelector,elementSelector,observableNever);};


















observableProto.groupByUntil = function(keySelector,elementSelector,durationSelector){
var source=this;
return new AnonymousObservable(function(o){
var map=new Map(),
groupDisposable=new CompositeDisposable(),
refCountDisposable=new RefCountDisposable(groupDisposable),
handleError=function(e){return function(item){item.onError(e);};};

groupDisposable.add(
source.subscribe(function(x){
var key=tryCatch(keySelector)(x);
if(key === errorObj){
map.forEach(handleError(key.e));
return o.onError(key.e);}


var fireNewMapEntry=false,writer=map.get(key);
if(writer === undefined){
writer = new Subject();
map.set(key,writer);
fireNewMapEntry = true;}


if(fireNewMapEntry){
var group=new GroupedObservable(key,writer,refCountDisposable),
durationGroup=new GroupedObservable(key,writer);
var duration=tryCatch(durationSelector)(durationGroup);
if(duration === errorObj){
map.forEach(handleError(duration.e));
return o.onError(duration.e);}


o.onNext(group);

var md=new SingleAssignmentDisposable();
groupDisposable.add(md);

md.setDisposable(duration.take(1).subscribe(
noop,
function(e){
map.forEach(handleError(e));
o.onError(e);},

function(){
if(map['delete'](key)){writer.onCompleted();}
groupDisposable.remove(md);}));}



var element=x;
if(isFunction(elementSelector)){
element = tryCatch(elementSelector)(x);
if(element === errorObj){
map.forEach(handleError(element.e));
return o.onError(element.e);}}



writer.onNext(element);},
function(e){
map.forEach(handleError(e));
o.onError(e);},
function(){
map.forEach(function(item){item.onCompleted();});
o.onCompleted();}));


return refCountDisposable;},
source);};


var MapObservable=(function(__super__){
inherits(MapObservable,__super__);

function MapObservable(source,selector,thisArg){
this.source = source;
this.selector = bindCallback(selector,thisArg,3);
__super__.call(this);}


function innerMap(selector,self){
return function(x,i,o){return selector.call(this,self.selector(x,i,o),i,o);};}


MapObservable.prototype.internalMap = function(selector,thisArg){
return new MapObservable(this.source,innerMap(selector,this),thisArg);};


MapObservable.prototype.subscribeCore = function(o){
return this.source.subscribe(new InnerObserver(o,this.selector,this));};


inherits(InnerObserver,AbstractObserver);
function InnerObserver(o,selector,source){
this.o = o;
this.selector = selector;
this.source = source;
this.i = 0;
AbstractObserver.call(this);}


InnerObserver.prototype.next = function(x){
var result=tryCatch(this.selector)(x,this.i++,this.source);
if(result === errorObj){return this.o.onError(result.e);}
this.o.onNext(result);};


InnerObserver.prototype.error = function(e){
this.o.onError(e);};


InnerObserver.prototype.completed = function(){
this.o.onCompleted();};


return MapObservable;})(

ObservableBase);







observableProto.map = observableProto.select = function(selector,thisArg){
var selectorFn=typeof selector === 'function'?selector:function(){return selector;};
return this instanceof MapObservable?
this.internalMap(selectorFn,thisArg):
new MapObservable(this,selectorFn,thisArg);};


function plucker(args,len){
return function mapper(x){
var currentProp=x;
for(var i=0;i < len;i++) {
var p=currentProp[args[i]];
if(typeof p !== 'undefined'){
currentProp = p;}else 
{
return undefined;}}


return currentProp;};}









observableProto.pluck = function(){
var len=arguments.length,args=new Array(len);
if(len === 0){throw new Error('List of properties cannot be empty.');}
for(var i=0;i < len;i++) {args[i] = arguments[i];}
return this.map(plucker(args,len));};


observableProto.flatMap = observableProto.selectMany = function(selector,resultSelector,thisArg){
return new FlatMapObservable(this,selector,resultSelector,thisArg).mergeAll();};

















observableProto.flatMapObserver = observableProto.selectManyObserver = function(onNext,onError,onCompleted,thisArg){
var source=this;
return new AnonymousObservable(function(observer){
var index=0;

return source.subscribe(
function(x){
var result;
try{
result = onNext.call(thisArg,x,index++);}
catch(e) {
observer.onError(e);
return;}

isPromise(result) && (result = observableFromPromise(result));
observer.onNext(result);},

function(err){
var result;
try{
result = onError.call(thisArg,err);}
catch(e) {
observer.onError(e);
return;}

isPromise(result) && (result = observableFromPromise(result));
observer.onNext(result);
observer.onCompleted();},

function(){
var result;
try{
result = onCompleted.call(thisArg);}
catch(e) {
observer.onError(e);
return;}

isPromise(result) && (result = observableFromPromise(result));
observer.onNext(result);
observer.onCompleted();});},

source).mergeAll();};


Rx.Observable.prototype.flatMapLatest = function(selector,resultSelector,thisArg){
return new FlatMapObservable(this,selector,resultSelector,thisArg).switchLatest();};

var SkipObservable=(function(__super__){
inherits(SkipObservable,__super__);
function SkipObservable(source,count){
this.source = source;
this.skipCount = count;
__super__.call(this);}


SkipObservable.prototype.subscribeCore = function(o){
return this.source.subscribe(new InnerObserver(o,this.skipCount));};


function InnerObserver(o,c){
this.c = c;
this.r = c;
this.o = o;
this.isStopped = false;}

InnerObserver.prototype.onNext = function(x){
if(this.isStopped){return;}
if(this.r <= 0){
this.o.onNext(x);}else 
{
this.r--;}};


InnerObserver.prototype.onError = function(e){
if(!this.isStopped){this.isStopped = true;this.o.onError(e);}};

InnerObserver.prototype.onCompleted = function(){
if(!this.isStopped){this.isStopped = true;this.o.onCompleted();}};

InnerObserver.prototype.dispose = function(){this.isStopped = true;};
InnerObserver.prototype.fail = function(e){
if(!this.isStopped){
this.isStopped = true;
this.o.onError(e);
return true;}

return false;};


return SkipObservable;})(
ObservableBase);






observableProto.skip = function(count){
if(count < 0){throw new ArgumentOutOfRangeError();}
return new SkipObservable(this,count);};

var SkipWhileObservable=(function(__super__){
inherits(SkipWhileObservable,__super__);
function SkipWhileObservable(source,fn){
this.source = source;
this._fn = fn;
__super__.call(this);}


SkipWhileObservable.prototype.subscribeCore = function(o){
return this.source.subscribe(new SkipWhileObserver(o,this));};


return SkipWhileObservable;})(
ObservableBase);

var SkipWhileObserver=(function(__super__){
inherits(SkipWhileObserver,__super__);

function SkipWhileObserver(o,p){
this._o = o;
this._p = p;
this._i = 0;
this._r = false;
__super__.call(this);}


SkipWhileObserver.prototype.next = function(x){
if(!this._r){
var res=tryCatch(this._p._fn)(x,this._i++,this._p);
if(res === errorObj){return this._o.onError(res.e);}
this._r = !res;}

this._r && this._o.onNext(x);};

SkipWhileObserver.prototype.error = function(e){this._o.onError(e);};
SkipWhileObserver.prototype.completed = function(){this._o.onCompleted();};

return SkipWhileObserver;})(
AbstractObserver);











observableProto.skipWhile = function(predicate,thisArg){
var fn=bindCallback(predicate,thisArg,3);
return new SkipWhileObservable(this,fn);};


var TakeObservable=(function(__super__){
inherits(TakeObservable,__super__);

function TakeObservable(source,count){
this.source = source;
this.takeCount = count;
__super__.call(this);}


TakeObservable.prototype.subscribeCore = function(o){
return this.source.subscribe(new InnerObserver(o,this.takeCount));};


function InnerObserver(o,c){
this.o = o;
this.c = c;
this.r = c;
this.isStopped = false;}

InnerObserver.prototype = {
onNext:function(x){
if(this.isStopped){return;}
if(this.r-- > 0){
this.o.onNext(x);
this.r <= 0 && this.o.onCompleted();}},


onError:function(err){
if(!this.isStopped){
this.isStopped = true;
this.o.onError(err);}},


onCompleted:function(){
if(!this.isStopped){
this.isStopped = true;
this.o.onCompleted();}},


dispose:function(){this.isStopped = true;},
fail:function(e){
if(!this.isStopped){
this.isStopped = true;
this.o.onError(e);
return true;}

return false;}};



return TakeObservable;})(
ObservableBase);







observableProto.take = function(count,scheduler){
if(count < 0){throw new ArgumentOutOfRangeError();}
if(count === 0){return observableEmpty(scheduler);}
return new TakeObservable(this,count);};


var TakeWhileObservable=(function(__super__){
inherits(TakeWhileObservable,__super__);
function TakeWhileObservable(source,fn){
this.source = source;
this._fn = fn;
__super__.call(this);}


TakeWhileObservable.prototype.subscribeCore = function(o){
return this.source.subscribe(new TakeWhileObserver(o,this));};


return TakeWhileObservable;})(
ObservableBase);

var TakeWhileObserver=(function(__super__){
inherits(TakeWhileObserver,__super__);

function TakeWhileObserver(o,p){
this._o = o;
this._p = p;
this._i = 0;
this._r = true;
__super__.call(this);}


TakeWhileObserver.prototype.next = function(x){
if(this._r){
this._r = tryCatch(this._p._fn)(x,this._i++,this._p);
if(this._r === errorObj){return this._o.onError(this._r.e);}}

if(this._r){
this._o.onNext(x);}else 
{
this._o.onCompleted();}};


TakeWhileObserver.prototype.error = function(e){this._o.onError(e);};
TakeWhileObserver.prototype.completed = function(){this._o.onCompleted();};

return TakeWhileObserver;})(
AbstractObserver);








observableProto.takeWhile = function(predicate,thisArg){
var fn=bindCallback(predicate,thisArg,3);
return new TakeWhileObservable(this,fn);};


var FilterObservable=(function(__super__){
inherits(FilterObservable,__super__);

function FilterObservable(source,predicate,thisArg){
this.source = source;
this.predicate = bindCallback(predicate,thisArg,3);
__super__.call(this);}


FilterObservable.prototype.subscribeCore = function(o){
return this.source.subscribe(new InnerObserver(o,this.predicate,this));};


function innerPredicate(predicate,self){
return function(x,i,o){return self.predicate(x,i,o) && predicate.call(this,x,i,o);};}


FilterObservable.prototype.internalFilter = function(predicate,thisArg){
return new FilterObservable(this.source,innerPredicate(predicate,this),thisArg);};


inherits(InnerObserver,AbstractObserver);
function InnerObserver(o,predicate,source){
this.o = o;
this.predicate = predicate;
this.source = source;
this.i = 0;
AbstractObserver.call(this);}


InnerObserver.prototype.next = function(x){
var shouldYield=tryCatch(this.predicate)(x,this.i++,this.source);
if(shouldYield === errorObj){
return this.o.onError(shouldYield.e);}

shouldYield && this.o.onNext(x);};


InnerObserver.prototype.error = function(e){
this.o.onError(e);};


InnerObserver.prototype.completed = function(){
this.o.onCompleted();};


return FilterObservable;})(

ObservableBase);







observableProto.filter = observableProto.where = function(predicate,thisArg){
return this instanceof FilterObservable?this.internalFilter(predicate,thisArg):
new FilterObservable(this,predicate,thisArg);};


var ExtremaByObservable=(function(__super__){
inherits(ExtremaByObservable,__super__);
function ExtremaByObservable(source,k,c){
this.source = source;
this._k = k;
this._c = c;
__super__.call(this);}


ExtremaByObservable.prototype.subscribeCore = function(o){
return this.source.subscribe(new ExtremaByObserver(o,this._k,this._c));};


return ExtremaByObservable;})(
ObservableBase);

var ExtremaByObserver=(function(__super__){
inherits(ExtremaByObserver,__super__);
function ExtremaByObserver(o,k,c){
this._o = o;
this._k = k;
this._c = c;
this._v = null;
this._hv = false;
this._l = [];
__super__.call(this);}


ExtremaByObserver.prototype.next = function(x){
var key=tryCatch(this._k)(x);
if(key === errorObj){return this._o.onError(key.e);}
var comparison=0;
if(!this._hv){
this._hv = true;
this._v = key;}else 
{
comparison = tryCatch(this._c)(key,this._v);
if(comparison === errorObj){return this._o.onError(comparison.e);}}

if(comparison > 0){
this._v = key;
this._l = [];}

if(comparison >= 0){this._l.push(x);}};


ExtremaByObserver.prototype.error = function(e){
this._o.onError(e);};


ExtremaByObserver.prototype.completed = function(){
this._o.onNext(this._l);
this._o.onCompleted();};


return ExtremaByObserver;})(
AbstractObserver);

function firstOnly(x){
if(x.length === 0){throw new EmptyError();}
return x[0];}


var ReduceObservable=(function(__super__){
inherits(ReduceObservable,__super__);
function ReduceObservable(source,accumulator,hasSeed,seed){
this.source = source;
this.accumulator = accumulator;
this.hasSeed = hasSeed;
this.seed = seed;
__super__.call(this);}


ReduceObservable.prototype.subscribeCore = function(observer){
return this.source.subscribe(new ReduceObserver(observer,this));};


return ReduceObservable;})(
ObservableBase);

var ReduceObserver=(function(__super__){
inherits(ReduceObserver,__super__);
function ReduceObserver(o,parent){
this._o = o;
this._p = parent;
this._fn = parent.accumulator;
this._hs = parent.hasSeed;
this._s = parent.seed;
this._ha = false;
this._a = null;
this._hv = false;
this._i = 0;
__super__.call(this);}


ReduceObserver.prototype.next = function(x){
!this._hv && (this._hv = true);
if(this._ha){
this._a = tryCatch(this._fn)(this._a,x,this._i,this._p);}else 
{
this._a = this._hs?tryCatch(this._fn)(this._s,x,this._i,this._p):x;
this._ha = true;}

if(this._a === errorObj){return this._o.onError(this._a.e);}
this._i++;};


ReduceObserver.prototype.error = function(e){
this._o.onError(e);};


ReduceObserver.prototype.completed = function(){
this._hv && this._o.onNext(this._a);
!this._hv && this._hs && this._o.onNext(this._s);
!this._hv && !this._hs && this._o.onError(new EmptyError());
this._o.onCompleted();};


return ReduceObserver;})(
AbstractObserver);








observableProto.reduce = function(){
var hasSeed=false,seed,accumulator=arguments[0];
if(arguments.length === 2){
hasSeed = true;
seed = arguments[1];}

return new ReduceObservable(this,accumulator,hasSeed,seed);};


var SomeObservable=(function(__super__){
inherits(SomeObservable,__super__);
function SomeObservable(source,fn){
this.source = source;
this._fn = fn;
__super__.call(this);}


SomeObservable.prototype.subscribeCore = function(o){
return this.source.subscribe(new SomeObserver(o,this._fn,this.source));};


return SomeObservable;})(
ObservableBase);

var SomeObserver=(function(__super__){
inherits(SomeObserver,__super__);

function SomeObserver(o,fn,s){
this._o = o;
this._fn = fn;
this._s = s;
this._i = 0;
__super__.call(this);}


SomeObserver.prototype.next = function(x){
var result=tryCatch(this._fn)(x,this._i++,this._s);
if(result === errorObj){return this._o.onError(result.e);}
if(Boolean(result)){
this._o.onNext(true);
this._o.onCompleted();}};


SomeObserver.prototype.error = function(e){this._o.onError(e);};
SomeObserver.prototype.completed = function(){
this._o.onNext(false);
this._o.onCompleted();};


return SomeObserver;})(
AbstractObserver);






observableProto.some = function(predicate,thisArg){
var fn=bindCallback(predicate,thisArg,3);
return new SomeObservable(this,fn);};


var IsEmptyObservable=(function(__super__){
inherits(IsEmptyObservable,__super__);
function IsEmptyObservable(source){
this.source = source;
__super__.call(this);}


IsEmptyObservable.prototype.subscribeCore = function(o){
return this.source.subscribe(new IsEmptyObserver(o));};


return IsEmptyObservable;})(
ObservableBase);

var IsEmptyObserver=(function(__super__){
inherits(IsEmptyObserver,__super__);
function IsEmptyObserver(o){
this._o = o;
__super__.call(this);}


IsEmptyObserver.prototype.next = function(){
this._o.onNext(false);
this._o.onCompleted();};

IsEmptyObserver.prototype.error = function(e){this._o.onError(e);};
IsEmptyObserver.prototype.completed = function(){
this._o.onNext(true);
this._o.onCompleted();};


return IsEmptyObserver;})(
AbstractObserver);





observableProto.isEmpty = function(){
return new IsEmptyObservable(this);};


var EveryObservable=(function(__super__){
inherits(EveryObservable,__super__);
function EveryObservable(source,fn){
this.source = source;
this._fn = fn;
__super__.call(this);}


EveryObservable.prototype.subscribeCore = function(o){
return this.source.subscribe(new EveryObserver(o,this._fn,this.source));};


return EveryObservable;})(
ObservableBase);

var EveryObserver=(function(__super__){
inherits(EveryObserver,__super__);

function EveryObserver(o,fn,s){
this._o = o;
this._fn = fn;
this._s = s;
this._i = 0;
__super__.call(this);}


EveryObserver.prototype.next = function(x){
var result=tryCatch(this._fn)(x,this._i++,this._s);
if(result === errorObj){return this._o.onError(result.e);}
if(!Boolean(result)){
this._o.onNext(false);
this._o.onCompleted();}};


EveryObserver.prototype.error = function(e){this._o.onError(e);};
EveryObserver.prototype.completed = function(){
this._o.onNext(true);
this._o.onCompleted();};


return EveryObserver;})(
AbstractObserver);







observableProto.every = function(predicate,thisArg){
var fn=bindCallback(predicate,thisArg,3);
return new EveryObservable(this,fn);};


var IncludesObservable=(function(__super__){
inherits(IncludesObservable,__super__);
function IncludesObservable(source,elem,idx){
var n=+idx || 0;
Math.abs(n) === Infinity && (n = 0);

this.source = source;
this._elem = elem;
this._n = n;
__super__.call(this);}


IncludesObservable.prototype.subscribeCore = function(o){
if(this._n < 0){
o.onNext(false);
o.onCompleted();
return disposableEmpty;}


return this.source.subscribe(new IncludesObserver(o,this._elem,this._n));};


return IncludesObservable;})(
ObservableBase);

var IncludesObserver=(function(__super__){
inherits(IncludesObserver,__super__);
function IncludesObserver(o,elem,n){
this._o = o;
this._elem = elem;
this._n = n;
this._i = 0;
__super__.call(this);}


function comparer(a,b){
return a === 0 && b === 0 || (a === b || isNaN(a) && isNaN(b));}


IncludesObserver.prototype.next = function(x){
if(this._i++ >= this._n && comparer(x,this._elem)){
this._o.onNext(true);
this._o.onCompleted();}};


IncludesObserver.prototype.error = function(e){this._o.onError(e);};
IncludesObserver.prototype.completed = function(){this._o.onNext(false);this._o.onCompleted();};

return IncludesObserver;})(
AbstractObserver);







observableProto.includes = function(searchElement,fromIndex){
return new IncludesObservable(this,searchElement,fromIndex);};


var CountObservable=(function(__super__){
inherits(CountObservable,__super__);
function CountObservable(source,fn){
this.source = source;
this._fn = fn;
__super__.call(this);}


CountObservable.prototype.subscribeCore = function(o){
return this.source.subscribe(new CountObserver(o,this._fn,this.source));};


return CountObservable;})(
ObservableBase);

var CountObserver=(function(__super__){
inherits(CountObserver,__super__);

function CountObserver(o,fn,s){
this._o = o;
this._fn = fn;
this._s = s;
this._i = 0;
this._c = 0;
__super__.call(this);}


CountObserver.prototype.next = function(x){
if(this._fn){
var result=tryCatch(this._fn)(x,this._i++,this._s);
if(result === errorObj){return this._o.onError(result.e);}
Boolean(result) && this._c++;}else 
{
this._c++;}};


CountObserver.prototype.error = function(e){this._o.onError(e);};
CountObserver.prototype.completed = function(){
this._o.onNext(this._c);
this._o.onCompleted();};


return CountObserver;})(
AbstractObserver);










observableProto.count = function(predicate,thisArg){
var fn=bindCallback(predicate,thisArg,3);
return new CountObservable(this,fn);};


var IndexOfObservable=(function(__super__){
inherits(IndexOfObservable,__super__);
function IndexOfObservable(source,e,n){
this.source = source;
this._e = e;
this._n = n;
__super__.call(this);}


IndexOfObservable.prototype.subscribeCore = function(o){
if(this._n < 0){
o.onNext(-1);
o.onCompleted();
return disposableEmpty;}


return this.source.subscribe(new IndexOfObserver(o,this._e,this._n));};


return IndexOfObservable;})(
ObservableBase);

var IndexOfObserver=(function(__super__){
inherits(IndexOfObserver,__super__);
function IndexOfObserver(o,e,n){
this._o = o;
this._e = e;
this._n = n;
this._i = 0;
__super__.call(this);}


IndexOfObserver.prototype.next = function(x){
if(this._i >= this._n && x === this._e){
this._o.onNext(this._i);
this._o.onCompleted();}

this._i++;};

IndexOfObserver.prototype.error = function(e){this._o.onError(e);};
IndexOfObserver.prototype.completed = function(){this._o.onNext(-1);this._o.onCompleted();};

return IndexOfObserver;})(
AbstractObserver);







observableProto.indexOf = function(searchElement,fromIndex){
var n=+fromIndex || 0;
Math.abs(n) === Infinity && (n = 0);
return new IndexOfObservable(this,searchElement,n);};


var SumObservable=(function(__super__){
inherits(SumObservable,__super__);
function SumObservable(source,fn){
this.source = source;
this._fn = fn;
__super__.call(this);}


SumObservable.prototype.subscribeCore = function(o){
return this.source.subscribe(new SumObserver(o,this._fn,this.source));};


return SumObservable;})(
ObservableBase);

var SumObserver=(function(__super__){
inherits(SumObserver,__super__);

function SumObserver(o,fn,s){
this._o = o;
this._fn = fn;
this._s = s;
this._i = 0;
this._c = 0;
__super__.call(this);}


SumObserver.prototype.next = function(x){
if(this._fn){
var result=tryCatch(this._fn)(x,this._i++,this._s);
if(result === errorObj){return this._o.onError(result.e);}
this._c += result;}else 
{
this._c += x;}};


SumObserver.prototype.error = function(e){this._o.onError(e);};
SumObserver.prototype.completed = function(){
this._o.onNext(this._c);
this._o.onCompleted();};


return SumObserver;})(
AbstractObserver);







observableProto.sum = function(keySelector,thisArg){
var fn=bindCallback(keySelector,thisArg,3);
return new SumObservable(this,fn);};











observableProto.minBy = function(keySelector,comparer){
comparer || (comparer = defaultSubComparer);
return new ExtremaByObservable(this,keySelector,function(x,y){return comparer(x,y) * -1;});};










observableProto.min = function(comparer){
return this.minBy(identity,comparer).map(function(x){return firstOnly(x);});};











observableProto.maxBy = function(keySelector,comparer){
comparer || (comparer = defaultSubComparer);
return new ExtremaByObservable(this,keySelector,comparer);};










observableProto.max = function(comparer){
return this.maxBy(identity,comparer).map(function(x){return firstOnly(x);});};


var AverageObservable=(function(__super__){
inherits(AverageObservable,__super__);
function AverageObservable(source,fn){
this.source = source;
this._fn = fn;
__super__.call(this);}


AverageObservable.prototype.subscribeCore = function(o){
return this.source.subscribe(new AverageObserver(o,this._fn,this.source));};


return AverageObservable;})(
ObservableBase);

var AverageObserver=(function(__super__){
inherits(AverageObserver,__super__);
function AverageObserver(o,fn,s){
this._o = o;
this._fn = fn;
this._s = s;
this._c = 0;
this._t = 0;
__super__.call(this);}


AverageObserver.prototype.next = function(x){
if(this._fn){
var r=tryCatch(this._fn)(x,this._c++,this._s);
if(r === errorObj){return this._o.onError(r.e);}
this._t += r;}else 
{
this._c++;
this._t += x;}};


AverageObserver.prototype.error = function(e){this._o.onError(e);};
AverageObserver.prototype.completed = function(){
if(this._c === 0){return this._o.onError(new EmptyError());}
this._o.onNext(this._t / this._c);
this._o.onCompleted();};


return AverageObserver;})(
AbstractObserver);







observableProto.average = function(keySelector,thisArg){
var source=this,fn;
if(isFunction(keySelector)){
fn = bindCallback(keySelector,thisArg,3);}

return new AverageObservable(source,fn);};














observableProto.sequenceEqual = function(second,comparer){
var first=this;
comparer || (comparer = defaultComparer);
return new AnonymousObservable(function(o){
var donel=false,doner=false,ql=[],qr=[];
var subscription1=first.subscribe(function(x){
if(qr.length > 0){
var v=qr.shift();
var equal=tryCatch(comparer)(v,x);
if(equal === errorObj){return o.onError(equal.e);}
if(!equal){
o.onNext(false);
o.onCompleted();}}else 

if(doner){
o.onNext(false);
o.onCompleted();}else 
{
ql.push(x);}},

function(e){o.onError(e);},function(){
donel = true;
if(ql.length === 0){
if(qr.length > 0){
o.onNext(false);
o.onCompleted();}else 
if(doner){
o.onNext(true);
o.onCompleted();}}});




(isArrayLike(second) || isIterable(second)) && (second = observableFrom(second));
isPromise(second) && (second = observableFromPromise(second));
var subscription2=second.subscribe(function(x){
if(ql.length > 0){
var v=ql.shift();
var equal=tryCatch(comparer)(v,x);
if(equal === errorObj){return o.onError(equal.e);}
if(!equal){
o.onNext(false);
o.onCompleted();}}else 

if(donel){
o.onNext(false);
o.onCompleted();}else 
{
qr.push(x);}},

function(e){o.onError(e);},function(){
doner = true;
if(qr.length === 0){
if(ql.length > 0){
o.onNext(false);
o.onCompleted();}else 
if(donel){
o.onNext(true);
o.onCompleted();}}});



return new BinaryDisposable(subscription1,subscription2);},
first);};


var ElementAtObservable=(function(__super__){
inherits(ElementAtObservable,__super__);
function ElementAtObservable(source,i,d){
this.source = source;
this._i = i;
this._d = d;
__super__.call(this);}


ElementAtObservable.prototype.subscribeCore = function(o){
return this.source.subscribe(new ElementAtObserver(o,this._i,this._d));};


return ElementAtObservable;})(
ObservableBase);

var ElementAtObserver=(function(__super__){
inherits(ElementAtObserver,__super__);

function ElementAtObserver(o,i,d){
this._o = o;
this._i = i;
this._d = d;
__super__.call(this);}


ElementAtObserver.prototype.next = function(x){
if(this._i-- === 0){
this._o.onNext(x);
this._o.onCompleted();}};


ElementAtObserver.prototype.error = function(e){this._o.onError(e);};
ElementAtObserver.prototype.completed = function(){
if(this._d === undefined){
this._o.onError(new ArgumentOutOfRangeError());}else 
{
this._o.onNext(this._d);
this._o.onCompleted();}};



return ElementAtObserver;})(
AbstractObserver);







observableProto.elementAt = function(index,defaultValue){
if(index < 0){throw new ArgumentOutOfRangeError();}
return new ElementAtObservable(this,index,defaultValue);};


var SingleObserver=(function(__super__){
inherits(SingleObserver,__super__);
function SingleObserver(o,obj,s){
this._o = o;
this._obj = obj;
this._s = s;
this._i = 0;
this._hv = false;
this._v = null;
__super__.call(this);}


SingleObserver.prototype.next = function(x){
var shouldYield=false;
if(this._obj.predicate){
var res=tryCatch(this._obj.predicate)(x,this._i++,this._s);
if(res === errorObj){return this._o.onError(res.e);}
Boolean(res) && (shouldYield = true);}else 
if(!this._obj.predicate){
shouldYield = true;}

if(shouldYield){
if(this._hv){
return this._o.onError(new Error('Sequence contains more than one matching element'));}

this._hv = true;
this._v = x;}};


SingleObserver.prototype.error = function(e){this._o.onError(e);};
SingleObserver.prototype.completed = function(){
if(this._hv){
this._o.onNext(this._v);
this._o.onCompleted();}else 

if(this._obj.defaultValue === undefined){
this._o.onError(new EmptyError());}else 
{
this._o.onNext(this._obj.defaultValue);
this._o.onCompleted();}};



return SingleObserver;})(
AbstractObserver);






observableProto.single = function(predicate,thisArg){
var obj={},source=this;
if(typeof arguments[0] === 'object'){
obj = arguments[0];}else 
{
obj = {
predicate:arguments[0],
thisArg:arguments[1],
defaultValue:arguments[2]};}


if(isFunction(obj.predicate)){
var fn=obj.predicate;
obj.predicate = bindCallback(fn,obj.thisArg,3);}

return new AnonymousObservable(function(o){
return source.subscribe(new SingleObserver(o,obj,source));},
source);};


var FirstObservable=(function(__super__){
inherits(FirstObservable,__super__);
function FirstObservable(source,obj){
this.source = source;
this._obj = obj;
__super__.call(this);}


FirstObservable.prototype.subscribeCore = function(o){
return this.source.subscribe(new FirstObserver(o,this._obj,this.source));};


return FirstObservable;})(
ObservableBase);

var FirstObserver=(function(__super__){
inherits(FirstObserver,__super__);
function FirstObserver(o,obj,s){
this._o = o;
this._obj = obj;
this._s = s;
this._i = 0;
__super__.call(this);}


FirstObserver.prototype.next = function(x){
if(this._obj.predicate){
var res=tryCatch(this._obj.predicate)(x,this._i++,this._s);
if(res === errorObj){return this._o.onError(res.e);}
if(Boolean(res)){
this._o.onNext(x);
this._o.onCompleted();}}else 

if(!this._obj.predicate){
this._o.onNext(x);
this._o.onCompleted();}};


FirstObserver.prototype.error = function(e){this._o.onError(e);};
FirstObserver.prototype.completed = function(){
if(this._obj.defaultValue === undefined){
this._o.onError(new EmptyError());}else 
{
this._o.onNext(this._obj.defaultValue);
this._o.onCompleted();}};



return FirstObserver;})(
AbstractObserver);





observableProto.first = function(){
var obj={},source=this;
if(typeof arguments[0] === 'object'){
obj = arguments[0];}else 
{
obj = {
predicate:arguments[0],
thisArg:arguments[1],
defaultValue:arguments[2]};}


if(isFunction(obj.predicate)){
var fn=obj.predicate;
obj.predicate = bindCallback(fn,obj.thisArg,3);}

return new FirstObservable(this,obj);};


var LastObservable=(function(__super__){
inherits(LastObservable,__super__);
function LastObservable(source,obj){
this.source = source;
this._obj = obj;
__super__.call(this);}


LastObservable.prototype.subscribeCore = function(o){
return this.source.subscribe(new LastObserver(o,this._obj,this.source));};


return LastObservable;})(
ObservableBase);

var LastObserver=(function(__super__){
inherits(LastObserver,__super__);
function LastObserver(o,obj,s){
this._o = o;
this._obj = obj;
this._s = s;
this._i = 0;
this._hv = false;
this._v = null;
__super__.call(this);}


LastObserver.prototype.next = function(x){
var shouldYield=false;
if(this._obj.predicate){
var res=tryCatch(this._obj.predicate)(x,this._i++,this._s);
if(res === errorObj){return this._o.onError(res.e);}
Boolean(res) && (shouldYield = true);}else 
if(!this._obj.predicate){
shouldYield = true;}

if(shouldYield){
this._hv = true;
this._v = x;}};


LastObserver.prototype.error = function(e){this._o.onError(e);};
LastObserver.prototype.completed = function(){
if(this._hv){
this._o.onNext(this._v);
this._o.onCompleted();}else 

if(this._obj.defaultValue === undefined){
this._o.onError(new EmptyError());}else 
{
this._o.onNext(this._obj.defaultValue);
this._o.onCompleted();}};



return LastObserver;})(
AbstractObserver);





observableProto.last = function(){
var obj={},source=this;
if(typeof arguments[0] === 'object'){
obj = arguments[0];}else 
{
obj = {
predicate:arguments[0],
thisArg:arguments[1],
defaultValue:arguments[2]};}


if(isFunction(obj.predicate)){
var fn=obj.predicate;
obj.predicate = bindCallback(fn,obj.thisArg,3);}

return new LastObservable(this,obj);};


var FindValueObserver=(function(__super__){
inherits(FindValueObserver,__super__);
function FindValueObserver(observer,source,callback,yieldIndex){
this._o = observer;
this._s = source;
this._cb = callback;
this._y = yieldIndex;
this._i = 0;
__super__.call(this);}


FindValueObserver.prototype.next = function(x){
var shouldRun=tryCatch(this._cb)(x,this._i,this._s);
if(shouldRun === errorObj){return this._o.onError(shouldRun.e);}
if(shouldRun){
this._o.onNext(this._y?this._i:x);
this._o.onCompleted();}else 
{
this._i++;}};



FindValueObserver.prototype.error = function(e){
this._o.onError(e);};


FindValueObserver.prototype.completed = function(){
this._y && this._o.onNext(-1);
this._o.onCompleted();};


return FindValueObserver;})(
AbstractObserver);

function findValue(source,predicate,thisArg,yieldIndex){
var callback=bindCallback(predicate,thisArg,3);
return new AnonymousObservable(function(o){
return source.subscribe(new FindValueObserver(o,source,callback,yieldIndex));},
source);}








observableProto.find = function(predicate,thisArg){
return findValue(this,predicate,thisArg,false);};









observableProto.findIndex = function(predicate,thisArg){
return findValue(this,predicate,thisArg,true);};


var ToSetObservable=(function(__super__){
inherits(ToSetObservable,__super__);
function ToSetObservable(source){
this.source = source;
__super__.call(this);}


ToSetObservable.prototype.subscribeCore = function(o){
return this.source.subscribe(new ToSetObserver(o));};


return ToSetObservable;})(
ObservableBase);

var ToSetObserver=(function(__super__){
inherits(ToSetObserver,__super__);
function ToSetObserver(o){
this._o = o;
this._s = new root.Set();
__super__.call(this);}


ToSetObserver.prototype.next = function(x){
this._s.add(x);};


ToSetObserver.prototype.error = function(e){
this._o.onError(e);};


ToSetObserver.prototype.completed = function(){
this._o.onNext(this._s);
this._o.onCompleted();};


return ToSetObserver;})(
AbstractObserver);





observableProto.toSet = function(){
if(typeof root.Set === 'undefined'){throw new TypeError();}
return new ToSetObservable(this);};


var ToMapObservable=(function(__super__){
inherits(ToMapObservable,__super__);
function ToMapObservable(source,k,e){
this.source = source;
this._k = k;
this._e = e;
__super__.call(this);}


ToMapObservable.prototype.subscribeCore = function(o){
return this.source.subscribe(new ToMapObserver(o,this._k,this._e));};


return ToMapObservable;})(
ObservableBase);

var ToMapObserver=(function(__super__){
inherits(ToMapObserver,__super__);
function ToMapObserver(o,k,e){
this._o = o;
this._k = k;
this._e = e;
this._m = new root.Map();
__super__.call(this);}


ToMapObserver.prototype.next = function(x){
var key=tryCatch(this._k)(x);
if(key === errorObj){return this._o.onError(key.e);}
var elem=x;
if(this._e){
elem = tryCatch(this._e)(x);
if(elem === errorObj){return this._o.onError(elem.e);}}


this._m.set(key,elem);};


ToMapObserver.prototype.error = function(e){
this._o.onError(e);};


ToMapObserver.prototype.completed = function(){
this._o.onNext(this._m);
this._o.onCompleted();};


return ToMapObserver;})(
AbstractObserver);







observableProto.toMap = function(keySelector,elementSelector){
if(typeof root.Map === 'undefined'){throw new TypeError();}
return new ToMapObservable(this,keySelector,elementSelector);};


var SliceObservable=(function(__super__){
inherits(SliceObservable,__super__);
function SliceObservable(source,b,e){
this.source = source;
this._b = b;
this._e = e;
__super__.call(this);}


SliceObservable.prototype.subscribeCore = function(o){
return this.source.subscribe(new SliceObserver(o,this._b,this._e));};


return SliceObservable;})(
ObservableBase);

var SliceObserver=(function(__super__){
inherits(SliceObserver,__super__);

function SliceObserver(o,b,e){
this._o = o;
this._b = b;
this._e = e;
this._i = 0;
__super__.call(this);}


SliceObserver.prototype.next = function(x){
if(this._i >= this._b){
if(this._e === this._i){
this._o.onCompleted();}else 
{
this._o.onNext(x);}}


this._i++;};

SliceObserver.prototype.error = function(e){this._o.onError(e);};
SliceObserver.prototype.completed = function(){this._o.onCompleted();};

return SliceObserver;})(
AbstractObserver);









observableProto.slice = function(begin,end){
var start=begin || 0;
if(start < 0){throw new Rx.ArgumentOutOfRangeError();}
if(typeof end === 'number' && end < start){
throw new Rx.ArgumentOutOfRangeError();}

return new SliceObservable(this,start,end);};


var LastIndexOfObservable=(function(__super__){
inherits(LastIndexOfObservable,__super__);
function LastIndexOfObservable(source,e,n){
this.source = source;
this._e = e;
this._n = n;
__super__.call(this);}


LastIndexOfObservable.prototype.subscribeCore = function(o){
if(this._n < 0){
o.onNext(-1);
o.onCompleted();
return disposableEmpty;}


return this.source.subscribe(new LastIndexOfObserver(o,this._e,this._n));};


return LastIndexOfObservable;})(
ObservableBase);

var LastIndexOfObserver=(function(__super__){
inherits(LastIndexOfObserver,__super__);
function LastIndexOfObserver(o,e,n){
this._o = o;
this._e = e;
this._n = n;
this._v = 0;
this._hv = false;
this._i = 0;
__super__.call(this);}


LastIndexOfObserver.prototype.next = function(x){
if(this._i >= this._n && x === this._e){
this._hv = true;
this._v = this._i;}

this._i++;};

LastIndexOfObserver.prototype.error = function(e){this._o.onError(e);};
LastIndexOfObserver.prototype.completed = function(){
if(this._hv){
this._o.onNext(this._v);}else 
{
this._o.onNext(-1);}

this._o.onCompleted();};


return LastIndexOfObserver;})(
AbstractObserver);







observableProto.lastIndexOf = function(searchElement,fromIndex){
var n=+fromIndex || 0;
Math.abs(n) === Infinity && (n = 0);
return new LastIndexOfObservable(this,searchElement,n);};


Observable.wrap = function(fn){
function createObservable(){
return Observable.spawn.call(this,fn.apply(this,arguments));}


createObservable.__generatorFunction__ = fn;
return createObservable;};


var spawn=Observable.spawn = function(){
var gen=arguments[0],self=this,args=[];
for(var i=1,len=arguments.length;i < len;i++) {args.push(arguments[i]);}

return new AnonymousObservable(function(o){
var g=new CompositeDisposable();

if(isFunction(gen)){gen = gen.apply(self,args);}
if(!gen || !isFunction(gen.next)){
o.onNext(gen);
return o.onCompleted();}


function processGenerator(res){
var ret=tryCatch(gen.next).call(gen,res);
if(ret === errorObj){return o.onError(ret.e);}
next(ret);}


processGenerator();

function onError(err){
var ret=tryCatch(gen.next).call(gen,err);
if(ret === errorObj){return o.onError(ret.e);}
next(ret);}


function next(ret){
if(ret.done){
o.onNext(ret.value);
o.onCompleted();
return;}

var obs=toObservable.call(self,ret.value);
var value=null;
var hasValue=false;
if(Observable.isObservable(obs)){
g.add(obs.subscribe(function(val){
hasValue = true;
value = val;},
onError,function(){
hasValue && processGenerator(value);}));}else 

{
onError(new TypeError('type not supported'));}}



return g;});};



function toObservable(obj){
if(!obj){return obj;}
if(Observable.isObservable(obj)){return obj;}
if(isPromise(obj)){return Observable.fromPromise(obj);}
if(isGeneratorFunction(obj) || isGenerator(obj)){return spawn.call(this,obj);}
if(isFunction(obj)){return thunkToObservable.call(this,obj);}
if(isArrayLike(obj) || isIterable(obj)){return arrayToObservable.call(this,obj);}
if(isObject(obj)){return objectToObservable.call(this,obj);}
return obj;}


function arrayToObservable(obj){
return Observable.from(obj).concatMap(function(o){
if(Observable.isObservable(o) || isObject(o)){
return toObservable.call(null,o);}else 
{
return Rx.Observable.just(o);}}).

toArray();}


function objectToObservable(obj){
var results=new obj.constructor(),keys=Object.keys(obj),observables=[];
for(var i=0,len=keys.length;i < len;i++) {
var key=keys[i];
var observable=toObservable.call(this,obj[key]);

if(observable && Observable.isObservable(observable)){
defer(observable,key);}else 
{
results[key] = obj[key];}}



return Observable.forkJoin.apply(Observable,observables).map(function(){
return results;});



function defer(observable,key){
results[key] = undefined;
observables.push(observable.map(function(next){
results[key] = next;}));}}




function thunkToObservable(fn){
var self=this;
return new AnonymousObservable(function(o){
fn.call(self,function(){
var err=arguments[0],res=arguments[1];
if(err){return o.onError(err);}
if(arguments.length > 2){
var args=[];
for(var i=1,len=arguments.length;i < len;i++) {args.push(arguments[i]);}
res = args;}

o.onNext(res);
o.onCompleted();});});}




function isGenerator(obj){
return isFunction(obj.next) && isFunction(obj.throw);}


function isGeneratorFunction(obj){
var ctor=obj.constructor;
if(!ctor){return false;}
if(ctor.name === 'GeneratorFunction' || ctor.displayName === 'GeneratorFunction'){return true;}
return isGenerator(ctor.prototype);}


function isObject(val){
return Object == val.constructor;}



















Observable.start = function(func,context,scheduler){
return observableToAsync(func,context,scheduler)();};









var observableToAsync=Observable.toAsync = function(func,context,scheduler){
isScheduler(scheduler) || (scheduler = defaultScheduler);
return function(){
var args=arguments,
subject=new AsyncSubject();

scheduler.schedule(null,function(){
var result;
try{
result = func.apply(context,args);}
catch(e) {
subject.onError(e);
return;}

subject.onNext(result);
subject.onCompleted();});

return subject.asObservable();};};



function createCbObservable(fn,ctx,selector,args){
var o=new AsyncSubject();

args.push(createCbHandler(o,ctx,selector));
fn.apply(ctx,args);

return o.asObservable();}


function createCbHandler(o,ctx,selector){
return function handler(){
var len=arguments.length,results=new Array(len);
for(var i=0;i < len;i++) {results[i] = arguments[i];}

if(isFunction(selector)){
results = tryCatch(selector).apply(ctx,results);
if(results === errorObj){return o.onError(results.e);}
o.onNext(results);}else 
{
if(results.length <= 1){
o.onNext(results[0]);}else 
{
o.onNext(results);}}



o.onCompleted();};}











Observable.fromCallback = function(fn,ctx,selector){
return function(){
typeof ctx === 'undefined' && (ctx = this);

var len=arguments.length,args=new Array(len);
for(var i=0;i < len;i++) {args[i] = arguments[i];}
return createCbObservable(fn,ctx,selector,args);};};



function createNodeObservable(fn,ctx,selector,args){
var o=new AsyncSubject();

args.push(createNodeHandler(o,ctx,selector));
fn.apply(ctx,args);

return o.asObservable();}


function createNodeHandler(o,ctx,selector){
return function handler(){
var err=arguments[0];
if(err){return o.onError(err);}

var len=arguments.length,results=[];
for(var i=1;i < len;i++) {results[i - 1] = arguments[i];}

if(isFunction(selector)){
var results=tryCatch(selector).apply(ctx,results);
if(results === errorObj){return o.onError(results.e);}
o.onNext(results);}else 
{
if(results.length <= 1){
o.onNext(results[0]);}else 
{
o.onNext(results);}}



o.onCompleted();};}










Observable.fromNodeCallback = function(fn,ctx,selector){
return function(){
typeof ctx === 'undefined' && (ctx = this);
var len=arguments.length,args=new Array(len);
for(var i=0;i < len;i++) {args[i] = arguments[i];}
return createNodeObservable(fn,ctx,selector,args);};};



function isNodeList(el){
if(root.StaticNodeList){


return el instanceof root.StaticNodeList || el instanceof root.NodeList;}else 
{
return Object.prototype.toString.call(el) === '[object NodeList]';}}



function ListenDisposable(e,n,fn){
this._e = e;
this._n = n;
this._fn = fn;
this._e.addEventListener(this._n,this._fn,false);
this.isDisposed = false;}

ListenDisposable.prototype.dispose = function(){
if(!this.isDisposed){
this._e.removeEventListener(this._n,this._fn,false);
this.isDisposed = true;}};



function createEventListener(el,eventName,handler){
var disposables=new CompositeDisposable();


var elemToString=Object.prototype.toString.call(el);
if(isNodeList(el) || elemToString === '[object HTMLCollection]'){
for(var i=0,len=el.length;i < len;i++) {
disposables.add(createEventListener(el.item(i),eventName,handler));}}else 

if(el){
disposables.add(new ListenDisposable(el,eventName,handler));}


return disposables;}





Rx.config.useNativeEvents = false;

var EventObservable=(function(__super__){
inherits(EventObservable,__super__);
function EventObservable(el,name,fn){
this._el = el;
this._n = name;
this._fn = fn;
__super__.call(this);}


function createHandler(o,fn){
return function handler(){
var results=arguments[0];
if(isFunction(fn)){
results = tryCatch(fn).apply(null,arguments);
if(results === errorObj){return o.onError(results.e);}}

o.onNext(results);};}



EventObservable.prototype.subscribeCore = function(o){
return createEventListener(
this._el,
this._n,
createHandler(o,this._fn));};


return EventObservable;})(
ObservableBase);








Observable.fromEvent = function(element,eventName,selector){

if(element.addListener){
return fromEventPattern(
function(h){element.addListener(eventName,h);},
function(h){element.removeListener(eventName,h);},
selector);}



if(!Rx.config.useNativeEvents){

if(typeof element.on === 'function' && typeof element.off === 'function'){
return fromEventPattern(
function(h){element.on(eventName,h);},
function(h){element.off(eventName,h);},
selector);}}



return new EventObservable(element,eventName,selector).publish().refCount();};


var EventPatternObservable=(function(__super__){
inherits(EventPatternObservable,__super__);
function EventPatternObservable(add,del,fn){
this._add = add;
this._del = del;
this._fn = fn;
__super__.call(this);}


function createHandler(o,fn){
return function handler(){
var results=arguments[0];
if(isFunction(fn)){
results = tryCatch(fn).apply(null,arguments);
if(results === errorObj){return o.onError(results.e);}}

o.onNext(results);};}



EventPatternObservable.prototype.subscribeCore = function(o){
var fn=createHandler(o,this._fn);
var returnValue=this._add(fn);
return new EventPatternDisposable(this._del,fn,returnValue);};


function EventPatternDisposable(del,fn,ret){
this._del = del;
this._fn = fn;
this._ret = ret;
this.isDisposed = false;}


EventPatternDisposable.prototype.dispose = function(){
if(!this.isDisposed){
isFunction(this._del) && this._del(this._fn,this._ret);}};



return EventPatternObservable;})(
ObservableBase);








var fromEventPattern=Observable.fromEventPattern = function(addHandler,removeHandler,selector){
return new EventPatternObservable(addHandler,removeHandler,selector).publish().refCount();};







Observable.startAsync = function(functionAsync){
var promise=tryCatch(functionAsync)();
if(promise === errorObj){return observableThrow(promise.e);}
return observableFromPromise(promise);};


var PausableObservable=(function(__super__){
inherits(PausableObservable,__super__);
function PausableObservable(source,pauser){
this.source = source;
this.controller = new Subject();

if(pauser && pauser.subscribe){
this.pauser = this.controller.merge(pauser);}else 
{
this.pauser = this.controller;}


__super__.call(this);}


PausableObservable.prototype._subscribe = function(o){
var conn=this.source.publish(),
subscription=conn.subscribe(o),
connection=disposableEmpty;

var pausable=this.pauser.distinctUntilChanged().subscribe(function(b){
if(b){
connection = conn.connect();}else 
{
connection.dispose();
connection = disposableEmpty;}});



return new NAryDisposable([subscription,connection,pausable]);};


PausableObservable.prototype.pause = function(){
this.controller.onNext(false);};


PausableObservable.prototype.resume = function(){
this.controller.onNext(true);};


return PausableObservable;})(

Observable);









observableProto.pausable = function(pauser){
return new PausableObservable(this,pauser);};


function combineLatestSource(source,subject,resultSelector){
return new AnonymousObservable(function(o){
var hasValue=[false,false],
hasValueAll=false,
isDone=false,
values=new Array(2),
err;

function next(x,i){
values[i] = x;
hasValue[i] = true;
if(hasValueAll || (hasValueAll = hasValue.every(identity))){
if(err){return o.onError(err);}
var res=tryCatch(resultSelector).apply(null,values);
if(res === errorObj){return o.onError(res.e);}
o.onNext(res);}

isDone && values[1] && o.onCompleted();}


return new BinaryDisposable(
source.subscribe(
function(x){
next(x,0);},

function(e){
if(values[1]){
o.onError(e);}else 
{
err = e;}},


function(){
isDone = true;
values[1] && o.onCompleted();}),

subject.subscribe(
function(x){
next(x,1);},

function(e){o.onError(e);},
function(){
isDone = true;
next(true,1);}));},


source);}


var PausableBufferedObservable=(function(__super__){
inherits(PausableBufferedObservable,__super__);
function PausableBufferedObservable(source,pauser){
this.source = source;
this.controller = new Subject();

if(pauser && pauser.subscribe){
this.pauser = this.controller.merge(pauser);}else 
{
this.pauser = this.controller;}


__super__.call(this);}


PausableBufferedObservable.prototype._subscribe = function(o){
var q=[],previousShouldFire;

function drainQueue(){while(q.length > 0) {o.onNext(q.shift());}}

var subscription=
combineLatestSource(
this.source,
this.pauser.startWith(false).distinctUntilChanged(),
function(data,shouldFire){
return {data:data,shouldFire:shouldFire};}).

subscribe(
function(results){
if(previousShouldFire !== undefined && results.shouldFire !== previousShouldFire){
previousShouldFire = results.shouldFire;

if(results.shouldFire){drainQueue();}}else 
{
previousShouldFire = results.shouldFire;

if(results.shouldFire){
o.onNext(results.data);}else 
{
q.push(results.data);}}},



function(err){
drainQueue();
o.onError(err);},

function(){
drainQueue();
o.onCompleted();});


return subscription;};


PausableBufferedObservable.prototype.pause = function(){
this.controller.onNext(false);};


PausableBufferedObservable.prototype.resume = function(){
this.controller.onNext(true);};


return PausableBufferedObservable;})(

Observable);










observableProto.pausableBuffered = function(subject){
return new PausableBufferedObservable(this,subject);};


var ControlledObservable=(function(__super__){
inherits(ControlledObservable,__super__);
function ControlledObservable(source,enableQueue,scheduler){
__super__.call(this);
this.subject = new ControlledSubject(enableQueue,scheduler);
this.source = source.multicast(this.subject).refCount();}


ControlledObservable.prototype._subscribe = function(o){
return this.source.subscribe(o);};


ControlledObservable.prototype.request = function(numberOfItems){
return this.subject.request(numberOfItems == null?-1:numberOfItems);};


return ControlledObservable;})(

Observable);

var ControlledSubject=(function(__super__){
inherits(ControlledSubject,__super__);
function ControlledSubject(enableQueue,scheduler){
enableQueue == null && (enableQueue = true);

__super__.call(this);
this.subject = new Subject();
this.enableQueue = enableQueue;
this.queue = enableQueue?[]:null;
this.requestedCount = 0;
this.requestedDisposable = null;
this.error = null;
this.hasFailed = false;
this.hasCompleted = false;
this.scheduler = scheduler || currentThreadScheduler;}


addProperties(ControlledSubject.prototype,Observer,{
_subscribe:function(o){
return this.subject.subscribe(o);},

onCompleted:function(){
this.hasCompleted = true;
if(!this.enableQueue || this.queue.length === 0){
this.subject.onCompleted();
this.disposeCurrentRequest();}else 
{
this.queue.push(Notification.createOnCompleted());}},


onError:function(error){
this.hasFailed = true;
this.error = error;
if(!this.enableQueue || this.queue.length === 0){
this.subject.onError(error);
this.disposeCurrentRequest();}else 
{
this.queue.push(Notification.createOnError(error));}},


onNext:function(value){
if(this.requestedCount <= 0){
this.enableQueue && this.queue.push(Notification.createOnNext(value));}else 
{
this.requestedCount-- === 0 && this.disposeCurrentRequest();
this.subject.onNext(value);}},


_processRequest:function(numberOfItems){
if(this.enableQueue){
while(this.queue.length > 0 && (numberOfItems > 0 || this.queue[0].kind !== 'N')) {
var first=this.queue.shift();
first.accept(this.subject);
if(first.kind === 'N'){
numberOfItems--;}else 
{
this.disposeCurrentRequest();
this.queue = [];}}}




return numberOfItems;},

request:function(number){
this.disposeCurrentRequest();
var self=this;

this.requestedDisposable = this.scheduler.schedule(number,
function(s,i){
var remaining=self._processRequest(i);
var stopped=self.hasCompleted || self.hasFailed;
if(!stopped && remaining > 0){
self.requestedCount = remaining;

return disposableCreate(function(){
self.requestedCount = 0;});}});







return this.requestedDisposable;},

disposeCurrentRequest:function(){
if(this.requestedDisposable){
this.requestedDisposable.dispose();
this.requestedDisposable = null;}}});




return ControlledSubject;})(
Observable);










observableProto.controlled = function(enableQueue,scheduler){

if(enableQueue && isScheduler(enableQueue)){
scheduler = enableQueue;
enableQueue = true;}


if(enableQueue == null){enableQueue = true;}
return new ControlledObservable(this,enableQueue,scheduler);};


var StopAndWaitObservable=(function(__super__){
inherits(StopAndWaitObservable,__super__);
function StopAndWaitObservable(source){
__super__.call(this);
this.source = source;}


function scheduleMethod(s,self){
self.source.request(1);}


StopAndWaitObservable.prototype._subscribe = function(o){
this.subscription = this.source.subscribe(new StopAndWaitObserver(o,this,this.subscription));
return new BinaryDisposable(
this.subscription,
defaultScheduler.schedule(this,scheduleMethod));};



var StopAndWaitObserver=(function(__sub__){
inherits(StopAndWaitObserver,__sub__);
function StopAndWaitObserver(observer,observable,cancel){
__sub__.call(this);
this.observer = observer;
this.observable = observable;
this.cancel = cancel;
this.scheduleDisposable = null;}


StopAndWaitObserver.prototype.completed = function(){
this.observer.onCompleted();
this.dispose();};


StopAndWaitObserver.prototype.error = function(error){
this.observer.onError(error);
this.dispose();};


function innerScheduleMethod(s,self){
self.observable.source.request(1);}


StopAndWaitObserver.prototype.next = function(value){
this.observer.onNext(value);
this.scheduleDisposable = defaultScheduler.schedule(this,innerScheduleMethod);};


StopAndWaitObservable.dispose = function(){
this.observer = null;
if(this.cancel){
this.cancel.dispose();
this.cancel = null;}

if(this.scheduleDisposable){
this.scheduleDisposable.dispose();
this.scheduleDisposable = null;}

__sub__.prototype.dispose.call(this);};


return StopAndWaitObserver;})(
AbstractObserver);

return StopAndWaitObservable;})(
Observable);






ControlledObservable.prototype.stopAndWait = function(){
return new StopAndWaitObservable(this);};


var WindowedObservable=(function(__super__){
inherits(WindowedObservable,__super__);
function WindowedObservable(source,windowSize){
__super__.call(this);
this.source = source;
this.windowSize = windowSize;}


function scheduleMethod(s,self){
self.source.request(self.windowSize);}


WindowedObservable.prototype._subscribe = function(o){
this.subscription = this.source.subscribe(new WindowedObserver(o,this,this.subscription));
return new BinaryDisposable(
this.subscription,
defaultScheduler.schedule(this,scheduleMethod));};



var WindowedObserver=(function(__sub__){
inherits(WindowedObserver,__sub__);
function WindowedObserver(observer,observable,cancel){
this.observer = observer;
this.observable = observable;
this.cancel = cancel;
this.received = 0;
this.scheduleDisposable = null;
__sub__.call(this);}


WindowedObserver.prototype.completed = function(){
this.observer.onCompleted();
this.dispose();};


WindowedObserver.prototype.error = function(error){
this.observer.onError(error);
this.dispose();};


function innerScheduleMethod(s,self){
self.observable.source.request(self.observable.windowSize);}


WindowedObserver.prototype.next = function(value){
this.observer.onNext(value);
this.received = ++this.received % this.observable.windowSize;
this.received === 0 && (this.scheduleDisposable = defaultScheduler.schedule(this,innerScheduleMethod));};


WindowedObserver.prototype.dispose = function(){
this.observer = null;
if(this.cancel){
this.cancel.dispose();
this.cancel = null;}

if(this.scheduleDisposable){
this.scheduleDisposable.dispose();
this.scheduleDisposable = null;}

__sub__.prototype.dispose.call(this);};


return WindowedObserver;})(
AbstractObserver);

return WindowedObservable;})(
Observable);






ControlledObservable.prototype.windowed = function(windowSize){
return new WindowedObservable(this,windowSize);};







observableProto.pipe = function(dest){
var source=this.pausableBuffered();

function onDrain(){
source.resume();}


dest.addListener('drain',onDrain);

source.subscribe(
function(x){
!dest.write(String(x)) && source.pause();},

function(err){
dest.emit('error',err);},

function(){

!dest._isStdio && dest.end();
dest.removeListener('drain',onDrain);});


source.resume();

return dest;};


var MulticastObservable=(function(__super__){
inherits(MulticastObservable,__super__);
function MulticastObservable(source,fn1,fn2){
this.source = source;
this._fn1 = fn1;
this._fn2 = fn2;
__super__.call(this);}


MulticastObservable.prototype.subscribeCore = function(o){
var connectable=this.source.multicast(this._fn1());
return new BinaryDisposable(this._fn2(connectable).subscribe(o),connectable.connect());};


return MulticastObservable;})(
ObservableBase);


















observableProto.multicast = function(subjectOrSubjectSelector,selector){
return isFunction(subjectOrSubjectSelector)?
new MulticastObservable(this,subjectOrSubjectSelector,selector):
new ConnectableObservable(this,subjectOrSubjectSelector);};













observableProto.publish = function(selector){
return selector && isFunction(selector)?
this.multicast(function(){return new Subject();},selector):
this.multicast(new Subject());};







observableProto.share = function(){
return this.publish().refCount();};













observableProto.publishLast = function(selector){
return selector && isFunction(selector)?
this.multicast(function(){return new AsyncSubject();},selector):
this.multicast(new AsyncSubject());};














observableProto.publishValue = function(initialValueOrSelector,initialValue){
return arguments.length === 2?
this.multicast(function(){
return new BehaviorSubject(initialValue);},
initialValueOrSelector):
this.multicast(new BehaviorSubject(initialValueOrSelector));};








observableProto.shareValue = function(initialValue){
return this.publishValue(initialValue).refCount();};


















observableProto.replay = function(selector,bufferSize,windowSize,scheduler){
return selector && isFunction(selector)?
this.multicast(function(){return new ReplaySubject(bufferSize,windowSize,scheduler);},selector):
this.multicast(new ReplaySubject(bufferSize,windowSize,scheduler));};

















observableProto.shareReplay = function(bufferSize,windowSize,scheduler){
return this.replay(null,bufferSize,windowSize,scheduler).refCount();};


var InnerSubscription=function(s,o){
this._s = s;
this._o = o;};


InnerSubscription.prototype.dispose = function(){
if(!this._s.isDisposed && this._o !== null){
var idx=this._s.observers.indexOf(this._o);
this._s.observers.splice(idx,1);
this._o = null;}};



var RefCountObservable=(function(__super__){
inherits(RefCountObservable,__super__);
function RefCountObservable(source){
this.source = source;
this._count = 0;
this._connectableSubscription = null;
__super__.call(this);}


RefCountObservable.prototype.subscribeCore = function(o){
var shouldConnect=++this._count === 1,subscription=this.source.subscribe(o);
shouldConnect && (this._connectableSubscription = this.source.connect());
return new RefCountDisposable(this,subscription);};


function RefCountDisposable(p,s){
this._p = p;
this._s = s;
this.isDisposed = false;}


RefCountDisposable.prototype.dispose = function(){
if(!this.isDisposed){
this.isDisposed = true;
this._s.dispose();
--this._p._count === 0 && this._p._connectableSubscription.dispose();}};



return RefCountObservable;})(
ObservableBase);

var ConnectableObservable=Rx.ConnectableObservable = (function(__super__){
inherits(ConnectableObservable,__super__);
function ConnectableObservable(source,subject){
this.source = source;
this._hasSubscription = false;
this._subscription = null;
this._sourceObservable = source.asObservable();
this._subject = subject;
__super__.call(this);}


function ConnectDisposable(parent){
this._p = parent;
this.isDisposed = false;}


ConnectDisposable.prototype.dispose = function(){
if(!this.isDisposed){
this.isDisposed = true;
this._p._hasSubscription = false;}};



ConnectableObservable.prototype.connect = function(){
if(!this._hasSubscription){
this._hasSubscription = true;
this._subscription = new BinaryDisposable(
this._sourceObservable.subscribe(this._subject),
new ConnectDisposable(this));}


return this._subscription;};


ConnectableObservable.prototype._subscribe = function(o){
return this._subject.subscribe(o);};


ConnectableObservable.prototype.refCount = function(){
return new RefCountObservable(this);};


return ConnectableObservable;})(
Observable);






observableProto.singleInstance = function(){
var source=this,hasObservable=false,observable;

function getObservable(){
if(!hasObservable){
hasObservable = true;
observable = source.finally(function(){hasObservable = false;}).publish().refCount();}

return observable;}


return new AnonymousObservable(function(o){
return getObservable().subscribe(o);});};












observableProto.join = function(right,leftDurationSelector,rightDurationSelector,resultSelector){
var left=this;
return new AnonymousObservable(function(o){
var group=new CompositeDisposable();
var leftDone=false,rightDone=false;
var leftId=0,rightId=0;
var leftMap=new Map(),rightMap=new Map();
var handleError=function(e){o.onError(e);};

group.add(left.subscribe(
function(value){
var id=leftId++,md=new SingleAssignmentDisposable();

leftMap.set(id,value);
group.add(md);

var duration=tryCatch(leftDurationSelector)(value);
if(duration === errorObj){return o.onError(duration.e);}

md.setDisposable(duration.take(1).subscribe(
noop,
handleError,
function(){
leftMap['delete'](id) && leftMap.size === 0 && leftDone && o.onCompleted();
group.remove(md);}));


rightMap.forEach(function(v){
var result=tryCatch(resultSelector)(value,v);
if(result === errorObj){return o.onError(result.e);}
o.onNext(result);});},


handleError,
function(){
leftDone = true;
(rightDone || leftMap.size === 0) && o.onCompleted();}));



group.add(right.subscribe(
function(value){
var id=rightId++,md=new SingleAssignmentDisposable();

rightMap.set(id,value);
group.add(md);

var duration=tryCatch(rightDurationSelector)(value);
if(duration === errorObj){return o.onError(duration.e);}

md.setDisposable(duration.take(1).subscribe(
noop,
handleError,
function(){
rightMap['delete'](id) && rightMap.size === 0 && rightDone && o.onCompleted();
group.remove(md);}));


leftMap.forEach(function(v){
var result=tryCatch(resultSelector)(v,value);
if(result === errorObj){return o.onError(result.e);}
o.onNext(result);});},


handleError,
function(){
rightDone = true;
(leftDone || rightMap.size === 0) && o.onCompleted();}));


return group;},
left);};











observableProto.groupJoin = function(right,leftDurationSelector,rightDurationSelector,resultSelector){
var left=this;
return new AnonymousObservable(function(o){
var group=new CompositeDisposable();
var r=new RefCountDisposable(group);
var leftMap=new Map(),rightMap=new Map();
var leftId=0,rightId=0;
var handleError=function(e){return function(v){v.onError(e);};};

function handleError(e){};

group.add(left.subscribe(
function(value){
var s=new Subject();
var id=leftId++;
leftMap.set(id,s);

var result=tryCatch(resultSelector)(value,addRef(s,r));
if(result === errorObj){
leftMap.forEach(handleError(result.e));
return o.onError(result.e);}

o.onNext(result);

rightMap.forEach(function(v){s.onNext(v);});

var md=new SingleAssignmentDisposable();
group.add(md);

var duration=tryCatch(leftDurationSelector)(value);
if(duration === errorObj){
leftMap.forEach(handleError(duration.e));
return o.onError(duration.e);}


md.setDisposable(duration.take(1).subscribe(
noop,
function(e){
leftMap.forEach(handleError(e));
o.onError(e);},

function(){
leftMap['delete'](id) && s.onCompleted();
group.remove(md);}));},


function(e){
leftMap.forEach(handleError(e));
o.onError(e);},

function(){o.onCompleted();}));


group.add(right.subscribe(
function(value){
var id=rightId++;
rightMap.set(id,value);

var md=new SingleAssignmentDisposable();
group.add(md);

var duration=tryCatch(rightDurationSelector)(value);
if(duration === errorObj){
leftMap.forEach(handleError(duration.e));
return o.onError(duration.e);}


md.setDisposable(duration.take(1).subscribe(
noop,
function(e){
leftMap.forEach(handleError(e));
o.onError(e);},

function(){
rightMap['delete'](id);
group.remove(md);}));


leftMap.forEach(function(v){v.onNext(value);});},

function(e){
leftMap.forEach(handleError(e));
o.onError(e);}));



return r;},
left);};


function toArray(x){return x.toArray();}







observableProto.buffer = function(){
return this.window.apply(this,arguments).
flatMap(toArray);};









observableProto.window = function(windowOpeningsOrClosingSelector,windowClosingSelector){
if(arguments.length === 1 && typeof arguments[0] !== 'function'){
return observableWindowWithBoundaries.call(this,windowOpeningsOrClosingSelector);}

return typeof windowOpeningsOrClosingSelector === 'function'?
observableWindowWithClosingSelector.call(this,windowOpeningsOrClosingSelector):
observableWindowWithOpenings.call(this,windowOpeningsOrClosingSelector,windowClosingSelector);};


function observableWindowWithOpenings(windowOpenings,windowClosingSelector){
return windowOpenings.groupJoin(this,windowClosingSelector,observableEmpty,function(_,win){
return win;});}



function observableWindowWithBoundaries(windowBoundaries){
var source=this;
return new AnonymousObservable(function(observer){
var win=new Subject(),
d=new CompositeDisposable(),
r=new RefCountDisposable(d);

observer.onNext(addRef(win,r));

d.add(source.subscribe(function(x){
win.onNext(x);},
function(err){
win.onError(err);
observer.onError(err);},
function(){
win.onCompleted();
observer.onCompleted();}));


isPromise(windowBoundaries) && (windowBoundaries = observableFromPromise(windowBoundaries));

d.add(windowBoundaries.subscribe(function(w){
win.onCompleted();
win = new Subject();
observer.onNext(addRef(win,r));},
function(err){
win.onError(err);
observer.onError(err);},
function(){
win.onCompleted();
observer.onCompleted();}));


return r;},
source);}


function observableWindowWithClosingSelector(windowClosingSelector){
var source=this;
return new AnonymousObservable(function(observer){
var m=new SerialDisposable(),
d=new CompositeDisposable(m),
r=new RefCountDisposable(d),
win=new Subject();
observer.onNext(addRef(win,r));
d.add(source.subscribe(function(x){
win.onNext(x);},
function(err){
win.onError(err);
observer.onError(err);},
function(){
win.onCompleted();
observer.onCompleted();}));


function createWindowClose(){
var windowClose;
try{
windowClose = windowClosingSelector();}
catch(e) {
observer.onError(e);
return;}


isPromise(windowClose) && (windowClose = observableFromPromise(windowClose));

var m1=new SingleAssignmentDisposable();
m.setDisposable(m1);
m1.setDisposable(windowClose.take(1).subscribe(noop,function(err){
win.onError(err);
observer.onError(err);},
function(){
win.onCompleted();
win = new Subject();
observer.onNext(addRef(win,r));
createWindowClose();}));}



createWindowClose();
return r;},
source);}


var PairwiseObservable=(function(__super__){
inherits(PairwiseObservable,__super__);
function PairwiseObservable(source){
this.source = source;
__super__.call(this);}


PairwiseObservable.prototype.subscribeCore = function(o){
return this.source.subscribe(new PairwiseObserver(o));};


return PairwiseObservable;})(
ObservableBase);

var PairwiseObserver=(function(__super__){
inherits(PairwiseObserver,__super__);
function PairwiseObserver(o){
this._o = o;
this._p = null;
this._hp = false;}


PairwiseObserver.prototype.next = function(x){
if(this._hp){
this._o.onNext([this._p,x]);}else 
{
this._hp = true;}

this._p = x;};

PairwiseObserver.prototype.error = function(err){this._o.onError(err);};
PairwiseObserver.prototype.completed = function(){this._o.onCompleted();};

return PairwiseObserver;})(
AbstractObserver);







observableProto.pairwise = function(){
return new PairwiseObservable(this);};















observableProto.partition = function(predicate,thisArg){
var fn=bindCallback(predicate,thisArg,3);
return [
this.filter(predicate,thisArg),
this.filter(function(x,i,o){return !fn(x,i,o);})];};



var WhileEnumerable=(function(__super__){
inherits(WhileEnumerable,__super__);
function WhileEnumerable(c,s){
this.c = c;
this.s = s;}

WhileEnumerable.prototype[$iterator$] = function(){
var self=this;
return {
next:function(){
return self.c()?
{done:false,value:self.s}:
{done:true,value:void 0};}};};



return WhileEnumerable;})(
Enumerable);

function enumerableWhile(condition,source){
return new WhileEnumerable(condition,source);}









observableProto.letBind = observableProto['let'] = function(func){
return func(this);};














Observable['if'] = function(condition,thenSource,elseSourceOrScheduler){
return observableDefer(function(){
elseSourceOrScheduler || (elseSourceOrScheduler = observableEmpty());

isPromise(thenSource) && (thenSource = observableFromPromise(thenSource));
isPromise(elseSourceOrScheduler) && (elseSourceOrScheduler = observableFromPromise(elseSourceOrScheduler));


typeof elseSourceOrScheduler.now === 'function' && (elseSourceOrScheduler = observableEmpty(elseSourceOrScheduler));
return condition()?thenSource:elseSourceOrScheduler;});};










Observable['for'] = Observable.forIn = function(sources,resultSelector,thisArg){
return enumerableOf(sources,resultSelector,thisArg).concat();};










var observableWhileDo=Observable['while'] = Observable.whileDo = function(condition,source){
isPromise(source) && (source = observableFromPromise(source));
return enumerableWhile(condition,source).concat();};









observableProto.doWhile = function(condition){
return observableConcat([this,observableWhileDo(condition,this)]);};










Observable['case'] = function(selector,sources,defaultSourceOrScheduler){
return observableDefer(function(){
isPromise(defaultSourceOrScheduler) && (defaultSourceOrScheduler = observableFromPromise(defaultSourceOrScheduler));
defaultSourceOrScheduler || (defaultSourceOrScheduler = observableEmpty());

isScheduler(defaultSourceOrScheduler) && (defaultSourceOrScheduler = observableEmpty(defaultSourceOrScheduler));

var result=sources[selector()];
isPromise(result) && (result = observableFromPromise(result));

return result || defaultSourceOrScheduler;});};



var ExpandObservable=(function(__super__){
inherits(ExpandObservable,__super__);
function ExpandObservable(source,fn,scheduler){
this.source = source;
this._fn = fn;
this._scheduler = scheduler;
__super__.call(this);}


function scheduleRecursive(args,recurse){
var state=args[0],self=args[1];
var work;
if(state.q.length > 0){
work = state.q.shift();}else 
{
state.isAcquired = false;
return;}

var m1=new SingleAssignmentDisposable();
state.d.add(m1);
m1.setDisposable(work.subscribe(new ExpandObserver(state,self,m1)));
recurse([state,self]);}


ExpandObservable.prototype._ensureActive = function(state){
var isOwner=false;
if(state.q.length > 0){
isOwner = !state.isAcquired;
state.isAcquired = true;}

isOwner && state.m.setDisposable(this._scheduler.scheduleRecursive([state,this],scheduleRecursive));};


ExpandObservable.prototype.subscribeCore = function(o){
var m=new SerialDisposable(),
d=new CompositeDisposable(m),
state={
q:[],
m:m,
d:d,
activeCount:0,
isAcquired:false,
o:o};


state.q.push(this.source);
state.activeCount++;
this._ensureActive(state);
return d;};


return ExpandObservable;})(
ObservableBase);

var ExpandObserver=(function(__super__){
inherits(ExpandObserver,__super__);
function ExpandObserver(state,parent,m1){
this._s = state;
this._p = parent;
this._m1 = m1;
__super__.call(this);}


ExpandObserver.prototype.next = function(x){
this._s.o.onNext(x);
var result=tryCatch(this._p._fn)(x);
if(result === errorObj){return this._s.o.onError(result.e);}
this._s.q.push(result);
this._s.activeCount++;
this._p._ensureActive(this._s);};


ExpandObserver.prototype.error = function(e){
this._s.o.onError(e);};


ExpandObserver.prototype.completed = function(){
this._s.d.remove(this._m1);
this._s.activeCount--;
this._s.activeCount === 0 && this._s.o.onCompleted();};


return ExpandObserver;})(
AbstractObserver);








observableProto.expand = function(selector,scheduler){
isScheduler(scheduler) || (scheduler = currentThreadScheduler);
return new ExpandObservable(this,selector,scheduler);};


function argumentsToArray(){
var len=arguments.length,args=new Array(len);
for(var i=0;i < len;i++) {args[i] = arguments[i];}
return args;}


var ForkJoinObservable=(function(__super__){
inherits(ForkJoinObservable,__super__);
function ForkJoinObservable(sources,cb){
this._sources = sources;
this._cb = cb;
__super__.call(this);}


ForkJoinObservable.prototype.subscribeCore = function(o){
if(this._sources.length === 0){
o.onCompleted();
return disposableEmpty;}


var count=this._sources.length;
var state={
finished:false,
hasResults:new Array(count),
hasCompleted:new Array(count),
results:new Array(count)};


var subscriptions=new CompositeDisposable();
for(var i=0,len=this._sources.length;i < len;i++) {
var source=this._sources[i];
isPromise(source) && (source = observableFromPromise(source));
subscriptions.add(source.subscribe(new ForkJoinObserver(o,state,i,this._cb,subscriptions)));}


return subscriptions;};


return ForkJoinObservable;})(
ObservableBase);

var ForkJoinObserver=(function(__super__){
inherits(ForkJoinObserver,__super__);
function ForkJoinObserver(o,s,i,cb,subs){
this._o = o;
this._s = s;
this._i = i;
this._cb = cb;
this._subs = subs;
__super__.call(this);}


ForkJoinObserver.prototype.next = function(x){
if(!this._s.finished){
this._s.hasResults[this._i] = true;
this._s.results[this._i] = x;}};



ForkJoinObserver.prototype.error = function(e){
this._s.finished = true;
this._o.onError(e);
this._subs.dispose();};


ForkJoinObserver.prototype.completed = function(){
if(!this._s.finished){
if(!this._s.hasResults[this._i]){
return this._o.onCompleted();}

this._s.hasCompleted[this._i] = true;
for(var i=0;i < this._s.results.length;i++) {
if(!this._s.hasCompleted[i]){return;}}

this._s.finished = true;

var res=tryCatch(this._cb).apply(null,this._s.results);
if(res === errorObj){return this._o.onError(res.e);}

this._o.onNext(res);
this._o.onCompleted();}};



return ForkJoinObserver;})(
AbstractObserver);









Observable.forkJoin = function(){
var len=arguments.length,args=new Array(len);
for(var i=0;i < len;i++) {args[i] = arguments[i];}
var resultSelector=isFunction(args[len - 1])?args.pop():argumentsToArray;
Array.isArray(args[0]) && (args = args[0]);
return new ForkJoinObservable(args,resultSelector);};








observableProto.forkJoin = function(){
var len=arguments.length,args=new Array(len);
for(var i=0;i < len;i++) {args[i] = arguments[i];}
if(Array.isArray(args[0])){
args[0].unshift(this);}else 
{
args.unshift(this);}

return Observable.forkJoin.apply(null,args);};








observableProto.manySelect = observableProto.extend = function(selector,scheduler){
isScheduler(scheduler) || (scheduler = Rx.Scheduler.immediate);
var source=this;
return observableDefer(function(){
var chain;

return source.
map(function(x){
var curr=new ChainObservable(x);

chain && chain.onNext(x);
chain = curr;

return curr;}).

tap(
noop,
function(e){chain && chain.onError(e);},
function(){chain && chain.onCompleted();}).

observeOn(scheduler).
map(selector);},
source);};


var ChainObservable=(function(__super__){
inherits(ChainObservable,__super__);
function ChainObservable(head){
__super__.call(this);
this.head = head;
this.tail = new AsyncSubject();}


addProperties(ChainObservable.prototype,Observer,{
_subscribe:function(o){
var g=new CompositeDisposable();
g.add(currentThreadScheduler.schedule(this,function(_,self){
o.onNext(self.head);
g.add(self.tail.mergeAll().subscribe(o));}));


return g;},

onCompleted:function(){
this.onNext(Observable.empty());},

onError:function(e){
this.onNext(Observable['throw'](e));},

onNext:function(v){
this.tail.onNext(v);
this.tail.onCompleted();}});



return ChainObservable;})(

Observable);

var Map=root.Map || (function(){
function Map(){
this.size = 0;
this._values = [];
this._keys = [];}


Map.prototype['delete'] = function(key){
var i=this._keys.indexOf(key);
if(i === -1){return false;}
this._values.splice(i,1);
this._keys.splice(i,1);
this.size--;
return true;};


Map.prototype.get = function(key){
var i=this._keys.indexOf(key);
return i === -1?undefined:this._values[i];};


Map.prototype.set = function(key,value){
var i=this._keys.indexOf(key);
if(i === -1){
this._keys.push(key);
this._values.push(value);
this.size++;}else 
{
this._values[i] = value;}

return this;};


Map.prototype.forEach = function(cb,thisArg){
for(var i=0;i < this.size;i++) {
cb.call(thisArg,this._values[i],this._keys[i]);}};



return Map;})();






function Pattern(patterns){
this.patterns = patterns;}







Pattern.prototype.and = function(other){
return new Pattern(this.patterns.concat(other));};







Pattern.prototype.thenDo = function(selector){
return new Plan(this,selector);};


function Plan(expression,selector){
this.expression = expression;
this.selector = selector;}


function handleOnError(o){return function(e){o.onError(e);};}
function handleOnNext(self,observer){
return function onNext(){
var result=tryCatch(self.selector).apply(self,arguments);
if(result === errorObj){return observer.onError(result.e);}
observer.onNext(result);};}



Plan.prototype.activate = function(externalSubscriptions,observer,deactivate){
var joinObservers=[],errHandler=handleOnError(observer);
for(var i=0,len=this.expression.patterns.length;i < len;i++) {
joinObservers.push(planCreateObserver(externalSubscriptions,this.expression.patterns[i],errHandler));}

var activePlan=new ActivePlan(joinObservers,handleOnNext(this,observer),function(){
for(var j=0,jlen=joinObservers.length;j < jlen;j++) {
joinObservers[j].removeActivePlan(activePlan);}

deactivate(activePlan);});

for(i = 0,len = joinObservers.length;i < len;i++) {
joinObservers[i].addActivePlan(activePlan);}

return activePlan;};


function planCreateObserver(externalSubscriptions,observable,onError){
var entry=externalSubscriptions.get(observable);
if(!entry){
var observer=new JoinObserver(observable,onError);
externalSubscriptions.set(observable,observer);
return observer;}

return entry;}


function ActivePlan(joinObserverArray,onNext,onCompleted){
this.joinObserverArray = joinObserverArray;
this.onNext = onNext;
this.onCompleted = onCompleted;
this.joinObservers = new Map();
for(var i=0,len=this.joinObserverArray.length;i < len;i++) {
var joinObserver=this.joinObserverArray[i];
this.joinObservers.set(joinObserver,joinObserver);}}



ActivePlan.prototype.dequeue = function(){
this.joinObservers.forEach(function(v){v.queue.shift();});};


ActivePlan.prototype.match = function(){
var i,len,hasValues=true;
for(i = 0,len = this.joinObserverArray.length;i < len;i++) {
if(this.joinObserverArray[i].queue.length === 0){
hasValues = false;
break;}}


if(hasValues){
var firstValues=[],
isCompleted=false;
for(i = 0,len = this.joinObserverArray.length;i < len;i++) {
firstValues.push(this.joinObserverArray[i].queue[0]);
this.joinObserverArray[i].queue[0].kind === 'C' && (isCompleted = true);}

if(isCompleted){
this.onCompleted();}else 
{
this.dequeue();
var values=[];
for(i = 0,len = firstValues.length;i < firstValues.length;i++) {
values.push(firstValues[i].value);}

this.onNext.apply(this,values);}}};




var JoinObserver=(function(__super__){
inherits(JoinObserver,__super__);

function JoinObserver(source,onError){
__super__.call(this);
this.source = source;
this.onError = onError;
this.queue = [];
this.activePlans = [];
this.subscription = new SingleAssignmentDisposable();
this.isDisposed = false;}


var JoinObserverPrototype=JoinObserver.prototype;

JoinObserverPrototype.next = function(notification){
if(!this.isDisposed){
if(notification.kind === 'E'){
return this.onError(notification.error);}

this.queue.push(notification);
var activePlans=this.activePlans.slice(0);
for(var i=0,len=activePlans.length;i < len;i++) {
activePlans[i].match();}}};




JoinObserverPrototype.error = noop;
JoinObserverPrototype.completed = noop;

JoinObserverPrototype.addActivePlan = function(activePlan){
this.activePlans.push(activePlan);};


JoinObserverPrototype.subscribe = function(){
this.subscription.setDisposable(this.source.materialize().subscribe(this));};


JoinObserverPrototype.removeActivePlan = function(activePlan){
this.activePlans.splice(this.activePlans.indexOf(activePlan),1);
this.activePlans.length === 0 && this.dispose();};


JoinObserverPrototype.dispose = function(){
__super__.prototype.dispose.call(this);
if(!this.isDisposed){
this.isDisposed = true;
this.subscription.dispose();}};



return JoinObserver;})(
AbstractObserver);







observableProto.and = function(right){
return new Pattern([this,right]);};








observableProto.thenDo = function(selector){
return new Pattern([this]).thenDo(selector);};








Observable.when = function(){
var len=arguments.length,plans;
if(Array.isArray(arguments[0])){
plans = arguments[0];}else 
{
plans = new Array(len);
for(var i=0;i < len;i++) {plans[i] = arguments[i];}}

return new AnonymousObservable(function(o){
var activePlans=[],
externalSubscriptions=new Map();
var outObserver=observerCreate(
function(x){o.onNext(x);},
function(err){
externalSubscriptions.forEach(function(v){v.onError(err);});
o.onError(err);},

function(x){o.onCompleted();});

try{
for(var i=0,len=plans.length;i < len;i++) {
activePlans.push(plans[i].activate(externalSubscriptions,outObserver,function(activePlan){
var idx=activePlans.indexOf(activePlan);
activePlans.splice(idx,1);
activePlans.length === 0 && o.onCompleted();}));}}


catch(e) {
observableThrow(e).subscribe(o);}

var group=new CompositeDisposable();
externalSubscriptions.forEach(function(joinObserver){
joinObserver.subscribe();
group.add(joinObserver);});


return group;});};



var TimerObservable=(function(__super__){
inherits(TimerObservable,__super__);
function TimerObservable(dt,s){
this._dt = dt;
this._s = s;
__super__.call(this);}


TimerObservable.prototype.subscribeCore = function(o){
return this._s.scheduleFuture(o,this._dt,scheduleMethod);};


function scheduleMethod(s,o){
o.onNext(0);
o.onCompleted();}


return TimerObservable;})(
ObservableBase);

function _observableTimer(dueTime,scheduler){
return new TimerObservable(dueTime,scheduler);}


function observableTimerDateAndPeriod(dueTime,period,scheduler){
return new AnonymousObservable(function(observer){
var d=dueTime,p=normalizeTime(period);
return scheduler.scheduleRecursiveFuture(0,d,function(count,self){
if(p > 0){
var now=scheduler.now();
d = new Date(d.getTime() + p);
d.getTime() <= now && (d = new Date(now + p));}

observer.onNext(count);
self(count + 1,new Date(d));});});}




function observableTimerTimeSpanAndPeriod(dueTime,period,scheduler){
return dueTime === period?
new AnonymousObservable(function(observer){
return scheduler.schedulePeriodic(0,period,function(count){
observer.onNext(count);
return count + 1;});}):


observableDefer(function(){
return observableTimerDateAndPeriod(new Date(scheduler.now() + dueTime),period,scheduler);});}














var observableinterval=Observable.interval = function(period,scheduler){
return observableTimerTimeSpanAndPeriod(period,period,isScheduler(scheduler)?scheduler:defaultScheduler);};









var observableTimer=Observable.timer = function(dueTime,periodOrScheduler,scheduler){
var period;
isScheduler(scheduler) || (scheduler = defaultScheduler);
if(periodOrScheduler != null && typeof periodOrScheduler === 'number'){
period = periodOrScheduler;}else 
if(isScheduler(periodOrScheduler)){
scheduler = periodOrScheduler;}

if((dueTime instanceof Date || typeof dueTime === 'number') && period === undefined){
return _observableTimer(dueTime,scheduler);}

if(dueTime instanceof Date && period !== undefined){
return observableTimerDateAndPeriod(dueTime.getTime(),periodOrScheduler,scheduler);}

return observableTimerTimeSpanAndPeriod(dueTime,period,scheduler);};


function observableDelayRelative(source,dueTime,scheduler){
return new AnonymousObservable(function(o){
var active=false,
cancelable=new SerialDisposable(),
exception=null,
q=[],
running=false,
subscription;
subscription = source.materialize().timestamp(scheduler).subscribe(function(notification){
var d,shouldRun;
if(notification.value.kind === 'E'){
q = [];
q.push(notification);
exception = notification.value.error;
shouldRun = !running;}else 
{
q.push({value:notification.value,timestamp:notification.timestamp + dueTime});
shouldRun = !active;
active = true;}

if(shouldRun){
if(exception !== null){
o.onError(exception);}else 
{
d = new SingleAssignmentDisposable();
cancelable.setDisposable(d);
d.setDisposable(scheduler.scheduleRecursiveFuture(null,dueTime,function(_,self){
var e,recurseDueTime,result,shouldRecurse;
if(exception !== null){
return;}

running = true;
do {
result = null;
if(q.length > 0 && q[0].timestamp - scheduler.now() <= 0){
result = q.shift().value;}

if(result !== null){
result.accept(o);}}while(

result !== null);
shouldRecurse = false;
recurseDueTime = 0;
if(q.length > 0){
shouldRecurse = true;
recurseDueTime = Math.max(0,q[0].timestamp - scheduler.now());}else 
{
active = false;}

e = exception;
running = false;
if(e !== null){
o.onError(e);}else 
if(shouldRecurse){
self(null,recurseDueTime);}}));}}});





return new BinaryDisposable(subscription,cancelable);},
source);}


function observableDelayAbsolute(source,dueTime,scheduler){
return observableDefer(function(){
return observableDelayRelative(source,dueTime - scheduler.now(),scheduler);});}



function delayWithSelector(source,subscriptionDelay,delayDurationSelector){
var subDelay,selector;
if(isFunction(subscriptionDelay)){
selector = subscriptionDelay;}else 
{
subDelay = subscriptionDelay;
selector = delayDurationSelector;}

return new AnonymousObservable(function(o){
var delays=new CompositeDisposable(),atEnd=false,subscription=new SerialDisposable();

function start(){
subscription.setDisposable(source.subscribe(
function(x){
var delay=tryCatch(selector)(x);
if(delay === errorObj){return o.onError(delay.e);}
var d=new SingleAssignmentDisposable();
delays.add(d);
d.setDisposable(delay.subscribe(
function(){
o.onNext(x);
delays.remove(d);
done();},

function(e){o.onError(e);},
function(){
o.onNext(x);
delays.remove(d);
done();}));},



function(e){o.onError(e);},
function(){
atEnd = true;
subscription.dispose();
done();}));}




function done(){
atEnd && delays.length === 0 && o.onCompleted();}


if(!subDelay){
start();}else 
{
subscription.setDisposable(subDelay.subscribe(start,function(e){o.onError(e);},start));}


return new BinaryDisposable(subscription,delays);},
this);}










observableProto.delay = function(){
var firstArg=arguments[0];
if(typeof firstArg === 'number' || firstArg instanceof Date){
var dueTime=firstArg,scheduler=arguments[1];
isScheduler(scheduler) || (scheduler = defaultScheduler);
return dueTime instanceof Date?
observableDelayAbsolute(this,dueTime,scheduler):
observableDelayRelative(this,dueTime,scheduler);}else 
if(Observable.isObservable(firstArg) || isFunction(firstArg)){
return delayWithSelector(this,firstArg,arguments[1]);}else 
{
throw new Error('Invalid arguments');}};



var DebounceObservable=(function(__super__){
inherits(DebounceObservable,__super__);
function DebounceObservable(source,dt,s){
isScheduler(s) || (s = defaultScheduler);
this.source = source;
this._dt = dt;
this._s = s;
__super__.call(this);}


DebounceObservable.prototype.subscribeCore = function(o){
var cancelable=new SerialDisposable();
return new BinaryDisposable(
this.source.subscribe(new DebounceObserver(o,this.source,this._dt,this._s,cancelable)),
cancelable);};


return DebounceObservable;})(
ObservableBase);

var DebounceObserver=(function(__super__){
inherits(DebounceObserver,__super__);
function DebounceObserver(observer,source,dueTime,scheduler,cancelable){
this._o = observer;
this._s = source;
this._d = dueTime;
this._scheduler = scheduler;
this._c = cancelable;
this._v = null;
this._hv = false;
this._id = 0;
__super__.call(this);}


DebounceObserver.prototype.next = function(x){
this._hv = true;
this._v = x;
var currentId=++this._id,d=new SingleAssignmentDisposable();
this._c.setDisposable(d);
d.setDisposable(this._scheduler.scheduleFuture(this,this._d,function(_,self){
self._hv && self._id === currentId && self._o.onNext(x);
self._hv = false;}));};



DebounceObserver.prototype.error = function(e){
this._c.dispose();
this._o.onError(e);
this._hv = false;
this._id++;};


DebounceObserver.prototype.completed = function(){
this._c.dispose();
this._hv && this._o.onNext(this._v);
this._o.onCompleted();
this._hv = false;
this._id++;};


return DebounceObserver;})(
AbstractObserver);

function debounceWithSelector(source,durationSelector){
return new AnonymousObservable(function(o){
var value,hasValue=false,cancelable=new SerialDisposable(),id=0;
var subscription=source.subscribe(
function(x){
var throttle=tryCatch(durationSelector)(x);
if(throttle === errorObj){return o.onError(throttle.e);}

isPromise(throttle) && (throttle = observableFromPromise(throttle));

hasValue = true;
value = x;
id++;
var currentid=id,d=new SingleAssignmentDisposable();
cancelable.setDisposable(d);
d.setDisposable(throttle.subscribe(
function(){
hasValue && id === currentid && o.onNext(value);
hasValue = false;
d.dispose();},

function(e){o.onError(e);},
function(){
hasValue && id === currentid && o.onNext(value);
hasValue = false;
d.dispose();}));},



function(e){
cancelable.dispose();
o.onError(e);
hasValue = false;
id++;},

function(){
cancelable.dispose();
hasValue && o.onNext(value);
o.onCompleted();
hasValue = false;
id++;});


return new BinaryDisposable(subscription,cancelable);},
source);}


observableProto.debounce = function(){
if(isFunction(arguments[0])){
return debounceWithSelector(this,arguments[0]);}else 
if(typeof arguments[0] === 'number'){
return new DebounceObservable(this,arguments[0],arguments[1]);}else 
{
throw new Error('Invalid arguments');}};










observableProto.windowWithTime = function(timeSpan,timeShiftOrScheduler,scheduler){
var source=this,timeShift;
timeShiftOrScheduler == null && (timeShift = timeSpan);
isScheduler(scheduler) || (scheduler = defaultScheduler);
if(typeof timeShiftOrScheduler === 'number'){
timeShift = timeShiftOrScheduler;}else 
if(isScheduler(timeShiftOrScheduler)){
timeShift = timeSpan;
scheduler = timeShiftOrScheduler;}

return new AnonymousObservable(function(observer){
var groupDisposable,
nextShift=timeShift,
nextSpan=timeSpan,
q=[],
refCountDisposable,
timerD=new SerialDisposable(),
totalTime=0;
groupDisposable = new CompositeDisposable(timerD),
refCountDisposable = new RefCountDisposable(groupDisposable);

function createTimer(){
var m=new SingleAssignmentDisposable(),
isSpan=false,
isShift=false;
timerD.setDisposable(m);
if(nextSpan === nextShift){
isSpan = true;
isShift = true;}else 
if(nextSpan < nextShift){
isSpan = true;}else 
{
isShift = true;}

var newTotalTime=isSpan?nextSpan:nextShift,
ts=newTotalTime - totalTime;
totalTime = newTotalTime;
if(isSpan){
nextSpan += timeShift;}

if(isShift){
nextShift += timeShift;}

m.setDisposable(scheduler.scheduleFuture(null,ts,function(){
if(isShift){
var s=new Subject();
q.push(s);
observer.onNext(addRef(s,refCountDisposable));}

isSpan && q.shift().onCompleted();
createTimer();}));}

;
q.push(new Subject());
observer.onNext(addRef(q[0],refCountDisposable));
createTimer();
groupDisposable.add(source.subscribe(
function(x){
for(var i=0,len=q.length;i < len;i++) {q[i].onNext(x);}},

function(e){
for(var i=0,len=q.length;i < len;i++) {q[i].onError(e);}
observer.onError(e);},

function(){
for(var i=0,len=q.length;i < len;i++) {q[i].onCompleted();}
observer.onCompleted();}));


return refCountDisposable;},
source);};









observableProto.windowWithTimeOrCount = function(timeSpan,count,scheduler){
var source=this;
isScheduler(scheduler) || (scheduler = defaultScheduler);
return new AnonymousObservable(function(observer){
var timerD=new SerialDisposable(),
groupDisposable=new CompositeDisposable(timerD),
refCountDisposable=new RefCountDisposable(groupDisposable),
n=0,
windowId=0,
s=new Subject();

function createTimer(id){
var m=new SingleAssignmentDisposable();
timerD.setDisposable(m);
m.setDisposable(scheduler.scheduleFuture(null,timeSpan,function(){
if(id !== windowId){return;}
n = 0;
var newId=++windowId;
s.onCompleted();
s = new Subject();
observer.onNext(addRef(s,refCountDisposable));
createTimer(newId);}));}



observer.onNext(addRef(s,refCountDisposable));
createTimer(0);

groupDisposable.add(source.subscribe(
function(x){
var newId=0,newWindow=false;
s.onNext(x);
if(++n === count){
newWindow = true;
n = 0;
newId = ++windowId;
s.onCompleted();
s = new Subject();
observer.onNext(addRef(s,refCountDisposable));}

newWindow && createTimer(newId);},

function(e){
s.onError(e);
observer.onError(e);},
function(){
s.onCompleted();
observer.onCompleted();}));


return refCountDisposable;},
source);};


function toArray(x){return x.toArray();}








observableProto.bufferWithTime = function(timeSpan,timeShiftOrScheduler,scheduler){
return this.windowWithTime(timeSpan,timeShiftOrScheduler,scheduler).flatMap(toArray);};


function toArray(x){return x.toArray();}








observableProto.bufferWithTimeOrCount = function(timeSpan,count,scheduler){
return this.windowWithTimeOrCount(timeSpan,count,scheduler).flatMap(toArray);};


var TimeIntervalObservable=(function(__super__){
inherits(TimeIntervalObservable,__super__);
function TimeIntervalObservable(source,s){
this.source = source;
this._s = s;
__super__.call(this);}


TimeIntervalObservable.prototype.subscribeCore = function(o){
return this.source.subscribe(new TimeIntervalObserver(o,this._s));};


return TimeIntervalObservable;})(
ObservableBase);

var TimeIntervalObserver=(function(__super__){
inherits(TimeIntervalObserver,__super__);

function TimeIntervalObserver(o,s){
this._o = o;
this._s = s;
this._l = s.now();
__super__.call(this);}


TimeIntervalObserver.prototype.next = function(x){
var now=this._s.now(),span=now - this._l;
this._l = now;
this._o.onNext({value:x,interval:span});};

TimeIntervalObserver.prototype.error = function(e){this._o.onError(e);};
TimeIntervalObserver.prototype.completed = function(){this._o.onCompleted();};

return TimeIntervalObserver;})(
AbstractObserver);











observableProto.timeInterval = function(scheduler){
isScheduler(scheduler) || (scheduler = defaultScheduler);
return new TimeIntervalObservable(this,scheduler);};


var TimestampObservable=(function(__super__){
inherits(TimestampObservable,__super__);
function TimestampObservable(source,s){
this.source = source;
this._s = s;
__super__.call(this);}


TimestampObservable.prototype.subscribeCore = function(o){
return this.source.subscribe(new TimestampObserver(o,this._s));};


return TimestampObservable;})(
ObservableBase);

var TimestampObserver=(function(__super__){
inherits(TimestampObserver,__super__);
function TimestampObserver(o,s){
this._o = o;
this._s = s;
__super__.call(this);}


TimestampObserver.prototype.next = function(x){
this._o.onNext({value:x,timestamp:this._s.now()});};


TimestampObserver.prototype.error = function(e){
this._o.onError(e);};


TimestampObserver.prototype.completed = function(){
this._o.onCompleted();};


return TimestampObserver;})(
AbstractObserver);











observableProto.timestamp = function(scheduler){
isScheduler(scheduler) || (scheduler = defaultScheduler);
return new TimestampObservable(this,scheduler);};


function sampleObservable(source,sampler){
return new AnonymousObservable(function(o){
var atEnd=false,value,hasValue=false;

function sampleSubscribe(){
if(hasValue){
hasValue = false;
o.onNext(value);}

atEnd && o.onCompleted();}


var sourceSubscription=new SingleAssignmentDisposable();
sourceSubscription.setDisposable(source.subscribe(
function(newValue){
hasValue = true;
value = newValue;},

function(e){o.onError(e);},
function(){
atEnd = true;
sourceSubscription.dispose();}));



return new BinaryDisposable(
sourceSubscription,
sampler.subscribe(sampleSubscribe,function(e){o.onError(e);},sampleSubscribe));},

source);}














observableProto.sample = observableProto.throttleLatest = function(intervalOrSampler,scheduler){
isScheduler(scheduler) || (scheduler = defaultScheduler);
return typeof intervalOrSampler === 'number'?
sampleObservable(this,observableinterval(intervalOrSampler,scheduler)):
sampleObservable(this,intervalOrSampler);};


var TimeoutError=Rx.TimeoutError = function(message){
this.message = message || 'Timeout has occurred';
this.name = 'TimeoutError';
Error.call(this);};

TimeoutError.prototype = Object.create(Error.prototype);

function timeoutWithSelector(source,firstTimeout,timeoutDurationSelector,other){
if(isFunction(firstTimeout)){
other = timeoutDurationSelector;
timeoutDurationSelector = firstTimeout;
firstTimeout = observableNever();}

Observable.isObservable(other) || (other = observableThrow(new TimeoutError()));
return new AnonymousObservable(function(o){
var subscription=new SerialDisposable(),
timer=new SerialDisposable(),
original=new SingleAssignmentDisposable();

subscription.setDisposable(original);

var id=0,switched=false;

function setTimer(timeout){
var myId=id,d=new SingleAssignmentDisposable();

function timerWins(){
switched = myId === id;
return switched;}


timer.setDisposable(d);
d.setDisposable(timeout.subscribe(function(){
timerWins() && subscription.setDisposable(other.subscribe(o));
d.dispose();},
function(e){
timerWins() && o.onError(e);},
function(){
timerWins() && subscription.setDisposable(other.subscribe(o));}));}

;

setTimer(firstTimeout);

function oWins(){
var res=!switched;
if(res){id++;}
return res;}


original.setDisposable(source.subscribe(function(x){
if(oWins()){
o.onNext(x);
var timeout=tryCatch(timeoutDurationSelector)(x);
if(timeout === errorObj){return o.onError(timeout.e);}
setTimer(isPromise(timeout)?observableFromPromise(timeout):timeout);}},

function(e){
oWins() && o.onError(e);},
function(){
oWins() && o.onCompleted();}));

return new BinaryDisposable(subscription,timer);},
source);}


function timeout(source,dueTime,other,scheduler){
if(isScheduler(other)){
scheduler = other;
other = observableThrow(new TimeoutError());}

if(other instanceof Error){other = observableThrow(other);}
isScheduler(scheduler) || (scheduler = defaultScheduler);
Observable.isObservable(other) || (other = observableThrow(new TimeoutError()));
return new AnonymousObservable(function(o){
var id=0,
original=new SingleAssignmentDisposable(),
subscription=new SerialDisposable(),
switched=false,
timer=new SerialDisposable();

subscription.setDisposable(original);

function createTimer(){
var myId=id;
timer.setDisposable(scheduler.scheduleFuture(null,dueTime,function(){
switched = id === myId;
if(switched){
isPromise(other) && (other = observableFromPromise(other));
subscription.setDisposable(other.subscribe(o));}}));}




createTimer();

original.setDisposable(source.subscribe(function(x){
if(!switched){
id++;
o.onNext(x);
createTimer();}},

function(e){
if(!switched){
id++;
o.onError(e);}},

function(){
if(!switched){
id++;
o.onCompleted();}}));


return new BinaryDisposable(subscription,timer);},
source);}


observableProto.timeout = function(){
var firstArg=arguments[0];
if(firstArg instanceof Date || typeof firstArg === 'number'){
return timeout(this,firstArg,arguments[1],arguments[2]);}else 
if(Observable.isObservable(firstArg) || isFunction(firstArg)){
return timeoutWithSelector(this,firstArg,arguments[1],arguments[2]);}else 
{
throw new Error('Invalid arguments');}};



var GenerateAbsoluteObservable=(function(__super__){
inherits(GenerateAbsoluteObservable,__super__);
function GenerateAbsoluteObservable(state,cndFn,itrFn,resFn,timeFn,s){
this._state = state;
this._cndFn = cndFn;
this._itrFn = itrFn;
this._resFn = resFn;
this._timeFn = timeFn;
this._s = s;
this._first = true;
this._hasResult = false;
__super__.call(this);}


function scheduleRecursive(self,recurse){
self._hasResult && self._o.onNext(self._state);

if(self._first){
self._first = false;}else 
{
self._state = tryCatch(self._itrFn)(self._state);
if(self._state === errorObj){return self._o.onError(self._state.e);}}

self._hasResult = tryCatch(self._cndFn)(self._state);
if(self._hasResult === errorObj){return self._o.onError(self._hasResult.e);}
if(self._hasResult){
var result=tryCatch(self._resFn)(self._state);
if(result === errorObj){return self._o.onError(result.e);}
var time=tryCatch(self._timeFn)(self._state);
if(time === errorObj){return self._o.onError(time.e);}
recurse(self,time);}else 
{
self._o.onCompleted();}}



GenerateAbsoluteObservable.prototype.subscribeCore = function(o){
this._o = o;
return this._s.scheduleRecursiveFuture(this,new Date(this._s.now()),scheduleRecursive);};


return GenerateAbsoluteObservable;})(
ObservableBase);




















Observable.generateWithAbsoluteTime = function(initialState,condition,iterate,resultSelector,timeSelector,scheduler){
isScheduler(scheduler) || (scheduler = defaultScheduler);
return new GenerateAbsoluteObservable(initialState,condition,iterate,resultSelector,timeSelector,scheduler);};


var GenerateRelativeObservable=(function(__super__){
inherits(GenerateRelativeObservable,__super__);
function GenerateRelativeObservable(state,cndFn,itrFn,resFn,timeFn,s){
this._state = state;
this._cndFn = cndFn;
this._itrFn = itrFn;
this._resFn = resFn;
this._timeFn = timeFn;
this._s = s;
this._first = true;
this._hasResult = false;
__super__.call(this);}


function scheduleRecursive(self,recurse){
self._hasResult && self._o.onNext(self._state);

if(self._first){
self._first = false;}else 
{
self._state = tryCatch(self._itrFn)(self._state);
if(self._state === errorObj){return self._o.onError(self._state.e);}}

self._hasResult = tryCatch(self._cndFn)(self._state);
if(self._hasResult === errorObj){return self._o.onError(self._hasResult.e);}
if(self._hasResult){
var result=tryCatch(self._resFn)(self._state);
if(result === errorObj){return self._o.onError(result.e);}
var time=tryCatch(self._timeFn)(self._state);
if(time === errorObj){return self._o.onError(time.e);}
recurse(self,time);}else 
{
self._o.onCompleted();}}



GenerateRelativeObservable.prototype.subscribeCore = function(o){
this._o = o;
return this._s.scheduleRecursiveFuture(this,0,scheduleRecursive);};


return GenerateRelativeObservable;})(
ObservableBase);




















Observable.generateWithRelativeTime = function(initialState,condition,iterate,resultSelector,timeSelector,scheduler){
isScheduler(scheduler) || (scheduler = defaultScheduler);
return new GenerateRelativeObservable(initialState,condition,iterate,resultSelector,timeSelector,scheduler);};


var DelaySubscription=(function(__super__){
inherits(DelaySubscription,__super__);
function DelaySubscription(source,dt,s){
this.source = source;
this._dt = dt;
this._s = s;
__super__.call(this);}


DelaySubscription.prototype.subscribeCore = function(o){
var d=new SerialDisposable();

d.setDisposable(this._s.scheduleFuture([this.source,o,d],this._dt,scheduleMethod));

return d;};


function scheduleMethod(s,state){
var source=state[0],o=state[1],d=state[2];
d.setDisposable(source.subscribe(o));}


return DelaySubscription;})(
ObservableBase);












observableProto.delaySubscription = function(dueTime,scheduler){
isScheduler(scheduler) || (scheduler = defaultScheduler);
return new DelaySubscription(this,dueTime,scheduler);};


var SkipLastWithTimeObservable=(function(__super__){
inherits(SkipLastWithTimeObservable,__super__);
function SkipLastWithTimeObservable(source,d,s){
this.source = source;
this._d = d;
this._s = s;
__super__.call(this);}


SkipLastWithTimeObservable.prototype.subscribeCore = function(o){
return this.source.subscribe(new SkipLastWithTimeObserver(o,this));};


return SkipLastWithTimeObservable;})(
ObservableBase);

var SkipLastWithTimeObserver=(function(__super__){
inherits(SkipLastWithTimeObserver,__super__);

function SkipLastWithTimeObserver(o,p){
this._o = o;
this._s = p._s;
this._d = p._d;
this._q = [];
__super__.call(this);}


SkipLastWithTimeObserver.prototype.next = function(x){
var now=this._s.now();
this._q.push({interval:now,value:x});
while(this._q.length > 0 && now - this._q[0].interval >= this._d) {
this._o.onNext(this._q.shift().value);}};


SkipLastWithTimeObserver.prototype.error = function(e){this._o.onError(e);};
SkipLastWithTimeObserver.prototype.completed = function(){
var now=this._s.now();
while(this._q.length > 0 && now - this._q[0].interval >= this._d) {
this._o.onNext(this._q.shift().value);}

this._o.onCompleted();};


return SkipLastWithTimeObserver;})(
AbstractObserver);











observableProto.skipLastWithTime = function(duration,scheduler){
isScheduler(scheduler) || (scheduler = defaultScheduler);
return new SkipLastWithTimeObservable(this,duration,scheduler);};


var TakeLastWithTimeObservable=(function(__super__){
inherits(TakeLastWithTimeObservable,__super__);
function TakeLastWithTimeObservable(source,d,s){
this.source = source;
this._d = d;
this._s = s;
__super__.call(this);}


TakeLastWithTimeObservable.prototype.subscribeCore = function(o){
return this.source.subscribe(new TakeLastWithTimeObserver(o,this._d,this._s));};


return TakeLastWithTimeObservable;})(
ObservableBase);

var TakeLastWithTimeObserver=(function(__super__){
inherits(TakeLastWithTimeObserver,__super__);

function TakeLastWithTimeObserver(o,d,s){
this._o = o;
this._d = d;
this._s = s;
this._q = [];
__super__.call(this);}


TakeLastWithTimeObserver.prototype.next = function(x){
var now=this._s.now();
this._q.push({interval:now,value:x});
while(this._q.length > 0 && now - this._q[0].interval >= this._d) {
this._q.shift();}};


TakeLastWithTimeObserver.prototype.error = function(e){this._o.onError(e);};
TakeLastWithTimeObserver.prototype.completed = function(){
var now=this._s.now();
while(this._q.length > 0) {
var next=this._q.shift();
if(now - next.interval <= this._d){this._o.onNext(next.value);}}

this._o.onCompleted();};


return TakeLastWithTimeObserver;})(
AbstractObserver);











observableProto.takeLastWithTime = function(duration,scheduler){
isScheduler(scheduler) || (scheduler = defaultScheduler);
return new TakeLastWithTimeObservable(this,duration,scheduler);};












observableProto.takeLastBufferWithTime = function(duration,scheduler){
var source=this;
isScheduler(scheduler) || (scheduler = defaultScheduler);
return new AnonymousObservable(function(o){
var q=[];
return source.subscribe(function(x){
var now=scheduler.now();
q.push({interval:now,value:x});
while(q.length > 0 && now - q[0].interval >= duration) {
q.shift();}},

function(e){o.onError(e);},function(){
var now=scheduler.now(),res=[];
while(q.length > 0) {
var next=q.shift();
now - next.interval <= duration && res.push(next.value);}

o.onNext(res);
o.onCompleted();});},

source);};


var TakeWithTimeObservable=(function(__super__){
inherits(TakeWithTimeObservable,__super__);
function TakeWithTimeObservable(source,d,s){
this.source = source;
this._d = d;
this._s = s;
__super__.call(this);}


function scheduleMethod(s,o){
o.onCompleted();}


TakeWithTimeObservable.prototype.subscribeCore = function(o){
return new BinaryDisposable(
this._s.scheduleFuture(o,this._d,scheduleMethod),
this.source.subscribe(o));};



return TakeWithTimeObservable;})(
ObservableBase);














observableProto.takeWithTime = function(duration,scheduler){
isScheduler(scheduler) || (scheduler = defaultScheduler);
return new TakeWithTimeObservable(this,duration,scheduler);};


var SkipWithTimeObservable=(function(__super__){
inherits(SkipWithTimeObservable,__super__);
function SkipWithTimeObservable(source,d,s){
this.source = source;
this._d = d;
this._s = s;
this._open = false;
__super__.call(this);}


function scheduleMethod(s,self){
self._open = true;}


SkipWithTimeObservable.prototype.subscribeCore = function(o){
return new BinaryDisposable(
this._s.scheduleFuture(this,this._d,scheduleMethod),
this.source.subscribe(new SkipWithTimeObserver(o,this)));};



return SkipWithTimeObservable;})(
ObservableBase);

var SkipWithTimeObserver=(function(__super__){
inherits(SkipWithTimeObserver,__super__);

function SkipWithTimeObserver(o,p){
this._o = o;
this._p = p;
__super__.call(this);}


SkipWithTimeObserver.prototype.next = function(x){this._p._open && this._o.onNext(x);};
SkipWithTimeObserver.prototype.error = function(e){this._o.onError(e);};
SkipWithTimeObserver.prototype.completed = function(){this._o.onCompleted();};

return SkipWithTimeObserver;})(
AbstractObserver);













observableProto.skipWithTime = function(duration,scheduler){
isScheduler(scheduler) || (scheduler = defaultScheduler);
return new SkipWithTimeObservable(this,duration,scheduler);};


var SkipUntilWithTimeObservable=(function(__super__){
inherits(SkipUntilWithTimeObservable,__super__);
function SkipUntilWithTimeObservable(source,startTime,scheduler){
this.source = source;
this._st = startTime;
this._s = scheduler;
__super__.call(this);}


function scheduleMethod(s,state){
state._open = true;}


SkipUntilWithTimeObservable.prototype.subscribeCore = function(o){
this._open = false;
return new BinaryDisposable(
this._s.scheduleFuture(this,this._st,scheduleMethod),
this.source.subscribe(new SkipUntilWithTimeObserver(o,this)));};



return SkipUntilWithTimeObservable;})(
ObservableBase);

var SkipUntilWithTimeObserver=(function(__super__){
inherits(SkipUntilWithTimeObserver,__super__);

function SkipUntilWithTimeObserver(o,p){
this._o = o;
this._p = p;
__super__.call(this);}


SkipUntilWithTimeObserver.prototype.next = function(x){this._p._open && this._o.onNext(x);};
SkipUntilWithTimeObserver.prototype.error = function(e){this._o.onError(e);};
SkipUntilWithTimeObserver.prototype.completed = function(){this._o.onCompleted();};

return SkipUntilWithTimeObserver;})(
AbstractObserver);













observableProto.skipUntilWithTime = function(startTime,scheduler){
isScheduler(scheduler) || (scheduler = defaultScheduler);
return new SkipUntilWithTimeObservable(this,startTime,scheduler);};








observableProto.takeUntilWithTime = function(endTime,scheduler){
isScheduler(scheduler) || (scheduler = defaultScheduler);
var source=this;
return new AnonymousObservable(function(o){
return new BinaryDisposable(
scheduler.scheduleFuture(o,endTime,function(_,o){o.onCompleted();}),
source.subscribe(o));},
source);};








observableProto.throttle = function(windowDuration,scheduler){
isScheduler(scheduler) || (scheduler = defaultScheduler);
var duration=+windowDuration || 0;
if(duration <= 0){throw new RangeError('windowDuration cannot be less or equal zero.');}
var source=this;
return new AnonymousObservable(function(o){
var lastOnNext=0;
return source.subscribe(
function(x){
var now=scheduler.now();
if(lastOnNext === 0 || now - lastOnNext >= duration){
lastOnNext = now;
o.onNext(x);}},

function(e){o.onError(e);},function(){o.onCompleted();});},

source);};


var TransduceObserver=(function(__super__){
inherits(TransduceObserver,__super__);
function TransduceObserver(o,xform){
this._o = o;
this._xform = xform;
__super__.call(this);}


TransduceObserver.prototype.next = function(x){
var res=tryCatch(this._xform['@@transducer/step']).call(this._xform,this._o,x);
if(res === errorObj){this._o.onError(res.e);}};


TransduceObserver.prototype.error = function(e){this._o.onError(e);};

TransduceObserver.prototype.completed = function(){
this._xform['@@transducer/result'](this._o);};


return TransduceObserver;})(
AbstractObserver);

function transformForObserver(o){
return {
'@@transducer/init':function(){
return o;},

'@@transducer/step':function(obs,input){
return obs.onNext(input);},

'@@transducer/result':function(obs){
return obs.onCompleted();}};}









observableProto.transduce = function(transducer){
var source=this;
return new AnonymousObservable(function(o){
var xform=transducer(transformForObserver(o));
return source.subscribe(new TransduceObserver(o,xform));},
source);};


var SwitchFirstObservable=(function(__super__){
inherits(SwitchFirstObservable,__super__);
function SwitchFirstObservable(source){
this.source = source;
__super__.call(this);}


SwitchFirstObservable.prototype.subscribeCore = function(o){
var m=new SingleAssignmentDisposable(),g=new CompositeDisposable(),
state={
hasCurrent:false,
isStopped:false,
o:o,
g:g};


g.add(m);
m.setDisposable(this.source.subscribe(new SwitchFirstObserver(state)));
return g;};


return SwitchFirstObservable;})(
ObservableBase);

var SwitchFirstObserver=(function(__super__){
inherits(SwitchFirstObserver,__super__);
function SwitchFirstObserver(state){
this._s = state;
__super__.call(this);}


SwitchFirstObserver.prototype.next = function(x){
if(!this._s.hasCurrent){
this._s.hasCurrent = true;
isPromise(x) && (x = observableFromPromise(x));
var inner=new SingleAssignmentDisposable();
this._s.g.add(inner);
inner.setDisposable(x.subscribe(new InnerObserver(this._s,inner)));}};



SwitchFirstObserver.prototype.error = function(e){
this._s.o.onError(e);};


SwitchFirstObserver.prototype.completed = function(){
this._s.isStopped = true;
!this._s.hasCurrent && this._s.g.length === 1 && this._s.o.onCompleted();};


inherits(InnerObserver,__super__);
function InnerObserver(state,inner){
this._s = state;
this._i = inner;
__super__.call(this);}


InnerObserver.prototype.next = function(x){this._s.o.onNext(x);};
InnerObserver.prototype.error = function(e){this._s.o.onError(e);};
InnerObserver.prototype.completed = function(){
this._s.g.remove(this._i);
this._s.hasCurrent = false;
this._s.isStopped && this._s.g.length === 1 && this._s.o.onCompleted();};


return SwitchFirstObserver;})(
AbstractObserver);






observableProto.switchFirst = function(){
return new SwitchFirstObservable(this);};


observableProto.flatMapFirst = observableProto.selectManyFirst = function(selector,resultSelector,thisArg){
return new FlatMapObservable(this,selector,resultSelector,thisArg).switchFirst();};


Rx.Observable.prototype.flatMapWithMaxConcurrent = function(limit,selector,resultSelector,thisArg){
return new FlatMapObservable(this,selector,resultSelector,thisArg).merge(limit);};


var VirtualTimeScheduler=Rx.VirtualTimeScheduler = (function(__super__){
inherits(VirtualTimeScheduler,__super__);








function VirtualTimeScheduler(initialClock,comparer){
this.clock = initialClock;
this.comparer = comparer;
this.isEnabled = false;
this.queue = new PriorityQueue(1024);
__super__.call(this);}


var VirtualTimeSchedulerPrototype=VirtualTimeScheduler.prototype;

VirtualTimeSchedulerPrototype.now = function(){
return this.toAbsoluteTime(this.clock);};


VirtualTimeSchedulerPrototype.schedule = function(state,action){
return this.scheduleAbsolute(state,this.clock,action);};


VirtualTimeSchedulerPrototype.scheduleFuture = function(state,dueTime,action){
var dt=dueTime instanceof Date?
this.toRelativeTime(dueTime - this.now()):
this.toRelativeTime(dueTime);

return this.scheduleRelative(state,dt,action);};








VirtualTimeSchedulerPrototype.add = notImplemented;






VirtualTimeSchedulerPrototype.toAbsoluteTime = notImplemented;






VirtualTimeSchedulerPrototype.toRelativeTime = notImplemented;








VirtualTimeSchedulerPrototype.schedulePeriodic = function(state,period,action){
var s=new SchedulePeriodicRecursive(this,state,period,action);
return s.start();};









VirtualTimeSchedulerPrototype.scheduleRelative = function(state,dueTime,action){
var runAt=this.add(this.clock,dueTime);
return this.scheduleAbsolute(state,runAt,action);};





VirtualTimeSchedulerPrototype.start = function(){
if(!this.isEnabled){
this.isEnabled = true;
do {
var next=this.getNext();
if(next !== null){
this.comparer(next.dueTime,this.clock) > 0 && (this.clock = next.dueTime);
next.invoke();}else 
{
this.isEnabled = false;}}while(

this.isEnabled);}};






VirtualTimeSchedulerPrototype.stop = function(){
this.isEnabled = false;};






VirtualTimeSchedulerPrototype.advanceTo = function(time){
var dueToClock=this.comparer(this.clock,time);
if(this.comparer(this.clock,time) > 0){throw new ArgumentOutOfRangeError();}
if(dueToClock === 0){return;}
if(!this.isEnabled){
this.isEnabled = true;
do {
var next=this.getNext();
if(next !== null && this.comparer(next.dueTime,time) <= 0){
this.comparer(next.dueTime,this.clock) > 0 && (this.clock = next.dueTime);
next.invoke();}else 
{
this.isEnabled = false;}}while(

this.isEnabled);
this.clock = time;}};







VirtualTimeSchedulerPrototype.advanceBy = function(time){
var dt=this.add(this.clock,time),
dueToClock=this.comparer(this.clock,dt);
if(dueToClock > 0){throw new ArgumentOutOfRangeError();}
if(dueToClock === 0){return;}

this.advanceTo(dt);};






VirtualTimeSchedulerPrototype.sleep = function(time){
var dt=this.add(this.clock,time);
if(this.comparer(this.clock,dt) >= 0){throw new ArgumentOutOfRangeError();}

this.clock = dt;};






VirtualTimeSchedulerPrototype.getNext = function(){
while(this.queue.length > 0) {
var next=this.queue.peek();
if(next.isCancelled()){
this.queue.dequeue();}else 
{
return next;}}


return null;};









VirtualTimeSchedulerPrototype.scheduleAbsolute = function(state,dueTime,action){
var self=this;

function run(scheduler,state1){
self.queue.remove(si);
return action(scheduler,state1);}


var si=new ScheduledItem(this,state,run,dueTime,this.comparer);
this.queue.enqueue(si);

return si.disposable;};


return VirtualTimeScheduler;})(
Scheduler);


Rx.HistoricalScheduler = (function(__super__){
inherits(HistoricalScheduler,__super__);







function HistoricalScheduler(initialClock,comparer){
var clock=initialClock == null?0:initialClock;
var cmp=comparer || defaultSubComparer;
__super__.call(this,clock,cmp);}


var HistoricalSchedulerProto=HistoricalScheduler.prototype;







HistoricalSchedulerProto.add = function(absolute,relative){
return absolute + relative;};


HistoricalSchedulerProto.toAbsoluteTime = function(absolute){
return new Date(absolute).getTime();};








HistoricalSchedulerProto.toRelativeTime = function(timeSpan){
return timeSpan;};


return HistoricalScheduler;})(
Rx.VirtualTimeScheduler);

function OnNextPredicate(predicate){
this.predicate = predicate;}


OnNextPredicate.prototype.equals = function(other){
if(other === this){return true;}
if(other == null){return false;}
if(other.kind !== 'N'){return false;}
return this.predicate(other.value);};


function OnErrorPredicate(predicate){
this.predicate = predicate;}


OnErrorPredicate.prototype.equals = function(other){
if(other === this){return true;}
if(other == null){return false;}
if(other.kind !== 'E'){return false;}
return this.predicate(other.error);};


var ReactiveTest=Rx.ReactiveTest = {

created:100,

subscribed:200,

disposed:1000,











onNext:function(ticks,value){
return typeof value === 'function'?
new Recorded(ticks,new OnNextPredicate(value)):
new Recorded(ticks,Notification.createOnNext(value));},











onError:function(ticks,error){
return typeof error === 'function'?
new Recorded(ticks,new OnErrorPredicate(error)):
new Recorded(ticks,Notification.createOnError(error));},







onCompleted:function(ticks){
return new Recorded(ticks,Notification.createOnCompleted());},








subscribe:function(start,end){
return new Subscription(start,end);}};











var Recorded=Rx.Recorded = function(time,value,comparer){
this.time = time;
this.value = value;
this.comparer = comparer || defaultComparer;};








Recorded.prototype.equals = function(other){
return this.time === other.time && this.comparer(this.value,other.value);};







Recorded.prototype.toString = function(){
return this.value.toString() + '@' + this.time;};









var Subscription=Rx.Subscription = function(start,end){
this.subscribe = start;
this.unsubscribe = end || Number.MAX_VALUE;};







Subscription.prototype.equals = function(other){
return this.subscribe === other.subscribe && this.unsubscribe === other.unsubscribe;};






Subscription.prototype.toString = function(){
return '(' + this.subscribe + ', ' + (this.unsubscribe === Number.MAX_VALUE?'Infinite':this.unsubscribe) + ')';};


var MockDisposable=Rx.MockDisposable = function(scheduler){
this.scheduler = scheduler;
this.disposes = [];
this.disposes.push(this.scheduler.clock);};


MockDisposable.prototype.dispose = function(){
this.disposes.push(this.scheduler.clock);};


var MockObserver=(function(__super__){
inherits(MockObserver,__super__);

function MockObserver(scheduler){
__super__.call(this);
this.scheduler = scheduler;
this.messages = [];}


var MockObserverPrototype=MockObserver.prototype;

MockObserverPrototype.onNext = function(value){
this.messages.push(new Recorded(this.scheduler.clock,Notification.createOnNext(value)));};


MockObserverPrototype.onError = function(e){
this.messages.push(new Recorded(this.scheduler.clock,Notification.createOnError(e)));};


MockObserverPrototype.onCompleted = function(){
this.messages.push(new Recorded(this.scheduler.clock,Notification.createOnCompleted()));};


return MockObserver;})(
Observer);

function MockPromise(scheduler,messages){
var self=this;
this.scheduler = scheduler;
this.messages = messages;
this.subscriptions = [];
this.observers = [];
for(var i=0,len=this.messages.length;i < len;i++) {
var message=this.messages[i],
notification=message.value;
(function(innerNotification){
scheduler.scheduleAbsolute(null,message.time,function(){
var obs=self.observers.slice(0);

for(var j=0,jLen=obs.length;j < jLen;j++) {
innerNotification.accept(obs[j]);}

return disposableEmpty;});})(

notification);}}



MockPromise.prototype.then = function(onResolved,onRejected){
var self=this;

this.subscriptions.push(new Subscription(this.scheduler.clock));
var index=this.subscriptions.length - 1;

var newPromise;

var observer=Rx.Observer.create(
function(x){
var retValue=onResolved(x);
if(retValue && typeof retValue.then === 'function'){
newPromise = retValue;}else 
{
var ticks=self.scheduler.clock;
newPromise = new MockPromise(self.scheduler,[Rx.ReactiveTest.onNext(ticks,undefined),Rx.ReactiveTest.onCompleted(ticks)]);}

var idx=self.observers.indexOf(observer);
self.observers.splice(idx,1);
self.subscriptions[index] = new Subscription(self.subscriptions[index].subscribe,self.scheduler.clock);},

function(err){
onRejected(err);
var idx=self.observers.indexOf(observer);
self.observers.splice(idx,1);
self.subscriptions[index] = new Subscription(self.subscriptions[index].subscribe,self.scheduler.clock);});


this.observers.push(observer);

return newPromise || new MockPromise(this.scheduler,this.messages);};


var HotObservable=(function(__super__){
inherits(HotObservable,__super__);

function HotObservable(scheduler,messages){
__super__.call(this);
var message,notification,observable=this;
this.scheduler = scheduler;
this.messages = messages;
this.subscriptions = [];
this.observers = [];
for(var i=0,len=this.messages.length;i < len;i++) {
message = this.messages[i];
notification = message.value;
(function(innerNotification){
scheduler.scheduleAbsolute(null,message.time,function(){
var obs=observable.observers.slice(0);

for(var j=0,jLen=obs.length;j < jLen;j++) {
innerNotification.accept(obs[j]);}

return disposableEmpty;});})(

notification);}}



HotObservable.prototype._subscribe = function(o){
var observable=this;
this.observers.push(o);
this.subscriptions.push(new Subscription(this.scheduler.clock));
var index=this.subscriptions.length - 1;
return disposableCreate(function(){
var idx=observable.observers.indexOf(o);
observable.observers.splice(idx,1);
observable.subscriptions[index] = new Subscription(observable.subscriptions[index].subscribe,observable.scheduler.clock);});};



return HotObservable;})(
Observable);

var ColdObservable=(function(__super__){
inherits(ColdObservable,__super__);

function ColdObservable(scheduler,messages){
__super__.call(this);
this.scheduler = scheduler;
this.messages = messages;
this.subscriptions = [];}


ColdObservable.prototype._subscribe = function(o){
var message,notification,observable=this;
this.subscriptions.push(new Subscription(this.scheduler.clock));
var index=this.subscriptions.length - 1;
var d=new CompositeDisposable();
for(var i=0,len=this.messages.length;i < len;i++) {
message = this.messages[i];
notification = message.value;
(function(innerNotification){
d.add(observable.scheduler.scheduleRelative(null,message.time,function(){
innerNotification.accept(o);
return disposableEmpty;}));})(

notification);}

return disposableCreate(function(){
observable.subscriptions[index] = new Subscription(observable.subscriptions[index].subscribe,observable.scheduler.clock);
d.dispose();});};



return ColdObservable;})(
Observable);


Rx.TestScheduler = (function(__super__){
inherits(TestScheduler,__super__);

function baseComparer(x,y){
return x > y?1:x < y?-1:0;}


function TestScheduler(){
__super__.call(this,0,baseComparer);}










TestScheduler.prototype.scheduleAbsolute = function(state,dueTime,action){
dueTime <= this.clock && (dueTime = this.clock + 1);
return __super__.prototype.scheduleAbsolute.call(this,state,dueTime,action);};








TestScheduler.prototype.add = function(absolute,relative){
return absolute + relative;};







TestScheduler.prototype.toAbsoluteTime = function(absolute){
return new Date(absolute).getTime();};







TestScheduler.prototype.toRelativeTime = function(timeSpan){
return timeSpan;};










TestScheduler.prototype.startScheduler = function(createFn,settings){
settings || (settings = {});
settings.created == null && (settings.created = ReactiveTest.created);
settings.subscribed == null && (settings.subscribed = ReactiveTest.subscribed);
settings.disposed == null && (settings.disposed = ReactiveTest.disposed);

var observer=this.createObserver(),source,subscription;

this.scheduleAbsolute(null,settings.created,function(){
source = createFn();
return disposableEmpty;});


this.scheduleAbsolute(null,settings.subscribed,function(){
subscription = source.subscribe(observer);
return disposableEmpty;});


this.scheduleAbsolute(null,settings.disposed,function(){
subscription.dispose();
return disposableEmpty;});


this.start();

return observer;};







TestScheduler.prototype.createHotObservable = function(){
var len=arguments.length,args;
if(Array.isArray(arguments[0])){
args = arguments[0];}else 
{
args = new Array(len);
for(var i=0;i < len;i++) {args[i] = arguments[i];}}

return new HotObservable(this,args);};







TestScheduler.prototype.createColdObservable = function(){
var len=arguments.length,args;
if(Array.isArray(arguments[0])){
args = arguments[0];}else 
{
args = new Array(len);
for(var i=0;i < len;i++) {args[i] = arguments[i];}}

return new ColdObservable(this,args);};








TestScheduler.prototype.createResolvedPromise = function(ticks,value){
return new MockPromise(this,[Rx.ReactiveTest.onNext(ticks,value),Rx.ReactiveTest.onCompleted(ticks)]);};








TestScheduler.prototype.createRejectedPromise = function(ticks,reason){
return new MockPromise(this,[Rx.ReactiveTest.onError(ticks,reason)]);};






TestScheduler.prototype.createObserver = function(){
return new MockObserver(this);};


return TestScheduler;})(
VirtualTimeScheduler);

var AnonymousObservable=Rx.AnonymousObservable = (function(__super__){
inherits(AnonymousObservable,__super__);


function fixSubscriber(subscriber){
return subscriber && isFunction(subscriber.dispose)?subscriber:
isFunction(subscriber)?disposableCreate(subscriber):disposableEmpty;}


function setDisposable(s,state){
var ado=state[0],self=state[1];
var sub=tryCatch(self.__subscribe).call(self,ado);
if(sub === errorObj && !ado.fail(errorObj.e)){thrower(errorObj.e);}
ado.setDisposable(fixSubscriber(sub));}


function AnonymousObservable(subscribe,parent){
this.source = parent;
this.__subscribe = subscribe;
__super__.call(this);}


AnonymousObservable.prototype._subscribe = function(o){
var ado=new AutoDetachObserver(o),state=[ado,this];

if(currentThreadScheduler.scheduleRequired()){
currentThreadScheduler.schedule(state,setDisposable);}else 
{
setDisposable(null,state);}

return ado;};


return AnonymousObservable;})(

Observable);

var AutoDetachObserver=(function(__super__){
inherits(AutoDetachObserver,__super__);

function AutoDetachObserver(observer){
__super__.call(this);
this.observer = observer;
this.m = new SingleAssignmentDisposable();}


var AutoDetachObserverPrototype=AutoDetachObserver.prototype;

AutoDetachObserverPrototype.next = function(value){
var result=tryCatch(this.observer.onNext).call(this.observer,value);
if(result === errorObj){
this.dispose();
thrower(result.e);}};



AutoDetachObserverPrototype.error = function(err){
var result=tryCatch(this.observer.onError).call(this.observer,err);
this.dispose();
result === errorObj && thrower(result.e);};


AutoDetachObserverPrototype.completed = function(){
var result=tryCatch(this.observer.onCompleted).call(this.observer);
this.dispose();
result === errorObj && thrower(result.e);};


AutoDetachObserverPrototype.setDisposable = function(value){this.m.setDisposable(value);};
AutoDetachObserverPrototype.getDisposable = function(){return this.m.getDisposable();};

AutoDetachObserverPrototype.dispose = function(){
__super__.prototype.dispose.call(this);
this.m.dispose();};


return AutoDetachObserver;})(
AbstractObserver);

var UnderlyingObservable=(function(__super__){
inherits(UnderlyingObservable,__super__);
function UnderlyingObservable(m,u){
this._m = m;
this._u = u;
__super__.call(this);}


UnderlyingObservable.prototype.subscribeCore = function(o){
return new BinaryDisposable(this._m.getDisposable(),this._u.subscribe(o));};


return UnderlyingObservable;})(
ObservableBase);

var GroupedObservable=(function(__super__){
inherits(GroupedObservable,__super__);
function GroupedObservable(key,underlyingObservable,mergedDisposable){
__super__.call(this);
this.key = key;
this.underlyingObservable = !mergedDisposable?
underlyingObservable:
new UnderlyingObservable(mergedDisposable,underlyingObservable);}


GroupedObservable.prototype._subscribe = function(o){
return this.underlyingObservable.subscribe(o);};


return GroupedObservable;})(
Observable);





var Subject=Rx.Subject = (function(__super__){
inherits(Subject,__super__);
function Subject(){
__super__.call(this);
this.isDisposed = false;
this.isStopped = false;
this.observers = [];
this.hasError = false;}


addProperties(Subject.prototype,Observer.prototype,{
_subscribe:function(o){
checkDisposed(this);
if(!this.isStopped){
this.observers.push(o);
return new InnerSubscription(this,o);}

if(this.hasError){
o.onError(this.error);
return disposableEmpty;}

o.onCompleted();
return disposableEmpty;},





hasObservers:function(){return this.observers.length > 0;},



onCompleted:function(){
checkDisposed(this);
if(!this.isStopped){
this.isStopped = true;
for(var i=0,os=cloneArray(this.observers),len=os.length;i < len;i++) {
os[i].onCompleted();}


this.observers.length = 0;}},






onError:function(error){
checkDisposed(this);
if(!this.isStopped){
this.isStopped = true;
this.error = error;
this.hasError = true;
for(var i=0,os=cloneArray(this.observers),len=os.length;i < len;i++) {
os[i].onError(error);}


this.observers.length = 0;}},






onNext:function(value){
checkDisposed(this);
if(!this.isStopped){
for(var i=0,os=cloneArray(this.observers),len=os.length;i < len;i++) {
os[i].onNext(value);}}},






dispose:function(){
this.isDisposed = true;
this.observers = null;}});









Subject.create = function(observer,observable){
return new AnonymousSubject(observer,observable);};


return Subject;})(
Observable);





var AsyncSubject=Rx.AsyncSubject = (function(__super__){
inherits(AsyncSubject,__super__);





function AsyncSubject(){
__super__.call(this);
this.isDisposed = false;
this.isStopped = false;
this.hasValue = false;
this.observers = [];
this.hasError = false;}


addProperties(AsyncSubject.prototype,Observer.prototype,{
_subscribe:function(o){
checkDisposed(this);

if(!this.isStopped){
this.observers.push(o);
return new InnerSubscription(this,o);}


if(this.hasError){
o.onError(this.error);}else 
if(this.hasValue){
o.onNext(this.value);
o.onCompleted();}else 
{
o.onCompleted();}


return disposableEmpty;},





hasObservers:function(){
checkDisposed(this);
return this.observers.length > 0;},




onCompleted:function(){
var i,len;
checkDisposed(this);
if(!this.isStopped){
this.isStopped = true;
var os=cloneArray(this.observers),len=os.length;

if(this.hasValue){
for(i = 0;i < len;i++) {
var o=os[i];
o.onNext(this.value);
o.onCompleted();}}else 

{
for(i = 0;i < len;i++) {
os[i].onCompleted();}}



this.observers.length = 0;}},






onError:function(error){
checkDisposed(this);
if(!this.isStopped){
this.isStopped = true;
this.hasError = true;
this.error = error;

for(var i=0,os=cloneArray(this.observers),len=os.length;i < len;i++) {
os[i].onError(error);}


this.observers.length = 0;}},






onNext:function(value){
checkDisposed(this);
if(this.isStopped){return;}
this.value = value;
this.hasValue = true;},




dispose:function(){
this.isDisposed = true;
this.observers = null;
this.error = null;
this.value = null;}});



return AsyncSubject;})(
Observable);





var BehaviorSubject=Rx.BehaviorSubject = (function(__super__){
inherits(BehaviorSubject,__super__);
function BehaviorSubject(value){
__super__.call(this);
this.value = value;
this.observers = [];
this.isDisposed = false;
this.isStopped = false;
this.hasError = false;}


addProperties(BehaviorSubject.prototype,Observer.prototype,{
_subscribe:function(o){
checkDisposed(this);
if(!this.isStopped){
this.observers.push(o);
o.onNext(this.value);
return new InnerSubscription(this,o);}

if(this.hasError){
o.onError(this.error);}else 
{
o.onCompleted();}

return disposableEmpty;},








getValue:function(){
checkDisposed(this);
if(this.hasError){
throw this.error;}

return this.value;},





hasObservers:function(){return this.observers.length > 0;},



onCompleted:function(){
checkDisposed(this);
if(this.isStopped){return;}
this.isStopped = true;
for(var i=0,os=cloneArray(this.observers),len=os.length;i < len;i++) {
os[i].onCompleted();}


this.observers.length = 0;},





onError:function(error){
checkDisposed(this);
if(this.isStopped){return;}
this.isStopped = true;
this.hasError = true;
this.error = error;

for(var i=0,os=cloneArray(this.observers),len=os.length;i < len;i++) {
os[i].onError(error);}


this.observers.length = 0;},





onNext:function(value){
checkDisposed(this);
if(this.isStopped){return;}
this.value = value;
for(var i=0,os=cloneArray(this.observers),len=os.length;i < len;i++) {
os[i].onNext(value);}},





dispose:function(){
this.isDisposed = true;
this.observers = null;
this.value = null;
this.error = null;}});



return BehaviorSubject;})(
Observable);





var ReplaySubject=Rx.ReplaySubject = (function(__super__){

var maxSafeInteger=Math.pow(2,53) - 1;

function createRemovableDisposable(subject,observer){
return disposableCreate(function(){
observer.dispose();
!subject.isDisposed && subject.observers.splice(subject.observers.indexOf(observer),1);});}



inherits(ReplaySubject,__super__);







function ReplaySubject(bufferSize,windowSize,scheduler){
this.bufferSize = bufferSize == null?maxSafeInteger:bufferSize;
this.windowSize = windowSize == null?maxSafeInteger:windowSize;
this.scheduler = scheduler || currentThreadScheduler;
this.q = [];
this.observers = [];
this.isStopped = false;
this.isDisposed = false;
this.hasError = false;
this.error = null;
__super__.call(this);}


addProperties(ReplaySubject.prototype,Observer.prototype,{
_subscribe:function(o){
checkDisposed(this);
var so=new ScheduledObserver(this.scheduler,o),subscription=createRemovableDisposable(this,so);

this._trim(this.scheduler.now());
this.observers.push(so);

for(var i=0,len=this.q.length;i < len;i++) {
so.onNext(this.q[i].value);}


if(this.hasError){
so.onError(this.error);}else 
if(this.isStopped){
so.onCompleted();}


so.ensureActive();
return subscription;},





hasObservers:function(){
return this.observers.length > 0;},

_trim:function(now){
while(this.q.length > this.bufferSize) {
this.q.shift();}

while(this.q.length > 0 && now - this.q[0].interval > this.windowSize) {
this.q.shift();}},






onNext:function(value){
checkDisposed(this);
if(this.isStopped){return;}
var now=this.scheduler.now();
this.q.push({interval:now,value:value});
this._trim(now);

for(var i=0,os=cloneArray(this.observers),len=os.length;i < len;i++) {
var observer=os[i];
observer.onNext(value);
observer.ensureActive();}},






onError:function(error){
checkDisposed(this);
if(this.isStopped){return;}
this.isStopped = true;
this.error = error;
this.hasError = true;
var now=this.scheduler.now();
this._trim(now);
for(var i=0,os=cloneArray(this.observers),len=os.length;i < len;i++) {
var observer=os[i];
observer.onError(error);
observer.ensureActive();}

this.observers.length = 0;},




onCompleted:function(){
checkDisposed(this);
if(this.isStopped){return;}
this.isStopped = true;
var now=this.scheduler.now();
this._trim(now);
for(var i=0,os=cloneArray(this.observers),len=os.length;i < len;i++) {
var observer=os[i];
observer.onCompleted();
observer.ensureActive();}

this.observers.length = 0;},




dispose:function(){
this.isDisposed = true;
this.observers = null;}});



return ReplaySubject;})(
Observable);

var AnonymousSubject=Rx.AnonymousSubject = (function(__super__){
inherits(AnonymousSubject,__super__);
function AnonymousSubject(observer,observable){
this.observer = observer;
this.observable = observable;
__super__.call(this);}


addProperties(AnonymousSubject.prototype,Observer.prototype,{
_subscribe:function(o){
return this.observable.subscribe(o);},

onCompleted:function(){
this.observer.onCompleted();},

onError:function(error){
this.observer.onError(error);},

onNext:function(value){
this.observer.onNext(value);}});



return AnonymousSubject;})(
Observable);




Rx.Pauser = (function(__super__){
inherits(Pauser,__super__);
function Pauser(){
__super__.call(this);}





Pauser.prototype.pause = function(){this.onNext(false);};




Pauser.prototype.resume = function(){this.onNext(true);};

return Pauser;})(
Subject);

if(typeof define == 'function' && typeof define.amd == 'object' && define.amd){
root.Rx = Rx;

define(function(){
return Rx;});}else 

if(freeExports && freeModule){

if(moduleExports){
(freeModule.exports = Rx).Rx = Rx;}else 
{
freeExports.Rx = Rx;}}else 

{

root.Rx = Rx;}



var rEndingLine=captureLine();}).

call(this);
});
__d('plainX/components/cards/CardRouter.js',["plainX/components/cards/CurrencySelect.js","plainX/components/cards/Explanation.js","plainX/components/cards/OfferSummary.js","plainX/components/cards/Message.js","plainX/components/cards/Feedback.js","plainX/components/cards/Header.js","plainX/components/cards/Empty.js","plainX/components/cards/Error.js","plainX/components/cards/IconExplanation.js","plainX/components/cards/CurrencyAmountSelect.js","plainX/components/cards/Offer.js","plainX/components/cards/Offer.js","plainX/components/cards/LocationSelect.js","plainX/components/cards/ExpirySelect.js","plainX/components/cards/Location.js","plainX/components/cards/CurrencyAmount.js","plainX/components/cards/Expiry.js","plainX/components/cards/UserConversationItem.js","plainX/components/cards/TodaysRateOffer.js"],function(global, require, module, exports) {  'use strict';

var CardRouter={
registeredCards:{
"Offer":function(){return require('plainX/components/cards/Offer.js');},
"CurrencySelect":function(){return require('plainX/components/cards/CurrencySelect.js');},
"Explanation":function(){return require('plainX/components/cards/Explanation.js');},
"CurrencyAmountSelect":function(){return require('plainX/components/cards/CurrencyAmountSelect.js');},
"LocationSelect":function(){return require('plainX/components/cards/LocationSelect.js');},
"ExpirySelect":function(){return require('plainX/components/cards/ExpirySelect.js');},
"CurrencyAmount":function(){return require('plainX/components/cards/CurrencyAmount.js');},
"User":function(){return require('plainX/components/cards/Offer.js');},
"Location":function(){return require('plainX/components/cards/Location.js');},
"Expiry":function(){return require('plainX/components/cards/Expiry.js');},
"OfferSummary":function(){return require('plainX/components/cards/OfferSummary.js');},
"UserConversationItem":function(){return require('plainX/components/cards/UserConversationItem.js');},
"Message":function(){return require('plainX/components/cards/Message.js');},
"Feedback":function(){return require('plainX/components/cards/Feedback.js');},
"Header":function(){return require('plainX/components/cards/Header.js');},
"Empty":function(){return require('plainX/components/cards/Empty.js');},
"Error":function(){return require('plainX/components/cards/Error.js');},
"TodaysRateOffer":function(){return require('plainX/components/cards/TodaysRateOffer.js');},
"IconExplanation":function(){return require('plainX/components/cards/IconExplanation.js');}},

getComponent:function(name){
if(Object.keys(this.registeredCards).indexOf(name) == -1)return null;else 
return this.registeredCards[name]();},

isConversationCard:function(name){
return name.indexOf("Conversation") != -1 || name.indexOf("Message") != -1 || name.indexOf("Feedback") != -1;}};



module.exports = CardRouter;
});
__d('plainX/components/cards/Offer.js',["image!plane","react-native/Libraries/react-native/react-native.js","rx/dist/rx.all.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');
var Rx=require('rx/dist/rx.all.js');var 


Text=




React.Text;var TouchableOpacity=React.TouchableOpacity;var View=React.View;var Image=React.Image;var StyleSheet=React.StyleSheet;

var Offer=React.createClass({
displayName:"OfferCard",
render:function(){var _this=this;
var subject=new Rx.Subject();
if(this.props.observer){
subject.subscribe(this.props.observer);}

return (
React.createElement(TouchableOpacity,{style:{flex:1},onPress:function(){return subject.onNext({"Id":_this.props.data["Id"]});}},
React.createElement(View,{style:styles.container},
React.createElement(View,{style:styles.sideContainer},
React.createElement(Text,{style:[this.props.cardCommonStyles.currency,styles.leftCurrency]},
this.props.data["Sell"] + "\n" + this.props.data["AmountSell"])),

React.createElement(View,{style:styles.centerContainer},
React.createElement(Image,{style:styles.center,source:require('image!plane')})),

React.createElement(View,{style:styles.sideContainer},
React.createElement(Text,{style:[this.props.cardCommonStyles.currency,styles.rightCurrency]},
this.props.data["Buy"] + "\n" + this.props.data["AmountBuy"])))));}});







var styles=StyleSheet.create({
container:{
flex:1,
flexDirection:'row',
justifyContent:'center',
height:40},

centerContainer:{
flex:2,
flexDirection:'column',
justifyContent:'center',
alignItems:'center',
marginLeft:5,
marginRight:5},


center:{
marginTop:3,
width:40,
height:24,
resizeMode:'stretch',
alignSelf:'center'},

sideContainer:{
flex:4,
justifyContent:'center',
flexDirection:'column'},

leftCurrency:{
textAlign:'right',
marginLeft:0,marginRight:0},

rightCurrency:{
textAlign:'left',
marginLeft:0,marginRight:0}});




module.exports = Offer;
});
__d('image!plane',[],function(global, require, module, exports) {  module.exports = {"__packager_asset":true,"isStatic":true,"path":"/Users/parkjiho/Documents/react-native-projects/plainX/ios/plainX/Images.xcassets/plane.imageset/plane.png","uri":"plane","width":59,"height":36,"deprecated":true};
});
__d('plainX/components/cards/CurrencySelect.js',["react-native/Libraries/react-native/react-native.js","rx/dist/rx.all.js","plainX/components/CardButton.js","plainX/components/CurrencySelectText.js","plainX/components/CurrencyPicker.ios.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');
var Rx=require('rx/dist/rx.all.js');var 


View=




React.View;var Text=React.Text;var TouchableOpacity=React.TouchableOpacity;var StyleSheet=React.StyleSheet;var Platform=React.Platform;

var CurrencySelectText=require('plainX/components/CurrencySelectText.js');
var CardButton=require('plainX/components/CardButton.js');
var CurrencyPicker=Platform.OS === 'ios'?require('plainX/components/CurrencyPicker.ios.js'):require('../CurrencyPicker.android.js');

var CurrencySelect=React.createClass({
displayName:"CurrencySelectCard",
getInitialState:function(){
return {
showSellCurrencyPicker:false,
showBuyCurrencyPicker:false,
selectedSellCurrency:null,
selectedBuyCurrency:null};},


dismissPicker:function(){
this.setState({showSellCurrencyPicker:false,showBuyCurrencyPicker:false});},

onPressSell:function(event){
this.setState({showBuyCurrencyPicker:false,showSellCurrencyPicker:true,selectedSellCurrency:this.props.data["Sell"]});},

onPressBuy:function(event){
this.setState({showSellCurrencyPicker:false,showBuyCurrencyPicker:true,selectedBuyCurrency:this.props.data["Buy"]});},

onSellPickerValueChange:function(value){
this.setState({selectedSellCurrency:value});},

onBuyPickerValueChange:function(value){
this.setState({selectedBuyCurrency:value});},

render:function(){
var subject=new Rx.Subject();
if(this.props.observer){
subject.subscribe(this.props.observer);}

var id=this.props.id;
var currencyList=this.props.data["CurrencyList"];
var next={"id":id,"CurrencyList":currencyList};
var sell=this.props.data["Sell"];
var buy=this.props.data["Buy"];
var sellPick=this.state.selectedSellCurrency;
var buyPick=this.state.selectedBuyCurrency;
var dismiss=this.dismissPicker;

var sellPicker=this.state.showSellCurrencyPicker?
React.createElement(CurrencyPicker,{
currentCurrency:this.state.selectedSellCurrency,
currencyList:currencyList,
onPick:function(){
next["Target"] = "Sell";
next["Sell"] = sellPick;
dismiss();
subject.onNext(next);},

onPickerValueChange:this.onSellPickerValueChange,
dismissPicker:this.dismissPicker}):null;

var buyPicker=this.state.showBuyCurrencyPicker?
React.createElement(CurrencyPicker,{
onPick:function(){
next["Target"] = "Buy";
next["Buy"] = buyPick;
dismiss();
subject.onNext(next);},

currentCurrency:this.state.selectedBuyCurrency,
currencyList:currencyList,
onPickerValueChange:this.onBuyPickerValueChange,
dismissPicker:this.dismissPicker}):null;

return (
React.createElement(View,null,
React.createElement(Text,{style:[this.props.cardCommonStyles.titles,{marginBottom:10}]},'I WANT TO EXCHANGE'),



React.createElement(View,{style:styles.currencyContainer},

React.createElement(TouchableOpacity,{onPress:this.onPressSell},
React.createElement(CurrencySelectText,{
selected:this.state.showSellCurrencyPicker,
iconStyle:this.props.cardCommonStyles.triangleIconStyle,
text:sell})),


React.createElement(Text,{style:(this.props.cardCommonStyles.titles,styles.to)},'TO'),



React.createElement(TouchableOpacity,{onPress:this.onPressBuy},
React.createElement(CurrencySelectText,{
selected:this.state.showBuyCurrencyPicker,
iconStyle:this.props.cardCommonStyles.triangleIconStyle,
text:buy}))),



React.createElement(TouchableOpacity,{onPress:function(event){
next["Target"] = "Button";
next["Sell"] = sell;
next["Buy"] = buy;
subject.onNext(next);}},

React.createElement(CardButton,{text:"FIND OFFERS"})),

buy != "HKD" && sell != "HKD"?
React.createElement(Text,{style:[this.props.cardCommonStyles.headings,{marginTop:10}]},
"*Your chances of match will be\nhigher if it involves Hong Kong Dollars."):

null,
sellPicker,
buyPicker));}});





var styles=StyleSheet.create({
currencyContainer:{
flex:1,
flexDirection:'row',
justifyContent:'center',
marginTop:10,
marginBottom:10},

to:{
alignSelf:'center',
marginLeft:10,
marginRight:10}});



module.exports = CurrencySelect;
});
__d('plainX/components/CurrencySelectText.js',["image!triangle","react-native/Libraries/react-native/react-native.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 


View=



React.View;var Image=React.Image;var Text=React.Text;var StyleSheet=React.StyleSheet;

var CurrencySelectText=React.createClass({displayName:'CurrencySelectText',
render:function(){
return (
React.createElement(View,{style:[styles.container,this.props.selected?{borderWidth:2}:{}]},
React.createElement(Text,{style:[styles.currencySelectText,this.props.selected?{fontWeight:'bold'}:{}]},
this.props.text),

React.createElement(Image,{style:this.props.iconStyle,source:require('image!triangle')})));}});





var styles=StyleSheet.create({
container:{
flexDirection:'row',
justifyContent:'center',
alignItems:'center',
width:90,
height:40,
padding:3,
borderWidth:1,
borderColor:'#33cc66',
borderRadius:4},

currencySelectText:{
fontSize:60 / 3,
textAlign:'center',
color:'#33cc66',
marginRight:7}});




module.exports = CurrencySelectText;
});
__d('image!triangle',[],function(global, require, module, exports) {  module.exports = {"__packager_asset":true,"isStatic":true,"path":"/Users/parkjiho/Documents/react-native-projects/plainX/ios/plainX/Images.xcassets/triangle.imageset/triangle.png","uri":"triangle","width":44,"height":22,"deprecated":true};
});
__d('plainX/components/CardButton.js',["react-native/Libraries/react-native/react-native.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 


Text=

React.Text;var StyleSheet=React.StyleSheet;

var CardButton=React.createClass({displayName:'CardButton',
render:function(){
return (
React.createElement(Text,{style:styles.cardButton},
this.props.text));}});





var styles=StyleSheet.create({
cardButton:{
flex:1,
fontSize:60 / 3,
textAlign:'center',
color:'white',
backgroundColor:'#33cc66',
borderRadius:2,
overflow:'hidden',
paddingTop:20,
paddingBottom:20,
marginTop:10}});



module.exports = CardButton;
});
__d('plainX/components/CurrencyPicker.ios.js',["image!cross","image!checkmark","react-native/Libraries/react-native/react-native.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

PickerIOS=





React.PickerIOS;var View=React.View;var TouchableOpacity=React.TouchableOpacity;var Text=React.Text;var StyleSheet=React.StyleSheet;var Image=React.Image;

var PickerItemIOS=PickerIOS.Item;

var CurrencyPicker=React.createClass({displayName:'CurrencyPicker',
render:function(){var _this=this;
return (
React.createElement(View,{style:styles.container},
React.createElement(View,{style:styles.pickerContainer},
React.createElement(PickerIOS,{
style:{width:320},
onValueChange:function(value){return _this.props.onPickerValueChange(value);},
selectedValue:this.props.currentCurrency},

this.props.currencyList.map(function(currency){
return (
React.createElement(PickerItemIOS,{
key:currency["Code"],
value:currency["Code"],
label:currency["Code"] + " - " + currency["Country"]}));}))),




React.createElement(View,{style:styles.buttonsContainer},
React.createElement(TouchableOpacity,{
style:styles.button,
onPress:this.props.dismissPicker},
React.createElement(Image,{source:require('image!cross'),
style:styles.icon}),
React.createElement(Text,{style:styles.text},'Close')),

React.createElement(TouchableOpacity,{
style:styles.button,
onPress:this.props.onPick},
React.createElement(Image,{source:require('image!checkmark'),
style:styles.icon}),
React.createElement(Text,{style:styles.text},'Done')))));}});







var styles=StyleSheet.create({
container:{
marginTop:10,
flexDirection:'column'},

pickerContainer:{
flex:9,
backgroundColor:'transparent',
alignSelf:'center'},

buttonsContainer:{
flex:1,
flexDirection:'row',
justifyContent:'space-between'},

button:{
flexDirection:'row',
alignItems:'center'},

icons:{
width:14,
height:14},

text:{
fontSize:15,
color:'#33cc66',
fontWeight:'bold'}});



module.exports = CurrencyPicker;
});
__d('image!cross',[],function(global, require, module, exports) {  module.exports = {"__packager_asset":true,"isStatic":true,"path":"/Users/parkjiho/Documents/react-native-projects/plainX/ios/plainX/Images.xcassets/cross.imageset/cross.png","uri":"cross","width":15,"height":15,"deprecated":true};
});
__d('image!checkmark',[],function(global, require, module, exports) {  module.exports = {"__packager_asset":true,"isStatic":true,"path":"/Users/parkjiho/Documents/react-native-projects/plainX/ios/plainX/Images.xcassets/checkmark.imageset/checkmark.png","uri":"checkmark","width":14,"height":15,"deprecated":true};
});
__d('plainX/components/cards/Explanation.js',["react-native/Libraries/react-native/react-native.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

Text=
React.Text;

var Explanation=React.createClass({
displayName:"ExplanationCard",
render:function(){
return (
React.createElement(Text,{style:[this.props.cardCommonStyles.explanation,{textAlign:'center'}]},
this.props.data["Text"]));}});





module.exports = Explanation;
});
__d('plainX/components/cards/CurrencyAmountSelect.js',["image!plane","react-native/Libraries/react-native/react-native.js","rx/dist/rx.all.js","plainX/components/CurrencySelectText.js","plainX/components/Divider.js","plainX/components/CurrencyAmountTextInput.js","plainX/components/CurrencyPicker.ios.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');
var Rx=require('rx/dist/rx.all.js');
var CurrencySelectText=require('plainX/components/CurrencySelectText.js');
var Divider=require('plainX/components/Divider.js');
var CurrencyAmountTextInput=require('plainX/components/CurrencyAmountTextInput.js');var 


View=






React.View;var Text=React.Text;var TouchableOpacity=React.TouchableOpacity;var TextInput=React.TextInput;var StyleSheet=React.StyleSheet;var Image=React.Image;var Platform=React.Platform;

var CurrencyPicker=Platform.OS === 'ios'?require('plainX/components/CurrencyPicker.ios.js'):require('../CurrencyPicker.android.js');


var CurrencyAmountSelect=React.createClass({
displayName:"CurrencyAmountSelectCard",
getDynamicRateExplanation:function(rate){
return rate?
React.createElement(Text,{style:this.props.cardCommonStyles.headings},
"*Based on today's market rate:" + rate):

null;},

getInitialState:function(){
return {
showSellCurrencyPicker:false,
showBuyCurrencyPicker:false,
selectedSellCurrency:null,
selectedBuyCurrency:null};},


dismissPicker:function(){
this.setState({showSellCurrencyPicker:false,showBuyCurrencyPicker:false});},

onPressSell:function(event){
this.setState({showBuyCurrencyPicker:false,showSellCurrencyPicker:true,selectedSellCurrency:this.props.data["Sell"]});},

onPressBuy:function(event){
this.setState({showSellCurrencyPicker:false,showBuyCurrencyPicker:true,selectedBuyCurrency:this.props.data["Buy"]});},

onSellPickerValueChange:function(value){
this.setState({selectedSellCurrency:value});},

onBuyPickerValueChange:function(value){
this.setState({selectedBuyCurrency:value});},

render:function(){
var subject=new Rx.Subject();
if(this.props.observer){
subject.subscribe(this.props.observer);}

var id=this.props.id;
var currencyList=this.props.data["CurrencyList"];
var next={"id":id,"CurrencyList":currencyList};
var sell=this.props.data["Sell"];
var buy=this.props.data["Buy"];
var AmountSell=this.props.data["AmountSell"] + "";
var AmountBuy=this.props.data["AmountBuy"] + "";
var canEditCurrency=true;


var sellPick=this.state.selectedSellCurrency;
var buyPick=this.state.selectedBuyCurrency;
var dismiss=this.dismissPicker;
var onPressSell=this.onPressSell;
var onPressBuy=this.onPressBuy;

var sellPicker=this.state.showSellCurrencyPicker?
React.createElement(CurrencyPicker,{
currentCurrency:this.state.selectedSellCurrency,
currencyList:currencyList,
onPick:function(){
next["Target"] = "Sell";
next["Sell"] = sellPick;
dismiss();
subject.onNext(next);},

onPickerValueChange:this.onSellPickerValueChange,
dismissPicker:this.dismissPicker}):null;

var buyPicker=this.state.showBuyCurrencyPicker?
React.createElement(CurrencyPicker,{
onPick:function(){
next["Target"] = "Buy";
next["Buy"] = buyPick;
dismiss();
subject.onNext(next);},

currentCurrency:this.state.selectedBuyCurrency,
currencyList:currencyList,
onPickerValueChange:this.onBuyPickerValueChange,
dismissPicker:this.dismissPicker}):null;
var dismissPicker=this.dismissPicker;
return (
React.createElement(View,null,
React.createElement(Text,{style:[this.props.cardCommonStyles.titles,{marginBottom:5}]},
this.props.data["TitleText"]),


React.createElement(Divider,null),
React.createElement(View,{style:{flexDirection:'column',alignItems:'center'}},
React.createElement(View,{style:styles.row},
React.createElement(TouchableOpacity,{
style:styles.marginRight,
onPress:function(event){
if(!canEditCurrency)return;
next["Target"] = "PressSell";
subject.onNext(next);
onPressSell();}},

React.createElement(CurrencySelectText,{
selected:this.state.showSellCurrencyPicker,
iconStyle:this.props.cardCommonStyles.triangleIconStyle,
text:sell})),

React.createElement(CurrencyAmountTextInput,{
textStyle:[this.props.cardCommonStyles.inputAmountText,
this.props.data["SellRate"]?styles.calculated:{}],
onChangeText:function(num){
next["Target"] = "AmountSell";
next["AmountSell"] = num;
subject.onNext(next);},

onFocus:function(){
next["Target"] = "Focus";
dismissPicker();
subject.onNext(next);},

value:AmountSell + (this.props.data["SellRate"]?"*":"")})),


React.createElement(View,{style:styles.row},
this.getDynamicRateExplanation(this.props.data["SellRate"])),

React.createElement(View,{style:styles.row},
React.createElement(Image,{style:styles.centerImage,source:require('image!plane')}),
React.createElement(Text,{style:this.props.cardCommonStyles.headings},'EXCHANGE TO:')),


React.createElement(View,{style:styles.row},
React.createElement(TouchableOpacity,{
style:styles.marginRight,
onPress:function(event){
if(!canEditCurrency)return;
next["Target"] = "PressBuy";
subject.onNext(next);
onPressBuy();}},

React.createElement(CurrencySelectText,{
selected:this.state.showBuyCurrencyPicker,
iconStyle:this.props.cardCommonStyles.triangleIconStyle,
text:buy})),

React.createElement(CurrencyAmountTextInput,{
textStyle:[this.props.cardCommonStyles.inputAmountText,
this.props.data["BuyRate"]?styles.calculated:{}],

onChangeText:function(num){
next["Target"] = "AmountBuy";
next["AmountBuy"] = num;
subject.onNext(next);},

onFocus:function(){
next["Target"] = "Focus";
dismissPicker();
subject.onNext(next);},

value:AmountBuy + (this.props.data["BuyRate"]?"*":"")})),


React.createElement(View,{style:styles.row},
this.getDynamicRateExplanation(this.props.data["BuyRate"]))),


React.createElement(TouchableOpacity,{onPress:function(event){
next["Target"] = "Next";
subject.onNext(next);}}),


sellPicker,
buyPicker));}});





var styles=StyleSheet.create({
row:{
flexDirection:'row',
marginTop:10},

marginRight:{
marginRight:10},

centerImage:{
marginTop:3,
marginRight:5,
width:20,
height:12,
resizeMode:'stretch',
alignSelf:'center'},

calculated:{
color:'#333333'}});




module.exports = CurrencyAmountSelect;
});
__d('plainX/components/Divider.js',["react-native/Libraries/react-native/react-native.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

View=
React.View;

var Divider=React.createClass({
displayName:'Divider',
render:function(){
return React.createElement(View,{style:[{flex:1,height:1,backgroundColor:'#33cc66'},
this.props.margin || {}]});}});


module.exports = Divider;
});
__d('plainX/components/CurrencyAmountTextInput.js',["react-native/Libraries/react-native/react-native.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

View=


React.View;var TextInput=React.TextInput;var StyleSheet=React.StyleSheet;

var CurrencyAmountTextInput=React.createClass({
displayName:'CurrencyAmountTextInput',
render:function(){
return (
React.createElement(View,{style:styles.container},
React.createElement(TextInput,{
style:[styles.currencyAmountTextInput,this.props.textStyle,
this.props.value.length > 5?{fontSize:20}:{}],
onChangeText:this.props.onChangeText,
onFocus:this.props.onFocus,
value:this.props.value,
keyboardType:"numeric",
clearTextOnFocus:true,
returnKeyType:'done'})));}});






var styles=StyleSheet.create({
container:{
width:140,
height:40,
flexDirection:'column',
padding:3,
borderWidth:1,
borderLeftColor:'transparent',
borderRightColor:'transparent',
borderTopColor:'transparent',
borderBottomColor:'#33cc66',
marginRight:15},

currencyAmountTextInput:{
width:140,
height:30}});



module.exports = CurrencyAmountTextInput;
});
__d('plainX/components/cards/LocationSelect.js',["image!checkmark","react-native/Libraries/react-native/react-native.js","rx/dist/rx.all.js","plainX/components/Divider.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');
var Rx=require('rx/dist/rx.all.js');var 


View=




React.View;var Text=React.Text;var TouchableOpacity=React.TouchableOpacity;var Image=React.Image;var StyleSheet=React.StyleSheet;

var Divider=require('plainX/components/Divider.js');


var LocationCheckBox=React.createClass({
displayName:"LocationCheckBox",
render:function(){
var checkmarkStyle=this.props.selected?
[styles.checkmark]:
[styles.checkmark,{opacity:0}];

return (
React.createElement(View,{style:styles.selection},
React.createElement(View,{style:styles.checkbox},
React.createElement(Image,{style:checkmarkStyle,source:require('image!checkmark')})),

React.createElement(Text,{style:styles.locationName},this.props.name)));}});





var LocationSelect=React.createClass({
displayName:"LocationSelectCard",
render:function(){
var subject=new Rx.Subject();
if(this.props.observer){
subject.subscribe(this.props.observer);}

var id=this.props.id;
var next={"id":id};
var locations=this.props.data["Locations"];

var selections=Object.keys(this.props.data["Locations"]).map(function(location){
return (
React.createElement(TouchableOpacity,{onPress:function(){
next["Location"] = location;
next["IsSelected"] = !locations[location]["IsSelected"];
subject.onNext(next);}},

React.createElement(LocationCheckBox,{name:location,selected:locations[location]["IsSelected"]})));});



return (
React.createElement(View,null,
React.createElement(Text,{style:[this.props.cardCommonStyles.titles,{marginBottom:5}]},
this.props.data["TitleText"]),

React.createElement(Divider,null),
React.createElement(View,{style:styles.selectionContainer},
selections),

React.createElement(Text,{style:this.props.cardCommonStyles.description},
this.props.data["DescriptionText"])));}});






var styles=StyleSheet.create({
selectionContainer:{
flexDirection:'row',
flexWrap:'wrap',
marginTop:10,
marginBottom:10,
justifyContent:'space-around'},

selection:{
flexDirection:'row',
alignItems:'center'},

checkbox:{
width:15,
height:15,
borderWidth:1,
borderColor:'#33cc66',
borderRadius:4,
marginRight:3},

checkmark:{
width:12,
height:12,
resizeMode:'stretch',
alignSelf:'center'},

locationName:{
color:'#333333',
fontSize:60 / 3}});



module.exports = LocationSelect;
});
__d('plainX/components/cards/ExpirySelect.js',["image!triangle","image!calendar","image!checkmark","react-native/Libraries/react-native/react-native.js","rx/dist/rx.all.js","plainX/components/Divider.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');
var Rx=require('rx/dist/rx.all.js');var 


View=






React.View;var Text=React.Text;var Platform=React.Platform;var Image=React.Image;var DatePickerIOS=React.DatePickerIOS;var StyleSheet=React.StyleSheet;var TouchableOpacity=React.TouchableOpacity;

var Divider=require('plainX/components/Divider.js');

var DateFormat=React.createClass({
displayName:"DateFormat",
render:function(){
var triangle=require('image!triangle');
return (
React.createElement(View,{style:styles.dateformatContainer},
React.createElement(Image,{source:require('image!calendar'),
style:styles.calendarIcon}),
React.createElement(View,{style:[{width:45},styles.textContainer]},
React.createElement(Text,{style:styles.dateformatText},this.props.date.getMonth() + 1),
React.createElement(View,{style:{height:1,flex:1,backgroundColor:'#33cc66'}})),

React.createElement(Image,{style:[this.props.triangleIconStyle,{marginRight:5}],source:triangle}),

React.createElement(View,{style:[{width:45},styles.textContainer]},
React.createElement(Text,{style:styles.dateformatText},this.props.date.getDate()),
React.createElement(View,{style:{height:1,flex:1,backgroundColor:'#33cc66'}})),

React.createElement(Image,{style:[this.props.triangleIconStyle,{marginRight:5}],source:triangle}),

React.createElement(View,{style:[{width:90},styles.textContainer]},
React.createElement(Text,{style:styles.dateformatText},this.props.date.getFullYear()),
React.createElement(View,{style:{height:1,flex:1,backgroundColor:'#33cc66'}})),

React.createElement(Image,{style:[this.props.triangleIconStyle,{marginRight:5}],source:triangle})));}});





var styles=StyleSheet.create({
dateformatContainer:{
flexDirection:'row',
alignItems:'center',
marginTop:10,
marginBottom:10},

textContainer:{
flexDirection:'column'},

dateformatText:{
color:'#33cc66',
fontSize:60 / 2,
textAlign:'center'},

calendarIcon:{
width:30,
height:30,
marginRight:5},

doneButtonIcon:{
width:14,
height:14},

doneButtonText:{
fontSize:15,
color:'#33cc66',
fontWeight:'bold'}});



var ExpirySelect=React.createClass({
displayName:"ExpirySelect",
getInitialState:function(){
return {
isDatePickerShown:false};},


showDatePicker:function(){
this.setState({isDatePickerShown:true});},

closeDatePicker:function(){
this.setState({isDatePickerShown:false});},

render:function(){
var subject=new Rx.Subject();
if(this.props.observer){
subject.subscribe(this.props.observer);}

var next={"id":this.props.id};
var date=new Date(this.props.data["Expiry"] * 1000);

var datePicker=Platform.OS === 'ios'?

React.createElement(View,{style:{alignItems:'center',flexDirection:'column'}},
React.createElement(TouchableOpacity,{style:{alignSelf:'flex-end',flexDirection:'row',marginRight:10},onPress:this.closeDatePicker},
React.createElement(Image,{source:require('image!checkmark'),
style:styles.doneButtonIcon}),
React.createElement(Text,{style:styles.doneButtonText},'Close')),

React.createElement(DatePickerIOS,{
style:{backgroundColor:'transparent'},
date:date,
mode:'date',
onDateChange:function(selectedDate){
if(selectedDate >= new Date()){
next["Expiry"] = selectedDate.getTime() / 1000;
subject.onNext(next);}}})):





null;

return (
React.createElement(View,null,
React.createElement(Text,{style:[this.props.cardCommonStyles.titles,{marginBottom:5}]},
this.props.data["TitleText"]),
React.createElement(Divider,null),
React.createElement(TouchableOpacity,{style:{flexDirection:'column',alignItems:'center'},onPress:this.showDatePicker},
React.createElement(DateFormat,{
triangleIconStyle:this.props.cardCommonStyles.triangleIconStyle,
date:date})),

this.state.isDatePickerShown?datePicker:null,
React.createElement(Text,{style:this.props.cardCommonStyles.description},
this.props.data["DescriptionText"])));}});





module.exports = ExpirySelect;
});
__d('image!calendar',[],function(global, require, module, exports) {  module.exports = {"__packager_asset":true,"isStatic":true,"path":"/Users/parkjiho/Documents/react-native-projects/plainX/ios/plainX/Images.xcassets/calendar.imageset/calendar.png","uri":"calendar","width":65,"height":65,"deprecated":true};
});
__d('plainX/components/cards/CurrencyAmount.js',["image!plane","react-native/Libraries/react-native/react-native.js","rx/dist/rx.all.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');
var Rx=require('rx/dist/rx.all.js');var 


Text=



React.Text;var View=React.View;var Image=React.Image;var StyleSheet=React.StyleSheet;

var CurrencyAmount=React.createClass({
displayName:"CurrencyAmountCard",
render:function(){
return (
React.createElement(View,{style:styles.container},
React.createElement(View,{style:styles.sideContainer},
React.createElement(Text,{style:[this.props.cardCommonStyles.currency,styles.leftCurrency]},
this.props.data["Sell"] + "\n" + this.props.data["AmountSell"])),

React.createElement(View,{style:styles.centerContainer},
React.createElement(Image,{style:styles.center,source:require('image!plane')})),

React.createElement(View,{style:styles.sideContainer},
React.createElement(Text,{style:[this.props.cardCommonStyles.currency,styles.rightCurrency]},
this.props.data["Buy"] + "\n" + this.props.data["AmountBuy"]))));}});






var styles=StyleSheet.create({
container:{
flex:1,
flexDirection:'row',
justifyContent:'center',
height:40},

centerContainer:{
flex:2,
flexDirection:'column',
justifyContent:'center',
alignItems:'center',
marginLeft:5,
marginRight:5},


center:{
marginTop:3,
width:40,
height:24,
resizeMode:'stretch',
alignSelf:'center'},

sideContainer:{
flex:4,
justifyContent:'center',
flexDirection:'column'},

leftCurrency:{
textAlign:'right',
marginLeft:0,marginRight:0},

rightCurrency:{
textAlign:'left',
marginLeft:0,marginRight:0}});




module.exports = CurrencyAmount;
});
__d('plainX/components/cards/Location.js',["image!locationicon","react-native/Libraries/react-native/react-native.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 


Text=



React.Text;var View=React.View;var Image=React.Image;var StyleSheet=React.StyleSheet;

var Location=React.createClass({
displayName:"LocationCard",
render:function(){
var locations=this.props.data["Locations"];
var offerOptionStyle=this.props.cardCommonStyles.offerOptions;
var locationViews=Object.keys(this.props.data["Locations"]).map(
function(location){
return locations[location]["IsSelected"]?
React.createElement(Text,{style:offerOptionStyle},location):
null;});



return (
React.createElement(View,{style:styles.container},
React.createElement(Image,{style:styles.icon,source:require('image!locationicon')}),
React.createElement(Text,{style:this.props.cardCommonStyles.offerTitle},this.props.data["TitleText"]),
locationViews));}});





var styles=StyleSheet.create({
container:{
flexDirection:'column',
alignItems:'center'},

icon:{
width:27,height:40,
resizeMode:'contain'}});




module.exports = Location;
});
__d('image!locationicon',[],function(global, require, module, exports) {  module.exports = {"__packager_asset":true,"isStatic":true,"path":"/Users/parkjiho/Documents/react-native-projects/plainX/ios/plainX/Images.xcassets/locationicon.imageset/locationicon.png","uri":"locationicon","width":34,"height":50,"deprecated":true};
});
__d('plainX/components/cards/Expiry.js',["image!calendaricon_gray","react-native/Libraries/react-native/react-native.js","plainX/components/screens/componentMixins/DateMixin.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 


Text=



React.Text;var View=React.View;var Image=React.Image;var StyleSheet=React.StyleSheet;

var DateMixin=require('plainX/components/screens/componentMixins/DateMixin.js');

var Expiry=React.createClass({
displayName:"ExpiryCard",
mixins:[DateMixin],
render:function(){
return (
React.createElement(View,{style:styles.container},
React.createElement(Image,{style:styles.icon,source:require('image!calendaricon_gray')}),
React.createElement(Text,{style:this.props.cardCommonStyles.offerTitle},this.props.data["TitleText"]),
React.createElement(Text,{style:this.props.cardCommonStyles.offerOptions},
this.props.data["Expiry"] == -1?"None":this.getDateFormat(new Date(this.props.data["Expiry"])))));}});






var styles=StyleSheet.create({
container:{
flexDirection:'column',
alignItems:'center'},

icon:{
width:25,height:25,
resizeMode:'contain'}});



module.exports = Expiry;
});
__d('plainX/components/screens/componentMixins/DateMixin.js',["moment/moment.js"],function(global, require, module, exports) {  'use strict';

var moment=require('moment/moment.js');

var DateMixin={
getMessageTimestampFormat:function(timestamp){
var time=moment(timestamp * 1000);
if(time.isSame(moment(),'d'))
return time.format("h:mm a");
return time.format("MMM Do h:mm a");},

getConversationTimestampFormat:function(timestamp){
var time=moment(timestamp * 1000);
if(time.isSame(moment(),'d'))
return time.format("h:mm a");
return time.format("MMM Do");},

getDateFormat:function(date){
var time=moment(date * 1000);
return time.format("MMM Do YY");}};



module.exports = DateMixin;
});
__d('moment/moment.js',[],function(global, require, module, exports) {  (





function(global,factory){
typeof exports === 'object' && typeof module !== 'undefined'?module.exports = factory():
typeof define === 'function' && define.amd?define(factory):
global.moment = factory();})(
this,function(){'use strict';

var hookCallback;

function utils_hooks__hooks(){
return hookCallback.apply(null,arguments);}




function setHookCallback(callback){
hookCallback = callback;}


function isArray(input){
return Object.prototype.toString.call(input) === '[object Array]';}


function isDate(input){
return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';}


function map(arr,fn){
var res=[],i;
for(i = 0;i < arr.length;++i) {
res.push(fn(arr[i],i));}

return res;}


function hasOwnProp(a,b){
return Object.prototype.hasOwnProperty.call(a,b);}


function extend(a,b){
for(var i in b) {
if(hasOwnProp(b,i)){
a[i] = b[i];}}



if(hasOwnProp(b,'toString')){
a.toString = b.toString;}


if(hasOwnProp(b,'valueOf')){
a.valueOf = b.valueOf;}


return a;}


function create_utc__createUTC(input,format,locale,strict){
return createLocalOrUTC(input,format,locale,strict,true).utc();}


function defaultParsingFlags(){

return {
empty:false,
unusedTokens:[],
unusedInput:[],
overflow:-2,
charsLeftOver:0,
nullInput:false,
invalidMonth:null,
invalidFormat:false,
userInvalidated:false,
iso:false};}



function getParsingFlags(m){
if(m._pf == null){
m._pf = defaultParsingFlags();}

return m._pf;}


function valid__isValid(m){
if(m._isValid == null){
var flags=getParsingFlags(m);
m._isValid = !isNaN(m._d.getTime()) && 
flags.overflow < 0 && 
!flags.empty && 
!flags.invalidMonth && 
!flags.invalidWeekday && 
!flags.nullInput && 
!flags.invalidFormat && 
!flags.userInvalidated;

if(m._strict){
m._isValid = m._isValid && 
flags.charsLeftOver === 0 && 
flags.unusedTokens.length === 0 && 
flags.bigHour === undefined;}}


return m._isValid;}


function valid__createInvalid(flags){
var m=create_utc__createUTC(NaN);
if(flags != null){
extend(getParsingFlags(m),flags);}else 

{
getParsingFlags(m).userInvalidated = true;}


return m;}


var momentProperties=utils_hooks__hooks.momentProperties = [];

function copyConfig(to,from){
var i,prop,val;

if(typeof from._isAMomentObject !== 'undefined'){
to._isAMomentObject = from._isAMomentObject;}

if(typeof from._i !== 'undefined'){
to._i = from._i;}

if(typeof from._f !== 'undefined'){
to._f = from._f;}

if(typeof from._l !== 'undefined'){
to._l = from._l;}

if(typeof from._strict !== 'undefined'){
to._strict = from._strict;}

if(typeof from._tzm !== 'undefined'){
to._tzm = from._tzm;}

if(typeof from._isUTC !== 'undefined'){
to._isUTC = from._isUTC;}

if(typeof from._offset !== 'undefined'){
to._offset = from._offset;}

if(typeof from._pf !== 'undefined'){
to._pf = getParsingFlags(from);}

if(typeof from._locale !== 'undefined'){
to._locale = from._locale;}


if(momentProperties.length > 0){
for(i in momentProperties) {
prop = momentProperties[i];
val = from[prop];
if(typeof val !== 'undefined'){
to[prop] = val;}}}




return to;}


var updateInProgress=false;


function Moment(config){
copyConfig(this,config);
this._d = new Date(config._d != null?config._d.getTime():NaN);


if(updateInProgress === false){
updateInProgress = true;
utils_hooks__hooks.updateOffset(this);
updateInProgress = false;}}



function isMoment(obj){
return obj instanceof Moment || obj != null && obj._isAMomentObject != null;}


function absFloor(number){
if(number < 0){
return Math.ceil(number);}else 
{
return Math.floor(number);}}



function toInt(argumentForCoercion){
var coercedNumber=+argumentForCoercion,
value=0;

if(coercedNumber !== 0 && isFinite(coercedNumber)){
value = absFloor(coercedNumber);}


return value;}


function compareArrays(array1,array2,dontConvert){
var len=Math.min(array1.length,array2.length),
lengthDiff=Math.abs(array1.length - array2.length),
diffs=0,
i;
for(i = 0;i < len;i++) {
if(dontConvert && array1[i] !== array2[i] || 
!dontConvert && toInt(array1[i]) !== toInt(array2[i])){
diffs++;}}


return diffs + lengthDiff;}


function Locale(){}


var locales={};
var globalLocale;

function normalizeLocale(key){
return key?key.toLowerCase().replace('_','-'):key;}





function chooseLocale(names){
var i=0,j,next,locale,split;

while(i < names.length) {
split = normalizeLocale(names[i]).split('-');
j = split.length;
next = normalizeLocale(names[i + 1]);
next = next?next.split('-'):null;
while(j > 0) {
locale = loadLocale(split.slice(0,j).join('-'));
if(locale){
return locale;}

if(next && next.length >= j && compareArrays(split,next,true) >= j - 1){

break;}

j--;}

i++;}

return null;}


function loadLocale(name){
var oldLocale=null;

if(!locales[name] && typeof module !== 'undefined' && 
module && module.exports){
try{
oldLocale = globalLocale._abbr;
require('./locale/' + name);


locale_locales__getSetGlobalLocale(oldLocale);}
catch(e) {}}

return locales[name];}





function locale_locales__getSetGlobalLocale(key,values){
var data;
if(key){
if(typeof values === 'undefined'){
data = locale_locales__getLocale(key);}else 

{
data = defineLocale(key,values);}


if(data){

globalLocale = data;}}



return globalLocale._abbr;}


function defineLocale(name,values){
if(values !== null){
values.abbr = name;
locales[name] = locales[name] || new Locale();
locales[name].set(values);


locale_locales__getSetGlobalLocale(name);

return locales[name];}else 
{

delete locales[name];
return null;}}




function locale_locales__getLocale(key){
var locale;

if(key && key._locale && key._locale._abbr){
key = key._locale._abbr;}


if(!key){
return globalLocale;}


if(!isArray(key)){

locale = loadLocale(key);
if(locale){
return locale;}

key = [key];}


return chooseLocale(key);}


var aliases={};

function addUnitAlias(unit,shorthand){
var lowerCase=unit.toLowerCase();
aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;}


function normalizeUnits(units){
return typeof units === 'string'?aliases[units] || aliases[units.toLowerCase()]:undefined;}


function normalizeObjectUnits(inputObject){
var normalizedInput={},
normalizedProp,
prop;

for(prop in inputObject) {
if(hasOwnProp(inputObject,prop)){
normalizedProp = normalizeUnits(prop);
if(normalizedProp){
normalizedInput[normalizedProp] = inputObject[prop];}}}




return normalizedInput;}


function makeGetSet(unit,keepTime){
return function(value){
if(value != null){
get_set__set(this,unit,value);
utils_hooks__hooks.updateOffset(this,keepTime);
return this;}else 
{
return get_set__get(this,unit);}};}




function get_set__get(mom,unit){
return mom._d['get' + (mom._isUTC?'UTC':'') + unit]();}


function get_set__set(mom,unit,value){
return mom._d['set' + (mom._isUTC?'UTC':'') + unit](value);}




function getSet(units,value){
var unit;
if(typeof units === 'object'){
for(unit in units) {
this.set(unit,units[unit]);}}else 

{
units = normalizeUnits(units);
if(typeof this[units] === 'function'){
return this[units](value);}}


return this;}


function zeroFill(number,targetLength,forceSign){
var absNumber='' + Math.abs(number),
zerosToFill=targetLength - absNumber.length,
sign=number >= 0;
return (sign?forceSign?'+':'':'-') + 
Math.pow(10,Math.max(0,zerosToFill)).toString().substr(1) + absNumber;}


var formattingTokens=/(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;

var localFormattingTokens=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;

var formatFunctions={};

var formatTokenFunctions={};





function addFormatToken(token,padded,ordinal,callback){
var func=callback;
if(typeof callback === 'string'){
func = function(){
return this[callback]();};}


if(token){
formatTokenFunctions[token] = func;}

if(padded){
formatTokenFunctions[padded[0]] = function(){
return zeroFill(func.apply(this,arguments),padded[1],padded[2]);};}


if(ordinal){
formatTokenFunctions[ordinal] = function(){
return this.localeData().ordinal(func.apply(this,arguments),token);};}}




function removeFormattingTokens(input){
if(input.match(/\[[\s\S]/)){
return input.replace(/^\[|\]$/g,'');}

return input.replace(/\\/g,'');}


function makeFormatFunction(format){
var array=format.match(formattingTokens),i,length;

for(i = 0,length = array.length;i < length;i++) {
if(formatTokenFunctions[array[i]]){
array[i] = formatTokenFunctions[array[i]];}else 
{
array[i] = removeFormattingTokens(array[i]);}}



return function(mom){
var output='';
for(i = 0;i < length;i++) {
output += array[i] instanceof Function?array[i].call(mom,format):array[i];}

return output;};}




function formatMoment(m,format){
if(!m.isValid()){
return m.localeData().invalidDate();}


format = expandFormat(format,m.localeData());
formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);

return formatFunctions[format](m);}


function expandFormat(format,locale){
var i=5;

function replaceLongDateFormatTokens(input){
return locale.longDateFormat(input) || input;}


localFormattingTokens.lastIndex = 0;
while(i >= 0 && localFormattingTokens.test(format)) {
format = format.replace(localFormattingTokens,replaceLongDateFormatTokens);
localFormattingTokens.lastIndex = 0;
i -= 1;}


return format;}


var match1=/\d/;
var match2=/\d\d/;
var match3=/\d{3}/;
var match4=/\d{4}/;
var match6=/[+-]?\d{6}/;
var match1to2=/\d\d?/;
var match1to3=/\d{1,3}/;
var match1to4=/\d{1,4}/;
var match1to6=/[+-]?\d{1,6}/;

var matchUnsigned=/\d+/;
var matchSigned=/[+-]?\d+/;

var matchOffset=/Z|[+-]\d\d:?\d\d/gi;

var matchTimestamp=/[+-]?\d+(\.\d{1,3})?/;


var matchWord=/[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i;

var regexes={};

function isFunction(sth){

return typeof sth === 'function' && 
Object.prototype.toString.call(sth) === '[object Function]';}



function addRegexToken(token,regex,strictRegex){
regexes[token] = isFunction(regex)?regex:function(isStrict){
return isStrict && strictRegex?strictRegex:regex;};}



function getParseRegexForToken(token,config){
if(!hasOwnProp(regexes,token)){
return new RegExp(unescapeFormat(token));}


return regexes[token](config._strict,config._locale);}



function unescapeFormat(s){
return s.replace('\\','').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(matched,p1,p2,p3,p4){
return p1 || p2 || p3 || p4;}).
replace(/[-\/\\^$*+?.()|[\]{}]/g,'\\$&');}


var tokens={};

function addParseToken(token,callback){
var i,func=callback;
if(typeof token === 'string'){
token = [token];}

if(typeof callback === 'number'){
func = function(input,array){
array[callback] = toInt(input);};}


for(i = 0;i < token.length;i++) {
tokens[token[i]] = func;}}



function addWeekParseToken(token,callback){
addParseToken(token,function(input,array,config,token){
config._w = config._w || {};
callback(input,config._w,config,token);});}



function addTimeToArrayFromToken(token,input,config){
if(input != null && hasOwnProp(tokens,token)){
tokens[token](input,config._a,config,token);}}



var YEAR=0;
var MONTH=1;
var DATE=2;
var HOUR=3;
var MINUTE=4;
var SECOND=5;
var MILLISECOND=6;

function daysInMonth(year,month){
return new Date(Date.UTC(year,month + 1,0)).getUTCDate();}




addFormatToken('M',['MM',2],'Mo',function(){
return this.month() + 1;});


addFormatToken('MMM',0,0,function(format){
return this.localeData().monthsShort(this,format);});


addFormatToken('MMMM',0,0,function(format){
return this.localeData().months(this,format);});




addUnitAlias('month','M');



addRegexToken('M',match1to2);
addRegexToken('MM',match1to2,match2);
addRegexToken('MMM',matchWord);
addRegexToken('MMMM',matchWord);

addParseToken(['M','MM'],function(input,array){
array[MONTH] = toInt(input) - 1;});


addParseToken(['MMM','MMMM'],function(input,array,config,token){
var month=config._locale.monthsParse(input,token,config._strict);

if(month != null){
array[MONTH] = month;}else 
{
getParsingFlags(config).invalidMonth = input;}});





var defaultLocaleMonths='January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
function localeMonths(m){
return this._months[m.month()];}


var defaultLocaleMonthsShort='Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
function localeMonthsShort(m){
return this._monthsShort[m.month()];}


function localeMonthsParse(monthName,format,strict){
var i,mom,regex;

if(!this._monthsParse){
this._monthsParse = [];
this._longMonthsParse = [];
this._shortMonthsParse = [];}


for(i = 0;i < 12;i++) {

mom = create_utc__createUTC([2000,i]);
if(strict && !this._longMonthsParse[i]){
this._longMonthsParse[i] = new RegExp('^' + this.months(mom,'').replace('.','') + '$','i');
this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom,'').replace('.','') + '$','i');}

if(!strict && !this._monthsParse[i]){
regex = '^' + this.months(mom,'') + '|^' + this.monthsShort(mom,'');
this._monthsParse[i] = new RegExp(regex.replace('.',''),'i');}


if(strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)){
return i;}else 
if(strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)){
return i;}else 
if(!strict && this._monthsParse[i].test(monthName)){
return i;}}}






function setMonth(mom,value){
var dayOfMonth;


if(typeof value === 'string'){
value = mom.localeData().monthsParse(value);

if(typeof value !== 'number'){
return mom;}}



dayOfMonth = Math.min(mom.date(),daysInMonth(mom.year(),value));
mom._d['set' + (mom._isUTC?'UTC':'') + 'Month'](value,dayOfMonth);
return mom;}


function getSetMonth(value){
if(value != null){
setMonth(this,value);
utils_hooks__hooks.updateOffset(this,true);
return this;}else 
{
return get_set__get(this,'Month');}}



function getDaysInMonth(){
return daysInMonth(this.year(),this.month());}


function checkOverflow(m){
var overflow;
var a=m._a;

if(a && getParsingFlags(m).overflow === -2){
overflow = 
a[MONTH] < 0 || a[MONTH] > 11?MONTH:
a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR],a[MONTH])?DATE:
a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)?HOUR:
a[MINUTE] < 0 || a[MINUTE] > 59?MINUTE:
a[SECOND] < 0 || a[SECOND] > 59?SECOND:
a[MILLISECOND] < 0 || a[MILLISECOND] > 999?MILLISECOND:
-1;

if(getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)){
overflow = DATE;}


getParsingFlags(m).overflow = overflow;}


return m;}


function warn(msg){
if(utils_hooks__hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn){
console.warn('Deprecation warning: ' + msg);}}



function deprecate(msg,fn){
var firstTime=true;

return extend(function(){
if(firstTime){
warn(msg + '\n' + new Error().stack);
firstTime = false;}

return fn.apply(this,arguments);},
fn);}


var deprecations={};

function deprecateSimple(name,msg){
if(!deprecations[name]){
warn(msg);
deprecations[name] = true;}}



utils_hooks__hooks.suppressDeprecationWarnings = false;

var from_string__isoRegex=/^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;

var isoDates=[
['YYYYYY-MM-DD',/[+-]\d{6}-\d{2}-\d{2}/],
['YYYY-MM-DD',/\d{4}-\d{2}-\d{2}/],
['GGGG-[W]WW-E',/\d{4}-W\d{2}-\d/],
['GGGG-[W]WW',/\d{4}-W\d{2}/],
['YYYY-DDD',/\d{4}-\d{3}/]];



var isoTimes=[
['HH:mm:ss.SSSS',/(T| )\d\d:\d\d:\d\d\.\d+/],
['HH:mm:ss',/(T| )\d\d:\d\d:\d\d/],
['HH:mm',/(T| )\d\d:\d\d/],
['HH',/(T| )\d\d/]];


var aspNetJsonRegex=/^\/?Date\((\-?\d+)/i;


function configFromISO(config){
var i,l,
string=config._i,
match=from_string__isoRegex.exec(string);

if(match){
getParsingFlags(config).iso = true;
for(i = 0,l = isoDates.length;i < l;i++) {
if(isoDates[i][1].exec(string)){
config._f = isoDates[i][0];
break;}}


for(i = 0,l = isoTimes.length;i < l;i++) {
if(isoTimes[i][1].exec(string)){

config._f += (match[6] || ' ') + isoTimes[i][0];
break;}}


if(string.match(matchOffset)){
config._f += 'Z';}

configFromStringAndFormat(config);}else 
{
config._isValid = false;}}




function configFromString(config){
var matched=aspNetJsonRegex.exec(config._i);

if(matched !== null){
config._d = new Date(+matched[1]);
return;}


configFromISO(config);
if(config._isValid === false){
delete config._isValid;
utils_hooks__hooks.createFromInputFallback(config);}}



utils_hooks__hooks.createFromInputFallback = deprecate(
'moment construction falls back to js Date. This is ' + 
'discouraged and will be removed in upcoming major ' + 
'release. Please refer to ' + 
'https://github.com/moment/moment/issues/1407 for more info.',
function(config){
config._d = new Date(config._i + (config._useUTC?' UTC':''));});



function createDate(y,m,d,h,M,s,ms){


var date=new Date(y,m,d,h,M,s,ms);


if(y < 1970){
date.setFullYear(y);}

return date;}


function createUTCDate(y){
var date=new Date(Date.UTC.apply(null,arguments));
if(y < 1970){
date.setUTCFullYear(y);}

return date;}


addFormatToken(0,['YY',2],0,function(){
return this.year() % 100;});


addFormatToken(0,['YYYY',4],0,'year');
addFormatToken(0,['YYYYY',5],0,'year');
addFormatToken(0,['YYYYYY',6,true],0,'year');



addUnitAlias('year','y');



addRegexToken('Y',matchSigned);
addRegexToken('YY',match1to2,match2);
addRegexToken('YYYY',match1to4,match4);
addRegexToken('YYYYY',match1to6,match6);
addRegexToken('YYYYYY',match1to6,match6);

addParseToken(['YYYYY','YYYYYY'],YEAR);
addParseToken('YYYY',function(input,array){
array[YEAR] = input.length === 2?utils_hooks__hooks.parseTwoDigitYear(input):toInt(input);});

addParseToken('YY',function(input,array){
array[YEAR] = utils_hooks__hooks.parseTwoDigitYear(input);});




function daysInYear(year){
return isLeapYear(year)?366:365;}


function isLeapYear(year){
return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;}




utils_hooks__hooks.parseTwoDigitYear = function(input){
return toInt(input) + (toInt(input) > 68?1900:2000);};




var getSetYear=makeGetSet('FullYear',false);

function getIsLeapYear(){
return isLeapYear(this.year());}


addFormatToken('w',['ww',2],'wo','week');
addFormatToken('W',['WW',2],'Wo','isoWeek');



addUnitAlias('week','w');
addUnitAlias('isoWeek','W');



addRegexToken('w',match1to2);
addRegexToken('ww',match1to2,match2);
addRegexToken('W',match1to2);
addRegexToken('WW',match1to2,match2);

addWeekParseToken(['w','ww','W','WW'],function(input,week,config,token){
week[token.substr(0,1)] = toInt(input);});











function weekOfYear(mom,firstDayOfWeek,firstDayOfWeekOfYear){
var end=firstDayOfWeekOfYear - firstDayOfWeek,
daysToDayOfWeek=firstDayOfWeekOfYear - mom.day(),
adjustedMoment;


if(daysToDayOfWeek > end){
daysToDayOfWeek -= 7;}


if(daysToDayOfWeek < end - 7){
daysToDayOfWeek += 7;}


adjustedMoment = local__createLocal(mom).add(daysToDayOfWeek,'d');
return {
week:Math.ceil(adjustedMoment.dayOfYear() / 7),
year:adjustedMoment.year()};}





function localeWeek(mom){
return weekOfYear(mom,this._week.dow,this._week.doy).week;}


var defaultLocaleWeek={
dow:0,
doy:6};


function localeFirstDayOfWeek(){
return this._week.dow;}


function localeFirstDayOfYear(){
return this._week.doy;}




function getSetWeek(input){
var week=this.localeData().week(this);
return input == null?week:this.add((input - week) * 7,'d');}


function getSetISOWeek(input){
var week=weekOfYear(this,1,4).week;
return input == null?week:this.add((input - week) * 7,'d');}


addFormatToken('DDD',['DDDD',3],'DDDo','dayOfYear');



addUnitAlias('dayOfYear','DDD');



addRegexToken('DDD',match1to3);
addRegexToken('DDDD',match3);
addParseToken(['DDD','DDDD'],function(input,array,config){
config._dayOfYear = toInt(input);});





function dayOfYearFromWeeks(year,week,weekday,firstDayOfWeekOfYear,firstDayOfWeek){
var week1Jan=6 + firstDayOfWeek - firstDayOfWeekOfYear,janX=createUTCDate(year,0,1 + week1Jan),d=janX.getUTCDay(),dayOfYear;
if(d < firstDayOfWeek){
d += 7;}


weekday = weekday != null?1 * weekday:firstDayOfWeek;

dayOfYear = 1 + week1Jan + 7 * (week - 1) - d + weekday;

return {
year:dayOfYear > 0?year:year - 1,
dayOfYear:dayOfYear > 0?dayOfYear:daysInYear(year - 1) + dayOfYear};}





function getSetDayOfYear(input){
var dayOfYear=Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
return input == null?dayOfYear:this.add(input - dayOfYear,'d');}



function defaults(a,b,c){
if(a != null){
return a;}

if(b != null){
return b;}

return c;}


function currentDateArray(config){
var now=new Date();
if(config._useUTC){
return [now.getUTCFullYear(),now.getUTCMonth(),now.getUTCDate()];}

return [now.getFullYear(),now.getMonth(),now.getDate()];}






function configFromArray(config){
var i,date,input=[],currentDate,yearToUse;

if(config._d){
return;}


currentDate = currentDateArray(config);


if(config._w && config._a[DATE] == null && config._a[MONTH] == null){
dayOfYearFromWeekInfo(config);}



if(config._dayOfYear){
yearToUse = defaults(config._a[YEAR],currentDate[YEAR]);

if(config._dayOfYear > daysInYear(yearToUse)){
getParsingFlags(config)._overflowDayOfYear = true;}


date = createUTCDate(yearToUse,0,config._dayOfYear);
config._a[MONTH] = date.getUTCMonth();
config._a[DATE] = date.getUTCDate();}







for(i = 0;i < 3 && config._a[i] == null;++i) {
config._a[i] = input[i] = currentDate[i];}



for(;i < 7;i++) {
config._a[i] = input[i] = config._a[i] == null?i === 2?1:0:config._a[i];}



if(config._a[HOUR] === 24 && 
config._a[MINUTE] === 0 && 
config._a[SECOND] === 0 && 
config._a[MILLISECOND] === 0){
config._nextDay = true;
config._a[HOUR] = 0;}


config._d = (config._useUTC?createUTCDate:createDate).apply(null,input);


if(config._tzm != null){
config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);}


if(config._nextDay){
config._a[HOUR] = 24;}}



function dayOfYearFromWeekInfo(config){
var w,weekYear,week,weekday,dow,doy,temp;

w = config._w;
if(w.GG != null || w.W != null || w.E != null){
dow = 1;
doy = 4;





weekYear = defaults(w.GG,config._a[YEAR],weekOfYear(local__createLocal(),1,4).year);
week = defaults(w.W,1);
weekday = defaults(w.E,1);}else 
{
dow = config._locale._week.dow;
doy = config._locale._week.doy;

weekYear = defaults(w.gg,config._a[YEAR],weekOfYear(local__createLocal(),dow,doy).year);
week = defaults(w.w,1);

if(w.d != null){

weekday = w.d;
if(weekday < dow){
++week;}}else 

if(w.e != null){

weekday = w.e + dow;}else 
{

weekday = dow;}}


temp = dayOfYearFromWeeks(weekYear,week,weekday,doy,dow);

config._a[YEAR] = temp.year;
config._dayOfYear = temp.dayOfYear;}


utils_hooks__hooks.ISO_8601 = function(){};


function configFromStringAndFormat(config){

if(config._f === utils_hooks__hooks.ISO_8601){
configFromISO(config);
return;}


config._a = [];
getParsingFlags(config).empty = true;


var string='' + config._i,
i,parsedInput,tokens,token,skipped,
stringLength=string.length,
totalParsedInputLength=0;

tokens = expandFormat(config._f,config._locale).match(formattingTokens) || [];

for(i = 0;i < tokens.length;i++) {
token = tokens[i];
parsedInput = (string.match(getParseRegexForToken(token,config)) || [])[0];
if(parsedInput){
skipped = string.substr(0,string.indexOf(parsedInput));
if(skipped.length > 0){
getParsingFlags(config).unusedInput.push(skipped);}

string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
totalParsedInputLength += parsedInput.length;}


if(formatTokenFunctions[token]){
if(parsedInput){
getParsingFlags(config).empty = false;}else 

{
getParsingFlags(config).unusedTokens.push(token);}

addTimeToArrayFromToken(token,parsedInput,config);}else 

if(config._strict && !parsedInput){
getParsingFlags(config).unusedTokens.push(token);}}




getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
if(string.length > 0){
getParsingFlags(config).unusedInput.push(string);}



if(getParsingFlags(config).bigHour === true && 
config._a[HOUR] <= 12 && 
config._a[HOUR] > 0){
getParsingFlags(config).bigHour = undefined;}


config._a[HOUR] = meridiemFixWrap(config._locale,config._a[HOUR],config._meridiem);

configFromArray(config);
checkOverflow(config);}



function meridiemFixWrap(locale,hour,meridiem){
var isPm;

if(meridiem == null){

return hour;}

if(locale.meridiemHour != null){
return locale.meridiemHour(hour,meridiem);}else 
if(locale.isPM != null){

isPm = locale.isPM(meridiem);
if(isPm && hour < 12){
hour += 12;}

if(!isPm && hour === 12){
hour = 0;}

return hour;}else 
{

return hour;}}



function configFromStringAndArray(config){
var tempConfig,
bestMoment,

scoreToBeat,
i,
currentScore;

if(config._f.length === 0){
getParsingFlags(config).invalidFormat = true;
config._d = new Date(NaN);
return;}


for(i = 0;i < config._f.length;i++) {
currentScore = 0;
tempConfig = copyConfig({},config);
if(config._useUTC != null){
tempConfig._useUTC = config._useUTC;}

tempConfig._f = config._f[i];
configFromStringAndFormat(tempConfig);

if(!valid__isValid(tempConfig)){
continue;}



currentScore += getParsingFlags(tempConfig).charsLeftOver;


currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

getParsingFlags(tempConfig).score = currentScore;

if(scoreToBeat == null || currentScore < scoreToBeat){
scoreToBeat = currentScore;
bestMoment = tempConfig;}}



extend(config,bestMoment || tempConfig);}


function configFromObject(config){
if(config._d){
return;}


var i=normalizeObjectUnits(config._i);
config._a = [i.year,i.month,i.day || i.date,i.hour,i.minute,i.second,i.millisecond];

configFromArray(config);}


function createFromConfig(config){
var res=new Moment(checkOverflow(prepareConfig(config)));
if(res._nextDay){

res.add(1,'d');
res._nextDay = undefined;}


return res;}


function prepareConfig(config){
var input=config._i,
format=config._f;

config._locale = config._locale || locale_locales__getLocale(config._l);

if(input === null || format === undefined && input === ''){
return valid__createInvalid({nullInput:true});}


if(typeof input === 'string'){
config._i = input = config._locale.preparse(input);}


if(isMoment(input)){
return new Moment(checkOverflow(input));}else 
if(isArray(format)){
configFromStringAndArray(config);}else 
if(format){
configFromStringAndFormat(config);}else 
if(isDate(input)){
config._d = input;}else 
{
configFromInput(config);}


return config;}


function configFromInput(config){
var input=config._i;
if(input === undefined){
config._d = new Date();}else 
if(isDate(input)){
config._d = new Date(+input);}else 
if(typeof input === 'string'){
configFromString(config);}else 
if(isArray(input)){
config._a = map(input.slice(0),function(obj){
return parseInt(obj,10);});

configFromArray(config);}else 
if(typeof input === 'object'){
configFromObject(config);}else 
if(typeof input === 'number'){

config._d = new Date(input);}else 
{
utils_hooks__hooks.createFromInputFallback(config);}}



function createLocalOrUTC(input,format,locale,strict,isUTC){
var c={};

if(typeof locale === 'boolean'){
strict = locale;
locale = undefined;}



c._isAMomentObject = true;
c._useUTC = c._isUTC = isUTC;
c._l = locale;
c._i = input;
c._f = format;
c._strict = strict;

return createFromConfig(c);}


function local__createLocal(input,format,locale,strict){
return createLocalOrUTC(input,format,locale,strict,false);}


var prototypeMin=deprecate(
'moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548',
function(){
var other=local__createLocal.apply(null,arguments);
return other < this?this:other;});



var prototypeMax=deprecate(
'moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548',
function(){
var other=local__createLocal.apply(null,arguments);
return other > this?this:other;});








function pickBy(fn,moments){
var res,i;
if(moments.length === 1 && isArray(moments[0])){
moments = moments[0];}

if(!moments.length){
return local__createLocal();}

res = moments[0];
for(i = 1;i < moments.length;++i) {
if(!moments[i].isValid() || moments[i][fn](res)){
res = moments[i];}}


return res;}



function min(){
var args=[].slice.call(arguments,0);

return pickBy('isBefore',args);}


function max(){
var args=[].slice.call(arguments,0);

return pickBy('isAfter',args);}


function Duration(duration){
var normalizedInput=normalizeObjectUnits(duration),
years=normalizedInput.year || 0,
quarters=normalizedInput.quarter || 0,
months=normalizedInput.month || 0,
weeks=normalizedInput.week || 0,
days=normalizedInput.day || 0,
hours=normalizedInput.hour || 0,
minutes=normalizedInput.minute || 0,
seconds=normalizedInput.second || 0,
milliseconds=normalizedInput.millisecond || 0;


this._milliseconds = +milliseconds + 
seconds * 1e3 + 
minutes * 6e4 + 
hours * 36e5;


this._days = +days + 
weeks * 7;



this._months = +months + 
quarters * 3 + 
years * 12;

this._data = {};

this._locale = locale_locales__getLocale();

this._bubble();}


function isDuration(obj){
return obj instanceof Duration;}


function offset(token,separator){
addFormatToken(token,0,0,function(){
var offset=this.utcOffset();
var sign='+';
if(offset < 0){
offset = -offset;
sign = '-';}

return sign + zeroFill(~ ~(offset / 60),2) + separator + zeroFill(~ ~offset % 60,2);});}



offset('Z',':');
offset('ZZ','');



addRegexToken('Z',matchOffset);
addRegexToken('ZZ',matchOffset);
addParseToken(['Z','ZZ'],function(input,array,config){
config._useUTC = true;
config._tzm = offsetFromString(input);});







var chunkOffset=/([\+\-]|\d\d)/gi;

function offsetFromString(string){
var matches=(string || '').match(matchOffset) || [];
var chunk=matches[matches.length - 1] || [];
var parts=(chunk + '').match(chunkOffset) || ['-',0,0];
var minutes=+(parts[1] * 60) + toInt(parts[2]);

return parts[0] === '+'?minutes:-minutes;}



function cloneWithOffset(input,model){
var res,diff;
if(model._isUTC){
res = model.clone();
diff = (isMoment(input) || isDate(input)?+input:+local__createLocal(input)) - +res;

res._d.setTime(+res._d + diff);
utils_hooks__hooks.updateOffset(res,false);
return res;}else 
{
return local__createLocal(input).local();}}



function getDateOffset(m){


return -Math.round(m._d.getTimezoneOffset() / 15) * 15;}






utils_hooks__hooks.updateOffset = function(){};













function getSetOffset(input,keepLocalTime){
var offset=this._offset || 0,
localAdjust;
if(input != null){
if(typeof input === 'string'){
input = offsetFromString(input);}

if(Math.abs(input) < 16){
input = input * 60;}

if(!this._isUTC && keepLocalTime){
localAdjust = getDateOffset(this);}

this._offset = input;
this._isUTC = true;
if(localAdjust != null){
this.add(localAdjust,'m');}

if(offset !== input){
if(!keepLocalTime || this._changeInProgress){
add_subtract__addSubtract(this,create__createDuration(input - offset,'m'),1,false);}else 
if(!this._changeInProgress){
this._changeInProgress = true;
utils_hooks__hooks.updateOffset(this,true);
this._changeInProgress = null;}}


return this;}else 
{
return this._isUTC?offset:getDateOffset(this);}}



function getSetZone(input,keepLocalTime){
if(input != null){
if(typeof input !== 'string'){
input = -input;}


this.utcOffset(input,keepLocalTime);

return this;}else 
{
return -this.utcOffset();}}



function setOffsetToUTC(keepLocalTime){
return this.utcOffset(0,keepLocalTime);}


function setOffsetToLocal(keepLocalTime){
if(this._isUTC){
this.utcOffset(0,keepLocalTime);
this._isUTC = false;

if(keepLocalTime){
this.subtract(getDateOffset(this),'m');}}


return this;}


function setOffsetToParsedOffset(){
if(this._tzm){
this.utcOffset(this._tzm);}else 
if(typeof this._i === 'string'){
this.utcOffset(offsetFromString(this._i));}

return this;}


function hasAlignedHourOffset(input){
input = input?local__createLocal(input).utcOffset():0;

return (this.utcOffset() - input) % 60 === 0;}


function isDaylightSavingTime(){
return (
this.utcOffset() > this.clone().month(0).utcOffset() || 
this.utcOffset() > this.clone().month(5).utcOffset());}



function isDaylightSavingTimeShifted(){
if(typeof this._isDSTShifted !== 'undefined'){
return this._isDSTShifted;}


var c={};

copyConfig(c,this);
c = prepareConfig(c);

if(c._a){
var other=c._isUTC?create_utc__createUTC(c._a):local__createLocal(c._a);
this._isDSTShifted = this.isValid() && 
compareArrays(c._a,other.toArray()) > 0;}else 
{
this._isDSTShifted = false;}


return this._isDSTShifted;}


function isLocal(){
return !this._isUTC;}


function isUtcOffset(){
return this._isUTC;}


function isUtc(){
return this._isUTC && this._offset === 0;}


var aspNetRegex=/(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/;



var create__isoRegex=/^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/;

function create__createDuration(input,key){
var duration=input,

match=null,
sign,
ret,
diffRes;

if(isDuration(input)){
duration = {
ms:input._milliseconds,
d:input._days,
M:input._months};}else 

if(typeof input === 'number'){
duration = {};
if(key){
duration[key] = input;}else 
{
duration.milliseconds = input;}}else 

if(!!(match = aspNetRegex.exec(input))){
sign = match[1] === '-'?-1:1;
duration = {
y:0,
d:toInt(match[DATE]) * sign,
h:toInt(match[HOUR]) * sign,
m:toInt(match[MINUTE]) * sign,
s:toInt(match[SECOND]) * sign,
ms:toInt(match[MILLISECOND]) * sign};}else 

if(!!(match = create__isoRegex.exec(input))){
sign = match[1] === '-'?-1:1;
duration = {
y:parseIso(match[2],sign),
M:parseIso(match[3],sign),
d:parseIso(match[4],sign),
h:parseIso(match[5],sign),
m:parseIso(match[6],sign),
s:parseIso(match[7],sign),
w:parseIso(match[8],sign)};}else 

if(duration == null){
duration = {};}else 
if(typeof duration === 'object' && ('from' in duration || 'to' in duration)){
diffRes = momentsDifference(local__createLocal(duration.from),local__createLocal(duration.to));

duration = {};
duration.ms = diffRes.milliseconds;
duration.M = diffRes.months;}


ret = new Duration(duration);

if(isDuration(input) && hasOwnProp(input,'_locale')){
ret._locale = input._locale;}


return ret;}


create__createDuration.fn = Duration.prototype;

function parseIso(inp,sign){



var res=inp && parseFloat(inp.replace(',','.'));

return (isNaN(res)?0:res) * sign;}


function positiveMomentsDifference(base,other){
var res={milliseconds:0,months:0};

res.months = other.month() - base.month() + 
(other.year() - base.year()) * 12;
if(base.clone().add(res.months,'M').isAfter(other)){
--res.months;}


res.milliseconds = +other - +base.clone().add(res.months,'M');

return res;}


function momentsDifference(base,other){
var res;
other = cloneWithOffset(other,base);
if(base.isBefore(other)){
res = positiveMomentsDifference(base,other);}else 
{
res = positiveMomentsDifference(other,base);
res.milliseconds = -res.milliseconds;
res.months = -res.months;}


return res;}


function createAdder(direction,name){
return function(val,period){
var dur,tmp;

if(period !== null && !isNaN(+period)){
deprecateSimple(name,'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');
tmp = val;val = period;period = tmp;}


val = typeof val === 'string'?+val:val;
dur = create__createDuration(val,period);
add_subtract__addSubtract(this,dur,direction);
return this;};}



function add_subtract__addSubtract(mom,duration,isAdding,updateOffset){
var milliseconds=duration._milliseconds,
days=duration._days,
months=duration._months;
updateOffset = updateOffset == null?true:updateOffset;

if(milliseconds){
mom._d.setTime(+mom._d + milliseconds * isAdding);}

if(days){
get_set__set(mom,'Date',get_set__get(mom,'Date') + days * isAdding);}

if(months){
setMonth(mom,get_set__get(mom,'Month') + months * isAdding);}

if(updateOffset){
utils_hooks__hooks.updateOffset(mom,days || months);}}



var add_subtract__add=createAdder(1,'add');
var add_subtract__subtract=createAdder(-1,'subtract');

function moment_calendar__calendar(time,formats){


var now=time || local__createLocal(),
sod=cloneWithOffset(now,this).startOf('day'),
diff=this.diff(sod,'days',true),
format=diff < -6?'sameElse':
diff < -1?'lastWeek':
diff < 0?'lastDay':
diff < 1?'sameDay':
diff < 2?'nextDay':
diff < 7?'nextWeek':'sameElse';
return this.format(formats && formats[format] || this.localeData().calendar(format,this,local__createLocal(now)));}


function clone(){
return new Moment(this);}


function isAfter(input,units){
var inputMs;
units = normalizeUnits(typeof units !== 'undefined'?units:'millisecond');
if(units === 'millisecond'){
input = isMoment(input)?input:local__createLocal(input);
return +this > +input;}else 
{
inputMs = isMoment(input)?+input:+local__createLocal(input);
return inputMs < +this.clone().startOf(units);}}



function isBefore(input,units){
var inputMs;
units = normalizeUnits(typeof units !== 'undefined'?units:'millisecond');
if(units === 'millisecond'){
input = isMoment(input)?input:local__createLocal(input);
return +this < +input;}else 
{
inputMs = isMoment(input)?+input:+local__createLocal(input);
return +this.clone().endOf(units) < inputMs;}}



function isBetween(from,to,units){
return this.isAfter(from,units) && this.isBefore(to,units);}


function isSame(input,units){
var inputMs;
units = normalizeUnits(units || 'millisecond');
if(units === 'millisecond'){
input = isMoment(input)?input:local__createLocal(input);
return +this === +input;}else 
{
inputMs = +local__createLocal(input);
return +this.clone().startOf(units) <= inputMs && inputMs <= +this.clone().endOf(units);}}



function diff(input,units,asFloat){
var that=cloneWithOffset(input,this),
zoneDelta=(that.utcOffset() - this.utcOffset()) * 6e4,
delta,output;

units = normalizeUnits(units);

if(units === 'year' || units === 'month' || units === 'quarter'){
output = monthDiff(this,that);
if(units === 'quarter'){
output = output / 3;}else 
if(units === 'year'){
output = output / 12;}}else 

{
delta = this - that;
output = units === 'second'?delta / 1e3:
units === 'minute'?delta / 6e4:
units === 'hour'?delta / 36e5:
units === 'day'?(delta - zoneDelta) / 864e5:
units === 'week'?(delta - zoneDelta) / 6048e5:
delta;}

return asFloat?output:absFloor(output);}


function monthDiff(a,b){

var wholeMonthDiff=(b.year() - a.year()) * 12 + (b.month() - a.month()),

anchor=a.clone().add(wholeMonthDiff,'months'),
anchor2,adjust;

if(b - anchor < 0){
anchor2 = a.clone().add(wholeMonthDiff - 1,'months');

adjust = (b - anchor) / (anchor - anchor2);}else 
{
anchor2 = a.clone().add(wholeMonthDiff + 1,'months');

adjust = (b - anchor) / (anchor2 - anchor);}


return -(wholeMonthDiff + adjust);}


utils_hooks__hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';

function toString(){
return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');}


function moment_format__toISOString(){
var m=this.clone().utc();
if(0 < m.year() && m.year() <= 9999){
if('function' === typeof Date.prototype.toISOString){

return this.toDate().toISOString();}else 
{
return formatMoment(m,'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');}}else 

{
return formatMoment(m,'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');}}



function format(inputString){
var output=formatMoment(this,inputString || utils_hooks__hooks.defaultFormat);
return this.localeData().postformat(output);}


function from(time,withoutSuffix){
if(!this.isValid()){
return this.localeData().invalidDate();}

return create__createDuration({to:this,from:time}).locale(this.locale()).humanize(!withoutSuffix);}


function fromNow(withoutSuffix){
return this.from(local__createLocal(),withoutSuffix);}


function to(time,withoutSuffix){
if(!this.isValid()){
return this.localeData().invalidDate();}

return create__createDuration({from:this,to:time}).locale(this.locale()).humanize(!withoutSuffix);}


function toNow(withoutSuffix){
return this.to(local__createLocal(),withoutSuffix);}


function locale(key){
var newLocaleData;

if(key === undefined){
return this._locale._abbr;}else 
{
newLocaleData = locale_locales__getLocale(key);
if(newLocaleData != null){
this._locale = newLocaleData;}

return this;}}



var lang=deprecate(
'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
function(key){
if(key === undefined){
return this.localeData();}else 
{
return this.locale(key);}});




function localeData(){
return this._locale;}


function startOf(units){
units = normalizeUnits(units);


switch(units){
case 'year':
this.month(0);

case 'quarter':
case 'month':
this.date(1);

case 'week':
case 'isoWeek':
case 'day':
this.hours(0);

case 'hour':
this.minutes(0);

case 'minute':
this.seconds(0);

case 'second':
this.milliseconds(0);}



if(units === 'week'){
this.weekday(0);}

if(units === 'isoWeek'){
this.isoWeekday(1);}



if(units === 'quarter'){
this.month(Math.floor(this.month() / 3) * 3);}


return this;}


function endOf(units){
units = normalizeUnits(units);
if(units === undefined || units === 'millisecond'){
return this;}

return this.startOf(units).add(1,units === 'isoWeek'?'week':units).subtract(1,'ms');}


function to_type__valueOf(){
return +this._d - (this._offset || 0) * 60000;}


function unix(){
return Math.floor(+this / 1000);}


function toDate(){
return this._offset?new Date(+this):this._d;}


function toArray(){
var m=this;
return [m.year(),m.month(),m.date(),m.hour(),m.minute(),m.second(),m.millisecond()];}


function toObject(){
var m=this;
return {
years:m.year(),
months:m.month(),
date:m.date(),
hours:m.hours(),
minutes:m.minutes(),
seconds:m.seconds(),
milliseconds:m.milliseconds()};}



function moment_valid__isValid(){
return valid__isValid(this);}


function parsingFlags(){
return extend({},getParsingFlags(this));}


function invalidAt(){
return getParsingFlags(this).overflow;}


addFormatToken(0,['gg',2],0,function(){
return this.weekYear() % 100;});


addFormatToken(0,['GG',2],0,function(){
return this.isoWeekYear() % 100;});


function addWeekYearFormatToken(token,getter){
addFormatToken(0,[token,token.length],0,getter);}


addWeekYearFormatToken('gggg','weekYear');
addWeekYearFormatToken('ggggg','weekYear');
addWeekYearFormatToken('GGGG','isoWeekYear');
addWeekYearFormatToken('GGGGG','isoWeekYear');



addUnitAlias('weekYear','gg');
addUnitAlias('isoWeekYear','GG');



addRegexToken('G',matchSigned);
addRegexToken('g',matchSigned);
addRegexToken('GG',match1to2,match2);
addRegexToken('gg',match1to2,match2);
addRegexToken('GGGG',match1to4,match4);
addRegexToken('gggg',match1to4,match4);
addRegexToken('GGGGG',match1to6,match6);
addRegexToken('ggggg',match1to6,match6);

addWeekParseToken(['gggg','ggggg','GGGG','GGGGG'],function(input,week,config,token){
week[token.substr(0,2)] = toInt(input);});


addWeekParseToken(['gg','GG'],function(input,week,config,token){
week[token] = utils_hooks__hooks.parseTwoDigitYear(input);});




function weeksInYear(year,dow,doy){
return weekOfYear(local__createLocal([year,11,31 + dow - doy]),dow,doy).week;}




function getSetWeekYear(input){
var year=weekOfYear(this,this.localeData()._week.dow,this.localeData()._week.doy).year;
return input == null?year:this.add(input - year,'y');}


function getSetISOWeekYear(input){
var year=weekOfYear(this,1,4).year;
return input == null?year:this.add(input - year,'y');}


function getISOWeeksInYear(){
return weeksInYear(this.year(),1,4);}


function getWeeksInYear(){
var weekInfo=this.localeData()._week;
return weeksInYear(this.year(),weekInfo.dow,weekInfo.doy);}


addFormatToken('Q',0,0,'quarter');



addUnitAlias('quarter','Q');



addRegexToken('Q',match1);
addParseToken('Q',function(input,array){
array[MONTH] = (toInt(input) - 1) * 3;});




function getSetQuarter(input){
return input == null?Math.ceil((this.month() + 1) / 3):this.month((input - 1) * 3 + this.month() % 3);}


addFormatToken('D',['DD',2],'Do','date');



addUnitAlias('date','D');



addRegexToken('D',match1to2);
addRegexToken('DD',match1to2,match2);
addRegexToken('Do',function(isStrict,locale){
return isStrict?locale._ordinalParse:locale._ordinalParseLenient;});


addParseToken(['D','DD'],DATE);
addParseToken('Do',function(input,array){
array[DATE] = toInt(input.match(match1to2)[0],10);});




var getSetDayOfMonth=makeGetSet('Date',true);

addFormatToken('d',0,'do','day');

addFormatToken('dd',0,0,function(format){
return this.localeData().weekdaysMin(this,format);});


addFormatToken('ddd',0,0,function(format){
return this.localeData().weekdaysShort(this,format);});


addFormatToken('dddd',0,0,function(format){
return this.localeData().weekdays(this,format);});


addFormatToken('e',0,0,'weekday');
addFormatToken('E',0,0,'isoWeekday');



addUnitAlias('day','d');
addUnitAlias('weekday','e');
addUnitAlias('isoWeekday','E');



addRegexToken('d',match1to2);
addRegexToken('e',match1to2);
addRegexToken('E',match1to2);
addRegexToken('dd',matchWord);
addRegexToken('ddd',matchWord);
addRegexToken('dddd',matchWord);

addWeekParseToken(['dd','ddd','dddd'],function(input,week,config){
var weekday=config._locale.weekdaysParse(input);

if(weekday != null){
week.d = weekday;}else 
{
getParsingFlags(config).invalidWeekday = input;}});



addWeekParseToken(['d','e','E'],function(input,week,config,token){
week[token] = toInt(input);});




function parseWeekday(input,locale){
if(typeof input !== 'string'){
return input;}


if(!isNaN(input)){
return parseInt(input,10);}


input = locale.weekdaysParse(input);
if(typeof input === 'number'){
return input;}


return null;}




var defaultLocaleWeekdays='Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
function localeWeekdays(m){
return this._weekdays[m.day()];}


var defaultLocaleWeekdaysShort='Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
function localeWeekdaysShort(m){
return this._weekdaysShort[m.day()];}


var defaultLocaleWeekdaysMin='Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
function localeWeekdaysMin(m){
return this._weekdaysMin[m.day()];}


function localeWeekdaysParse(weekdayName){
var i,mom,regex;

this._weekdaysParse = this._weekdaysParse || [];

for(i = 0;i < 7;i++) {

if(!this._weekdaysParse[i]){
mom = local__createLocal([2000,1]).day(i);
regex = '^' + this.weekdays(mom,'') + '|^' + this.weekdaysShort(mom,'') + '|^' + this.weekdaysMin(mom,'');
this._weekdaysParse[i] = new RegExp(regex.replace('.',''),'i');}


if(this._weekdaysParse[i].test(weekdayName)){
return i;}}}






function getSetDayOfWeek(input){
var day=this._isUTC?this._d.getUTCDay():this._d.getDay();
if(input != null){
input = parseWeekday(input,this.localeData());
return this.add(input - day,'d');}else 
{
return day;}}



function getSetLocaleDayOfWeek(input){
var weekday=(this.day() + 7 - this.localeData()._week.dow) % 7;
return input == null?weekday:this.add(input - weekday,'d');}


function getSetISODayOfWeek(input){



return input == null?this.day() || 7:this.day(this.day() % 7?input:input - 7);}


addFormatToken('H',['HH',2],0,'hour');
addFormatToken('h',['hh',2],0,function(){
return this.hours() % 12 || 12;});


function meridiem(token,lowercase){
addFormatToken(token,0,0,function(){
return this.localeData().meridiem(this.hours(),this.minutes(),lowercase);});}



meridiem('a',true);
meridiem('A',false);



addUnitAlias('hour','h');



function matchMeridiem(isStrict,locale){
return locale._meridiemParse;}


addRegexToken('a',matchMeridiem);
addRegexToken('A',matchMeridiem);
addRegexToken('H',match1to2);
addRegexToken('h',match1to2);
addRegexToken('HH',match1to2,match2);
addRegexToken('hh',match1to2,match2);

addParseToken(['H','HH'],HOUR);
addParseToken(['a','A'],function(input,array,config){
config._isPm = config._locale.isPM(input);
config._meridiem = input;});

addParseToken(['h','hh'],function(input,array,config){
array[HOUR] = toInt(input);
getParsingFlags(config).bigHour = true;});




function localeIsPM(input){


return (input + '').toLowerCase().charAt(0) === 'p';}


var defaultLocaleMeridiemParse=/[ap]\.?m?\.?/i;
function localeMeridiem(hours,minutes,isLower){
if(hours > 11){
return isLower?'pm':'PM';}else 
{
return isLower?'am':'AM';}}










var getSetHour=makeGetSet('Hours',true);

addFormatToken('m',['mm',2],0,'minute');



addUnitAlias('minute','m');



addRegexToken('m',match1to2);
addRegexToken('mm',match1to2,match2);
addParseToken(['m','mm'],MINUTE);



var getSetMinute=makeGetSet('Minutes',false);

addFormatToken('s',['ss',2],0,'second');



addUnitAlias('second','s');



addRegexToken('s',match1to2);
addRegexToken('ss',match1to2,match2);
addParseToken(['s','ss'],SECOND);



var getSetSecond=makeGetSet('Seconds',false);

addFormatToken('S',0,0,function(){
return ~ ~(this.millisecond() / 100);});


addFormatToken(0,['SS',2],0,function(){
return ~ ~(this.millisecond() / 10);});


addFormatToken(0,['SSS',3],0,'millisecond');
addFormatToken(0,['SSSS',4],0,function(){
return this.millisecond() * 10;});

addFormatToken(0,['SSSSS',5],0,function(){
return this.millisecond() * 100;});

addFormatToken(0,['SSSSSS',6],0,function(){
return this.millisecond() * 1000;});

addFormatToken(0,['SSSSSSS',7],0,function(){
return this.millisecond() * 10000;});

addFormatToken(0,['SSSSSSSS',8],0,function(){
return this.millisecond() * 100000;});

addFormatToken(0,['SSSSSSSSS',9],0,function(){
return this.millisecond() * 1000000;});





addUnitAlias('millisecond','ms');



addRegexToken('S',match1to3,match1);
addRegexToken('SS',match1to3,match2);
addRegexToken('SSS',match1to3,match3);

var token;
for(token = 'SSSS';token.length <= 9;token += 'S') {
addRegexToken(token,matchUnsigned);}


function parseMs(input,array){
array[MILLISECOND] = toInt(('0.' + input) * 1000);}


for(token = 'S';token.length <= 9;token += 'S') {
addParseToken(token,parseMs);}



var getSetMillisecond=makeGetSet('Milliseconds',false);

addFormatToken('z',0,0,'zoneAbbr');
addFormatToken('zz',0,0,'zoneName');



function getZoneAbbr(){
return this._isUTC?'UTC':'';}


function getZoneName(){
return this._isUTC?'Coordinated Universal Time':'';}


var momentPrototype__proto=Moment.prototype;

momentPrototype__proto.add = add_subtract__add;
momentPrototype__proto.calendar = moment_calendar__calendar;
momentPrototype__proto.clone = clone;
momentPrototype__proto.diff = diff;
momentPrototype__proto.endOf = endOf;
momentPrototype__proto.format = format;
momentPrototype__proto.from = from;
momentPrototype__proto.fromNow = fromNow;
momentPrototype__proto.to = to;
momentPrototype__proto.toNow = toNow;
momentPrototype__proto.get = getSet;
momentPrototype__proto.invalidAt = invalidAt;
momentPrototype__proto.isAfter = isAfter;
momentPrototype__proto.isBefore = isBefore;
momentPrototype__proto.isBetween = isBetween;
momentPrototype__proto.isSame = isSame;
momentPrototype__proto.isValid = moment_valid__isValid;
momentPrototype__proto.lang = lang;
momentPrototype__proto.locale = locale;
momentPrototype__proto.localeData = localeData;
momentPrototype__proto.max = prototypeMax;
momentPrototype__proto.min = prototypeMin;
momentPrototype__proto.parsingFlags = parsingFlags;
momentPrototype__proto.set = getSet;
momentPrototype__proto.startOf = startOf;
momentPrototype__proto.subtract = add_subtract__subtract;
momentPrototype__proto.toArray = toArray;
momentPrototype__proto.toObject = toObject;
momentPrototype__proto.toDate = toDate;
momentPrototype__proto.toISOString = moment_format__toISOString;
momentPrototype__proto.toJSON = moment_format__toISOString;
momentPrototype__proto.toString = toString;
momentPrototype__proto.unix = unix;
momentPrototype__proto.valueOf = to_type__valueOf;


momentPrototype__proto.year = getSetYear;
momentPrototype__proto.isLeapYear = getIsLeapYear;


momentPrototype__proto.weekYear = getSetWeekYear;
momentPrototype__proto.isoWeekYear = getSetISOWeekYear;


momentPrototype__proto.quarter = momentPrototype__proto.quarters = getSetQuarter;


momentPrototype__proto.month = getSetMonth;
momentPrototype__proto.daysInMonth = getDaysInMonth;


momentPrototype__proto.week = momentPrototype__proto.weeks = getSetWeek;
momentPrototype__proto.isoWeek = momentPrototype__proto.isoWeeks = getSetISOWeek;
momentPrototype__proto.weeksInYear = getWeeksInYear;
momentPrototype__proto.isoWeeksInYear = getISOWeeksInYear;


momentPrototype__proto.date = getSetDayOfMonth;
momentPrototype__proto.day = momentPrototype__proto.days = getSetDayOfWeek;
momentPrototype__proto.weekday = getSetLocaleDayOfWeek;
momentPrototype__proto.isoWeekday = getSetISODayOfWeek;
momentPrototype__proto.dayOfYear = getSetDayOfYear;


momentPrototype__proto.hour = momentPrototype__proto.hours = getSetHour;


momentPrototype__proto.minute = momentPrototype__proto.minutes = getSetMinute;


momentPrototype__proto.second = momentPrototype__proto.seconds = getSetSecond;


momentPrototype__proto.millisecond = momentPrototype__proto.milliseconds = getSetMillisecond;


momentPrototype__proto.utcOffset = getSetOffset;
momentPrototype__proto.utc = setOffsetToUTC;
momentPrototype__proto.local = setOffsetToLocal;
momentPrototype__proto.parseZone = setOffsetToParsedOffset;
momentPrototype__proto.hasAlignedHourOffset = hasAlignedHourOffset;
momentPrototype__proto.isDST = isDaylightSavingTime;
momentPrototype__proto.isDSTShifted = isDaylightSavingTimeShifted;
momentPrototype__proto.isLocal = isLocal;
momentPrototype__proto.isUtcOffset = isUtcOffset;
momentPrototype__proto.isUtc = isUtc;
momentPrototype__proto.isUTC = isUtc;


momentPrototype__proto.zoneAbbr = getZoneAbbr;
momentPrototype__proto.zoneName = getZoneName;


momentPrototype__proto.dates = deprecate('dates accessor is deprecated. Use date instead.',getSetDayOfMonth);
momentPrototype__proto.months = deprecate('months accessor is deprecated. Use month instead',getSetMonth);
momentPrototype__proto.years = deprecate('years accessor is deprecated. Use year instead',getSetYear);
momentPrototype__proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779',getSetZone);

var momentPrototype=momentPrototype__proto;

function moment__createUnix(input){
return local__createLocal(input * 1000);}


function moment__createInZone(){
return local__createLocal.apply(null,arguments).parseZone();}


var defaultCalendar={
sameDay:'[Today at] LT',
nextDay:'[Tomorrow at] LT',
nextWeek:'dddd [at] LT',
lastDay:'[Yesterday at] LT',
lastWeek:'[Last] dddd [at] LT',
sameElse:'L'};


function locale_calendar__calendar(key,mom,now){
var output=this._calendar[key];
return typeof output === 'function'?output.call(mom,now):output;}


var defaultLongDateFormat={
LTS:'h:mm:ss A',
LT:'h:mm A',
L:'MM/DD/YYYY',
LL:'MMMM D, YYYY',
LLL:'MMMM D, YYYY h:mm A',
LLLL:'dddd, MMMM D, YYYY h:mm A'};


function longDateFormat(key){
var format=this._longDateFormat[key],
formatUpper=this._longDateFormat[key.toUpperCase()];

if(format || !formatUpper){
return format;}


this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g,function(val){
return val.slice(1);});


return this._longDateFormat[key];}


var defaultInvalidDate='Invalid date';

function invalidDate(){
return this._invalidDate;}


var defaultOrdinal='%d';
var defaultOrdinalParse=/\d{1,2}/;

function ordinal(number){
return this._ordinal.replace('%d',number);}


function preParsePostFormat(string){
return string;}


var defaultRelativeTime={
future:'in %s',
past:'%s ago',
s:'a few seconds',
m:'a minute',
mm:'%d minutes',
h:'an hour',
hh:'%d hours',
d:'a day',
dd:'%d days',
M:'a month',
MM:'%d months',
y:'a year',
yy:'%d years'};


function relative__relativeTime(number,withoutSuffix,string,isFuture){
var output=this._relativeTime[string];
return typeof output === 'function'?
output(number,withoutSuffix,string,isFuture):
output.replace(/%d/i,number);}


function pastFuture(diff,output){
var format=this._relativeTime[diff > 0?'future':'past'];
return typeof format === 'function'?format(output):format.replace(/%s/i,output);}


function locale_set__set(config){
var prop,i;
for(i in config) {
prop = config[i];
if(typeof prop === 'function'){
this[i] = prop;}else 
{
this['_' + i] = prop;}}




this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + /\d{1,2}/.source);}


var prototype__proto=Locale.prototype;

prototype__proto._calendar = defaultCalendar;
prototype__proto.calendar = locale_calendar__calendar;
prototype__proto._longDateFormat = defaultLongDateFormat;
prototype__proto.longDateFormat = longDateFormat;
prototype__proto._invalidDate = defaultInvalidDate;
prototype__proto.invalidDate = invalidDate;
prototype__proto._ordinal = defaultOrdinal;
prototype__proto.ordinal = ordinal;
prototype__proto._ordinalParse = defaultOrdinalParse;
prototype__proto.preparse = preParsePostFormat;
prototype__proto.postformat = preParsePostFormat;
prototype__proto._relativeTime = defaultRelativeTime;
prototype__proto.relativeTime = relative__relativeTime;
prototype__proto.pastFuture = pastFuture;
prototype__proto.set = locale_set__set;


prototype__proto.months = localeMonths;
prototype__proto._months = defaultLocaleMonths;
prototype__proto.monthsShort = localeMonthsShort;
prototype__proto._monthsShort = defaultLocaleMonthsShort;
prototype__proto.monthsParse = localeMonthsParse;


prototype__proto.week = localeWeek;
prototype__proto._week = defaultLocaleWeek;
prototype__proto.firstDayOfYear = localeFirstDayOfYear;
prototype__proto.firstDayOfWeek = localeFirstDayOfWeek;


prototype__proto.weekdays = localeWeekdays;
prototype__proto._weekdays = defaultLocaleWeekdays;
prototype__proto.weekdaysMin = localeWeekdaysMin;
prototype__proto._weekdaysMin = defaultLocaleWeekdaysMin;
prototype__proto.weekdaysShort = localeWeekdaysShort;
prototype__proto._weekdaysShort = defaultLocaleWeekdaysShort;
prototype__proto.weekdaysParse = localeWeekdaysParse;


prototype__proto.isPM = localeIsPM;
prototype__proto._meridiemParse = defaultLocaleMeridiemParse;
prototype__proto.meridiem = localeMeridiem;

function lists__get(format,index,field,setter){
var locale=locale_locales__getLocale();
var utc=create_utc__createUTC().set(setter,index);
return locale[field](utc,format);}


function list(format,index,field,count,setter){
if(typeof format === 'number'){
index = format;
format = undefined;}


format = format || '';

if(index != null){
return lists__get(format,index,field,setter);}


var i;
var out=[];
for(i = 0;i < count;i++) {
out[i] = lists__get(format,i,field,setter);}

return out;}


function lists__listMonths(format,index){
return list(format,index,'months',12,'month');}


function lists__listMonthsShort(format,index){
return list(format,index,'monthsShort',12,'month');}


function lists__listWeekdays(format,index){
return list(format,index,'weekdays',7,'day');}


function lists__listWeekdaysShort(format,index){
return list(format,index,'weekdaysShort',7,'day');}


function lists__listWeekdaysMin(format,index){
return list(format,index,'weekdaysMin',7,'day');}


locale_locales__getSetGlobalLocale('en',{
ordinalParse:/\d{1,2}(th|st|nd|rd)/,
ordinal:function(number){
var b=number % 10,
output=toInt(number % 100 / 10) === 1?'th':
b === 1?'st':
b === 2?'nd':
b === 3?'rd':'th';
return number + output;}});




utils_hooks__hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.',locale_locales__getSetGlobalLocale);
utils_hooks__hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.',locale_locales__getLocale);

var mathAbs=Math.abs;

function duration_abs__abs(){
var data=this._data;

this._milliseconds = mathAbs(this._milliseconds);
this._days = mathAbs(this._days);
this._months = mathAbs(this._months);

data.milliseconds = mathAbs(data.milliseconds);
data.seconds = mathAbs(data.seconds);
data.minutes = mathAbs(data.minutes);
data.hours = mathAbs(data.hours);
data.months = mathAbs(data.months);
data.years = mathAbs(data.years);

return this;}


function duration_add_subtract__addSubtract(duration,input,value,direction){
var other=create__createDuration(input,value);

duration._milliseconds += direction * other._milliseconds;
duration._days += direction * other._days;
duration._months += direction * other._months;

return duration._bubble();}



function duration_add_subtract__add(input,value){
return duration_add_subtract__addSubtract(this,input,value,1);}



function duration_add_subtract__subtract(input,value){
return duration_add_subtract__addSubtract(this,input,value,-1);}


function absCeil(number){
if(number < 0){
return Math.floor(number);}else 
{
return Math.ceil(number);}}



function bubble(){
var milliseconds=this._milliseconds;
var days=this._days;
var months=this._months;
var data=this._data;
var seconds,minutes,hours,years,monthsFromDays;



if(!(milliseconds >= 0 && days >= 0 && months >= 0 || 
milliseconds <= 0 && days <= 0 && months <= 0)){
milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
days = 0;
months = 0;}




data.milliseconds = milliseconds % 1000;

seconds = absFloor(milliseconds / 1000);
data.seconds = seconds % 60;

minutes = absFloor(seconds / 60);
data.minutes = minutes % 60;

hours = absFloor(minutes / 60);
data.hours = hours % 24;

days += absFloor(hours / 24);


monthsFromDays = absFloor(daysToMonths(days));
months += monthsFromDays;
days -= absCeil(monthsToDays(monthsFromDays));


years = absFloor(months / 12);
months %= 12;

data.days = days;
data.months = months;
data.years = years;

return this;}


function daysToMonths(days){


return days * 4800 / 146097;}


function monthsToDays(months){

return months * 146097 / 4800;}


function as(units){
var days;
var months;
var milliseconds=this._milliseconds;

units = normalizeUnits(units);

if(units === 'month' || units === 'year'){
days = this._days + milliseconds / 864e5;
months = this._months + daysToMonths(days);
return units === 'month'?months:months / 12;}else 
{

days = this._days + Math.round(monthsToDays(this._months));
switch(units){
case 'week':return days / 7 + milliseconds / 6048e5;
case 'day':return days + milliseconds / 864e5;
case 'hour':return days * 24 + milliseconds / 36e5;
case 'minute':return days * 1440 + milliseconds / 6e4;
case 'second':return days * 86400 + milliseconds / 1000;

case 'millisecond':return Math.floor(days * 864e5) + milliseconds;
default:throw new Error('Unknown unit ' + units);}}}





function duration_as__valueOf(){
return (
this._milliseconds + 
this._days * 864e5 + 
this._months % 12 * 2592e6 + 
toInt(this._months / 12) * 31536e6);}



function makeAs(alias){
return function(){
return this.as(alias);};}



var asMilliseconds=makeAs('ms');
var asSeconds=makeAs('s');
var asMinutes=makeAs('m');
var asHours=makeAs('h');
var asDays=makeAs('d');
var asWeeks=makeAs('w');
var asMonths=makeAs('M');
var asYears=makeAs('y');

function duration_get__get(units){
units = normalizeUnits(units);
return this[units + 's']();}


function makeGetter(name){
return function(){
return this._data[name];};}



var milliseconds=makeGetter('milliseconds');
var seconds=makeGetter('seconds');
var minutes=makeGetter('minutes');
var hours=makeGetter('hours');
var days=makeGetter('days');
var months=makeGetter('months');
var years=makeGetter('years');

function weeks(){
return absFloor(this.days() / 7);}


var round=Math.round;
var thresholds={
s:45,
m:45,
h:22,
d:26,
M:11};



function substituteTimeAgo(string,number,withoutSuffix,isFuture,locale){
return locale.relativeTime(number || 1,!!withoutSuffix,string,isFuture);}


function duration_humanize__relativeTime(posNegDuration,withoutSuffix,locale){
var duration=create__createDuration(posNegDuration).abs();
var seconds=round(duration.as('s'));
var minutes=round(duration.as('m'));
var hours=round(duration.as('h'));
var days=round(duration.as('d'));
var months=round(duration.as('M'));
var years=round(duration.as('y'));

var a=seconds < thresholds.s && ['s',seconds] || 
minutes === 1 && ['m'] || 
minutes < thresholds.m && ['mm',minutes] || 
hours === 1 && ['h'] || 
hours < thresholds.h && ['hh',hours] || 
days === 1 && ['d'] || 
days < thresholds.d && ['dd',days] || 
months === 1 && ['M'] || 
months < thresholds.M && ['MM',months] || 
years === 1 && ['y'] || ['yy',years];

a[2] = withoutSuffix;
a[3] = +posNegDuration > 0;
a[4] = locale;
return substituteTimeAgo.apply(null,a);}



function duration_humanize__getSetRelativeTimeThreshold(threshold,limit){
if(thresholds[threshold] === undefined){
return false;}

if(limit === undefined){
return thresholds[threshold];}

thresholds[threshold] = limit;
return true;}


function humanize(withSuffix){
var locale=this.localeData();
var output=duration_humanize__relativeTime(this,!withSuffix,locale);

if(withSuffix){
output = locale.pastFuture(+this,output);}


return locale.postformat(output);}


var iso_string__abs=Math.abs;

function iso_string__toISOString(){







var seconds=iso_string__abs(this._milliseconds) / 1000;
var days=iso_string__abs(this._days);
var months=iso_string__abs(this._months);
var minutes,hours,years;


minutes = absFloor(seconds / 60);
hours = absFloor(minutes / 60);
seconds %= 60;
minutes %= 60;


years = absFloor(months / 12);
months %= 12;



var Y=years;
var M=months;
var D=days;
var h=hours;
var m=minutes;
var s=seconds;
var total=this.asSeconds();

if(!total){


return 'P0D';}


return (total < 0?'-':'') + 
'P' + (
Y?Y + 'Y':'') + (
M?M + 'M':'') + (
D?D + 'D':'') + (
h || m || s?'T':'') + (
h?h + 'H':'') + (
m?m + 'M':'') + (
s?s + 'S':'');}


var duration_prototype__proto=Duration.prototype;

duration_prototype__proto.abs = duration_abs__abs;
duration_prototype__proto.add = duration_add_subtract__add;
duration_prototype__proto.subtract = duration_add_subtract__subtract;
duration_prototype__proto.as = as;
duration_prototype__proto.asMilliseconds = asMilliseconds;
duration_prototype__proto.asSeconds = asSeconds;
duration_prototype__proto.asMinutes = asMinutes;
duration_prototype__proto.asHours = asHours;
duration_prototype__proto.asDays = asDays;
duration_prototype__proto.asWeeks = asWeeks;
duration_prototype__proto.asMonths = asMonths;
duration_prototype__proto.asYears = asYears;
duration_prototype__proto.valueOf = duration_as__valueOf;
duration_prototype__proto._bubble = bubble;
duration_prototype__proto.get = duration_get__get;
duration_prototype__proto.milliseconds = milliseconds;
duration_prototype__proto.seconds = seconds;
duration_prototype__proto.minutes = minutes;
duration_prototype__proto.hours = hours;
duration_prototype__proto.days = days;
duration_prototype__proto.weeks = weeks;
duration_prototype__proto.months = months;
duration_prototype__proto.years = years;
duration_prototype__proto.humanize = humanize;
duration_prototype__proto.toISOString = iso_string__toISOString;
duration_prototype__proto.toString = iso_string__toISOString;
duration_prototype__proto.toJSON = iso_string__toISOString;
duration_prototype__proto.locale = locale;
duration_prototype__proto.localeData = localeData;


duration_prototype__proto.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',iso_string__toISOString);
duration_prototype__proto.lang = lang;



addFormatToken('X',0,0,'unix');
addFormatToken('x',0,0,'valueOf');



addRegexToken('x',matchSigned);
addRegexToken('X',matchTimestamp);
addParseToken('X',function(input,array,config){
config._d = new Date(parseFloat(input,10) * 1000);});

addParseToken('x',function(input,array,config){
config._d = new Date(toInt(input));});





utils_hooks__hooks.version = '2.10.6';

setHookCallback(local__createLocal);

utils_hooks__hooks.fn = momentPrototype;
utils_hooks__hooks.min = min;
utils_hooks__hooks.max = max;
utils_hooks__hooks.utc = create_utc__createUTC;
utils_hooks__hooks.unix = moment__createUnix;
utils_hooks__hooks.months = lists__listMonths;
utils_hooks__hooks.isDate = isDate;
utils_hooks__hooks.locale = locale_locales__getSetGlobalLocale;
utils_hooks__hooks.invalid = valid__createInvalid;
utils_hooks__hooks.duration = create__createDuration;
utils_hooks__hooks.isMoment = isMoment;
utils_hooks__hooks.weekdays = lists__listWeekdays;
utils_hooks__hooks.parseZone = moment__createInZone;
utils_hooks__hooks.localeData = locale_locales__getLocale;
utils_hooks__hooks.isDuration = isDuration;
utils_hooks__hooks.monthsShort = lists__listMonthsShort;
utils_hooks__hooks.weekdaysMin = lists__listWeekdaysMin;
utils_hooks__hooks.defineLocale = defineLocale;
utils_hooks__hooks.weekdaysShort = lists__listWeekdaysShort;
utils_hooks__hooks.normalizeUnits = normalizeUnits;
utils_hooks__hooks.relativeTimeThreshold = duration_humanize__getSetRelativeTimeThreshold;

var _moment=utils_hooks__hooks;

return _moment;});
});
__d('image!calendaricon_gray',[],function(global, require, module, exports) {  module.exports = {"__packager_asset":true,"isStatic":true,"path":"/Users/parkjiho/Documents/react-native-projects/plainX/ios/plainX/Images.xcassets/calendaricon_gray.imageset/calendaricon_gray.png","uri":"calendaricon_gray","width":49,"height":49,"deprecated":true};
});
__d('plainX/components/cards/OfferSummary.js',["react-native/Libraries/react-native/react-native.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 


Text=

React.Text;var View=React.View;

var OfferSummary=React.createClass({
displayName:"OfferSummaryCard",
render:function(){
return (
React.createElement(View,null,
React.createElement(Text,null,this.props.data["TitleText"]),
React.createElement(Text,null,this.props.data["Details"]),
React.createElement(Text,null,this.props.data["DescriptionText"])));}});





module.exports = OfferSummary;
});
__d('plainX/components/cards/UserConversationItem.js',["image!usericon_green","react-native/Libraries/react-native/react-native.js","rx/dist/rx.all.js","plainX/components/screens/componentMixins/DateMixin.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');
var Rx=require('rx/dist/rx.all.js');

var DateMixin=require('plainX/components/screens/componentMixins/DateMixin.js');var 


Text=




React.Text;var TouchableOpacity=React.TouchableOpacity;var View=React.View;var StyleSheet=React.StyleSheet;var Image=React.Image;

var UserConversationItem=React.createClass({
displayName:"UserConversationItemCard",
mixins:[DateMixin],
getOfferSummaryText:function(offer){
return React.createElement(View,{style:{flexDirection:'row'}},
React.createElement(Text,{style:styles.offerSummary},
offer["Sell"],' ',offer["AmountSell"],' to ',offer["Buy"],' ',offer["AmountBuy"]));},



render:function(){var _this=this;
var subject=new Rx.Subject();
if(this.props.observer){
subject.subscribe(this.props.observer);}

return (
React.createElement(TouchableOpacity,{style:styles.container,
onPress:function(){
var param={"Id":_this.props.data["Id"]};
if(_this.props.data["Users"][0]["Email"])
param["ScreenName"] = _this.props.data["Users"][0]["Email"];
subject.onNext(param);}},


React.createElement(View,{style:{flexDirection:'row'}},
React.createElement(Image,{source:require('image!usericon_green'),style:styles.userIcon}),
React.createElement(View,null,
this.getOfferSummaryText(this.props.data["Offer"]),
React.createElement(Text,{style:[this.props.cardCommonStyles.title,styles.name,this.props.data["HasUnread"]?{fontWeight:'bold'}:null]},
this.props.data["Users"][0]["Email"]),

React.createElement(Text,{style:[this.props.cardCommonStyles.description,styles.lastMessage,this.props.data["HasUnread"]?{fontWeight:'bold'}:null]},
this.props.data["LastMessage"]["Text"])),


React.createElement(View,{style:{flex:1}},
React.createElement(Text,{style:[styles.dateText,this.props.data["HasUnread"]?{fontWeight:'bold'}:null]},this.getConversationTimestampFormat(this.props.data["LastMessage"]["Created"]))))));}});







var styles=StyleSheet.create({
container:{
flexDirection:'column',
justifyContent:'center',
height:100,
backgroundColor:'white',
borderBottomColor:'#33cc66',
borderBottomWidth:0.5},

userIcon:{
width:40,height:40,
alignSelf:'center',
marginLeft:10,
marginRight:10},

name:{
textAlign:'left',
fontSize:16,
marginTop:5,
marginBottom:5},

lastMessage:{
textAlign:'left',
fontSize:14,
marginBottom:5},

offerSummary:{
fontSize:14,
color:'#33cc66',
fontWeight:'bold'},

dateText:{
alignSelf:'flex-end',
fontSize:12,
color:'#666',
marginRight:5}});




module.exports = UserConversationItem;
});
__d('image!usericon_green',[],function(global, require, module, exports) {  module.exports = {"__packager_asset":true,"isStatic":true,"path":"/Users/parkjiho/Documents/react-native-projects/plainX/ios/plainX/Images.xcassets/usericon_green.imageset/usericon_green.png","uri":"usericon_green","width":70,"height":70,"deprecated":true};
});
__d('plainX/components/cards/Message.js',["react-native/Libraries/react-native/react-native.js","rx/dist/rx.all.js","plainX/components/screens/componentMixins/DateMixin.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');
var Rx=require('rx/dist/rx.all.js');

var DateMixin=require('plainX/components/screens/componentMixins/DateMixin.js');var 


Text=


React.Text;var View=React.View;var StyleSheet=React.StyleSheet;

var Message=React.createClass({
displayName:"MessageCard",
mixins:[DateMixin],
render:function(){
var message;
switch(this.props.data["Type"]){
case 'message':
var isSelf=this.props.data["IsSelf"];
message = React.createElement(View,{style:[{flexDirection:'column'},isSelf?styles.rightContainer:styles.leftContainer]},
React.createElement(Text,{style:[styles.messageText,
isSelf?
styles.selfText:styles.otherText]},
this.props.data["Text"]),

React.createElement(Text,{style:[styles.dateText,isSelf?styles.rightContainer:styles.leftContainer]},
this.getMessageTimestampFormat(this.props.data["Created"])));


break;
case 'note':
message = React.createElement(View,{style:{flexDirection:'column',margin:10}},
React.createElement(Text,{style:[styles.messageText,styles.noteText]},
this.props.data["Text"]),

React.createElement(Text,{style:[styles.dateText,styles.noteSubText]},
"Only shown to you"));


break;}


return (
React.createElement(View,{style:styles.container},
message));}});





var styles=StyleSheet.create({
container:{
flex:1,
flexDirection:'column',
marginTop:5,
marginBottom:5},

rightContainer:{
alignItems:'flex-end',
alignSelf:'flex-end',
marginRight:10},

leftContainer:{
alignItems:'flex-start',
alignSelf:'flex-start',
marginLeft:10},

centerContainer:{
alignSelf:'center'},

selfText:{
backgroundColor:'#33cc66'},

otherText:{
backgroundColor:'#2a6033'},

messageText:{
color:'white',
fontSize:16,
paddingTop:10,paddingBottom:10,
paddingLeft:15,paddingRight:15,
borderRadius:20,
overflow:'hidden',
marginLeft:5,
marginRight:5},

noteText:{
textAlign:'center',
color:'#33cc66',
borderColor:'#33cc66',
borderWidth:1},

noteSubText:{
marginTop:5,marginBottom:5,
textAlign:'right'},

dateText:{
color:'#333',
fontSize:10,
marginLeft:10,
marginRight:10},

userIcon:{
width:50,
height:50,
alignSelf:'center'}});




module.exports = Message;
});
__d('plainX/components/cards/Feedback.js',["react-native/Libraries/react-native/react-native.js","rx/dist/rx.all.js","react-native-rest-kit/index.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');
var Rx=require('rx/dist/rx.all.js');
var RestKit=require('react-native-rest-kit/index.js');var 


Text=



React.Text;var View=React.View;var StyleSheet=React.StyleSheet;var TouchableOpacity=React.TouchableOpacity;

var Feedback=React.createClass({
displayName:"FeedbackCard",
getInitialState:function(){
return {
firstResponse:null,
secondResponse:null,
showThanks:false};},


handleEvent:function(event){
switch(event.name){
case "FirstResponse":
if(this.props.data["Options"][event.value] == null){
this.setState({firstResponse:event.value,showThanks:true});
return {"option":event.value};}

this.setState({firstResponse:event.value});
return null;
break;
case "SecondResponse":
this.setState({showThanks:true,secondResponse:event.value});
return {"option":this.state.firstResponse,"detail":event.value};
break;}},


render:function(){
var cardSubject=new Rx.Subject();
if(this.props.observer){
cardSubject.subscribe(this.props.observer);}


var firstOptions=Object.keys(this.props.data["Options"]);
var responseSubject=new Rx.Subject();

responseSubject.map(this.handleEvent).filter(function(value,idx,obs){return value != null;}).
subscribe(cardSubject);

var firstOptionsView=firstOptions.map(function(value){
return React.createElement(TouchableOpacity,{onPress:function(){
responseSubject.onNext({name:"FirstResponse",value:value});}},

React.createElement(Text,{style:styles.answerText},value));});


var secondOptionsView=[];
if(this.state.firstResponse){
if(this.props.data["Options"][this.state.firstResponse]){
secondOptionsView = this.props.data["Options"][this.state.firstResponse].map(function(value){
return React.createElement(TouchableOpacity,{onPress:function(){
responseSubject.onNext({name:"SecondResponse",value:value});}},

React.createElement(Text,{style:styles.answerText},value));});}}





return (
React.createElement(View,{style:{flex:1,flexDirection:'column'}},
this.state.firstResponse?null:
React.createElement(View,{style:styles.questionContainer},
React.createElement(Text,{style:styles.questionText},this.props.data["Question1"]),
firstOptionsView.map(function(view){return view;})),

!this.state.secondResponse && secondOptionsView.length > 0?
React.createElement(View,{style:styles.questionContainer},
React.createElement(Text,{style:styles.questionText},this.props.data["Question2"]),
secondOptionsView.map(function(view){return view;})):

null,
this.state.showThanks?
React.createElement(View,{style:styles.questionContainer},
React.createElement(Text,{style:styles.thanksText},'Thank you for your response!')):

null));}});





var styles=StyleSheet.create({
questionContainer:{
flex:1,
flexDirection:'column',
borderColor:'#33cc66',
borderWidth:1,
paddingTop:10,paddingBottom:10,
paddingLeft:15,paddingRight:15,
borderRadius:20,
overflow:'hidden',
margin:10},

questionText:{
color:'#2a6033',
fontSize:16,
textAlign:'center',
paddingTop:10,paddingBottom:10,
paddingLeft:15,paddingRight:15},

answerText:{
textAlign:'center',
color:'#33cc66',
paddingTop:10,
paddingBottom:10,
marginTop:5,marginBottom:5},

thanksText:{
textAlign:'center',
color:'#33cc66',
fontSize:20}});




module.exports = Feedback;
});
__d('react-native-rest-kit/index.js',["underscore/underscore.js","react-native/Libraries/react-native/react-native.js"],function(global, require, module, exports) {  var _=require('underscore/underscore.js');
var AsyncStorage=require('react-native/Libraries/react-native/react-native.js').AsyncStorage;

var RestKit={};
RestKit.globalOptions = {};


RestKit.send = function(url,req,callback){
var error=[];
if(!req.method)error.push("Method not defined");
if(error.length > 0)return callback(error,null);
fetch(url,req).
then(function(response){
if(response.status != 200){
var error={};
error.status = response.status;
error.statusText = response.statusText;
error.body = response._bodyText;
return callback(error,null);}

return response.json();}).

then(function(json){
callback(null,json);}).

catch(function(error){
callback(error,null);});};




var Model=RestKit.Model = function(attributes){
var attrs=attributes || {};
this.attributes = {};
this.set(attrs);
this.initialize.apply(this,arguments);};



_.extend(Model.prototype,{
idAttribute:'_id',
initialize:function(){},
toJSON:function(options){
return _.clone(this.attributes);},

get:function(attr){
return this.attributes[attr];},

has:function(attr){
return this.get(attr) != null;},

matches:function(attrs){
return !!_.iteratee(attrs,this)(this.attributes);},

set:function(field,value){
if(field == null)return this;
var obj;
if(typeof field === 'object'){
obj = field;}else 
{
(obj = {})[field] = value;}


for(var field in obj) {
if(obj[field] !== undefined){
this.attributes[field] = obj[field];}}



return this;},




unset:function(attr){
delete this.attributes[attr];},


isNew:function(){
return !this.has(this.idAttribute);},


fetch:function(options,callback){
if(this.isNew())throw new Error('Cannot fetch model without Id');
return RestKit.sync('GET',this,options,callback);},


save:function(options,callback){
var method=this.isNew()?'POST':'PUT';
return RestKit.sync('POST',this,options,callback);},


destroy:function(option,callback){
return RestKit.sync('DELETE',this,options,callback);},


url:function(){
var base=
_.result(this,'urlRoot') || 
_.result(this.collection,'url') || 
urlError();
if(this.isNew())return base;
var id=this.get(this.idAttribute);
return base.replace(/[^\/]$/,'$&/') + encodeURIComponent(id);},


saveToLocalStorage:function(storageKey,callback){
if(typeof storageKey == 'function'){
var storageKey=uniqueName();}

if(storageKey.length <= 0){
throw new Error("Storage Key must be specified");}

AsyncStorage.setItem(storageKey,JSON.stringify(this.attributes)).
then(callback).
catch(callback);},


getFromLocalStorage:function(storageKey,callback){
if(typeof storageKey == 'function'){
var storageKey=uniqueName();}

if(storageKey.length <= 0){
throw new Error("Storage Key must be specified");}

var self=this;
AsyncStorage.getItem(storageKey,function(error,string){
if(error)return callback(error);
self.attributes = JSON.parse(string) || self.attributes;
return callback(null);});}});




var extend=function(protoProps,staticProps){
var parent=this;
var child;




if(protoProps && _.has(protoProps,'constructor')){
child = protoProps.constructor;}else 
{
child = function(){return parent.apply(this,arguments);};}



_.extend(child,parent,staticProps);



child.prototype = _.create(parent.prototype,protoProps);
child.prototype.constructor = child;



child.__super__ = parent.prototype;

return child;};



Model.extend = extend;

RestKit.Model = Model;

RestKit.sync = function(method,model,options,callback){

if(typeof options === 'function'){
callback = options;
options = null;}

options = options || {};

var request={
method:method,
headers:{
'Accept':'application/json',
'Content-Type':'application/json'}};



if(method != 'GET' && method != 'HEAD'){
request['body'] = JSON.stringify(model.toJSON());}


if(RestKit.globalOptions.headers){
for(header in RestKit.globalOptions.headers) {
request.headers[header] = RestKit.globalOptions.headers[header];}}



if(options.headers){
for(header in options.headers) {
request.headers[header] = options.headers[header];}}



var url;

if(!options.url){
url = _.result(model,'url') || urlError();}


RestKit.send(url,request,function(error,json){
model.set(json);
if(callback){
callback(error,json);}});



return;};


var urlError=function(){
throw new Error('A "url" property or function must be specified');};


module.exports = RestKit;
});
__d('underscore/underscore.js',[],function(global, require, module, exports) {  (




function(){





var root=this;


var previousUnderscore=root._;


var ArrayProto=Array.prototype,ObjProto=Object.prototype,FuncProto=Function.prototype;


var 
push=ArrayProto.push,
slice=ArrayProto.slice,
toString=ObjProto.toString,
hasOwnProperty=ObjProto.hasOwnProperty;



var 
nativeIsArray=Array.isArray,
nativeKeys=Object.keys,
nativeBind=FuncProto.bind,
nativeCreate=Object.create;


var Ctor=function(){};


var _=function(obj){
if(obj instanceof _)return obj;
if(!(this instanceof _))return new _(obj);
this._wrapped = obj;};





if(typeof exports !== 'undefined'){
if(typeof module !== 'undefined' && module.exports){
exports = module.exports = _;}

exports._ = _;}else 
{
root._ = _;}



_.VERSION = '1.8.3';




var optimizeCb=function(func,context,argCount){
if(context === void 0)return func;
switch(argCount == null?3:argCount){
case 1:return function(value){
return func.call(context,value);};

case 2:return function(value,other){
return func.call(context,value,other);};

case 3:return function(value,index,collection){
return func.call(context,value,index,collection);};

case 4:return function(accumulator,value,index,collection){
return func.call(context,accumulator,value,index,collection);};}


return function(){
return func.apply(context,arguments);};};






var cb=function(value,context,argCount){
if(value == null)return _.identity;
if(_.isFunction(value))return optimizeCb(value,context,argCount);
if(_.isObject(value))return _.matcher(value);
return _.property(value);};

_.iteratee = function(value,context){
return cb(value,context,Infinity);};



var createAssigner=function(keysFunc,undefinedOnly){
return function(obj){
var length=arguments.length;
if(length < 2 || obj == null)return obj;
for(var index=1;index < length;index++) {
var source=arguments[index],
keys=keysFunc(source),
l=keys.length;
for(var i=0;i < l;i++) {
var key=keys[i];
if(!undefinedOnly || obj[key] === void 0)obj[key] = source[key];}}


return obj;};};




var baseCreate=function(prototype){
if(!_.isObject(prototype))return {};
if(nativeCreate)return nativeCreate(prototype);
Ctor.prototype = prototype;
var result=new Ctor();
Ctor.prototype = null;
return result;};


var property=function(key){
return function(obj){
return obj == null?void 0:obj[key];};};







var MAX_ARRAY_INDEX=Math.pow(2,53) - 1;
var getLength=property('length');
var isArrayLike=function(collection){
var length=getLength(collection);
return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;};








_.each = _.forEach = function(obj,iteratee,context){
iteratee = optimizeCb(iteratee,context);
var i,length;
if(isArrayLike(obj)){
for(i = 0,length = obj.length;i < length;i++) {
iteratee(obj[i],i,obj);}}else 

{
var keys=_.keys(obj);
for(i = 0,length = keys.length;i < length;i++) {
iteratee(obj[keys[i]],keys[i],obj);}}


return obj;};



_.map = _.collect = function(obj,iteratee,context){
iteratee = cb(iteratee,context);
var keys=!isArrayLike(obj) && _.keys(obj),
length=(keys || obj).length,
results=Array(length);
for(var index=0;index < length;index++) {
var currentKey=keys?keys[index]:index;
results[index] = iteratee(obj[currentKey],currentKey,obj);}

return results;};



function createReduce(dir){


function iterator(obj,iteratee,memo,keys,index,length){
for(;index >= 0 && index < length;index += dir) {
var currentKey=keys?keys[index]:index;
memo = iteratee(memo,obj[currentKey],currentKey,obj);}

return memo;}


return function(obj,iteratee,memo,context){
iteratee = optimizeCb(iteratee,context,4);
var keys=!isArrayLike(obj) && _.keys(obj),
length=(keys || obj).length,
index=dir > 0?0:length - 1;

if(arguments.length < 3){
memo = obj[keys?keys[index]:index];
index += dir;}

return iterator(obj,iteratee,memo,keys,index,length);};}





_.reduce = _.foldl = _.inject = createReduce(1);


_.reduceRight = _.foldr = createReduce(-1);


_.find = _.detect = function(obj,predicate,context){
var key;
if(isArrayLike(obj)){
key = _.findIndex(obj,predicate,context);}else 
{
key = _.findKey(obj,predicate,context);}

if(key !== void 0 && key !== -1)return obj[key];};




_.filter = _.select = function(obj,predicate,context){
var results=[];
predicate = cb(predicate,context);
_.each(obj,function(value,index,list){
if(predicate(value,index,list))results.push(value);});

return results;};



_.reject = function(obj,predicate,context){
return _.filter(obj,_.negate(cb(predicate)),context);};




_.every = _.all = function(obj,predicate,context){
predicate = cb(predicate,context);
var keys=!isArrayLike(obj) && _.keys(obj),
length=(keys || obj).length;
for(var index=0;index < length;index++) {
var currentKey=keys?keys[index]:index;
if(!predicate(obj[currentKey],currentKey,obj))return false;}

return true;};




_.some = _.any = function(obj,predicate,context){
predicate = cb(predicate,context);
var keys=!isArrayLike(obj) && _.keys(obj),
length=(keys || obj).length;
for(var index=0;index < length;index++) {
var currentKey=keys?keys[index]:index;
if(predicate(obj[currentKey],currentKey,obj))return true;}

return false;};




_.contains = _.includes = _.include = function(obj,item,fromIndex,guard){
if(!isArrayLike(obj))obj = _.values(obj);
if(typeof fromIndex != 'number' || guard)fromIndex = 0;
return _.indexOf(obj,item,fromIndex) >= 0;};



_.invoke = function(obj,method){
var args=slice.call(arguments,2);
var isFunc=_.isFunction(method);
return _.map(obj,function(value){
var func=isFunc?method:value[method];
return func == null?func:func.apply(value,args);});};




_.pluck = function(obj,key){
return _.map(obj,_.property(key));};




_.where = function(obj,attrs){
return _.filter(obj,_.matcher(attrs));};




_.findWhere = function(obj,attrs){
return _.find(obj,_.matcher(attrs));};



_.max = function(obj,iteratee,context){
var result=-Infinity,lastComputed=-Infinity,
value,computed;
if(iteratee == null && obj != null){
obj = isArrayLike(obj)?obj:_.values(obj);
for(var i=0,length=obj.length;i < length;i++) {
value = obj[i];
if(value > result){
result = value;}}}else 


{
iteratee = cb(iteratee,context);
_.each(obj,function(value,index,list){
computed = iteratee(value,index,list);
if(computed > lastComputed || computed === -Infinity && result === -Infinity){
result = value;
lastComputed = computed;}});}



return result;};



_.min = function(obj,iteratee,context){
var result=Infinity,lastComputed=Infinity,
value,computed;
if(iteratee == null && obj != null){
obj = isArrayLike(obj)?obj:_.values(obj);
for(var i=0,length=obj.length;i < length;i++) {
value = obj[i];
if(value < result){
result = value;}}}else 


{
iteratee = cb(iteratee,context);
_.each(obj,function(value,index,list){
computed = iteratee(value,index,list);
if(computed < lastComputed || computed === Infinity && result === Infinity){
result = value;
lastComputed = computed;}});}



return result;};




_.shuffle = function(obj){
var set=isArrayLike(obj)?obj:_.values(obj);
var length=set.length;
var shuffled=Array(length);
for(var index=0,rand;index < length;index++) {
rand = _.random(0,index);
if(rand !== index)shuffled[index] = shuffled[rand];
shuffled[rand] = set[index];}

return shuffled;};





_.sample = function(obj,n,guard){
if(n == null || guard){
if(!isArrayLike(obj))obj = _.values(obj);
return obj[_.random(obj.length - 1)];}

return _.shuffle(obj).slice(0,Math.max(0,n));};



_.sortBy = function(obj,iteratee,context){
iteratee = cb(iteratee,context);
return _.pluck(_.map(obj,function(value,index,list){
return {
value:value,
index:index,
criteria:iteratee(value,index,list)};}).

sort(function(left,right){
var a=left.criteria;
var b=right.criteria;
if(a !== b){
if(a > b || a === void 0)return 1;
if(a < b || b === void 0)return -1;}

return left.index - right.index;}),
'value');};



var group=function(behavior){
return function(obj,iteratee,context){
var result={};
iteratee = cb(iteratee,context);
_.each(obj,function(value,index){
var key=iteratee(value,index,obj);
behavior(result,value,key);});

return result;};};





_.groupBy = group(function(result,value,key){
if(_.has(result,key))result[key].push(value);else result[key] = [value];});




_.indexBy = group(function(result,value,key){
result[key] = value;});





_.countBy = group(function(result,value,key){
if(_.has(result,key))result[key]++;else result[key] = 1;});



_.toArray = function(obj){
if(!obj)return [];
if(_.isArray(obj))return slice.call(obj);
if(isArrayLike(obj))return _.map(obj,_.identity);
return _.values(obj);};



_.size = function(obj){
if(obj == null)return 0;
return isArrayLike(obj)?obj.length:_.keys(obj).length;};




_.partition = function(obj,predicate,context){
predicate = cb(predicate,context);
var pass=[],fail=[];
_.each(obj,function(value,key,obj){
(predicate(value,key,obj)?pass:fail).push(value);});

return [pass,fail];};








_.first = _.head = _.take = function(array,n,guard){
if(array == null)return void 0;
if(n == null || guard)return array[0];
return _.initial(array,array.length - n);};





_.initial = function(array,n,guard){
return slice.call(array,0,Math.max(0,array.length - (n == null || guard?1:n)));};




_.last = function(array,n,guard){
if(array == null)return void 0;
if(n == null || guard)return array[array.length - 1];
return _.rest(array,Math.max(0,array.length - n));};





_.rest = _.tail = _.drop = function(array,n,guard){
return slice.call(array,n == null || guard?1:n);};



_.compact = function(array){
return _.filter(array,_.identity);};



var flatten=function(input,shallow,strict,startIndex){
var output=[],idx=0;
for(var i=startIndex || 0,length=getLength(input);i < length;i++) {
var value=input[i];
if(isArrayLike(value) && (_.isArray(value) || _.isArguments(value))){

if(!shallow)value = flatten(value,shallow,strict);
var j=0,len=value.length;
output.length += len;
while(j < len) {
output[idx++] = value[j++];}}else 

if(!strict){
output[idx++] = value;}}


return output;};



_.flatten = function(array,shallow){
return flatten(array,shallow,false);};



_.without = function(array){
return _.difference(array,slice.call(arguments,1));};





_.uniq = _.unique = function(array,isSorted,iteratee,context){
if(!_.isBoolean(isSorted)){
context = iteratee;
iteratee = isSorted;
isSorted = false;}

if(iteratee != null)iteratee = cb(iteratee,context);
var result=[];
var seen=[];
for(var i=0,length=getLength(array);i < length;i++) {
var value=array[i],
computed=iteratee?iteratee(value,i,array):value;
if(isSorted){
if(!i || seen !== computed)result.push(value);
seen = computed;}else 
if(iteratee){
if(!_.contains(seen,computed)){
seen.push(computed);
result.push(value);}}else 

if(!_.contains(result,value)){
result.push(value);}}


return result;};




_.union = function(){
return _.uniq(flatten(arguments,true,true));};




_.intersection = function(array){
var result=[];
var argsLength=arguments.length;
for(var i=0,length=getLength(array);i < length;i++) {
var item=array[i];
if(_.contains(result,item))continue;
for(var j=1;j < argsLength;j++) {
if(!_.contains(arguments[j],item))break;}

if(j === argsLength)result.push(item);}

return result;};




_.difference = function(array){
var rest=flatten(arguments,true,true,1);
return _.filter(array,function(value){
return !_.contains(rest,value);});};





_.zip = function(){
return _.unzip(arguments);};




_.unzip = function(array){
var length=array && _.max(array,getLength).length || 0;
var result=Array(length);

for(var index=0;index < length;index++) {
result[index] = _.pluck(array,index);}

return result;};





_.object = function(list,values){
var result={};
for(var i=0,length=getLength(list);i < length;i++) {
if(values){
result[list[i]] = values[i];}else 
{
result[list[i][0]] = list[i][1];}}


return result;};



function createPredicateIndexFinder(dir){
return function(array,predicate,context){
predicate = cb(predicate,context);
var length=getLength(array);
var index=dir > 0?0:length - 1;
for(;index >= 0 && index < length;index += dir) {
if(predicate(array[index],index,array))return index;}

return -1;};}




_.findIndex = createPredicateIndexFinder(1);
_.findLastIndex = createPredicateIndexFinder(-1);



_.sortedIndex = function(array,obj,iteratee,context){
iteratee = cb(iteratee,context,1);
var value=iteratee(obj);
var low=0,high=getLength(array);
while(low < high) {
var mid=Math.floor((low + high) / 2);
if(iteratee(array[mid]) < value)low = mid + 1;else high = mid;}

return low;};



function createIndexFinder(dir,predicateFind,sortedIndex){
return function(array,item,idx){
var i=0,length=getLength(array);
if(typeof idx == 'number'){
if(dir > 0){
i = idx >= 0?idx:Math.max(idx + length,i);}else 
{
length = idx >= 0?Math.min(idx + 1,length):idx + length + 1;}}else 

if(sortedIndex && idx && length){
idx = sortedIndex(array,item);
return array[idx] === item?idx:-1;}

if(item !== item){
idx = predicateFind(slice.call(array,i,length),_.isNaN);
return idx >= 0?idx + i:-1;}

for(idx = dir > 0?i:length - 1;idx >= 0 && idx < length;idx += dir) {
if(array[idx] === item)return idx;}

return -1;};}







_.indexOf = createIndexFinder(1,_.findIndex,_.sortedIndex);
_.lastIndexOf = createIndexFinder(-1,_.findLastIndex);




_.range = function(start,stop,step){
if(stop == null){
stop = start || 0;
start = 0;}

step = step || 1;

var length=Math.max(Math.ceil((stop - start) / step),0);
var range=Array(length);

for(var idx=0;idx < length;idx++,start += step) {
range[idx] = start;}


return range;};







var executeBound=function(sourceFunc,boundFunc,context,callingContext,args){
if(!(callingContext instanceof boundFunc))return sourceFunc.apply(context,args);
var self=baseCreate(sourceFunc.prototype);
var result=sourceFunc.apply(self,args);
if(_.isObject(result))return result;
return self;};





_.bind = function(func,context){
if(nativeBind && func.bind === nativeBind)return nativeBind.apply(func,slice.call(arguments,1));
if(!_.isFunction(func))throw new TypeError('Bind must be called on a function');
var args=slice.call(arguments,2);
var bound=function(){
return executeBound(func,bound,context,this,args.concat(slice.call(arguments)));};

return bound;};





_.partial = function(func){
var boundArgs=slice.call(arguments,1);
var bound=function(){
var position=0,length=boundArgs.length;
var args=Array(length);
for(var i=0;i < length;i++) {
args[i] = boundArgs[i] === _?arguments[position++]:boundArgs[i];}

while(position < arguments.length) args.push(arguments[position++]);
return executeBound(func,bound,this,this,args);};

return bound;};





_.bindAll = function(obj){
var i,length=arguments.length,key;
if(length <= 1)throw new Error('bindAll must be passed function names');
for(i = 1;i < length;i++) {
key = arguments[i];
obj[key] = _.bind(obj[key],obj);}

return obj;};



_.memoize = function(func,hasher){
var memoize=function(key){
var cache=memoize.cache;
var address='' + (hasher?hasher.apply(this,arguments):key);
if(!_.has(cache,address))cache[address] = func.apply(this,arguments);
return cache[address];};

memoize.cache = {};
return memoize;};




_.delay = function(func,wait){
var args=slice.call(arguments,2);
return setTimeout(function(){
return func.apply(null,args);},
wait);};




_.defer = _.partial(_.delay,_,1);






_.throttle = function(func,wait,options){
var context,args,result;
var timeout=null;
var previous=0;
if(!options)options = {};
var later=function(){
previous = options.leading === false?0:_.now();
timeout = null;
result = func.apply(context,args);
if(!timeout)context = args = null;};

return function(){
var now=_.now();
if(!previous && options.leading === false)previous = now;
var remaining=wait - (now - previous);
context = this;
args = arguments;
if(remaining <= 0 || remaining > wait){
if(timeout){
clearTimeout(timeout);
timeout = null;}

previous = now;
result = func.apply(context,args);
if(!timeout)context = args = null;}else 
if(!timeout && options.trailing !== false){
timeout = setTimeout(later,remaining);}

return result;};};







_.debounce = function(func,wait,immediate){
var timeout,args,context,timestamp,result;

var later=function(){
var last=_.now() - timestamp;

if(last < wait && last >= 0){
timeout = setTimeout(later,wait - last);}else 
{
timeout = null;
if(!immediate){
result = func.apply(context,args);
if(!timeout)context = args = null;}}};




return function(){
context = this;
args = arguments;
timestamp = _.now();
var callNow=immediate && !timeout;
if(!timeout)timeout = setTimeout(later,wait);
if(callNow){
result = func.apply(context,args);
context = args = null;}


return result;};};






_.wrap = function(func,wrapper){
return _.partial(wrapper,func);};



_.negate = function(predicate){
return function(){
return !predicate.apply(this,arguments);};};





_.compose = function(){
var args=arguments;
var start=args.length - 1;
return function(){
var i=start;
var result=args[start].apply(this,arguments);
while(i--) result = args[i].call(this,result);
return result;};};




_.after = function(times,func){
return function(){
if(--times < 1){
return func.apply(this,arguments);}};};





_.before = function(times,func){
var memo;
return function(){
if(--times > 0){
memo = func.apply(this,arguments);}

if(times <= 1)func = null;
return memo;};};





_.once = _.partial(_.before,2);





var hasEnumBug=!({toString:null}).propertyIsEnumerable('toString');
var nonEnumerableProps=['valueOf','isPrototypeOf','toString',
'propertyIsEnumerable','hasOwnProperty','toLocaleString'];

function collectNonEnumProps(obj,keys){
var nonEnumIdx=nonEnumerableProps.length;
var constructor=obj.constructor;
var proto=_.isFunction(constructor) && constructor.prototype || ObjProto;


var prop='constructor';
if(_.has(obj,prop) && !_.contains(keys,prop))keys.push(prop);

while(nonEnumIdx--) {
prop = nonEnumerableProps[nonEnumIdx];
if(prop in obj && obj[prop] !== proto[prop] && !_.contains(keys,prop)){
keys.push(prop);}}}






_.keys = function(obj){
if(!_.isObject(obj))return [];
if(nativeKeys)return nativeKeys(obj);
var keys=[];
for(var key in obj) if(_.has(obj,key))keys.push(key);

if(hasEnumBug)collectNonEnumProps(obj,keys);
return keys;};



_.allKeys = function(obj){
if(!_.isObject(obj))return [];
var keys=[];
for(var key in obj) keys.push(key);

if(hasEnumBug)collectNonEnumProps(obj,keys);
return keys;};



_.values = function(obj){
var keys=_.keys(obj);
var length=keys.length;
var values=Array(length);
for(var i=0;i < length;i++) {
values[i] = obj[keys[i]];}

return values;};




_.mapObject = function(obj,iteratee,context){
iteratee = cb(iteratee,context);
var keys=_.keys(obj),
length=keys.length,
results={},
currentKey;
for(var index=0;index < length;index++) {
currentKey = keys[index];
results[currentKey] = iteratee(obj[currentKey],currentKey,obj);}

return results;};



_.pairs = function(obj){
var keys=_.keys(obj);
var length=keys.length;
var pairs=Array(length);
for(var i=0;i < length;i++) {
pairs[i] = [keys[i],obj[keys[i]]];}

return pairs;};



_.invert = function(obj){
var result={};
var keys=_.keys(obj);
for(var i=0,length=keys.length;i < length;i++) {
result[obj[keys[i]]] = keys[i];}

return result;};




_.functions = _.methods = function(obj){
var names=[];
for(var key in obj) {
if(_.isFunction(obj[key]))names.push(key);}

return names.sort();};



_.extend = createAssigner(_.allKeys);



_.extendOwn = _.assign = createAssigner(_.keys);


_.findKey = function(obj,predicate,context){
predicate = cb(predicate,context);
var keys=_.keys(obj),key;
for(var i=0,length=keys.length;i < length;i++) {
key = keys[i];
if(predicate(obj[key],key,obj))return key;}};




_.pick = function(object,oiteratee,context){
var result={},obj=object,iteratee,keys;
if(obj == null)return result;
if(_.isFunction(oiteratee)){
keys = _.allKeys(obj);
iteratee = optimizeCb(oiteratee,context);}else 
{
keys = flatten(arguments,false,false,1);
iteratee = function(value,key,obj){return key in obj;};
obj = Object(obj);}

for(var i=0,length=keys.length;i < length;i++) {
var key=keys[i];
var value=obj[key];
if(iteratee(value,key,obj))result[key] = value;}

return result;};



_.omit = function(obj,iteratee,context){
if(_.isFunction(iteratee)){
iteratee = _.negate(iteratee);}else 
{
var keys=_.map(flatten(arguments,false,false,1),String);
iteratee = function(value,key){
return !_.contains(keys,key);};}


return _.pick(obj,iteratee,context);};



_.defaults = createAssigner(_.allKeys,true);




_.create = function(prototype,props){
var result=baseCreate(prototype);
if(props)_.extendOwn(result,props);
return result;};



_.clone = function(obj){
if(!_.isObject(obj))return obj;
return _.isArray(obj)?obj.slice():_.extend({},obj);};





_.tap = function(obj,interceptor){
interceptor(obj);
return obj;};



_.isMatch = function(object,attrs){
var keys=_.keys(attrs),length=keys.length;
if(object == null)return !length;
var obj=Object(object);
for(var i=0;i < length;i++) {
var key=keys[i];
if(attrs[key] !== obj[key] || !(key in obj))return false;}

return true;};




var eq=function(a,b,aStack,bStack){


if(a === b)return a !== 0 || 1 / a === 1 / b;

if(a == null || b == null)return a === b;

if(a instanceof _)a = a._wrapped;
if(b instanceof _)b = b._wrapped;

var className=toString.call(a);
if(className !== toString.call(b))return false;
switch(className){

case '[object RegExp]':

case '[object String]':


return '' + a === '' + b;
case '[object Number]':


if(+a !== +a)return +b !== +b;

return +a === 0?1 / +a === 1 / b:+a === +b;
case '[object Date]':
case '[object Boolean]':



return +a === +b;}


var areArrays=className === '[object Array]';
if(!areArrays){
if(typeof a != 'object' || typeof b != 'object')return false;



var aCtor=a.constructor,bCtor=b.constructor;
if(aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor && 
_.isFunction(bCtor) && bCtor instanceof bCtor) && (
'constructor' in a && 'constructor' in b)){
return false;}}







aStack = aStack || [];
bStack = bStack || [];
var length=aStack.length;
while(length--) {


if(aStack[length] === a)return bStack[length] === b;}



aStack.push(a);
bStack.push(b);


if(areArrays){

length = a.length;
if(length !== b.length)return false;

while(length--) {
if(!eq(a[length],b[length],aStack,bStack))return false;}}else 

{

var keys=_.keys(a),key;
length = keys.length;

if(_.keys(b).length !== length)return false;
while(length--) {

key = keys[length];
if(!(_.has(b,key) && eq(a[key],b[key],aStack,bStack)))return false;}}



aStack.pop();
bStack.pop();
return true;};



_.isEqual = function(a,b){
return eq(a,b);};




_.isEmpty = function(obj){
if(obj == null)return true;
if(isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj)))return obj.length === 0;
return _.keys(obj).length === 0;};



_.isElement = function(obj){
return !!(obj && obj.nodeType === 1);};




_.isArray = nativeIsArray || function(obj){
return toString.call(obj) === '[object Array]';};



_.isObject = function(obj){
var type=typeof obj;
return type === 'function' || type === 'object' && !!obj;};



_.each(['Arguments','Function','String','Number','Date','RegExp','Error'],function(name){
_['is' + name] = function(obj){
return toString.call(obj) === '[object ' + name + ']';};});





if(!_.isArguments(arguments)){
_.isArguments = function(obj){
return _.has(obj,'callee');};}





if(typeof /./ != 'function' && typeof Int8Array != 'object'){
_.isFunction = function(obj){
return typeof obj == 'function' || false;};}




_.isFinite = function(obj){
return isFinite(obj) && !isNaN(parseFloat(obj));};



_.isNaN = function(obj){
return _.isNumber(obj) && obj !== +obj;};



_.isBoolean = function(obj){
return obj === true || obj === false || toString.call(obj) === '[object Boolean]';};



_.isNull = function(obj){
return obj === null;};



_.isUndefined = function(obj){
return obj === void 0;};




_.has = function(obj,key){
return obj != null && hasOwnProperty.call(obj,key);};







_.noConflict = function(){
root._ = previousUnderscore;
return this;};



_.identity = function(value){
return value;};



_.constant = function(value){
return function(){
return value;};};



_.noop = function(){};

_.property = property;


_.propertyOf = function(obj){
return obj == null?function(){}:function(key){
return obj[key];};};





_.matcher = _.matches = function(attrs){
attrs = _.extendOwn({},attrs);
return function(obj){
return _.isMatch(obj,attrs);};};




_.times = function(n,iteratee,context){
var accum=Array(Math.max(0,n));
iteratee = optimizeCb(iteratee,context,1);
for(var i=0;i < n;i++) accum[i] = iteratee(i);
return accum;};



_.random = function(min,max){
if(max == null){
max = min;
min = 0;}

return min + Math.floor(Math.random() * (max - min + 1));};



_.now = Date.now || function(){
return new Date().getTime();};



var escapeMap={
'&':'&amp;',
'<':'&lt;',
'>':'&gt;',
'"':'&quot;',
"'":'&#x27;',
'`':'&#x60;'};

var unescapeMap=_.invert(escapeMap);


var createEscaper=function(map){
var escaper=function(match){
return map[match];};


var source='(?:' + _.keys(map).join('|') + ')';
var testRegexp=RegExp(source);
var replaceRegexp=RegExp(source,'g');
return function(string){
string = string == null?'':'' + string;
return testRegexp.test(string)?string.replace(replaceRegexp,escaper):string;};};


_.escape = createEscaper(escapeMap);
_.unescape = createEscaper(unescapeMap);



_.result = function(object,property,fallback){
var value=object == null?void 0:object[property];
if(value === void 0){
value = fallback;}

return _.isFunction(value)?value.call(object):value;};




var idCounter=0;
_.uniqueId = function(prefix){
var id=++idCounter + '';
return prefix?prefix + id:id;};




_.templateSettings = {
evaluate:/<%([\s\S]+?)%>/g,
interpolate:/<%=([\s\S]+?)%>/g,
escape:/<%-([\s\S]+?)%>/g};





var noMatch=/(.)^/;



var escapes={
"'":"'",
'\\':'\\',
'\r':'r',
'\n':'n',
'\u2028':'u2028',
'\u2029':'u2029'};


var escaper=/\\|'|\r|\n|\u2028|\u2029/g;

var escapeChar=function(match){
return '\\' + escapes[match];};






_.template = function(text,settings,oldSettings){
if(!settings && oldSettings)settings = oldSettings;
settings = _.defaults({},settings,_.templateSettings);


var matcher=RegExp([
(settings.escape || noMatch).source,
(settings.interpolate || noMatch).source,
(settings.evaluate || noMatch).source].
join('|') + '|$','g');


var index=0;
var source="__p+='";
text.replace(matcher,function(match,escape,interpolate,evaluate,offset){
source += text.slice(index,offset).replace(escaper,escapeChar);
index = offset + match.length;

if(escape){
source += "'+\n((__t=(" + escape + "))==null?'':_.escape(__t))+\n'";}else 
if(interpolate){
source += "'+\n((__t=(" + interpolate + "))==null?'':__t)+\n'";}else 
if(evaluate){
source += "';\n" + evaluate + "\n__p+='";}



return match;});

source += "';\n";


if(!settings.variable)source = 'with(obj||{}){\n' + source + '}\n';

source = "var __t,__p='',__j=Array.prototype.join," + 
"print=function(){__p+=__j.call(arguments,'');};\n" + 
source + 'return __p;\n';

try{
var render=new Function(settings.variable || 'obj','_',source);}
catch(e) {
e.source = source;
throw e;}


var template=function(data){
return render.call(this,data,_);};



var argument=settings.variable || 'obj';
template.source = 'function(' + argument + '){\n' + source + '}';

return template;};



_.chain = function(obj){
var instance=_(obj);
instance._chain = true;
return instance;};









var result=function(instance,obj){
return instance._chain?_(obj).chain():obj;};



_.mixin = function(obj){
_.each(_.functions(obj),function(name){
var func=_[name] = obj[name];
_.prototype[name] = function(){
var args=[this._wrapped];
push.apply(args,arguments);
return result(this,func.apply(_,args));};});};





_.mixin(_);


_.each(['pop','push','reverse','shift','sort','splice','unshift'],function(name){
var method=ArrayProto[name];
_.prototype[name] = function(){
var obj=this._wrapped;
method.apply(obj,arguments);
if((name === 'shift' || name === 'splice') && obj.length === 0)delete obj[0];
return result(this,obj);};});




_.each(['concat','join','slice'],function(name){
var method=ArrayProto[name];
_.prototype[name] = function(){
return result(this,method.apply(this._wrapped,arguments));};});




_.prototype.value = function(){
return this._wrapped;};




_.prototype.valueOf = _.prototype.toJSON = _.prototype.value;

_.prototype.toString = function(){
return '' + this._wrapped;};









if(typeof define === 'function' && define.amd){
define('underscore',[],function(){
return _;});}}).


call(this);
});
__d('plainX/components/cards/Header.js',["react-native/Libraries/react-native/react-native.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

View=

React.View;var Text=React.Text;

var Header=React.createClass({
displayName:"HeaderCard",
render:function(){
return (
React.createElement(View,{style:{flexDirection:'column'}},
React.createElement(Text,{style:this.props.cardCommonStyles.titles},
this.props.data["TitleText"]),

this.props.data["DescriptionText"]?
React.createElement(Text,{style:[this.props.cardCommonStyles.description,{fontSize:12,marginTop:10}]},
this.props.data["DescriptionText"]):
null));}});





module.exports = Header;
});
__d('plainX/components/cards/Empty.js',["react-native/Libraries/react-native/react-native.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

Text=
React.Text;

var Empty=React.createClass({
displayName:"EmptyCard",
render:function(){
return (
React.createElement(Text,{style:this.props.cardCommonStyles.description},
this.props.data["Text"]));}});





module.exports = Empty;
});
__d('plainX/components/cards/Error.js',["react-native/Libraries/react-native/react-native.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

Text=
React.Text;

var Error=React.createClass({
displayName:"ErrorCard",
render:function(){
return (
React.createElement(Text,{style:this.props.cardCommonStyles.description},
this.props.data?
this.props.data["Text"]:
"Opps, this is embrassing. Something went wrong :("));}});





module.exports = Error;
});
__d('plainX/components/cards/TodaysRateOffer.js',["image!dollaricon","react-native/Libraries/react-native/react-native.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 


Text=



React.Text;var View=React.View;var Image=React.Image;var StyleSheet=React.StyleSheet;

var TodaysRateOffer=React.createClass({
displayName:"TodaysRateOfferCard",
render:function(){
return (
React.createElement(View,{style:styles.container},
React.createElement(Image,{style:styles.icon,source:require('image!dollaricon')}),
this.props.data["TodaysRate"]?
React.createElement(View,{style:styles.textContainer},
React.createElement(Text,{style:[this.props.cardCommonStyles.offerTitle,styles.center]},this.props.data["TodaysRateDescription"]),
React.createElement(Text,{style:this.props.cardCommonStyles.offerOptions},this.props.data["TodaysRate"])):

null,
this.props.data["OffersRate"]?
React.createElement(View,{style:styles.textContainer},
React.createElement(Text,{style:this.props.cardCommonStyles.offerTitle},this.props.data["OffersRateDescription"]),
React.createElement(Text,{style:this.props.cardCommonStyles.offerOptions},this.props.data["OffersRate"])):

null,
this.props.data["OfferVsRate"]?
React.createElement(View,{style:styles.textContainer},
React.createElement(Text,{style:this.props.cardCommonStyles.offerTitle},this.props.data["OfferVsRateDescription"]),
React.createElement(Text,{style:[this.props.cardCommonStyles.offerOptions,this.props.data["OfferVsRate"] > 0?{color:'#33cc66'}:null]},
this.props.data["OfferVsRate"])):

null));}});





var styles=StyleSheet.create({
container:{
flexDirection:'column',
alignItems:'center'},

icon:{
width:25,height:25,
resizeMode:'contain'},

textContainer:{
alignItems:'center',
marginTop:10}});



module.exports = TodaysRateOffer;
});
__d('image!dollaricon',[],function(global, require, module, exports) {  module.exports = {"__packager_asset":true,"isStatic":true,"path":"/Users/parkjiho/Documents/react-native-projects/plainX/ios/plainX/Images.xcassets/dollaricon.imageset/dollaricon.png","uri":"dollaricon","width":46,"height":46,"deprecated":true};
});
__d('plainX/components/cards/IconExplanation.js',["react-native/Libraries/react-native/react-native.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

View=



React.View;var Text=React.Text;var Image=React.Image;var StyleSheet=React.StyleSheet;

var Explanation=React.createClass({
displayName:"IconExplanationCard",
render:function(){
return (
React.createElement(View,{style:styles.container},
this.props.data["Icon"]?
React.createElement(Image,{style:styles.icon,source:{uri:this.props.data["Icon"]}}):
null,
React.createElement(Text,{style:[this.props.cardCommonStyles.headings,styles.text]},
this.props.data["Text"])));}});





var styles=StyleSheet.create({
container:{
flexDirection:'column',
alignItems:'center',
paddingTop:10,
paddingBottom:10},

icon:{
width:50,height:50,
marginBottom:15},

text:{
textAlign:'center'}});


module.exports = Explanation;
});
__d('react-native-invertible-scroll-view/InvertibleScrollView.js',["react-native/Libraries/react-native/react-native.js","react-native-scrollable-mixin/ScrollableMixin.js","react-native-clone-referenced-element/cloneReferencedElement.js"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};function _objectWithoutProperties(obj,keys){var target={};for(var i in obj) {if(keys.indexOf(i) >= 0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i] = obj[i];}return target;}

var React=require('react-native/Libraries/react-native/react-native.js');var 

PropTypes=



React.PropTypes;var ScrollView=React.ScrollView;var StyleSheet=React.StyleSheet;var View=React.View;
var ScrollableMixin=require('react-native-scrollable-mixin/ScrollableMixin.js');

var cloneReferencedElement=require('react-native-clone-referenced-element/cloneReferencedElement.js');





var InvertibleScrollView=React.createClass({displayName:'InvertibleScrollView',
mixins:[ScrollableMixin],

propTypes:_extends({},
ScrollView.propTypes,{
inverted:PropTypes.bool,
renderScrollComponent:PropTypes.func.isRequired}),


getDefaultProps:function(){
return {
renderScrollComponent:function(props){return React.createElement(ScrollView,props);}};},



getScrollResponder:function(){
return this._scrollComponent.getScrollResponder();},


setNativeProps:function(props){
this._scrollComponent.setNativeProps(props);},


render:function(){var _this=this;var _props=




this.props;var inverted=_props.inverted;var renderScrollComponent=_props.renderScrollComponent;var props=_objectWithoutProperties(_props,['inverted','renderScrollComponent']);

if(inverted){
if(this.props.horizontal){
props.style = [styles.horizontallyInverted,props.style];
props.children = this._renderInvertedChildren(props.children,styles.horizontallyInverted);}else 
{
props.style = [styles.verticallyInverted,props.style];
props.children = this._renderInvertedChildren(props.children,styles.verticallyInverted);}}



return cloneReferencedElement(renderScrollComponent(props),{
ref:function(component){_this._scrollComponent = component;}});},



_renderInvertedChildren:function(children,inversionStyle){
return React.Children.map(children,function(child){
return child?React.createElement(View,{style:inversionStyle},child):child;});}});




var styles=StyleSheet.create({
verticallyInverted:{
transform:[
{scaleY:-1}]},


horizontallyInverted:{
transform:[
{scaleX:-1}]}});




module.exports = InvertibleScrollView;
});
__d('react-native-scrollable-mixin/ScrollableMixin.js',[],function(global, require, module, exports) {  var ScrollableMixin={
getInnerViewNode:function(){
return this.getScrollResponder().getInnerViewNode();},


scrollTo:function(destY,destX){
this.getScrollResponder().scrollTo(destY,destX);},


scrollWithoutAnimationTo:function(destY,destX){
this.getScrollResponder().scrollWithoutAnimationTo(destY,destX);}};



module.exports = ScrollableMixin;
});
__d('react-native-clone-referenced-element/cloneReferencedElement.js',["react-native/Libraries/react-native/react-native.js"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};

var React=require('react-native/Libraries/react-native/react-native.js');

function cloneReferencedElement(element,config){
var cloneRef=config.ref;
var originalRef=element.ref;for(var _len=arguments.length,children=Array(_len > 2?_len - 2:0),_key=2;_key < _len;_key++) {children[_key - 2] = arguments[_key];}
if(originalRef == null || cloneRef == null){
return React.cloneElement.apply(React,[element,config].concat(children));}


if(typeof originalRef !== 'function'){
if(__DEV__){
console.warn(
'Cloning an element with a ref that will be overwritten because it ' + 
'is not a function. Use a composable callback-style ref instead. ' + 
'Ignoring ref: ' + originalRef);}


return React.cloneElement.apply(React,[element,config].concat(children));}


return React.cloneElement.apply(React,[element,_extends({},
config,{
ref:function(component){
cloneRef(component);
originalRef(component);}})].concat(

children));}


module.exports = cloneReferencedElement;
});
__d('plainX/components/screens/componentMixins/ScreenMixin.js',["react-native/Libraries/react-native/react-native.js","react-addons-update/index.js","plainX/components/LoadingView.js","react-native-rest-kit/index.js"],function(global, require, module, exports) {  'use strict';function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else {obj[key] = value;}return obj;}

var React=require('react-native/Libraries/react-native/react-native.js');
var update=require('react-addons-update/index.js');
var LoadingView=require('plainX/components/LoadingView.js');
var RestKit=require('react-native-rest-kit/index.js');var 


View=


React.View;var AsyncStorage=React.AsyncStorage;var StyleSheet=React.StyleSheet;



var ScreenMixin={
screenCommonStyle:
StyleSheet.create({
container:{
paddingTop:45,
flex:1}}),


propTypes:{
leftNavBarButton:React.PropTypes.object.isRequired,
rightNavBarButton:React.PropTypes.object.isRequired,
routes:React.PropTypes.object.isRequired,
pushScreen:React.PropTypes.func.isRequired},

loadMore:function(){
if(this.state.data["HasNext"]){
console.log("Fetch Data " + (this.state.data["Page"] + 1));
this.fetchData(this.loginToken,this.state.data["Page"] + 1);}},


mutateCardStateData:function(data,id,key,value){
var cards=data["Cards"];
for(var i=0,numCards=cards.length;i < numCards;i++) {
if(cards[i]["UUID"] == id){
return update(data,{"Cards":_defineProperty({},i,{"Data":_defineProperty({},key,{$set:value})})});}}},



getCardDataState:function(id){
var cards=this.state.data["Cards"];
for(var i=0,numCards=cards.length;i < numCards;i++) {
if(cards[i]["UUID"] == id){
return cards[i]["UUID"];}}},



loginToken:null,
loadTokenIfAny:function callee$0$0(){var 


value;return regeneratorRuntime.async(function callee$0$0$(context$1$0){while(1) switch(context$1$0.prev = context$1$0.next){case 0:if(!this.loginToken){context$1$0.next = 2;break;}return context$1$0.abrupt('return',this.loginToken);case 2:context$1$0.prev = 2;context$1$0.next = 5;return regeneratorRuntime.awrap(AsyncStorage.getItem("SESSION"));case 5:value = context$1$0.sent;
console.log("User Is Logged In");
this.loginToken = value;return context$1$0.abrupt('return',
value);case 11:context$1$0.prev = 11;context$1$0.t0 = context$1$0['catch'](2);

console.log("Error Retreving LoginToken");return context$1$0.abrupt('return',
null);case 15:case 'end':return context$1$0.stop();}},null,this,[[2,11]]);},


componentDidMount:function(){
this.loadScreen();},

componentWillUnmount:function(){var _this=this;
this.loadTokenIfAny().then(function(value){
_this.props.updateInfo(value);});},


loadScreen:function(){var _this2=this;
var enablePagination=this.props.enablePagination;
this.loadTokenIfAny().then(function(value){
_this2.props.updateInfo(value);
console.log("PAGINATION");
console.log(_this2.props.enablePagination);
_this2.fetchData(value,_this2.props.enablePagination?1:0);}).
done();},

render:function(){
if(this.state.data){
return this.renderScreen();}else 

{
return React.createElement(LoadingView,null);}},


checkEndPointInParams:function(){
var params=this.getStringToParams(this.props.params);
console.log(this.props.params);
if(params["endPoint"])
return params["endPoint"];
return null;},

fetchData:function(token,page){
var endPoint=this.endPoint || this.checkEndPointInParams();
if(endPoint){
this.props.setNetworkActivityIndicator(true);
var url=this.props.api_domain + endPoint + "?" + this.props.params + "&Page=" + page;
console.log(url);

var request=token?
{
method:'get',
headers:{'X-Session':token}}:
{method:'get'};

RestKit.send(url,request,page <= 1?this.handleInitialRequest:this.handleAddMoreRequest);}},



handleInitialRequest:function(error,json){
this.props.setNetworkActivityIndicator(false);
if(error){
console.log("ERROR");
console.log(error.status);
if(error.status == 500 || error.status == 400 || error.status == 404){
console.log(error);
var text=JSON.parse(error.body)["Error"];
this.setState({data:{"Page":0,"HasNext":false,
"Cards":[{"UUID":"1","Name":"Error","Merged":"","Data":{"Text":text}}]}});}else 

if(error.status == 401){
this.props.replaceScreen({uri:this.props.routes.addRoute('login')});}

return;}

if(json == undefined)
return;


console.log(json);
this.setState({
data:json});},


handleAddMoreRequest:function(error,json){
this.props.setNetworkActivityIndicator(false);
if(error){
console.log(error);
if(error.status == 500){}else 



if(error.status == 400){}


return;}


if(json == undefined)
return;
if(this.state.data != null && this.state.data["Page"] < json["Page"]){
console.log(json);
var data=update(this.state.data,{"Cards":{$push:json["Cards"]}});
data = update(data,{"HasNext":{$set:json["HasNext"]}});
data = update(data,{"Page":{$set:json["Page"]}});

this.setState({
data:data});}},



isNumeric:function(n){
return !isNaN(parseFloat(n)) && isFinite(n);},

parseNumber:function(s){
return s.indexOf('.') == -1?parseInt(s):parseFloat(s);},

getParamsToString:function(params){
var s="";
var keys=Object.keys(params);
for(var i=0,length=keys.length;i < length;i++) {
if(this.isNumeric(params[keys[i]])){
s += keys[i] + "=" + params[keys[i]] + "&";}else 

{
s += keys[i] + "=" + params[keys[i]] + "&";}}


return s;},

getStringToParams:function(queryString){
var params={};
var paramStrings=queryString.split("&");
for(var i=0;i < paramStrings.length;i++) {
var split=paramStrings[i].split("=");
params[split[0]] = this.isNumeric(split[1])?this.parseNumber(split[1] + ""):split[1];}

return params;}};



module.exports = ScreenMixin;
});
__d('react-addons-update/index.js',["update"],function(global, require, module, exports) {  module.exports = require('update');
});
__d('update',["Object.assign","keyOf","invariant"],function(global, require, module, exports) {  'use strict';














var assign=require('Object.assign');
var keyOf=require('keyOf');
var invariant=require('invariant');
var hasOwnProperty=({}).hasOwnProperty;

function shallowCopy(x){
if(Array.isArray(x)){
return x.concat();}else 
if(x && typeof x === 'object'){
return assign(new x.constructor(),x);}else 
{
return x;}}



var COMMAND_PUSH=keyOf({$push:null});
var COMMAND_UNSHIFT=keyOf({$unshift:null});
var COMMAND_SPLICE=keyOf({$splice:null});
var COMMAND_SET=keyOf({$set:null});
var COMMAND_MERGE=keyOf({$merge:null});
var COMMAND_APPLY=keyOf({$apply:null});

var ALL_COMMANDS_LIST=[COMMAND_PUSH,COMMAND_UNSHIFT,COMMAND_SPLICE,COMMAND_SET,COMMAND_MERGE,COMMAND_APPLY];

var ALL_COMMANDS_SET={};

ALL_COMMANDS_LIST.forEach(function(command){
ALL_COMMANDS_SET[command] = true;});


function invariantArrayCase(value,spec,command){
!Array.isArray(value)?process.env.NODE_ENV !== 'production'?invariant(false,'update(): expected target of %s to be an array; got %s.',command,value):invariant(false):undefined;
var specValue=spec[command];
!Array.isArray(specValue)?process.env.NODE_ENV !== 'production'?invariant(false,'update(): expected spec of %s to be an array; got %s. ' + 'Did you forget to wrap your parameter in an array?',command,specValue):invariant(false):undefined;}


function update(value,spec){
!(typeof spec === 'object')?process.env.NODE_ENV !== 'production'?invariant(false,'update(): You provided a key path to update() that did not contain one ' + 'of %s. Did you forget to include {%s: ...}?',ALL_COMMANDS_LIST.join(', '),COMMAND_SET):invariant(false):undefined;

if(hasOwnProperty.call(spec,COMMAND_SET)){
!(Object.keys(spec).length === 1)?process.env.NODE_ENV !== 'production'?invariant(false,'Cannot have more than one key in an object with %s',COMMAND_SET):invariant(false):undefined;

return spec[COMMAND_SET];}


var nextValue=shallowCopy(value);

if(hasOwnProperty.call(spec,COMMAND_MERGE)){
var mergeObj=spec[COMMAND_MERGE];
!(mergeObj && typeof mergeObj === 'object')?process.env.NODE_ENV !== 'production'?invariant(false,'update(): %s expects a spec of type \'object\'; got %s',COMMAND_MERGE,mergeObj):invariant(false):undefined;
!(nextValue && typeof nextValue === 'object')?process.env.NODE_ENV !== 'production'?invariant(false,'update(): %s expects a target of type \'object\'; got %s',COMMAND_MERGE,nextValue):invariant(false):undefined;
assign(nextValue,spec[COMMAND_MERGE]);}


if(hasOwnProperty.call(spec,COMMAND_PUSH)){
invariantArrayCase(value,spec,COMMAND_PUSH);
spec[COMMAND_PUSH].forEach(function(item){
nextValue.push(item);});}



if(hasOwnProperty.call(spec,COMMAND_UNSHIFT)){
invariantArrayCase(value,spec,COMMAND_UNSHIFT);
spec[COMMAND_UNSHIFT].forEach(function(item){
nextValue.unshift(item);});}



if(hasOwnProperty.call(spec,COMMAND_SPLICE)){
!Array.isArray(value)?process.env.NODE_ENV !== 'production'?invariant(false,'Expected %s target to be an array; got %s',COMMAND_SPLICE,value):invariant(false):undefined;
!Array.isArray(spec[COMMAND_SPLICE])?process.env.NODE_ENV !== 'production'?invariant(false,'update(): expected spec of %s to be an array of arrays; got %s. ' + 'Did you forget to wrap your parameters in an array?',COMMAND_SPLICE,spec[COMMAND_SPLICE]):invariant(false):undefined;
spec[COMMAND_SPLICE].forEach(function(args){
!Array.isArray(args)?process.env.NODE_ENV !== 'production'?invariant(false,'update(): expected spec of %s to be an array of arrays; got %s. ' + 'Did you forget to wrap your parameters in an array?',COMMAND_SPLICE,spec[COMMAND_SPLICE]):invariant(false):undefined;
nextValue.splice.apply(nextValue,args);});}



if(hasOwnProperty.call(spec,COMMAND_APPLY)){
!(typeof spec[COMMAND_APPLY] === 'function')?process.env.NODE_ENV !== 'production'?invariant(false,'update(): expected spec of %s to be a function; got %s.',COMMAND_APPLY,spec[COMMAND_APPLY]):invariant(false):undefined;
nextValue = spec[COMMAND_APPLY](nextValue);}


for(var k in spec) {
if(!(ALL_COMMANDS_SET.hasOwnProperty(k) && ALL_COMMANDS_SET[k])){
nextValue[k] = update(value[k],spec[k]);}}



return nextValue;}


module.exports = update;
});
__d('Object.assign',[],function(global, require, module, exports) {  'use strict';














function assign(target,sources){
if(target == null){
throw new TypeError('Object.assign target cannot be null or undefined');}


var to=Object(target);
var hasOwnProperty=Object.prototype.hasOwnProperty;

for(var nextIndex=1;nextIndex < arguments.length;nextIndex++) {
var nextSource=arguments[nextIndex];
if(nextSource == null){
continue;}


var from=Object(nextSource);






for(var key in from) {
if(hasOwnProperty.call(from,key)){
to[key] = from[key];}}}




return to;}


module.exports = assign;
});
__d('keyOf',[],function(global, require, module, exports) {  "use strict";






















var keyOf=function(oneKeyObj){
var key;
for(key in oneKeyObj) {
if(!oneKeyObj.hasOwnProperty(key)){
continue;}

return key;}

return null;};


module.exports = keyOf;
});
__d('invariant',[],function(global, require, module, exports) {  'use strict';























var invariant=function(condition,format,a,b,c,d,e,f){
if(process.env.NODE_ENV !== 'production'){
if(format === undefined){
throw new Error('invariant requires an error message argument');}}



if(!condition){
var error;
if(format === undefined){
error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');}else 
{
var args=[a,b,c,d,e,f];
var argIndex=0;
error = new Error('Invariant Violation: ' + format.replace(/%s/g,function(){
return args[argIndex++];}));}



error.framesToPop = 1;
throw error;}};



module.exports = invariant;
});
__d('plainX/components/LoadingView.js',["react-native/Libraries/react-native/react-native.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

Text=



React.Text;var View=React.View;var ActivityIndicatorIOS=React.ActivityIndicatorIOS;var Platform=React.Platform;

var LoadingView=React.createClass({
displayName:'LoadingView',
render:function(){
return (
React.createElement(View,{style:{flex:1,alignItems:'center',justifyContent:'center'}},
Platform.OS === 'ios'?
React.createElement(ActivityIndicatorIOS,{size:'small',color:'#33cc66'}):

React.createElement(Text,null,'Loading...')));}});






module.exports = LoadingView;
});
__d('plainX/components/screens/MainScreen.js',["react-native/Libraries/react-native/react-native.js","plainX/components/screens/Routes.js","plainX/components/screens/componentMixins/ScreenMixin.js","plainX/components/screens/cardMixins/CurrencySelectCardMixin.js","plainX/components/screens/cardMixins/OfferCardMixin.js","plainX/components/screens/componentMixins/MenuButtonMixin.js","plainX/components/PlainListView.js","plainX/components/TutorialPager.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

View=





React.View;var Text=React.Text;var StyleSheet=React.StyleSheet;var TouchableOpacity=React.TouchableOpacity;var Platform=React.Platform;var AsyncStorage=React.AsyncStorage;

var Routes=require('plainX/components/screens/Routes.js');
var ScreenMixin=require('plainX/components/screens/componentMixins/ScreenMixin.js');
var CurrencySelectCardMixin=require('plainX/components/screens/cardMixins/CurrencySelectCardMixin.js');
var OfferCardMixin=require('plainX/components/screens/cardMixins/OfferCardMixin.js');
var MenuButtonMixin=require('plainX/components/screens/componentMixins/MenuButtonMixin.js');

var TutorialPager=require('plainX/components/TutorialPager.js');
var PlainListView=require('plainX/components/PlainListView.js');

var MainScreen=React.createClass({
mixins:[ScreenMixin,CurrencySelectCardMixin,OfferCardMixin,MenuButtonMixin],
displayName:"MainScreen",
endPoint:"main",
getInitialState:function(){
return {
data:null,
showTutorial:false};},


checkIfFirstExec:function callee$0$0(){var 

keys;return regeneratorRuntime.async(function callee$0$0$(context$1$0){while(1) switch(context$1$0.prev = context$1$0.next){case 0:context$1$0.prev = 0;context$1$0.next = 3;return regeneratorRuntime.awrap(AsyncStorage.getAllKeys());case 3:keys = context$1$0.sent;if(!(
keys.indexOf("FIRST_LOGIN") == -1)){context$1$0.next = 10;break;}context$1$0.next = 7;return regeneratorRuntime.awrap(
AsyncStorage.setItem("FIRST_LOGIN","false"));case 7:return context$1$0.abrupt('return',
true);case 10:return context$1$0.abrupt('return',


false);case 11:context$1$0.next = 17;break;case 13:context$1$0.prev = 13;context$1$0.t0 = context$1$0['catch'](0);

console.log("Error Retreving checkIfFirstLogin");return context$1$0.abrupt('return',
false);case 17:case 'end':return context$1$0.stop();}},null,this,[[0,13]]);},


shouldComponentUpdate:function(nextProps,nextState){var _this=this;
if(nextState["data"] && nextState["showTutorial"] == false){
this.checkIfFirstExec().then(function(isFirstExec){
if(isFirstExec){
_this.setState({showTutorial:true});}}).

done();}

return true;},

pushConversationsScreen:function(event){
this.props.pushScreen({uri:this.props.routes.addRoute('conversations')});},

closeTutorial:function(){
this.setState({showTutorial:false});},

renderScreen:function(){
this.props.leftNavBarButtonSubject.subscribe(this.toggleSideMenu);
this.props.rightNavBarButtonSubject.subscribe(this.pushConversationsScreen);

var cardObservers={};
cardObservers["CurrencySelect"] = this.currencySelectCardOnNext;
cardObservers["Offer"] = this.offerCardonNext;

var listView=
React.createElement(PlainListView,{
cardObservers:cardObservers,
cards:this.state.data["Cards"]});

return (
React.createElement(View,{style:this.screenCommonStyle.container},
this.state.data["Meta"] && this.state.data["Meta"]["tutorialUrls"] && this.state.showTutorial?
React.createElement(TutorialPager,{
closeTutorial:this.closeTutorial,
urls:this.state.data["Meta"]["tutorialUrls"]}):
listView));}});





module.exports = MainScreen;
});
__d('plainX/components/screens/cardMixins/CurrencySelectCardMixin.js',[],function(global, require, module, exports) {  'use strict';

var CurrencySelectMixin={
currencySelectCardOnNext:function(event){

switch(event["Target"]){
case "Button":
var params={"Sell":event["Sell"],"Buy":event["Buy"]};
this.props.pushScreen({uri:this.props.routes.addRoute('offerlist?' + this.getParamsToString(params))});
break;
case "Buy":
case "Sell":
this.setState({data:this.mutateCardStateData(this.state.data,event["id"],event["Target"],event[event["Target"]])});
break;}}};




module.exports = CurrencySelectMixin;
});
__d('plainX/components/screens/cardMixins/OfferCardMixin.js',[],function(global, require, module, exports) {  'use strict';

var OfferCardMixin={
offerCardonNext:function(event){
this.props.pushScreen({uri:this.props.routes.addRoute('offerDetail?' + this.getParamsToString({"Id":event["Id"]}))});}};



module.exports = OfferCardMixin;
});
__d('plainX/components/screens/componentMixins/MenuButtonMixin.js',["react-native/Libraries/react-native/react-native.js"],function(global, require, module, exports) {  'use strict';


var React=require('react-native/Libraries/react-native/react-native.js');

var MenuButtonMixin={
toggleSideMenu:function(event){
console.log("TOGGLE FROM MaIN");
this.context.menuActions.toggle();},

contextTypes:{
menuActions:React.PropTypes.object.isRequired}};



module.exports = MenuButtonMixin;
});
__d('plainX/components/TutorialPager.js',["image!cross","react-native/Libraries/react-native/react-native.js","react-native-viewpager/ViewPager.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');

var ViewPager=require('react-native-viewpager/ViewPager.js');var 


View=



React.View;var Text=React.Text;var Image=React.Image;var TouchableOpacity=React.TouchableOpacity;

var TutorialPager=React.createClass({
displayName:"TutorialPager",
getInitialState:function(){
var dataSource=new ViewPager.DataSource({
pageHasChanged:function(p1,p2){return p1 !== p2;}});

return {
dataSource:dataSource.cloneWithPages(this.props.urls)};},


renderPage:function(data,pageID){
console.log(data);
return (
React.createElement(Image,{
style:{flex:1},
resizeMode:'stretch',
source:{uri:data}}));},


render:function(){
return (
React.createElement(View,{style:{flex:1,flexDirection:'column'}},
React.createElement(View,{style:{backgroundColor:'white'}},
React.createElement(TouchableOpacity,{onPress:this.props.closeTutorial},
React.createElement(Image,{
source:require('image!cross'),
style:{alignSelf:'flex-end',width:20,height:20,marginRight:10,marginTop:10,marginBottom:5}}))),


React.createElement(ViewPager,{
dataSource:this.state.dataSource,
renderPage:this.renderPage})));}});





module.exports = TutorialPager;
});
__d('react-native-viewpager/ViewPager.js',["react-native/Libraries/react-native/react-native.js","StaticRenderer","react-timer-mixin/TimerMixin.js","react-native-viewpager/DefaultViewPageIndicator.js","react-native-viewpager/ViewPagerDataSource.js"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};

var React=require('react-native/Libraries/react-native/react-native.js');var 

Dimensions=







React.Dimensions;var Text=React.Text;var View=React.View;var TouchableOpacity=React.TouchableOpacity;var PanResponder=React.PanResponder;var Animated=React.Animated;var PropTypes=React.PropTypes;var StyleSheet=React.StyleSheet;

var StaticRenderer=require('StaticRenderer');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');

var DefaultViewPageIndicator=require('react-native-viewpager/DefaultViewPageIndicator.js');
var deviceWidth=Dimensions.get('window').width;
var ViewPagerDataSource=require('react-native-viewpager/ViewPagerDataSource.js');

var ViewPager=React.createClass({displayName:'ViewPager',
mixins:[TimerMixin],

statics:{
DataSource:ViewPagerDataSource},


propTypes:_extends({},
View.propTypes,{
dataSource:PropTypes.instanceOf(ViewPagerDataSource).isRequired,
renderPage:PropTypes.func.isRequired,
onChangePage:PropTypes.func,
renderPageIndicator:React.PropTypes.oneOfType([
PropTypes.func,
PropTypes.bool]),

isLoop:PropTypes.bool,
locked:PropTypes.bool,
autoPlay:PropTypes.bool}),


getDefaultProps:function(){
return {
isLoop:false,
locked:false};},



getInitialState:function(){
return {
currentPage:0,
viewWidth:0,
childIndex:0,
scrollValue:new Animated.Value(0)};},



componentWillMount:function(){var _this=this;
var release=function(e,gestureState){
var relativeGestureDistance=gestureState.dx / deviceWidth,

vx=gestureState.vx;

var step=0;
if(relativeGestureDistance < -0.5 || relativeGestureDistance < 0 && vx <= 0.5){
step = 1;}else 
if(relativeGestureDistance > 0.5 || relativeGestureDistance > 0 && vx >= 0.5){
step = -1;}


_this.props.hasTouch && _this.props.hasTouch(false);

_this.movePage(step);};


this._panResponder = PanResponder.create({

onMoveShouldSetPanResponder:function(e,gestureState){
if(Math.abs(gestureState.dx) > Math.abs(gestureState.dy)){
if(

_this.props.locked !== true && !_this.state.fling){
_this.props.hasTouch && _this.props.hasTouch(true);
return true;}}},





onPanResponderRelease:release,
onPanResponderTerminate:release,


onPanResponderMove:function(e,gestureState){
var dx=gestureState.dx;
var offsetX=-dx / _this.state.viewWidth + _this.state.childIndex;
_this.state.scrollValue.setValue(offsetX);}});



if(this.props.isLoop){
this.state.childIndex = 1;
this.state.scrollValue.setValue(1);}},



componentDidMount:function(){
if(this.props.autoPlay){
this._startAutoPlay();}},



componentWillReceiveProps:function(nextProps){
if(nextProps.autoPlay){
this._startAutoPlay();}else 
{
if(this._autoPlayer){
this.clearInterval(this._autoPlayer);
this._autoPlayer = null;}}},




_startAutoPlay:function(){var _this2=this;
if(!this._autoPlayer){
this._autoPlayer = this.setInterval(
function(){_this2.movePage(1);},
5000);}},




goToPage:function(pageNumber){

var pageCount=this.props.dataSource.getPageCount();
if(pageNumber < 0 || pageNumber >= pageCount){
console.error('Invalid page number: ',pageNumber);
return;}


var step=pageNumber - this.state.currentPage;
this.movePage(step);},


movePage:function(step){var _this3=this;
var pageCount=this.props.dataSource.getPageCount();
var pageNumber=this.state.currentPage + step;

if(this.props.isLoop){
pageNumber = (pageNumber + pageCount) % pageCount;}else 
{
pageNumber = Math.min(Math.max(0,pageNumber),pageCount - 1);}


var moved=pageNumber !== this.state.currentPage;
var scrollStep=(moved?step:0) + this.state.childIndex;

moved && this.props.onChangePage && this.props.onChangePage(pageNumber);

this.state.fling = true;

var nextChildIdx=0;
if(pageNumber > 0 || this.props.isLoop){
nextChildIdx = 1;}


Animated.spring(this.state.scrollValue,{toValue:scrollStep,friction:10,tension:50}).
start(function(event){
if(event.finished){
_this3.state.fling = false;
_this3.state.childIndex = nextChildIdx;
_this3.state.scrollValue.setValue(nextChildIdx);
_this3.setState({
currentPage:pageNumber});}});},





renderPageIndicator:function(props){
if(this.props.renderPageIndicator === false){
return null;}else 
if(this.props.renderPageIndicator){
return React.cloneElement(this.props.renderPageIndicator(),props);}else 
{
return (
React.createElement(View,{style:styles.indicators},
React.createElement(DefaultViewPageIndicator,props)));}},





_getPage:function(pageIdx){
var dataSource=this.props.dataSource;
var pageID=dataSource.pageIdentities[pageIdx];
return (
React.createElement(StaticRenderer,{
key:'p_' + pageID,
shouldUpdate:true,
render:this.props.renderPage.bind(
null,
dataSource.getPageData(pageIdx),
pageID)}));},





render:function(){var _this4=this;
var dataSource=this.props.dataSource;
var pageIDs=dataSource.pageIdentities;

var bodyComponents=[];

var pagesNum=0;
var hasLeft=false;
var viewWidth=this.state.viewWidth;

if(pageIDs.length > 0 && viewWidth > 0){

if(this.state.currentPage > 0){
bodyComponents.push(this._getPage(this.state.currentPage - 1));
pagesNum++;
hasLeft = true;}else 
if(this.state.currentPage == 0 && this.props.isLoop){
bodyComponents.push(this._getPage(pageIDs.length - 1));
pagesNum++;
hasLeft = true;}



bodyComponents.push(this._getPage(this.state.currentPage));
pagesNum++;


if(this.state.currentPage < pageIDs.length - 1){
bodyComponents.push(this._getPage(this.state.currentPage + 1));
pagesNum++;}else 
if(this.state.currentPage == pageIDs.length - 1 && this.props.isLoop){
bodyComponents.push(this._getPage(0));
pagesNum++;}}



var sceneContainerStyle={
width:viewWidth * pagesNum,
flex:1,
flexDirection:'row'};




var translateX=this.state.scrollValue.interpolate({
inputRange:[0,1],outputRange:[0,-viewWidth]});


return (
React.createElement(View,{style:{flex:1},
onLayout:function(event){

var viewWidth=event.nativeEvent.layout.width;
if(!viewWidth || _this4.state.viewWidth === viewWidth){
return;}

_this4.setState({
currentPage:_this4.state.currentPage,
viewWidth:viewWidth});}},




React.createElement(Animated.View,_extends({style:[sceneContainerStyle,{transform:[{translateX:translateX}]}]},
this._panResponder.panHandlers),
bodyComponents),


this.renderPageIndicator({goToPage:this.goToPage,
pageCount:pageIDs.length,
activePage:this.state.currentPage,
scrollValue:this.state.scrollValue,
scrollOffset:this.state.childIndex})));}});






var styles=StyleSheet.create({
indicators:{
flex:1,
alignItems:'center',
position:'absolute',
bottom:10,
left:0,
right:0,
backgroundColor:'transparent'}});



module.exports = ViewPager;
});
__d('react-timer-mixin/TimerMixin.js',[],function(global, require, module, exports) {  'use strict';










var GLOBAL=typeof window === 'undefined'?global:window;

var setter=function(_setter,_clearer,array){
return function(callback,delta){
var id=_setter((function(){
_clearer.call(this,id);
callback.apply(this,arguments);}).
bind(this),delta);

if(!this[array]){
this[array] = [id];}else 
{
this[array].push(id);}

return id;};};



var clearer=function(_clearer,array){
return function(id){
if(this[array]){
var index=this[array].indexOf(id);
if(index !== -1){
this[array].splice(index,1);}}


_clearer(id);};};



var _timeouts='TimerMixin_timeouts';
var _clearTimeout=clearer(GLOBAL.clearTimeout,_timeouts);
var _setTimeout=setter(GLOBAL.setTimeout,_clearTimeout,_timeouts);

var _intervals='TimerMixin_intervals';
var _clearInterval=clearer(GLOBAL.clearInterval,_intervals);
var _setInterval=setter(GLOBAL.setInterval,function(){},_intervals);

var _immediates='TimerMixin_immediates';
var _clearImmediate=clearer(GLOBAL.clearImmediate,_immediates);
var _setImmediate=setter(GLOBAL.setImmediate,_clearImmediate,_immediates);

var _rafs='TimerMixin_rafs';
var _cancelAnimationFrame=clearer(GLOBAL.cancelAnimationFrame,_rafs);
var _requestAnimationFrame=setter(GLOBAL.requestAnimationFrame,_cancelAnimationFrame,_rafs);

var TimerMixin={
componentWillUnmount:function(){
this[_timeouts] && this[_timeouts].forEach(function(id){
GLOBAL.clearTimeout(id);});

this[_timeouts] = null;
this[_intervals] && this[_intervals].forEach(function(id){
GLOBAL.clearInterval(id);});

this[_intervals] = null;
this[_immediates] && this[_immediates].forEach(function(id){
GLOBAL.clearImmediate(id);});

this[_immediates] = null;
this[_rafs] && this[_rafs].forEach(function(id){
GLOBAL.cancelAnimationFrame(id);});

this[_rafs] = null;},


setTimeout:_setTimeout,
clearTimeout:_clearTimeout,

setInterval:_setInterval,
clearInterval:_clearInterval,

setImmediate:_setImmediate,
clearImmediate:_clearImmediate,

requestAnimationFrame:_requestAnimationFrame,
cancelAnimationFrame:_cancelAnimationFrame};


module.exports = TimerMixin;
});
__d('react-native-viewpager/DefaultViewPageIndicator.js',["react-native/Libraries/react-native/react-native.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

Dimensions=





React.Dimensions;var StyleSheet=React.StyleSheet;var Text=React.Text;var TouchableOpacity=React.TouchableOpacity;var View=React.View;var Animated=React.Animated;

var deviceWidth=Dimensions.get('window').width;
var DOT_SIZE=6;
var DOT_SAPCE=3;

var styles=StyleSheet.create({
tab:{
alignItems:'center'},


tabs:{
flexDirection:'row',
alignItems:'center',
justifyContent:'center'},


dot:{
width:DOT_SIZE,
height:DOT_SIZE,
borderRadius:DOT_SIZE / 2,
backgroundColor:'rgba(100,100,100,0.5)',
marginLeft:DOT_SAPCE,
marginRight:DOT_SAPCE},


curDot:{
position:'absolute',
width:DOT_SIZE,
height:DOT_SIZE,
borderRadius:DOT_SIZE / 2,
backgroundColor:'rgba(250,250,250,0.8)',
margin:DOT_SAPCE,
bottom:0}});



var DefaultViewPageIndicator=React.createClass({displayName:'DefaultViewPageIndicator',
propTypes:{
goToPage:React.PropTypes.func,
activePage:React.PropTypes.number,
pageCount:React.PropTypes.number},


getInitialState:function(){
return {
viewWidth:0};},



renderIndicator:function(page){var _this=this;

return (
React.createElement(TouchableOpacity,{style:styles.tab,key:'idc_' + page,onPress:function(){return _this.props.goToPage(page);}},
React.createElement(View,{style:styles.dot})));},




render:function(){var _this2=this;
var pageCount=this.props.pageCount;
var itemWidth=DOT_SIZE + DOT_SAPCE * 2;
var offset=(this.state.viewWidth - itemWidth * pageCount) / 2 + itemWidth * this.props.activePage;


var offsetX=itemWidth * (this.props.activePage - this.props.scrollOffset);
var left=this.props.scrollValue.interpolate({
inputRange:[0,1],outputRange:[offsetX,offsetX + itemWidth]});


var indicators=[];
for(var i=0;i < pageCount;i++) {
indicators.push(this.renderIndicator(i));}


return (
React.createElement(View,{style:styles.tabs,
onLayout:function(event){
var viewWidth=event.nativeEvent.layout.width;
if(!viewWidth || _this2.state.viewWidth === viewWidth){
return;}

_this2.setState({
viewWidth:viewWidth});}},


indicators,
React.createElement(Animated.View,{style:[styles.curDot,{left:left}]})));}});





module.exports = DefaultViewPageIndicator;
});
__d('react-native-viewpager/ViewPagerDataSource.js',["warning/browser.js"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}

var warning=require('warning/browser.js');

function defaultGetPageData(
dataBlob,
pageID)
{
return dataBlob[pageID];}var 









ViewPagerDataSource=(function(){

function ViewPagerDataSource(params){_classCallCheck(this,ViewPagerDataSource);
this._getPageData = params.getPageData || defaultGetPageData;
this._pageHasChanged = params.pageHasChanged;

this.pageIdentities = [];}_createClass(ViewPagerDataSource,[{key:'cloneWithPages',value:


function cloneWithPages(
dataBlob,
pageIdentities)
{

var newSource=new ViewPagerDataSource({
getPageData:this._getPageData,
pageHasChanged:this._pageHasChanged});


newSource._dataBlob = dataBlob;

if(pageIdentities){
newSource.pageIdentities = pageIdentities;}else 
{
newSource.pageIdentities = Object.keys(dataBlob);}


newSource._cachedPageCount = newSource.pageIdentities.length;
newSource._calculateDirtyPages(
this._dataBlob,
this.pageIdentities);

return newSource;}},{key:'getPageCount',value:


function getPageCount(){
return this._cachedPageCount;}},{key:'pageShouldUpdate',value:





function pageShouldUpdate(pageIndex){
var needsUpdate=this._dirtyPages[pageIndex];
warning(needsUpdate !== undefined,
'missing dirtyBit for section, page: ' + pageIndex);
return needsUpdate;}},{key:'getPageData',value:





function getPageData(pageIndex){
if(!this.getPageData){
return null;}

var pageID=this.pageIdentities[pageIndex];
warning(pageID !== undefined,
'renderPage called on invalid section: ' + pageID);
return this._dataBlob[pageID];}},{key:'_calculateDirtyPages',value:















function _calculateDirtyPages(
prevDataBlob,
prevPageIDs)
{

var prevPagesHash=keyedDictionaryFromArray(prevPageIDs);
this._dirtyPages = [];

var dirty;
for(var sIndex=0;sIndex < this.pageIdentities.length;sIndex++) {
var pageID=this.pageIdentities[sIndex];
dirty = !prevPagesHash[pageID];
var pageHasChanged=this._pageHasChanged;
if(!dirty && pageHasChanged){
dirty = pageHasChanged(
this._getPageData(prevDataBlob,pageID),
this._getPageData(this._dataBlob,pageID));}


this._dirtyPages.push(!!dirty);}}}]);return ViewPagerDataSource;})();





function keyedDictionaryFromArray(arr){
if(arr.length === 0){
return {};}

var result={};
for(var ii=0;ii < arr.length;ii++) {
var key=arr[ii];
warning(!result[key],'Value appears more than once in array: ' + key);
result[key] = true;}

return result;}


module.exports = ViewPagerDataSource;
});
__d('warning/browser.js',[],function(global, require, module, exports) {  'use strict';

















var warning=function(){};

if(process.env.NODE_ENV !== 'production'){
warning = function(condition,format,args){
var len=arguments.length;
args = new Array(len > 2?len - 2:0);
for(var key=2;key < len;key++) {
args[key - 2] = arguments[key];}

if(format === undefined){
throw new Error(
'`warning(condition, format, ...args)` requires a warning ' + 
'message argument');}



if(format.length < 10 || /^[s\W]*$/.test(format)){
throw new Error(
'The warning format should be able to uniquely identify this ' + 
'warning. Please, use a more descriptive format than: ' + format);}



if(!condition){
var argIndex=0;
var message='Warning: ' + 
format.replace(/%s/g,function(){
return args[argIndex++];});

if(typeof console !== 'undefined'){
console.error(message);}

try{


throw new Error(message);}
catch(x) {}}};}




module.exports = warning;
});
__d('plainX/components/screens/OfferListScreen.js',["react-native/Libraries/react-native/react-native.js","plainX/components/PlainListView.js","plainX/components/screens/componentMixins/ScreenMixin.js","plainX/components/screens/cardMixins/OfferCardMixin.js","plainX/components/ActionButton.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 


View=



React.View;var StyleSheet=React.StyleSheet;var Platform=React.Platform;var Text=React.Text;

var PlainListView=require('plainX/components/PlainListView.js');
var ScreenMixin=require('plainX/components/screens/componentMixins/ScreenMixin.js');
var OfferCardMixin=require('plainX/components/screens/cardMixins/OfferCardMixin.js');

var ActionButton=require('plainX/components/ActionButton.js');

var OfferListScreen=React.createClass({
mixins:[ScreenMixin,OfferCardMixin],
displayName:"OfferListScreen",
endPoint:"offer/list",
getInitialState:function(){
return {
showActionButton:true,

data:null};},


onPress:function(){
this.props.pushScreen({uri:this.props.routes.addRoute('makeOffer?' + this.props.params)});},

renderScreen:function(){
var cardObservers={};
cardObservers["Offer"] = this.offerCardonNext;

var listView=React.createElement(PlainListView,{
cardObservers:cardObservers,
cards:this.state.data["Cards"],
onEndReached:this.loadMore});


var makeOfferButton=React.createElement(ActionButton,{
text:"MAKE OFFER",
onPress:this.onPress,
enabled:true});

return (
React.createElement(View,{style:this.screenCommonStyle.container},
listView,
this.state.showActionButton?makeOfferButton:null));}});





module.exports = OfferListScreen;
});
__d('plainX/components/ActionButton.js',["react-native/Libraries/react-native/react-native.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

Text=




React.Text;var TouchableOpacity=React.TouchableOpacity;var StyleSheet=React.StyleSheet;var Platform=React.Platform;var ActivityIndicatorIOS=React.ActivityIndicatorIOS;

var ActionButton=React.createClass({
displayName:'ActionButton',
render:function(){
var bgColor=this.props.backgroundColor || '#33cc66';
return (
React.createElement(TouchableOpacity,{style:[styles.container,{backgroundColor:bgColor}],onPress:this.props.enabled?this.props.onPress:null},
this.props.text == "Loading" && Platform.OS == 'ios'?
React.createElement(ActivityIndicatorIOS,{size:'small',color:'white'}):

React.createElement(Text,{style:styles.actionButton},this.props.text)));}});







var styles=StyleSheet.create({
container:{
overflow:'hidden',
paddingTop:20,
paddingBottom:20,
alignItems:'center'},

actionButton:{
fontSize:20,
color:'white'}});




module.exports = ActionButton;
});
__d('plainX/components/screens/MakeOfferScreen.js',["react-native/Libraries/react-native/react-native.js","plainX/components/PlainListView.js","plainX/components/screens/componentMixins/ScreenMixin.js","plainX/components/screens/cardMixins/CurrencyAmountSelectCardMixin.js","plainX/components/screens/cardMixins/LocationSelectCardMixin.js","plainX/components/screens/cardMixins/ExpirySelectCardMixin.js","plainX/components/ActionButton.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 


View=




React.View;var StyleSheet=React.StyleSheet;var Platform=React.Platform;var Text=React.Text;var ScrollView=React.ScrollView;

var PlainListView=require('plainX/components/PlainListView.js');
var ScreenMixin=require('plainX/components/screens/componentMixins/ScreenMixin.js');
var CurrencyAmountSelectCardMixin=require('plainX/components/screens/cardMixins/CurrencyAmountSelectCardMixin.js');
var LocationSelectCardMixin=require('plainX/components/screens/cardMixins/LocationSelectCardMixin.js');
var ExpirySelectCardMixin=require('plainX/components/screens/cardMixins/ExpirySelectCardMixin.js');

var ActionButton=require('plainX/components/ActionButton.js');

var MakeOfferScreen=React.createClass({
mixins:[ScreenMixin,CurrencyAmountSelectCardMixin,ExpirySelectCardMixin,LocationSelectCardMixin],
displayName:"MakeOfferScreen",
endPoint:'offer/make',
getInitialState:function(){
return {
data:null};},


getRequestParams:function(){
var locationInputValid=false;
var amountInputValid=false;
var currencyInputValid=false;
var params={};

var cards=this.state.data["Cards"];
for(var i=0,numCards=cards.length;i < numCards;i++) {
if(cards[i]["Name"] == "CurrencyAmountSelect"){
currencyInputValid = cards[i]["Data"]["Sell"] != cards[i]["Data"]["Buy"];
amountInputValid = cards[i]["Data"]["AmountSell"] != '' && cards[i]["Data"]["AmountSell"] != '0' && 
cards[i]["Data"]["AmountBuy"] != '' && cards[i]["Data"]["AmountBuy"] != '0';
params["Buy"] = cards[i]["Data"]["Buy"];
params["Sell"] = cards[i]["Data"]["Sell"];
params["AmountSell"] = cards[i]["Data"]["AmountSell"];
params["AmountBuy"] = cards[i]["Data"]["AmountBuy"];}else 

if(cards[i]["Name"] == "LocationSelect"){
for(var location in cards[i]["Data"]["Locations"]) {
if(cards[i]["Data"]["Locations"][location]["IsSelected"]){
locationInputValid = true;
params["Locations"] = params["Locations"] || [];
params["Locations"].push(location);}}}else 



if(cards[i]["Name"] == "ExpirySelect"){
params["Expiry"] = cards[i]["Data"]["Expiry"];}}


return locationInputValid && amountInputValid && currencyInputValid?params:null;},

onPressNextButton:function(){
this.props.pushScreen({uri:this.props.routes.addRoute('offerConfirm?' + this.getParamsToString(this.getRequestParams()))});},

renderScreen:function(){
var cardObservers={};
cardObservers["Offer"] = this.offerCardonNext;
cardObservers["CurrencyAmountSelect"] = this.currencyAmountSelectCardOnNext;
cardObservers["ExpirySelect"] = this.expirySelectCardonNext;
cardObservers["LocationSelect"] = this.locationSelectonNext;

var requestParams=this.getRequestParams();

var listView=React.createElement(PlainListView,{
cardObservers:cardObservers,
cards:this.state.data["Cards"]});

var finishButton=React.createElement(ActionButton,{
text:"NEXT",
onPress:this.onPressNextButton,
enabled:requestParams != null});

return (
React.createElement(ScrollView,{contentContainerStyle:this.screenCommonStyle.container},
listView,
finishButton));}});






module.exports = MakeOfferScreen;
});
__d('plainX/components/screens/cardMixins/CurrencyAmountSelectCardMixin.js',["react-addons-update/index.js"],function(global, require, module, exports) {  'use strict';

var update=require('react-addons-update/index.js');


var CurrencyAmountSelectCardMixin={
roundUpNumber:function(number){
return "" + Math.round(number * 100) / 100;},

getRateFromCurrencyList:function(id){
var cards=this.state.data["Cards"];
for(var i=0,numCards=cards.length;i < numCards;i++) {
if(cards[i]["UUID"] == id){
var sell=cards[i]["Data"]["Sell"];
var buy=cards[i]["Data"]["Buy"];

var rate=1;
var list=cards[i]["Data"]["CurrencyList"];
for(var j=0,numCurr=list.length;j < numCurr;j++) {
if(list[j]["Code"] == sell)
rate *= list[j]["Rate"];else 
if(list[j]["Code"] == buy)
rate /= list[j]["Rate"];}

return rate;}}},



clearAll:function(id){
var data=this.mutateCardStateData(this.state.data,id,"AmountSell",'');
data = this.mutateCardStateData(data,id,"AmountBuy",'');
data = this.mutateCardStateData(data,id,"SellRate",'');
data = this.mutateCardStateData(data,id,"BuyRate",'');
return data;},

currencyAmountSelectCardOnNext:function(event){
var data;
switch(event["Target"]){
case "Next":
console.log("NEXT");
break;
case "AmountSell":
if(!event[event["Target"]]){
data = this.clearAll(event["id"]);}else 

{
var rate=this.getRateFromCurrencyList(event["id"]);
data = this.mutateCardStateData(this.state.data,event["id"],"AmountSell",event[event["Target"]]);
data = this.mutateCardStateData(data,event["id"],"AmountBuy",this.roundUpNumber(event[event["Target"]] / rate));
data = this.mutateCardStateData(data,event["id"],"BuyRate",this.roundUpNumber(1 / rate));
data = this.mutateCardStateData(data,event["id"],"SellRate","");}

this.setState({data:data});
break;
case "AmountBuy":
if(!event[event["Target"]]){
console.log("EMPTY");
data = this.clearAll(event["id"]);}else 

{
var rate=this.getRateFromCurrencyList(event["id"]);
data = this.mutateCardStateData(this.state.data,event["id"],"AmountBuy",event[event["Target"]]);
data = this.mutateCardStateData(data,event["id"],"AmountSell",this.roundUpNumber(event[event["Target"]] * rate));
data = this.mutateCardStateData(data,event["id"],"SellRate",this.roundUpNumber(rate));
data = this.mutateCardStateData(data,event["id"],"BuyRate","");}

this.setState({data:data});
break;
case "PressSell":
case "PressBuy":

data = this.clearAll(event["id"]);
this.setState({data:data});
break;
case "Buy":
case "Sell":
this.setState({data:this.mutateCardStateData(this.state.data,event["id"],event["Target"],event[event["Target"]])});}}};




module.exports = CurrencyAmountSelectCardMixin;
});
__d('plainX/components/screens/cardMixins/LocationSelectCardMixin.js',["react-addons-update/index.js"],function(global, require, module, exports) {  'use strict';function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else {obj[key] = value;}return obj;}

var LocationSelectCardMixin={
locationSelectonNext:function(event){
var update=require('react-addons-update/index.js');

var cards=this.state.data["Cards"];
for(var i=0,numCards=cards.length;i < numCards;i++) {
if(cards[i]["UUID"] == event["id"]){
this.setState({data:update(this.state.data,{"Cards":_defineProperty({},i,{"Data":{"Locations":_defineProperty({},event["Location"],{"IsSelected":{$set:event["IsSelected"]}})}})})});}}}};





module.exports = LocationSelectCardMixin;
});
__d('plainX/components/screens/cardMixins/ExpirySelectCardMixin.js',[],function(global, require, module, exports) {  'use strict';

var ExpirySelectCardMixin={
expirySelectCardonNext:function(event){
this.setState({data:this.mutateCardStateData(this.state.data,event["id"],"Expiry",event["Expiry"])});}};



module.exports = ExpirySelectCardMixin;
});
__d('plainX/components/screens/LoginScreen.js',["image!BG2","image!logo_lg","image!emailicon","image!passwordicon","react-native/Libraries/react-native/react-native.js","plainX/components/PlainListView.js","plainX/components/screens/componentMixins/ScreenMixin.js","plainX/components/screens/componentMixins/KeyboardSpaceMixin.js","plainX/components/PlainTextInput.js","react-native-rest-kit/index.js","md5/md5.js","plainX/components/ActionButton.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 


View=






React.View;var ScrollView=React.ScrollView;var Text=React.Text;var StyleSheet=React.StyleSheet;var TouchableOpacity=React.TouchableOpacity;var AsyncStorage=React.AsyncStorage;var Image=React.Image;

var PlainListView=require('plainX/components/PlainListView.js');
var ScreenMixin=require('plainX/components/screens/componentMixins/ScreenMixin.js');
var KeyboardSpaceMixin=require('plainX/components/screens/componentMixins/KeyboardSpaceMixin.js');

var PlainTextInput=require('plainX/components/PlainTextInput.js');
var RestKit=require('react-native-rest-kit/index.js');
var md5=require('md5/md5.js');
var ActionButton=require('plainX/components/ActionButton.js');


var LoginScreen=React.createClass({
mixins:[ScreenMixin,KeyboardSpaceMixin],
displayName:"LoginScreen",
getInitialState:function(){
return {
password:"",
email:"",
data:[],
keyboardSpace:0,
enableLoginButton:true};},


saveToken:function callee$0$0(token){return regeneratorRuntime.async(function callee$0$0$(context$1$0){while(1) switch(context$1$0.prev = context$1$0.next){case 0:context$1$0.prev = 0;context$1$0.next = 3;return regeneratorRuntime.awrap(

AsyncStorage.setItem("SESSION",token));case 3:
console.log("SAVED");context$1$0.next = 9;break;case 6:context$1$0.prev = 6;context$1$0.t0 = context$1$0['catch'](0);

this.setState({errorMsg:"Problem occured. Please try again."});case 9:

this.props.setNetworkActivityIndicator(false);return context$1$0.abrupt('return',
token);case 11:case 'end':return context$1$0.stop();}},null,this,[[0,6]]);},

onLogin:function(){
this.setState({enableLoginButton:false});
var email=this.state.email;
var pwd="" + this.state.password;
this.props.setNetworkActivityIndicator(true);
var url=this.props.api_domain + "login";
var request={
method:'post',
headers:{
'Accept':'application/json',
'Content-Type':'application/json'},

body:JSON.stringify({
email:email,
hashedpw:md5(pwd)})};


RestKit.send(url,request,this.handleRequest);},

handleRequest:function(error,json){
this.props.setNetworkActivityIndicator(false);

if(error){
if(error.status == 400){
var errorMsg=JSON.parse(error.body)["Error"];
if(errorMsg)
this.setState({errorMsg:errorMsg});}

return;}


if(json){
console.log(json["Session"]);
this.saveToken(json["Session"]).then(this.getDeviceToken);}},


getDeviceToken:function(loginToken){
if(loginToken){
this.getDeviceTokenFromStorage(loginToken).then(this.saveDeviceTokenToServer).done();}},


getDeviceTokenFromStorage:function callee$0$0(loginToken){var 

value;return regeneratorRuntime.async(function callee$0$0$(context$1$0){while(1) switch(context$1$0.prev = context$1$0.next){case 0:context$1$0.prev = 0;context$1$0.next = 3;return regeneratorRuntime.awrap(AsyncStorage.getItem("DEVICE_TOKEN"));case 3:value = context$1$0.sent;return context$1$0.abrupt('return',
{"loginToken":loginToken,"deviceToken":value});case 7:context$1$0.prev = 7;context$1$0.t0 = context$1$0['catch'](0);

console.log("Error Retreving LoginToken");return context$1$0.abrupt('return',
null);case 11:case 'end':return context$1$0.stop();}},null,this,[[0,7]]);},


saveDeviceTokenToServer:function(tokens){
if(tokens){
this.setState({enableLoginButton:true});
console.log("DEVICE_TOKEN " + tokens["deviceToken"]);

var request={
method:'post',
headers:{
'X-Session':tokens["loginToken"],
'Accept':'application/json',
'Content-Type':'application/json'},

body:JSON.stringify({"Token":tokens["deviceToken"]})};

var url=this.props.api_domain + "user/token";
RestKit.send(url,request,function(error,json){
console.log("SENT DEVICE TOKEN TO SERVER");});

this.props.popScreen();}else 

{
console.log("Cannot load deviceToken..");}},


onSignUp:function(){
this.props.pushScreen({uri:this.props.routes.addRoute('signup')});},

onChangeEmail:function(text){
this.setState({email:text});},

onChangePassword:function(text){
this.setState({password:text});},

renderScreen:function(){
var margin=30 - this.state.keyboardSpace;
return (
React.createElement(ScrollView,{contentContainerStyle:[this.screenCommonStyle.container,{flexDirection:'column',alignItems:'center'}]},
React.createElement(Image,{source:require('image!BG2'),style:styles.backgroundImage},
React.createElement(View,{style:[styles.container,margin > 0?{paddingTop:margin}:{paddingTop:0}]},
margin > 0?React.createElement(Image,{source:require('image!logo_lg'),style:styles.logo}):null,
React.createElement(TouchableOpacity,{onPress:this.onSignUp},
React.createElement(Text,{style:styles.descriptionText},
"Don't have an account yet?",' ',React.createElement(Text,{style:{color:'#33cc66'}},"Register Here!"))),


React.createElement(View,{style:styles.textInputContainer},
React.createElement(Text,{style:styles.errorMsg},this.state.errorMsg || ""),
React.createElement(PlainTextInput,{
icon:require("image!emailicon"),
placeholder:"Email",
keyboardType:"email-address",
onChangeText:this.onChangeEmail,
value:this.state.email}),
React.createElement(PlainTextInput,{
icon:require("image!passwordicon"),
placeholder:"Password",
secureTextEntry:true,
onChangeText:this.onChangePassword,
value:this.state.password})),


React.createElement(Text,{style:[styles.descriptionText,styles.extraText]},
"*If you have forgotten your password,\nplease email ",
React.createElement(Text,{style:{color:'#33cc66'}},'info@plainexchange.xyz'),
" to reset it."))),



React.createElement(View,{style:{alignSelf:'stretch'}},
React.createElement(ActionButton,{
text:"LOGIN",
onPress:this.onLogin,
enabled:this.state.enableLoginButton}))));}});






var styles=StyleSheet.create({
backgroundImage:{
flex:1,
flexDirection:'column',
justifyContent:'center',
alignItems:'center'},

container:{
paddingTop:80,
flex:1,
alignItems:'center',
flexDirection:'column',
backgroundColor:'transparent'},

textInputContainer:{
marginTop:20,
alignItems:'center'},

logo:{
width:144,
height:60},

descriptionText:{
marginTop:20,
fontSize:15,
color:'#333333'},

extraText:{
fontSize:12,
textAlign:'center',
marginLeft:10,marginRight:10},

errorMsg:{
color:'#ff3366',
fontSize:15}});




module.exports = LoginScreen;
});
__d('plainX/components/screens/componentMixins/KeyboardSpaceMixin.js',["react-native-keyboardevents/KeyboardEvents.ios.js"],function(global, require, module, exports) {  'use strict';

var KeyboardEvents=require('react-native-keyboardevents/KeyboardEvents.ios.js');
var KeyboardEventEmitter=KeyboardEvents.Emitter;


var KeyboardSpaceMixin={
updateKeyboardSpace:function(frames){
if(frames.end)
this.setState({keyboardSpace:frames.end.height});},

resetKeyboardSpace:function(){
this.setState({keyboardSpace:0});},

componentDidMount:function(){
KeyboardEventEmitter.on(KeyboardEvents.KeyboardDidShowEvent,this.updateKeyboardSpace);
KeyboardEventEmitter.on(KeyboardEvents.KeyboardWillHideEvent,this.resetKeyboardSpace);},

componentWillUnmount:function(){
KeyboardEventEmitter.off(KeyboardEvents.KeyboardDidShowEvent,this.updateKeyboardSpace);
KeyboardEventEmitter.off(KeyboardEvents.KeyboardWillHideEvent,this.resetKeyboardSpace);}};



module.exports = KeyboardSpaceMixin;
});
__d('react-native-keyboardevents/KeyboardEvents.ios.js',["react-native/Libraries/react-native/react-native.js","eventemitter3/index.js"],function(global, require, module, exports) {  'use strict';var _require=






require('react-native/Libraries/react-native/react-native.js');var DeviceEventEmitter=_require.DeviceEventEmitter;var RNKeyboardEventsManager=_require.NativeModules.RNKeyboardEventsManager;
var EventEmitter=require('eventemitter3/index.js');

var KeyboardEventEmitter=new EventEmitter();
var events=[
'WillShow',
'DidShow',
'WillHide',
'DidHide',
'WillChangeFrame',
'DidChangeFrame'].
map(function(event){return 'Keyboard' + event;});

events.forEach(function(eventKey){
var event=RNKeyboardEventsManager[eventKey];
DeviceEventEmitter.addListener(
event,
function(frames){
KeyboardEventEmitter.emit(event,frames);});});




module.exports = events.reduce(function(carry,eventKey){
carry[eventKey + 'Event'] = RNKeyboardEventsManager[eventKey];
return carry;},
{
Emitter:KeyboardEventEmitter});
});
__d('eventemitter3/index.js',[],function(global, require, module, exports) {  'use strict';









var prefix=typeof Object.create !== 'function'?'~':false;









function EE(fn,context,once){
this.fn = fn;
this.context = context;
this.once = once || false;}









function EventEmitter(){}







EventEmitter.prototype._events = undefined;









EventEmitter.prototype.listeners = function listeners(event,exists){
var evt=prefix?prefix + event:event,
available=this._events && this._events[evt];

if(exists)return !!available;
if(!available)return [];
if(available.fn)return [available.fn];

for(var i=0,l=available.length,ee=new Array(l);i < l;i++) {
ee[i] = available[i].fn;}


return ee;};









EventEmitter.prototype.emit = function emit(event,a1,a2,a3,a4,a5){
var evt=prefix?prefix + event:event;

if(!this._events || !this._events[evt])return false;

var listeners=this._events[evt],
len=arguments.length,
args,
i;

if('function' === typeof listeners.fn){
if(listeners.once)this.removeListener(event,listeners.fn,undefined,true);

switch(len){
case 1:return (listeners.fn.call(listeners.context),true);
case 2:return (listeners.fn.call(listeners.context,a1),true);
case 3:return (listeners.fn.call(listeners.context,a1,a2),true);
case 4:return (listeners.fn.call(listeners.context,a1,a2,a3),true);
case 5:return (listeners.fn.call(listeners.context,a1,a2,a3,a4),true);
case 6:return (listeners.fn.call(listeners.context,a1,a2,a3,a4,a5),true);}


for(i = 1,args = new Array(len - 1);i < len;i++) {
args[i - 1] = arguments[i];}


listeners.fn.apply(listeners.context,args);}else 
{
var length=listeners.length,
j;

for(i = 0;i < length;i++) {
if(listeners[i].once)this.removeListener(event,listeners[i].fn,undefined,true);

switch(len){
case 1:listeners[i].fn.call(listeners[i].context);break;
case 2:listeners[i].fn.call(listeners[i].context,a1);break;
case 3:listeners[i].fn.call(listeners[i].context,a1,a2);break;
default:
if(!args)for(j = 1,args = new Array(len - 1);j < len;j++) {
args[j - 1] = arguments[j];}


listeners[i].fn.apply(listeners[i].context,args);}}}




return true;};










EventEmitter.prototype.on = function on(event,fn,context){
var listener=new EE(fn,context || this),
evt=prefix?prefix + event:event;

if(!this._events)this._events = prefix?{}:Object.create(null);
if(!this._events[evt])this._events[evt] = listener;else 
{
if(!this._events[evt].fn)this._events[evt].push(listener);else 
this._events[evt] = [
this._events[evt],listener];}



return this;};










EventEmitter.prototype.once = function once(event,fn,context){
var listener=new EE(fn,context || this,true),
evt=prefix?prefix + event:event;

if(!this._events)this._events = prefix?{}:Object.create(null);
if(!this._events[evt])this._events[evt] = listener;else 
{
if(!this._events[evt].fn)this._events[evt].push(listener);else 
this._events[evt] = [
this._events[evt],listener];}



return this;};











EventEmitter.prototype.removeListener = function removeListener(event,fn,context,once){
var evt=prefix?prefix + event:event;

if(!this._events || !this._events[evt])return this;

var listeners=this._events[evt],
events=[];

if(fn){
if(listeners.fn){
if(
listeners.fn !== fn || 
once && !listeners.once || 
context && listeners.context !== context)
{
events.push(listeners);}}else 

{
for(var i=0,length=listeners.length;i < length;i++) {
if(
listeners[i].fn !== fn || 
once && !listeners[i].once || 
context && listeners[i].context !== context)
{
events.push(listeners[i]);}}}}








if(events.length){
this._events[evt] = events.length === 1?events[0]:events;}else 
{
delete this._events[evt];}


return this;};








EventEmitter.prototype.removeAllListeners = function removeAllListeners(event){
if(!this._events)return this;

if(event)delete this._events[prefix?prefix + event:event];else 
this._events = prefix?{}:Object.create(null);

return this;};





EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
EventEmitter.prototype.addListener = EventEmitter.prototype.on;




EventEmitter.prototype.setMaxListeners = function setMaxListeners(){
return this;};





EventEmitter.prefixed = prefix;




if('undefined' !== typeof module){
module.exports = EventEmitter;}
});
__d('plainX/components/PlainTextInput.js',["react-native/Libraries/react-native/react-native.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

View=



React.View;var TextInput=React.TextInput;var Image=React.Image;var StyleSheet=React.StyleSheet;

var PlainTextInput=React.createClass({
displayName:'PlainTextInput',
render:function(){
return (
React.createElement(View,{style:styles.textContainer},
React.createElement(Image,{source:this.props.icon,style:styles.icon}),
React.createElement(TextInput,{style:styles.text,
secureTextEntry:this.props.secureTextEntry || false,
placeholder:this.props.placeholder,
keyboardType:this.props.keyboardType,
onChangeText:this.props.onChangeText,
value:this.props.value})));}});





var styles=StyleSheet.create({
textContainer:{
width:652 / 2,
height:110 / 2,
flexDirection:'row',
padding:3,
alignItems:'center',
backgroundColor:'rgba(256,256,256,0.3)',
marginBottom:10},

text:{
alignSelf:'center',
width:300,
height:40,
fontSize:18,
color:'#333333'},

icon:{
marginLeft:20,
marginRight:20,
alignSelf:'center',
width:20,
height:20,
resizeMode:'contain'}});



module.exports = PlainTextInput;
});
__d('md5/md5.js',["crypt/crypt.js","charenc/charenc.js","is-buffer/index.js","charenc/charenc.js"],function(global, require, module, exports) {  (function(){
var crypt=require('crypt/crypt.js'),
utf8=require('charenc/charenc.js').utf8,
isBuffer=require('is-buffer/index.js'),
bin=require('charenc/charenc.js').bin,


md5=function(message,options){

if(message.constructor == String)
if(options && options.encoding === 'binary')
message = bin.stringToBytes(message);else 

message = utf8.stringToBytes(message);else 
if(isBuffer(message))
message = Array.prototype.slice.call(message,0);else 
if(!Array.isArray(message))
message = message.toString();


var m=crypt.bytesToWords(message),
l=message.length * 8,
a=1732584193,
b=-271733879,
c=-1732584194,
d=271733878;


for(var i=0;i < m.length;i++) {
m[i] = (m[i] << 8 | m[i] >>> 24) & 0x00FF00FF | 
(m[i] << 24 | m[i] >>> 8) & 0xFF00FF00;}



m[l >>> 5] |= 0x80 << l % 32;
m[(l + 64 >>> 9 << 4) + 14] = l;


var FF=md5._ff,
GG=md5._gg,
HH=md5._hh,
II=md5._ii;

for(var i=0;i < m.length;i += 16) {

var aa=a,
bb=b,
cc=c,
dd=d;

a = FF(a,b,c,d,m[i + 0],7,-680876936);
d = FF(d,a,b,c,m[i + 1],12,-389564586);
c = FF(c,d,a,b,m[i + 2],17,606105819);
b = FF(b,c,d,a,m[i + 3],22,-1044525330);
a = FF(a,b,c,d,m[i + 4],7,-176418897);
d = FF(d,a,b,c,m[i + 5],12,1200080426);
c = FF(c,d,a,b,m[i + 6],17,-1473231341);
b = FF(b,c,d,a,m[i + 7],22,-45705983);
a = FF(a,b,c,d,m[i + 8],7,1770035416);
d = FF(d,a,b,c,m[i + 9],12,-1958414417);
c = FF(c,d,a,b,m[i + 10],17,-42063);
b = FF(b,c,d,a,m[i + 11],22,-1990404162);
a = FF(a,b,c,d,m[i + 12],7,1804603682);
d = FF(d,a,b,c,m[i + 13],12,-40341101);
c = FF(c,d,a,b,m[i + 14],17,-1502002290);
b = FF(b,c,d,a,m[i + 15],22,1236535329);

a = GG(a,b,c,d,m[i + 1],5,-165796510);
d = GG(d,a,b,c,m[i + 6],9,-1069501632);
c = GG(c,d,a,b,m[i + 11],14,643717713);
b = GG(b,c,d,a,m[i + 0],20,-373897302);
a = GG(a,b,c,d,m[i + 5],5,-701558691);
d = GG(d,a,b,c,m[i + 10],9,38016083);
c = GG(c,d,a,b,m[i + 15],14,-660478335);
b = GG(b,c,d,a,m[i + 4],20,-405537848);
a = GG(a,b,c,d,m[i + 9],5,568446438);
d = GG(d,a,b,c,m[i + 14],9,-1019803690);
c = GG(c,d,a,b,m[i + 3],14,-187363961);
b = GG(b,c,d,a,m[i + 8],20,1163531501);
a = GG(a,b,c,d,m[i + 13],5,-1444681467);
d = GG(d,a,b,c,m[i + 2],9,-51403784);
c = GG(c,d,a,b,m[i + 7],14,1735328473);
b = GG(b,c,d,a,m[i + 12],20,-1926607734);

a = HH(a,b,c,d,m[i + 5],4,-378558);
d = HH(d,a,b,c,m[i + 8],11,-2022574463);
c = HH(c,d,a,b,m[i + 11],16,1839030562);
b = HH(b,c,d,a,m[i + 14],23,-35309556);
a = HH(a,b,c,d,m[i + 1],4,-1530992060);
d = HH(d,a,b,c,m[i + 4],11,1272893353);
c = HH(c,d,a,b,m[i + 7],16,-155497632);
b = HH(b,c,d,a,m[i + 10],23,-1094730640);
a = HH(a,b,c,d,m[i + 13],4,681279174);
d = HH(d,a,b,c,m[i + 0],11,-358537222);
c = HH(c,d,a,b,m[i + 3],16,-722521979);
b = HH(b,c,d,a,m[i + 6],23,76029189);
a = HH(a,b,c,d,m[i + 9],4,-640364487);
d = HH(d,a,b,c,m[i + 12],11,-421815835);
c = HH(c,d,a,b,m[i + 15],16,530742520);
b = HH(b,c,d,a,m[i + 2],23,-995338651);

a = II(a,b,c,d,m[i + 0],6,-198630844);
d = II(d,a,b,c,m[i + 7],10,1126891415);
c = II(c,d,a,b,m[i + 14],15,-1416354905);
b = II(b,c,d,a,m[i + 5],21,-57434055);
a = II(a,b,c,d,m[i + 12],6,1700485571);
d = II(d,a,b,c,m[i + 3],10,-1894986606);
c = II(c,d,a,b,m[i + 10],15,-1051523);
b = II(b,c,d,a,m[i + 1],21,-2054922799);
a = II(a,b,c,d,m[i + 8],6,1873313359);
d = II(d,a,b,c,m[i + 15],10,-30611744);
c = II(c,d,a,b,m[i + 6],15,-1560198380);
b = II(b,c,d,a,m[i + 13],21,1309151649);
a = II(a,b,c,d,m[i + 4],6,-145523070);
d = II(d,a,b,c,m[i + 11],10,-1120210379);
c = II(c,d,a,b,m[i + 2],15,718787259);
b = II(b,c,d,a,m[i + 9],21,-343485551);

a = a + aa >>> 0;
b = b + bb >>> 0;
c = c + cc >>> 0;
d = d + dd >>> 0;}


return crypt.endian([a,b,c,d]);};



md5._ff = function(a,b,c,d,x,s,t){
var n=a + (b & c | ~b & d) + (x >>> 0) + t;
return (n << s | n >>> 32 - s) + b;};

md5._gg = function(a,b,c,d,x,s,t){
var n=a + (b & d | c & ~d) + (x >>> 0) + t;
return (n << s | n >>> 32 - s) + b;};

md5._hh = function(a,b,c,d,x,s,t){
var n=a + (b ^ c ^ d) + (x >>> 0) + t;
return (n << s | n >>> 32 - s) + b;};

md5._ii = function(a,b,c,d,x,s,t){
var n=a + (c ^ (b | ~d)) + (x >>> 0) + t;
return (n << s | n >>> 32 - s) + b;};



md5._blocksize = 16;
md5._digestsize = 16;

module.exports = function(message,options){
if(typeof message == 'undefined')
return;

var digestbytes=crypt.wordsToBytes(md5(message,options));
return options && options.asBytes?digestbytes:
options && options.asString?bin.bytesToString(digestbytes):
crypt.bytesToHex(digestbytes);};})();
});
__d('crypt/crypt.js',[],function(global, require, module, exports) {  (function(){
var base64map=
'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',

crypt={

rotl:function(n,b){
return n << b | n >>> 32 - b;},



rotr:function(n,b){
return n << 32 - b | n >>> b;},



endian:function(n){

if(n.constructor == Number){
return crypt.rotl(n,8) & 0x00FF00FF | crypt.rotl(n,24) & 0xFF00FF00;}



for(var i=0;i < n.length;i++) 
n[i] = crypt.endian(n[i]);
return n;},



randomBytes:function(n){
for(var bytes=[];n > 0;n--) 
bytes.push(Math.floor(Math.random() * 256));
return bytes;},



bytesToWords:function(bytes){
for(var words=[],i=0,b=0;i < bytes.length;i++,b += 8) 
words[b >>> 5] |= bytes[i] << 24 - b % 32;
return words;},



wordsToBytes:function(words){
for(var bytes=[],b=0;b < words.length * 32;b += 8) 
bytes.push(words[b >>> 5] >>> 24 - b % 32 & 0xFF);
return bytes;},



bytesToHex:function(bytes){
for(var hex=[],i=0;i < bytes.length;i++) {
hex.push((bytes[i] >>> 4).toString(16));
hex.push((bytes[i] & 0xF).toString(16));}

return hex.join('');},



hexToBytes:function(hex){
for(var bytes=[],c=0;c < hex.length;c += 2) 
bytes.push(parseInt(hex.substr(c,2),16));
return bytes;},



bytesToBase64:function(bytes){
for(var base64=[],i=0;i < bytes.length;i += 3) {
var triplet=bytes[i] << 16 | bytes[i + 1] << 8 | bytes[i + 2];
for(var j=0;j < 4;j++) 
if(i * 8 + j * 6 <= bytes.length * 8)
base64.push(base64map.charAt(triplet >>> 6 * (3 - j) & 0x3F));else 

base64.push('=');}

return base64.join('');},



base64ToBytes:function(base64){

base64 = base64.replace(/[^A-Z0-9+\/]/ig,'');

for(var bytes=[],i=0,imod4=0;i < base64.length;
imod4 = ++i % 4) {
if(imod4 == 0)continue;
bytes.push((base64map.indexOf(base64.charAt(i - 1)) & 
Math.pow(2,-2 * imod4 + 8) - 1) << imod4 * 2 | 
base64map.indexOf(base64.charAt(i)) >>> 6 - imod4 * 2);}

return bytes;}};



module.exports = crypt;})();
});
__d('charenc/charenc.js',[],function(global, require, module, exports) {  var charenc={

utf8:{

stringToBytes:function(str){
return charenc.bin.stringToBytes(unescape(encodeURIComponent(str)));},



bytesToString:function(bytes){
return decodeURIComponent(escape(charenc.bin.bytesToString(bytes)));}},




bin:{

stringToBytes:function(str){
for(var bytes=[],i=0;i < str.length;i++) 
bytes.push(str.charCodeAt(i) & 0xFF);
return bytes;},



bytesToString:function(bytes){
for(var str=[],i=0;i < bytes.length;i++) 
str.push(String.fromCharCode(bytes[i]));
return str.join('');}}};




module.exports = charenc;
});
__d('is-buffer/index.js',[],function(global, require, module, exports) {  module.








exports = function(obj){
return !!(
obj != null && 
obj.constructor && 
typeof obj.constructor.isBuffer === 'function' && 
obj.constructor.isBuffer(obj));};
});
__d('image!BG2',[],function(global, require, module, exports) {  module.exports = {"__packager_asset":true,"isStatic":true,"path":"/Users/parkjiho/Documents/react-native-projects/plainX/ios/plainX/Images.xcassets/BG2.imageset/BG2.png","uri":"BG2","width":720,"height":1201,"deprecated":true};
});
__d('image!logo_lg',[],function(global, require, module, exports) {  module.exports = {"__packager_asset":true,"isStatic":true,"path":"/Users/parkjiho/Documents/react-native-projects/plainX/ios/plainX/Images.xcassets/logo_lg.imageset/logo_lg.png","uri":"logo_lg","width":341,"height":145,"deprecated":true};
});
__d('image!emailicon',[],function(global, require, module, exports) {  module.exports = {"__packager_asset":true,"isStatic":true,"path":"/Users/parkjiho/Documents/react-native-projects/plainX/ios/plainX/Images.xcassets/emailicon.imageset/emailicon.png","uri":"emailicon","width":40,"height":34,"deprecated":true};
});
__d('image!passwordicon',[],function(global, require, module, exports) {  module.exports = {"__packager_asset":true,"isStatic":true,"path":"/Users/parkjiho/Documents/react-native-projects/plainX/ios/plainX/Images.xcassets/passwordicon.imageset/passwordicon.png","uri":"passwordicon","width":40,"height":52,"deprecated":true};
});
__d('plainX/components/screens/SignUpScreen.js',["image!BG2","image!logo_lg","image!emailicon","image!passwordicon","image!passwordicon","react-native/Libraries/react-native/react-native.js","plainX/components/PlainListView.js","plainX/components/screens/componentMixins/ScreenMixin.js","plainX/components/screens/componentMixins/KeyboardSpaceMixin.js","react-native-rest-kit/index.js","md5/md5.js","plainX/components/ActionButton.js","plainX/components/PlainTextInput.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 


View=







React.View;var ScrollView=React.ScrollView;var Text=React.Text;var StyleSheet=React.StyleSheet;var Image=React.Image;var TouchableOpacity=React.TouchableOpacity;var LinkingIOS=React.LinkingIOS;var Platform=React.Platform;

var PlainListView=require('plainX/components/PlainListView.js');
var ScreenMixin=require('plainX/components/screens/componentMixins/ScreenMixin.js');
var KeyboardSpaceMixin=require('plainX/components/screens/componentMixins/KeyboardSpaceMixin.js');

var RestKit=require('react-native-rest-kit/index.js');
var md5=require('md5/md5.js');

var ActionButton=require('plainX/components/ActionButton.js');
var PlainTextInput=require('plainX/components/PlainTextInput.js');

var SignUpScreen=React.createClass({
mixins:[ScreenMixin,KeyboardSpaceMixin],
displayName:"SignUpScreen",
getInitialState:function(){
return {
password:"",
passwordConfirm:"",
email:"",
data:[],
showConfirmation:false,
keyboardSpace:0,
signup_note:""};},


componentDidMount:function(){
var url=this.props.api_domain + "meta?key=signup_note";
var request={
method:'get',
'Content-Type':'application/text'};

RestKit.send(url,request,this.handleSignUpNote);},

handleSignUpNote:function(error,json){
if(!error){
this.setState({signup_note:json["Text"] || ""});}},


onChangeEmail:function(text){
this.setState({email:text});},

onChangePassword:function(text){
this.setState({password:text});},

onChangePasswordConfirm:function(text){
this.setState({passwordConfirm:text});},

onSignUp:function(){
if(this.state.password != this.state.passwordConfirm){
this.setState({errorMsg:"Passwords do not match."});
return;}

this.props.setNetworkActivityIndicator(true);
var url=this.props.api_domain + "register";
var pwd="" + this.state.password;
var request={
method:'post',
headers:{
'Accept':'application/json',
'Content-Type':'application/json'},

body:JSON.stringify({
email:this.state.email,
hashedpw:md5(pwd)})};


RestKit.send(url,request,this.handleRequest);},

handleRequest:function(error,json){
this.props.setNetworkActivityIndicator(false);
if(error){
console.log(error);
if(error.status == 400){
var errorMsg=JSON.parse(error.body)["Error"];
if(errorMsg)
this.setState({errorMsg:errorMsg});}

return;}

console.log(json);
if(json){

this.setState({showConfirmation:true});}},


popScreen:function(){
this.props.popScreen();},

renderScreen:function(){
var margin=30 - this.state.keyboardSpace;

return (
React.createElement(ScrollView,{contentContainerStyle:[this.screenCommonStyle.container,{flexDirection:'column',alignItems:'center'}]},
React.createElement(Image,{source:require('image!BG2'),style:styles.backgroundImage},
React.createElement(View,{style:[styles.container,margin > 0?{paddingTop:margin}:{paddingTop:0}]},
margin > 0?React.createElement(Image,{source:require('image!logo_lg'),style:styles.logo}):null,
this.state.showConfirmation?
React.createElement(Text,{style:[styles.descriptionText,{fontSize:18}]},"Thank you for registering!\nPlease check your email for\nactivation instructions."):

React.createElement(View,{style:{flex:1,alignItems:'center',flexDirection:'column'}},
margin > 0?
React.createElement(TouchableOpacity,{onPress:this.props.popScreen},
React.createElement(Text,{style:styles.descriptionText},
"Already have an account?",' ',React.createElement(Text,{style:{color:'#33cc66'}},"Login Here!"))):

null,

React.createElement(View,{style:styles.textInputContainer},
React.createElement(Text,{style:styles.errorMsg},this.state.errorMsg || ""),
React.createElement(PlainTextInput,{
icon:require("image!emailicon"),
placeholder:"Email",
keyboardType:"email-address",
onChangeText:this.onChangeEmail,
value:this.state.email}),
React.createElement(PlainTextInput,{
icon:require("image!passwordicon"),
placeholder:"Password",
secureTextEntry:true,
onChangeText:this.onChangePassword,
value:this.state.password}),
React.createElement(PlainTextInput,{
icon:require("image!passwordicon"),
placeholder:"Password Confirmation",
secureTextEntry:true,
onChangeText:this.onChangePasswordConfirm,
value:this.state.passwordConfirm})),


React.createElement(TouchableOpacity,{onPress:function(){return Platform.OS == 'ios'?LinkingIOS.openURL("http://plainexchange.xyz/terms"):null;}},
React.createElement(Text,{style:[styles.descriptionText,styles.extraText]},
"By signing up, you are agreeing to\n ",
React.createElement(Text,{style:{color:'#33cc66'}},'our terms and conditions'))),



React.createElement(Text,{style:[styles.descriptionText,styles.extraText]},
this.state.signup_note)))),




this.state.showConfirmation?null:
React.createElement(View,{style:{alignSelf:'stretch'}},
React.createElement(ActionButton,{
text:"REGISTER",
onPress:this.onSignUp,
enabled:true}))));




return this.state.showConfirmation?activationNeededView:signUpFormsView;}});



var styles=StyleSheet.create({
backgroundImage:{
flex:1,
flexDirection:'column',
justifyContent:'center',
alignItems:'center'},

container:{
paddingTop:80,
flex:1,
alignItems:'center',
flexDirection:'column',
backgroundColor:'transparent'},

textInputContainer:{
marginTop:10,
alignItems:'center'},

logo:{
width:144,
height:60,
resizeMode:'stretch'},

descriptionText:{
marginTop:10,
fontSize:15,
color:'#333333'},

extraText:{
fontSize:12,
textAlign:'center',
marginLeft:10,marginRight:10},

errorMsg:{
color:'#ff3366',
fontSize:15}});




module.exports = SignUpScreen;
});
__d('plainX/components/screens/OfferConfirmationScreen.js',["react-native/Libraries/react-native/react-native.js","plainX/components/PlainListView.js","plainX/components/screens/componentMixins/ScreenMixin.js","plainX/components/ActionButton.js","react-native-rest-kit/index.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 


View=
React.View;

var PlainListView=require('plainX/components/PlainListView.js');
var ScreenMixin=require('plainX/components/screens/componentMixins/ScreenMixin.js');

var ActionButton=require('plainX/components/ActionButton.js');
var RestKit=require('react-native-rest-kit/index.js');

var actionButtonStates={"default":"FINISH",
"loading":"Loading",
"done":"DONE!",
"error":"SOMETHING WENT WRONG"};


var OfferConfirmationScreen=React.createClass({
mixins:[ScreenMixin],
displayName:"OfferConfirmationScreen",
endPoint:'offer/confirm',
getInitialState:function(){
return {
buttonState:"default",
data:null};},


submitOffer:function(){
var url=this.props.api_domain + "offer";
var params=this.getStringToParams(this.props.params);
var request={
method:'post',
headers:{
'X-Session':this.loginToken,
'Accept':'application/json',
'Content-Type':'application/json'},
body:JSON.stringify(params)};

console.log(params);
this.props.setNetworkActivityIndicator(true);
this.setState({buttonState:"loading"});
RestKit.send(url,request,this.handleRequest);},

handleRequest:function(error,json){
this.props.setNetworkActivityIndicator(false);
if(error){
console.log(error);
console.log("ERROR");
this.setState({buttonState:"error"});
return;}

if(json){
console.log("SUCCESS" + json);
this.setState({buttonState:"done"});
var routes=[{uri:'offerSubmitted'}];
this.props.immediatelyResetRouteStack(routes);}},


renderScreen:function(){
return (
React.createElement(View,{style:this.screenCommonStyle.container},
React.createElement(PlainListView,{
cardObservers:{},
cards:this.state.data["Cards"]}),
React.createElement(ActionButton,{
text:actionButtonStates[this.state.buttonState],
onPress:this.submitOffer,
enabled:true})));}});






module.exports = OfferConfirmationScreen;
});
__d('plainX/components/screens/OfferDetailScreen.js',["react-native/Libraries/react-native/react-native.js","plainX/components/PlainListView.js","plainX/components/screens/componentMixins/ScreenMixin.js","react-native-rest-kit/index.js","plainX/components/ActionButton.js","plainX/components/ShouldLoginAlert.js","react-addons-update/index.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 


View=


React.View;var StyleSheet=React.StyleSheet;var Text=React.Text;

var PlainListView=require('plainX/components/PlainListView.js');
var ScreenMixin=require('plainX/components/screens/componentMixins/ScreenMixin.js');
var RestKit=require('react-native-rest-kit/index.js');
var ActionButton=require('plainX/components/ActionButton.js');
var ShouldLoginAlert=require('plainX/components/ShouldLoginAlert.js');

var update=require('react-addons-update/index.js');

var actionButtonStates={"connected":"CONNECTED!",
"connecting":"Loading",
"not_connected":"CONNECT TO THIS OFFER",
"self":"REMOVE OFFER",
"error":"SOMETHING WENT WRONG"};

var OfferDetailScreen=React.createClass({
mixins:[ScreenMixin],
displayName:"OfferDetailScreen",
endPoint:"offer/details",
getInitialState:function(){
return {
data:null};},


onConnectOffer:function(){
console.log("CONNECT");
var CONNECT_ENDPOINT="offer/connect";
var url=this.props.api_domain + CONNECT_ENDPOINT;
var bodyParams=this.getStringToParams(this.props.params);
console.log(url);
console.log("LOGINTOKEN");
console.log(this.loginToken);

var request={
method:'post',
headers:{
'X-Session':this.loginToken,
'Accept':'application/json',
'Content-Type':'application/json'},

body:JSON.stringify(bodyParams)};

this.props.setNetworkActivityIndicator(true);
this.setOfferState("connecting");
RestKit.send(url,request,this.handleConnectRequest);},

handleConnectRequest:function(error,json){var _this=this;
this.props.setNetworkActivityIndicator(false);
if(error){
console.log(error);
if(error.status == 401){
ShouldLoginAlert.showAlert("You need to login to connect to an offer",
function(){return _this.props.pushScreen({uri:_this.props.routes.addRoute('login')});});
this.setOfferState("not_connected");}else 


this.setOfferState("error");
return;}

if(json){
console.log("SUCCESS");
this.setOfferState("connected");
this.props.pushScreen({uri:this.props.routes.addRoute('conversationRoom?Id=' + json["ConversationId"])});}},


onRemoveOffer:function(){
var DELETE_ENDPOINT="offer";
var url=this.props.api_domain + DELETE_ENDPOINT;
var bodyParams=this.getStringToParams(this.props.params);
console.log(url);

var request={
method:'delete',
headers:{
'X-Session':this.loginToken,
'Accept':'application/json',
'Content-Type':'application/json'},

body:JSON.stringify(bodyParams)};

this.props.setNetworkActivityIndicator(true);
this.setOfferState("connecting");
RestKit.send(url,request,this.handleRemoveRequest);},

handleRemoveRequest:function(error,json){
this.props.setNetworkActivityIndicator(false);
if(error){
console.log(error);
this.setOfferState("error");
return;}

if(json){
console.log("SUCCESS");
console.log(json["ConversationId"]);
this.props.popScreen();}},


getOfferState:function(){
var meta=this.state.data["Meta"];
if(meta){
if(meta["isOwnOffer"])
return "self";
if(meta["isConnected"]){
return "connected";}else 

if(meta["error"])
return "error";else 
if(meta["isOwnOffer"])
return "self";else 
if(meta["isConnecting"])
return "connecting";}


return "not_connected";},

setOfferState:function(value){
switch(value){
case "not_connected":
var data=update(this.state.data,{"Meta":{"isConnecting":{$set:false}}});
data = update(data,{"Meta":{"error":{$set:false}}});
data = update(data,{"Meta":{"isConnecting":{$set:false}}});
this.setState({data:data});
break;
case "connected":
this.setState({data:update(this.state.data,{"Meta":{"isConnected":{$set:true}}})});
break;
case "error":
this.setState({data:update(this.state.data,{"Meta":{"error":{$set:true}}})});
break;
case "connecting":
this.setState({data:update(this.state.data,{"Meta":{"isConnecting":{$set:true}}})});}},


renderScreen:function(){
var cardObservers={};
var listView=React.createElement(PlainListView,{
cardObservers:cardObservers,
cards:this.state.data["Cards"],
onEndReached:this.loadMore});


var isOwnOffer=this.state.data["Meta"]?this.state.data["Meta"]["isOwnOffer"]:null;
var makeOfferButton=React.createElement(ActionButton,{
text:actionButtonStates[this.getOfferState()],
onPress:this.onConnectOffer,
enabled:this.getOfferState() == "not_connected"});
var removeOfferButton=React.createElement(ActionButton,{
text:actionButtonStates[this.getOfferState()],
onPress:this.onRemoveOffer,
backgroundColor:"#ee586e",
enabled:true});
return (
React.createElement(View,{style:this.screenCommonStyle.container},
listView,
this.getOfferState() != "self"?makeOfferButton:removeOfferButton));}});





module.exports = OfferDetailScreen;
});
__d('plainX/components/ShouldLoginAlert.js',["react-native/Libraries/react-native/react-native.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

AlertIOS=
React.AlertIOS;

var ShouldLoginAlert={
showAlert:function(message,onPressOK){
console.log("SHOW ALERT");
AlertIOS.alert(
'Login Needed',
message,
[
{text:'OK',onPress:onPressOK},
{text:'Cancel',onPress:function(){return null;},style:'cancel'}]);}};




module.exports = ShouldLoginAlert;
});
__d('plainX/components/screens/ConversationsScreen.js',["react-native/Libraries/react-native/react-native.js","plainX/components/PlainListView.js","plainX/components/screens/componentMixins/ScreenMixin.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 


View=


React.View;var StyleSheet=React.StyleSheet;var Text=React.Text;

var PlainListView=require('plainX/components/PlainListView.js');
var ScreenMixin=require('plainX/components/screens/componentMixins/ScreenMixin.js');

var ConversationsScreen=React.createClass({
mixins:[ScreenMixin],
displayName:"ConversationsScreen",
endPoint:"user/conversations",
getInitialState:function(){
return {
data:null};},


getConversation:function(event){
var params={"Id":event["Id"],"Title":event["ScreenName"]};
this.props.pushScreen({uri:this.props.routes.addRoute('conversationRoom?' + this.getParamsToString(params))});},

renderScreen:function(){
var cardObservers={};
cardObservers["UserConversationItem"] = this.getConversation;
var listView=React.createElement(PlainListView,{
cardObservers:cardObservers,
cards:this.state.data["Cards"],
onEndReached:this.loadMore});

return (
React.createElement(View,{style:this.screenCommonStyle.container},
listView));}});






module.exports = ConversationsScreen;
});
__d('plainX/components/screens/ConversationRoomScreen.js',["react-native/Libraries/react-native/react-native.js","plainX/components/PlainListView.js","plainX/components/screens/componentMixins/ScreenMixin.js","plainX/components/screens/componentMixins/KeyboardSpaceMixin.js","react-native-rest-kit/index.js","react-addons-update/index.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 


View=






React.View;var StyleSheet=React.StyleSheet;var Text=React.Text;var TextInput=React.TextInput;var TouchableOpacity=React.TouchableOpacity;var AppStateIOS=React.AppStateIOS;var ActivityIndicatorIOS=React.ActivityIndicatorIOS;

var PlainListView=require('plainX/components/PlainListView.js');
var ScreenMixin=require('plainX/components/screens/componentMixins/ScreenMixin.js');
var KeyboardSpaceMixin=require('plainX/components/screens/componentMixins/KeyboardSpaceMixin.js');

var RestKit=require('react-native-rest-kit/index.js');
var update=require('react-addons-update/index.js');

var MAX_WAITING_TIME=60000;

var ConversationRoomScreen=React.createClass({
mixins:[ScreenMixin,KeyboardSpaceMixin],
displayName:"ConversationRoomScreen",
endPoint:"conversation",
getInitialState:function(){
return {
data:null,
keyboardSpace:0,
shouldPoll:false,
appState:AppStateIOS.currentState,
msgInput:"",
sending:false};},


componentDidMount:function(){
console.log("Add Listener");
AppStateIOS.addEventListener('change',this.handleAppStateChange);},

componentWillUnmount:function(){
console.log("Remove Listener");
AppStateIOS.removeEventListener('change',this.handleAppStateChange);},

handleAppStateChange:function(appState){
if(appState != 'active'){
this.setState({shouldPoll:false,appState:appState});}else 

{
this.setState({data:null,shouldPoll:true,appState:appState});}},


shouldComponentUpdate:function(nextProps,nextState){
if(!nextState["data"]){
this.loadScreen();
console.log("START POLLING AGAIN");
this.poll();
return true;}

if(nextState["data"] && nextState["shouldPoll"] == false && nextState["appState"] == 'active'){
this.setState({shouldPoll:true});
console.log("START POLLING");
this.poll();
return false;}

return true;},

getConversationId:function(){
console.log(this.props.params);
return this.getStringToParams(this.props.params)["Id"] || this.getStringToParams(this.props.params)["id"];},

getJSON:function(params){
var wrappedPromise={};
var promise=new Promise(function(resolve,reject){
wrappedPromise.resolve = resolve;
wrappedPromise.reject = reject;});

wrappedPromise.then = promise.then.bind(promise);
wrappedPromise.catch = promise.catch.bind(promise);
wrappedPromise.promise = promise;

console.log(params.url);
fetch(params.url,{
method:'GET',
headers:{
'X-Session':this.loginToken,
'Accept':'application/json',
'Content-Type':'application/json'}}).


then(function(response){
wrappedPromise.resolve(response);},
function(error){
wrappedPromise.reject(error);}).

catch(function(error){
wrappedPromise.catch(error);});


var timeoutId=setTimeout(function(){

wrappedPromise.reject(new Error('Load timeout for resource: ' + params.url));},
MAX_WAITING_TIME);

return wrappedPromise.promise.
then(function(response){
clearTimeout(timeoutId);
return response;}).

then(function(response){
if(response.status === 200 || response.status === 0){
return Promise.resolve(response);}else 
{
return Promise.reject(new Error(response));}}).


then(function(response){
return response.json();});},


poll:function(){
var url=this.props.api_domain + "conversation/poll?id=" + 
this.getConversationId();

console.log("POLL");
this.getJSON({
url:url}).
then(this.onMessage,this.onError);},

onMessage:function(data){
console.log('Receive!!');
if(data && data["Cards"].length > 0 && this.state.shouldPoll){
console.log("here" + data["Cards"].length);
var stateData=this.state.data;
for(var i=0;i < data["Cards"].length;i++) {
console.log("add" + data["Cards"][i]);
this.state.data["Cards"].push(data["Cards"][i]);}

this.setState({data:this.state.data});}

if(this.state.shouldPoll && this.isMounted())
this.poll();},

onError:function(error){
console.log('onError!!!!!');
console.log(error);},



onSend:function(){
var params={"Id":this.getConversationId(),"Message":this.state.msgInput};
console.log(params);
var url=this.props.api_domain + "conversation/msg";
var request={
method:'post',
headers:{
'X-Session':this.loginToken,
'Accept':'application/json',
'Content-Type':'application/json'},

body:JSON.stringify(params)};

this.props.setNetworkActivityIndicator(true);
this.setState({sending:true});
RestKit.send(url,request,this.handleSendMsgRequest);},

handleSendMsgRequest:function(error,json){
this.setState({sending:false});
this.props.setNetworkActivityIndicator(false);
if(error){
console.log(error);
return;}

if(json){
console.log("SUCCESSFULLY SENT");
console.log(json);
this.setState({msgInput:""});}},


onChangeMsgInput:function(value){
this.setState({msgInput:value});},

onPressHeader:function(){
var params={"Id":this.state.data["Meta"]["Offer"]["Id"]};
this.props.pushScreen({uri:this.props.routes.addRoute('offerDetail?' + this.getParamsToString(params))});},

feedbackCardOnNext:function(event){

console.log(event);
var url=this.props.api_domain + "conversation/feedback?Id=" + this.getConversationId();
console.log(url);
var request={
method:'post',
headers:{
'X-Session':this.loginToken,
'Accept':'application/json',
'Content-Type':'application/json'},

body:JSON.stringify(event)};

this.props.setNetworkActivityIndicator(true);
RestKit.send(url,request,this.handleFeedbackRequest);},

handleFeedbackRequest:function(error,json){
this.props.setNetworkActivityIndicator(false);
if(error){
console.log(error);
return;}

console.log(json);},

renderScreen:function(){
var cardObservers={};
cardObservers["Feedback"] = this.feedbackCardOnNext;
var listView=React.createElement(PlainListView,{
hasBackgroundColor:true,
invertList:true,
cardObservers:cardObservers,
cards:this.state.data["Cards"],
onEndReached:this.loadMore});

var offer=this.state.data?this.state.data["Meta"]["Offer"]:null;
var header=offer?

React.createElement(TouchableOpacity,{
style:{paddingTop:15,paddingBottom:15,backgroundColor:'white'},
onPress:this.onPressHeader},
React.createElement(Text,{style:styles.offerSummary},
offer["Sell"],' ',offer["AmountSell"],' to ',offer["Buy"],' ',offer["AmountBuy"],
React.createElement(Text,{style:styles.moreInfo},"\ntap for more details"))):

null;
var sendButton=this.state.sending?
React.createElement(ActivityIndicatorIOS,{size:'small',color:'#33cc66'}):

React.createElement(TouchableOpacity,{onPress:this.onSend},
React.createElement(Text,{style:styles.sendButton},'Send'));

return (
React.createElement(View,{style:[this.screenCommonStyle.container,styles.container]},
header,
listView,
React.createElement(View,{style:[styles.sendContainer,{marginBottom:this.state.keyboardSpace}]},
React.createElement(TextInput,{
placeholder:"Type here",
style:styles.msgInput,
onChangeText:this.onChangeMsgInput,
value:this.state.msgInput}),
sendButton)));}});






var styles=StyleSheet.create({
container:{
flexDirection:'column'},

msgInput:{
flex:6,
height:35,
alignSelf:'center',
marginLeft:10},

sendButton:{
flex:1,
color:'#33cc66',
fontWeight:'bold'},

sendContainer:{
alignItems:'center',
flexDirection:'row',
backgroundColor:'#eee',
height:45,
paddingRight:10},

offerSummary:{
paddingTop:3,paddingBottom:3,
textAlign:'center',
backgroundColor:'white',
fontSize:18,
color:'#33cc66'},

moreInfo:{
color:"#333",
fontSize:12}});



module.exports = ConversationRoomScreen;
});
__d('plainX/components/screens/OfferSubmittedScreen.js',["react-native/Libraries/react-native/react-native.js","plainX/components/PlainListView.js","plainX/components/screens/componentMixins/ScreenMixin.js","plainX/components/screens/componentMixins/MenuButtonMixin.js","plainX/components/ActionButton.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 


View=
React.View;

var PlainListView=require('plainX/components/PlainListView.js');
var ScreenMixin=require('plainX/components/screens/componentMixins/ScreenMixin.js');
var MenuButtonMixin=require('plainX/components/screens/componentMixins/MenuButtonMixin.js');

var ActionButton=require('plainX/components/ActionButton.js');

var OfferSubmittedScreen=React.createClass({
mixins:[ScreenMixin,MenuButtonMixin],
displayName:"OfferSubmittedScreen",
endPoint:"offer/submitted",
getInitialState:function(){
return {
data:null};},


onPressActionButton:function(){
this.props.replaceScreen({uri:'main'});},

renderScreen:function(){
this.props.leftNavBarButtonSubject.subscribe(this.toggleSideMenu);

return (
React.createElement(View,{style:this.screenCommonStyle.container},
React.createElement(PlainListView,{
cardObservers:{},
cards:this.state.data["Cards"]}),
React.createElement(ActionButton,{
text:"OKAY",
onPress:this.onPressActionButton,
enabled:true})));}});






module.exports = OfferSubmittedScreen;
});
__d('plainX/components/screens/MyOffersScreen.js',["react-native/Libraries/react-native/react-native.js","plainX/components/PlainListView.js","plainX/components/screens/componentMixins/ScreenMixin.js","plainX/components/screens/cardMixins/OfferCardMixin.js","plainX/components/ActionButton.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 


View=

React.View;var StyleSheet=React.StyleSheet;

var PlainListView=require('plainX/components/PlainListView.js');

var ScreenMixin=require('plainX/components/screens/componentMixins/ScreenMixin.js');
var OfferCardMixin=require('plainX/components/screens/cardMixins/OfferCardMixin.js');

var ActionButton=require('plainX/components/ActionButton.js');

var MyOffersScreen=React.createClass({
mixins:[ScreenMixin,OfferCardMixin],
displayName:"MyOffersScreen",
endPoint:"user/offers",
getInitialState:function(){
return {
data:null};},


onPress:function(){
this.props.pushScreen({uri:this.props.routes.addRoute('makeOffer?')});},

renderScreen:function(){
var cardObservers={};
cardObservers["Offer"] = this.offerCardonNext;

return (
React.createElement(View,{style:this.screenCommonStyle.container},
React.createElement(PlainListView,{
cardObservers:cardObservers,
cards:this.state.data["Cards"],
onEndReached:this.loadMore}),

React.createElement(ActionButton,{
text:"ADD NEW OFFER",
onPress:this.onPress,
enabled:true})));}});





module.exports = MyOffersScreen;
});
__d('react-native-side-menu/index.js',["react-native-side-menu/styles.js","react-native/Libraries/react-native/react-native.js"],function(global, require, module, exports) {  var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}var styles=require('react-native-side-menu/styles.js');
var React=require('react-native/Libraries/react-native/react-native.js');var 
Dimensions=React.Dimensions;var Animated=React.Animated;
var deviceScreen=Dimensions.get('window');var 


PanResponder=



React.PanResponder;var View=React.View;var TouchableWithoutFeedback=React.TouchableWithoutFeedback;var Component=React.Component;






var barrierForward=deviceScreen.width / 4;







function shouldOpenMenu(dx){
return dx > barrierForward;}var 


SideMenu=(function(_Component){_inherits(SideMenu,_Component);
function SideMenu(props){_classCallCheck(this,SideMenu);
_get(Object.getPrototypeOf(SideMenu.prototype),'constructor',this).call(this,props);




this.isOpen = false;






this.prevLeft = 0;

this.state = {
shouldRenderMenu:false,
left:new Animated.Value(0)};}_createClass(SideMenu,[{key:'getChildContext',value:



function getChildContext(){
return {
menuActions:this.getMenuActions()};}},{key:'componentWillMount',value:







function componentWillMount(){
this.responder = PanResponder.create({
onStartShouldSetResponderCapture:this.props.onStartShouldSetResponderCapture.bind(this),
onMoveShouldSetPanResponder:this.handleMoveShouldSetPanResponder.bind(this),
onPanResponderMove:this.handlePanResponderMove.bind(this),
onPanResponderRelease:this.handlePanResponderEnd.bind(this)});}},{key:'componentDidMount',value:



function componentDidMount(){
this.setState({
shouldRenderMenu:true});


if(this.props.defaultOpen){
this.openMenu();}}},{key:'gesturesAreEnabled',value:







function gesturesAreEnabled(){var 
disableGestures=this.props.disableGestures;

if(typeof disableGestures === 'function'){
return !disableGestures();}


return !disableGestures;}},{key:'handleMoveShouldSetPanResponder',value:






function handleMoveShouldSetPanResponder(e,gestureState){
if(this.gesturesAreEnabled()){
var x=Math.round(Math.abs(gestureState.dx));
var y=Math.round(Math.abs(gestureState.dy));

var touchMoved=x > this.props.toleranceX && y < this.props.toleranceY;

if(this.isOpen){
return touchMoved;}


var withinEdgeHitWidth=this.props.menuPosition === 'right'?
gestureState.moveX > deviceScreen.width - this.props.edgeHitWidth:
gestureState.moveX < this.props.edgeHitWidth;
var swipingToOpen=this.menuPositionMultiplier() * gestureState.dx > 0;
return withinEdgeHitWidth && touchMoved && swipingToOpen;}


return false;}},{key:'handlePanResponderMove',value:








function handlePanResponderMove(e,gestureState){
if(this.state.left.__getValue() * this.menuPositionMultiplier() >= 0){
this.state.left.setValue(this.prevLeft + gestureState.dx);}}},{key:'handlePanResponderEnd',value:









function handlePanResponderEnd(e,gestureState){
var currentLeft=this.state.left.__getValue();

var shouldOpen=this.menuPositionMultiplier() * (
currentLeft + gestureState.dx);

if(shouldOpenMenu(shouldOpen)){
this.openMenu();}else 
{
this.closeMenu();}}},{key:'menuPositionMultiplier',value:







function menuPositionMultiplier(){
return this.props.menuPosition === 'right'?-1:1;}},{key:'openMenu',value:






function openMenu(){
var openOffset=this.menuPositionMultiplier() * 
this.props.openMenuOffset;

this.props.
animationFunction(this.state.left,openOffset).
start();

this.prevLeft = openOffset;

if(!this.isOpen){
this.isOpen = true;
this.props.onChange(this.isOpen);


if(this.props.touchToClose){
this.forceUpdate();}}}},{key:'closeMenu',value:








function closeMenu(){
var closeOffset=this.menuPositionMultiplier() * this.props.hiddenMenuOffset;

this.props.
animationFunction(this.state.left,closeOffset).
start();

this.prevLeft = closeOffset;

if(this.isOpen){
this.isOpen = false;
this.props.onChange(this.isOpen);


if(this.props.touchToClose){
this.forceUpdate();}}}},{key:'toggleMenu',value:








function toggleMenu(){
if(this.isOpen){
this.closeMenu();}else 
{
this.openMenu();}}},{key:'getContentView',value:







function getContentView(){var _this=this;
var overlay=null;

if(this.isOpen && this.props.touchToClose){
overlay = 
React.createElement(TouchableWithoutFeedback,{onPress:this.closeMenu.bind(this)},
React.createElement(View,{style:styles.overlay}));}var _state=




this.state;var width=_state.width;var height=_state.height;

return (
React.createElement(Animated.View,_extends({
style:[styles.frontView,{width:width,height:height},this.props.animationStyle(this.state.left)],
ref:function(sideMenu){return _this.sideMenu = sideMenu;}},
this.responder.panHandlers),
this.props.children,
overlay));}},{key:'getMenuActions',value:









function getMenuActions(){
return {
close:this.closeMenu.bind(this),
toggle:this.toggleMenu.bind(this),
open:this.openMenu.bind(this)};}},{key:'onLayoutChange',value:



function onLayoutChange(e){var _e$nativeEvent$layout=
e.nativeEvent.layout;var width=_e$nativeEvent$layout.width;var height=_e$nativeEvent$layout.height;
this.setState({width:width,height:height});}},{key:'render',value:






function render(){
var menu=null;




if(this.state.shouldRenderMenu){
menu = React.createElement(View,{style:styles.menu},this.props.menu);}


return (
React.createElement(View,{style:styles.container,onLayout:this.onLayoutChange.bind(this)},
menu,
this.getContentView()));}}]);return SideMenu;})(Component);





SideMenu.childContextTypes = {
menuActions:React.PropTypes.object.isRequired};


SideMenu.propTypes = {
edgeHitWidth:React.PropTypes.number,
toleranceX:React.PropTypes.number,
toleranceY:React.PropTypes.number,
menuPosition:React.PropTypes.oneOf(['left','right']),
onChange:React.PropTypes.func,
touchToClose:React.PropTypes.bool,
openMenuOffset:React.PropTypes.number,
hiddenMenuOffset:React.PropTypes.number,
disableGestures:React.PropTypes.oneOfType([React.PropTypes.func,React.PropTypes.bool]),
animationFunction:React.PropTypes.func,
onStartShouldSetResponderCapture:React.PropTypes.func,
defaultOpen:React.PropTypes.bool};


SideMenu.defaultProps = {
toleranceY:10,
toleranceX:10,
edgeHitWidth:60,
touchToClose:false,
openMenuOffset:deviceScreen.width * 2 / 3,
hiddenMenuOffset:0,
onStartShouldSetResponderCapture:function(){return true;},
onChange:function(){},
animationStyle:function(value){
return {
transform:[{
translateX:value}]};},



animationFunction:function(prop,value){
return Animated.spring(
prop,
{
toValue:value,
friction:8});},



defaultOpen:false};


module.exports = SideMenu;
});
__d('react-native-side-menu/styles.js',["react-native/Libraries/react-native/react-native.js"],function(global, require, module, exports) {  var React=require('react-native/Libraries/react-native/react-native.js');var 


StyleSheet=
React.StyleSheet;

module.exports = StyleSheet.create({
container:{
flex:1,
justifyContent:'center',
alignItems:'center'},

menu:{
flex:1,
backgroundColor:'transparent',
position:'absolute',
top:0,
left:0},

frontView:{
flex:1,
position:'absolute',
left:0,
top:0,
backgroundColor:'transparent'},

overlay:{
position:'absolute',
top:0,
left:0,
bottom:0,
right:0,
backgroundColor:'transparent'}});
});
__d('plainX/components/PlainSideMenu.js',["react-native/Libraries/react-native/react-native.js","plainX/components/screens/Routes.js","Dimensions"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');
var Routes=require('plainX/components/screens/Routes.js');
var Dimensions=require('Dimensions');var 


View=





React.View;var StyleSheet=React.StyleSheet;var Text=React.Text;var TouchableOpacity=React.TouchableOpacity;var AsyncStorage=React.AsyncStorage;var LinkingIOS=React.LinkingIOS;

var window=Dimensions.get('window');


var MenuItem=React.createClass({
displayName:"MenuItem",
render:function(){
return (
React.createElement(TouchableOpacity,{style:styles.menuItem,onPress:this.props.onPress || null},
React.createElement(Text,{style:styles.menuItemText},this.props.text)));}});





var PlainSideMenu=React.createClass({
displayName:'PlainSideMenu',
contextTypes:{
menuActions:React.PropTypes.object.isRequired},

toggleSideMenu:function(){
this.context.menuActions.close();},

pushMakeOfferScreen:function(){
this.toggleSideMenu();
this.props.sideMenuSubject.onNext({type:"pushScreen",uri:"makeOffer"});},

pushMyOfferScreen:function(){
this.toggleSideMenu();
this.props.sideMenuSubject.onNext({type:"pushScreen",uri:"myOffers"});},

pushLoginScreen:function(){
this.toggleSideMenu();
this.props.sideMenuSubject.onNext({type:"pushScreen",uri:"login"});},

pressLogout:function(){var _this=this;
var toggleSideMenu=this.toggleSideMenu;
this.logOut().then(function(hasLoggedOut){
if(hasLoggedOut){
toggleSideMenu();
_this.props.sideMenuSubject.onNext({type:"logout"});}}).

done();},

logOut:function callee$0$0(){return regeneratorRuntime.async(function callee$0$0$(context$1$0){while(1) switch(context$1$0.prev = context$1$0.next){case 0:context$1$0.prev = 0;context$1$0.next = 3;return regeneratorRuntime.awrap(

AsyncStorage.removeItem("SESSION"));case 3:
console.log("User Is Logged Out");return context$1$0.abrupt('return',
true);case 7:context$1$0.prev = 7;context$1$0.t0 = context$1$0['catch'](0);

console.log("Error Logging Out " + context$1$0.t0);return context$1$0.abrupt('return',
false);case 11:case 'end':return context$1$0.stop();}},null,this,[[0,7]]);},


render:function(){
var commonMenus=React.createElement(View,null,React.createElement(MenuItem,{text:"FAQ",onPress:function(){return LinkingIOS.openURL("http://plainexchange.xyz/faq");}}),
React.createElement(MenuItem,{text:"TERMS & CONDITIONS",onPress:function(){return LinkingIOS.openURL("http://plainexchange.xyz/terms");}}),
React.createElement(MenuItem,{text:"ABOUT US",onPress:function(){return LinkingIOS.openURL("http://plainexchange.xyz");}}));

var loginUserMenu=
React.createElement(View,{style:{flexDirection:'column',flex:1}},
React.createElement(MenuItem,{text:"MY OFFERS",onPress:this.pushMyOfferScreen}),
React.createElement(MenuItem,{text:"MAKE OFFER",onPress:this.pushMakeOfferScreen}),
commonMenus,
React.createElement(MenuItem,{text:"LOGOUT",onPress:this.pressLogout}));

var nonLoginUserMenu=React.createElement(View,null,
commonMenus,
React.createElement(MenuItem,{text:"LOGIN",onPress:this.pushLoginScreen}));


return (
React.createElement(View,{style:[styles.container,this.props.isOpen?null:{opacity:0}]},
React.createElement(View,{style:styles.header},
this.props.user?
React.createElement(Text,{style:styles.nameText},this.props.user["Email"]):null),

React.createElement(View,{style:styles.menuContainer},
this.props.user?loginUserMenu:nonLoginUserMenu),

React.createElement(View,{style:styles.footer})));}});






var styles=StyleSheet.create({
menuItem:{
alignItems:'center',
flexDirection:'row',
borderBottomColor:'#3F7842',
borderBottomWidth:1,
height:60},

menuItemText:{
color:'white',
marginLeft:20,
fontWeight:'bold'},

nameText:{
color:'white',
fontWeight:'bold',
marginLeft:20},

container:{
flex:1,
backgroundColor:'white',
width:window.width,
height:window.height,
flexDirection:'column',
paddingTop:20},

header:{
flex:1,
backgroundColor:'black',
flexDirection:'row',
alignItems:'center'},

menuContainer:{
backgroundColor:'#33cc66'},

footer:{
flex:3,
backgroundColor:'white'}});



module.exports = PlainSideMenu;
});
__d('plainX/components/NavigationTextButton.js',["react-native/Libraries/react-native/react-native.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

Text=
React.Text;

var NavigationTextButton=React.createClass({displayName:'NavigationTextButton',
getDefaultProps:function(){
return {
buttonText:"Back"};},


render:function(){
return (
React.createElement(Text,{style:[this.props.styles.navBarText,this.props.styles.navBarButtonText]},
this.props.buttonText));}});





module.exports = NavigationTextButton;
});
__d('image!logo',[],function(global, require, module, exports) {  module.exports = {"__packager_asset":true,"isStatic":true,"path":"/Users/parkjiho/Documents/react-native-projects/plainX/ios/plainX/Images.xcassets/logo.imageset/logo.png","uri":"logo","width":148,"height":63,"deprecated":true};
});
__d('image!menuicon',[],function(global, require, module, exports) {  module.exports = {"__packager_asset":true,"isStatic":true,"path":"/Users/parkjiho/Documents/react-native-projects/plainX/ios/plainX/Images.xcassets/menuicon.imageset/menuicon.png","uri":"menuicon","width":45,"height":45,"deprecated":true};
});
__d('image!backicon',[],function(global, require, module, exports) {  module.exports = {"__packager_asset":true,"isStatic":true,"path":"/Users/parkjiho/Documents/react-native-projects/plainX/ios/plainX/Images.xcassets/backicon.imageset/backicon.png","uri":"backicon","width":45,"height":45,"deprecated":true};
});
__d('image!msgicon',[],function(global, require, module, exports) {  module.exports = {"__packager_asset":true,"isStatic":true,"path":"/Users/parkjiho/Documents/react-native-projects/plainX/ios/plainX/Images.xcassets/msgicon.imageset/msgicon.png","uri":"msgicon","width":45,"height":45,"deprecated":true};
});
;require("plainX/index.ios.js");
//@ sourceMappingURL=/index.ios.map?platform=ios&dev=true